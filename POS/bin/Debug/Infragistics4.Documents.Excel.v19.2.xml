<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Infragistics4.Documents.Excel.v19.2</name>
    </assembly>
    <members>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack">
            <summary>
            Stack of <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> instances used to evaluate formulas.  
            </summary>
            <remarks>
            <p class="body">
            The number stack is used for evaluating formulas.  When formulas are compiled, the formula tokens are 
            placed in a collection in post-fix, or Reverse Polish Notation (RPN) format.  RPN format arranges the formula token list so each 
            sub-expressions's terms are placed before their operator, and sub-expressions are ordered to enforce correct operator precedence.
            This format allows the formula evaluate method to loop through the formula token collection front to back pushing an operator's terms onto 
            the number stack until an operator is reached.  Each time an operator is reached, it's subexpression is computed and resulting value pushed 
            onto the number stack.  Once the end of the end of the formula collection is reached, the formulas calculated value is at the top of the 
            number stack.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack.OwningCell">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/> instance whose formula is currently being solved.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack"/>
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack.Push(Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue)">
            <summary>
            Push a value onto number stack.
            </summary>
            <param name="value">Value to push onto the number stack</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack.Pop">
            <summary>
            Pop value off top of the number stack.
            </summary>
            <returns><see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that was at the top of the number stack.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack.Peek">
            <summary>
            Return value off top of the number stack.
            </summary>
            <returns><see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that is at the top of the number stack.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack.Clear">
            <summary>
            Remove all values from number stack.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack.Reset(System.Int32)">
            <summary>
            Clear elements off top of number stack until it contains given number of elements
            </summary>
            <param name="elements">Denotes the desired stack level</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack.Count">
            <summary>
            Return the number of values on number stack
            </summary>
            <returns>Number of stack values</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.ArrayProxy">
            <summary>
            Represents a two-dimensional array of <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> instances used in calculations.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ArrayProxy.GetLength(System.Int32)">
            <summary>
            Gets the number of elements in the specified dimension of the array.
            </summary>
            <param name="dimension">The zero-based index of the dimension.</param>
            <returns>The number of elements in the specified dimension.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ArrayProxy.Item(System.Int32,System.Int32)">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> at the specified index.
            </summary>
            <param name="x">The index for the first dimension of the array. This is the relative column index for arrays representing cell regions on a worksheet.</param>
            <param name="y">The index for the second dimension of the array. This is the relative row index for arrays representing cell regions on a worksheet.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> representing the specified value in the array.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue">
            <summary>
            Provides methods and properties used to define and manage a calculation error value.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue.#ctor(Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue"/> with the specified error code.
            </summary>
            <param name="code"><see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode"/> value to assign this instance</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue.#ctor(Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode,System.String)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue"/> with the specified error code and error message
            </summary>
            <param name="code"><see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode"/> value</param>
            <param name="message">Localized Message indicating reason for error</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue.#ctor(Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode,System.String,System.Object)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue"/> with the specified error code, message and error value.
            </summary>
            <param name="code"><see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode"/> value</param>
            <param name="message">Localized Message indicating reason for error</param>
            <param name="value">Value associated with error</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue.Code">
            <summary>
            Gets the error code for this class instance
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue.Message">
            <summary>
            Gets error message for this class instance. Note that when setting this property the 
            message is assumed to be localized.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue.ErrorValue">
            <summary>
            Gets the error object for this class instance
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue.ToString">
            <summary>
            Return a string message that denotes reason for error
            </summary>
            <returns>String containing error message</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue.RaiseException">
            <summary>
            Raise an <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcErrorException"/> exception containing this class's error information
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue">
            <summary>
            Provides methods that manage a composite data type representing a value.
            </summary>
            <remarks>
            <p class="body">
            An instance of this class may contain one of several base data types including doubles, singles, integers, booleans, strings, and error values.  
            <p></p>
            The class implements the IConvertible interface providing methods to perform conversions between the basic data types.  
            <p></p>
            Additionally the class provides methods to perform basic arithmetic operations and comparisons between <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> objects.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.IsArray">
            <summary>
            Returns whether this class instance contains an array value.
            </summary>
            <returns>True if this instance class contains an array, else false.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToArrayProxy"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.IsArrayGroup">
            <summary>
            Returns whether this class instance contains a group of array values.
            </summary>
            <returns>True if this instance class contains an array group, else false.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToArrayProxyGroup"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToArrayProxy">
            <summary>
            Convert this class instance's value to an <see cref="T:Infragistics.Documents.Excel.CalcEngine.ArrayProxy"/> data type.
            </summary>
            <returns>An array equivalent to the value of this instance.</returns>
            <seealso cref="T:Infragistics.Documents.Excel.CalcEngine.ArrayProxy"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToArrayProxyGroup">
            <summary>
            Convert this class instance's value to an array group data type.
            </summary>
            <returns>An array group equivalent to the value of this instance.</returns>
            <seealso cref="T:Infragistics.Documents.Excel.CalcEngine.ArrayProxy"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.Workbook">
            <summary>
            Gets the workbook associated with the formula being solved.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.GetTypeCode">
            <summary>
            Returns the <b>TypeCode</b> for this instance
            </summary>
            <returns>The enumerated constant that is the <b>TypeCode</b> of the class or value type that implements this interface.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToType(System.Type,System.IFormatProvider)">
            <summary>
            Convert this class instance's value to a uint data type
            </summary>
            <param name="conversionType">The <b>Type</b> to which the value of this instance is converted</param>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information</param>
            <returns>An Object instance of type conversionType whose value is equivalent to the value of this instance.</returns>
            <remarks>
            <p class="body">
            If there is no meaningful conversion, this method will throw an <b>InvalidCastException</b>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToArray">
            <summary>
            Convert this class instance's value to an array data type
            </summary>
            <returns>An array equivalent to the value of this instance</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToArrayGroup">
            <summary>
            Convert this class instance's value to an array group data type
            </summary>
            <returns>An array group equivalent to the value of this instance</returns>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.value">
            <summary>
            Storage for the underlying data type
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.#ctor(System.Object)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/>
            </summary>
            <param name="value">Object to be represented by the <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/>.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToInt">
            <summary>
            Convert this class instance's value to an int
            </summary>
            <returns>A signed 32-bit integer value containing the equivalent value of this instance</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToInt(System.IFormatProvider)">
            <summary>
            Convert this class instance's value to an int
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information</param>
            <returns>A signed 32-bit integer value containing the equivalent value of this instance</returns>
            <remarks>
            <p class="body">
            If there is no meaningful conversion to an integer this method will throw an <b>InvalidCastException</b>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ExceptionHandler(System.Exception)">
            <summary>
            Set this class's instance to an <b>UltraCalcErrorValue</b> based on the given exception
            </summary>
            <param name="e">Exception whose value is used to set this instance's error value</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToReference">
            <summary>
            Convert this instance's value to a <see cref="T:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference"/>.
            </summary>
            <returns>If this instance contains a object that implements the <see cref="T:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference"/> interface, this method returns the object instance, else an error reference is returned.</returns>
            <remarks>
            <p class="body">
            The instance value's underlying data type must be reference to return a reference, else an error reference is returned.
            <p></p>
            If there is no meaningful conversion to a reference, this method will throw an <b>InvalidCastException</b>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToErrorValue">
            <summary>
            Convert this instance's value to an <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue"/>
            </summary>
            <returns>A <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue"/> containing the equivalent error code to the value of this instance</returns>
            <remarks>
            <p class="body">
            This method returns an <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue"/> whose error code is set this instance's error code.
            <p></p>
            If there this instance does not contain an error, a <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue"/> containing a default value is returned
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToString">
            <summary>
            Returns a string representation of this instance's value.
            </summary>
            <returns>String representation of instance's value</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.IsReference">
            <summary>
            Returns whether this class instance contains a <see cref="T:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference"/> value
            </summary>
            <returns>True if this instance class contains a reference, else false</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.IsError">
            <summary>
            Returns whether this class instance contains an error value
            </summary>
            <returns>True if this class instance contains an error, else false</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.IsNull">
            <summary>
            Returns whether this class instance contains a null value
            </summary>
            <returns>True if this instance class contains a null value, else false</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.IsDBNull">
            <summary>
            Returns whether this class instance contains a DBNull value
            </summary>
            <returns>True if this instance class contains a null value, else false</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.IsString">
            <summary>
            Returns whether this class instance contains a string value
            </summary>
            <returns>True if this instance class contains a string, else false</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.IsBoolean">
            <summary>
            Returns whether this class instance contains a boolean value
            </summary>
            <returns>True if this instance class contains a boolean, else false</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.IsDateTime">
            <summary>
            Returns whether this class instance contains a DateTime value
            </summary>
            <returns>True if this instance class contains a DateTime, else false</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.Value">
            <summary>
            Return the underlying value
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.AreValuesEqual(Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue,Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue)">
            <summary>
            Indicates if the value of the specified <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> is equivalent to the <see cref="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.Value"/>
            </summary>
            <param name="x">First <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> to compare</param>
            <param name="y">Second <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> to compare</param>
            <returns>True if the values are the same; otherwise false is returned.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.CompareTo(Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue)">
            <summary>
            Compares current instance with the passed in <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> instance. Returns 
            -1, 1 or 0 depending on whether the current instance is less than, greater than
            or equal to the passed in instance respectively.
            </summary>
            <param name="value">The object that this instance should be compared against.</param>
            <returns>-1, 1 or 0 depending on whether the current instance is less than, greater than
            or equal to the passed in instance respectively.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.CompareTo(Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue,Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue)">
            <summary>
            Compares x and y <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> instances and returns -1 if x is less than y, 
            1 if x is greater than y and 0 if x and y are equal.
            </summary>
            <param name="x">The first value to compare.</param>
            <param name="y">The value to compare with the first value.</param>
            <returns>-1, 1 or 0 depending on whether the current instance is less than, greater than
            or equal to the passed in instance respectively.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.IsSameValue(Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue)">
            <summary>
            Indicates if the specified <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> has the save <see cref="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.Value"/> as this instance.
            </summary>
            <param name="value"><see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> to compare against.</param>
            <returns>True if the <see cref="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.Value"/> of both instances are equal; otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.GetResolvedValue">
            <summary>
            Gets the resolved value of the reference. This method will walk down the reference chain recursively to get the resolved value of the reference that is not just another reference. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToDouble">
            <summary>
            Convert this class instance's value to a double data type
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToDouble(System.IFormatProvider)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToDouble(System.IFormatProvider)">
            <summary>
            Convert this class instance's value to a double data type
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information</param>
            <returns>A double-precision floating-point equivalent to the value of this instance</returns>
            <remarks>
            <p class="body">
            If there is no meaningful conversion, this method will throw an <b>InvalidCastException</b>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToDouble(System.Double@)">
            <summary>
            Converts the <see cref="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.Value"/> to a double data type
            </summary>
            <param name="result">The resulting double value. If the return value is false, the result is 0.</param>
            <returns>True if the value was successfully converted to a double; otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToDateTime">
            <summary>
            Convert this class instance's value to a DateTime data type
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToDateTime(System.IFormatProvider)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToDateTime(System.IFormatProvider)">
            <summary>
            Convert this class instance's value to a DateTime data type
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information</param>
            <returns>A <b>DateTime</b> equivalent to the value of this instance</returns>
            <remarks>
            <p class="body">
            If there is no meaningful conversion, this method will throw an <b>InvalidCastException</b>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToSingle">
            <summary>
            Convert this class instance's value to a float data type
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToSingle(System.IFormatProvider)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToSingle(System.IFormatProvider)">
            <summary>
            Convert this class instance's value to a float data type
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information</param>
            <returns>A single-precision floating-point equivalent to the value of this instance</returns>
            <remarks>
            <p class="body">
            If there is no meaningful conversion, this method will throw an <b>InvalidCastException</b>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToBoolean">
            <summary>
            Convert this class instance's value to a boolean data type
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToBoolean(System.IFormatProvider)"/>
            <returns>A boolean floating-point equivalent to the value of this instance</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToBoolean(System.IFormatProvider)">
            <summary>
            Convert this class instance's value to a boolean data type
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information</param>
            <returns>A boolean floating-point equivalent to the value of this instance</returns>
            <remarks>
            <p class="body">
            If there is no meaningful conversion, this method will throw an <b>InvalidCastException</b>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToInt32">
            <summary>
            Convert this class instance's value to a int data type
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToInt32(System.IFormatProvider)"/>
            <returns>A 32-bit signed integer floating-point equivalent to the value of this instance</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToInt32(System.IFormatProvider)">
            <summary>
            Convert this class instance's value to a int data type
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information</param>
            <returns>A 32-bit signed integer floating-point equivalent to the value of this instance</returns>
            <remarks>
            <p class="body">
            If there is no meaningful conversion, this method will throw an <b>InvalidCastException</b>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToInt16">
            <summary>
            Convert this class instance's value to a short data type
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToInt16(System.IFormatProvider)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToInt16(System.IFormatProvider)">
            <summary>
            Convert this class instance's value to a short data type
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information</param>
            <returns>A 16-bit signed integer floating-point equivalent to the value of this instance</returns>
            <remarks>
            <p class="body">
            If there is no meaningful conversion, this method will throw an <b>InvalidCastException</b>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToString(System.IFormatProvider)">
            <summary>
            Convert this class instance's value to a string instance data type
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information</param>
            <returns>A string instance equivalent to the value of this instance</returns>
            <remarks>
            <p class="body">
            If there is no meaningful conversion, this method will throw an <b>InvalidCastException</b>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToByte">
            <summary>
            Convert this class instance's value to a byte data type
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToByte(System.IFormatProvider)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToByte(System.IFormatProvider)">
            <summary>
            Convert this class instance's value to a byte data type
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information</param>
            <returns>A 8-bit unsigned integer equivalent to the value of this instance</returns>
            <remarks>
            <p class="body">
            If there is no meaningful conversion, this method will throw an <b>InvalidCastException</b>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToChar">
            <summary>
            Convert this class instance's value to a char data type
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToChar(System.IFormatProvider)"/>
            <returns>A Unicode character equivalent to the value of this instance</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToChar(System.IFormatProvider)">
            <summary>
            Convert this class instance's value to a char type
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information</param>
            <returns>A Unicode character equivalent to the value of this instance</returns>
            <remarks>
            <p class="body">
            If there is no meaningful conversion, this method will throw an <b>InvalidCastException</b>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToInt64">
            <summary>
            Convert this class instance's value to a long data type
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToInt64(System.IFormatProvider)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToInt64(System.IFormatProvider)">
            <summary>
            Convert this class instance's value to a long data type
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information</param>
            <returns>A 64-bit signed integer equivalent to the value of this instance</returns>
            <remarks>
            <p class="body">
            If there is no meaningful conversion, this method will throw an <b>InvalidCastException</b>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToDecimal">
            <summary>
            Convert this class instance's value to a decimal data type
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToDecimal(System.IFormatProvider)"/>
            <returns>A <b>Decimal</b> equivalent to the value of this instance</returns>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToDecimal(System.IFormatProvider)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToDecimal(System.Decimal@)">
            <summary>
            Converts the <see cref="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.Value"/> to a decimal data type
            </summary>
            <param name="result">The resulting decimal value. If the return value is false, the result is 0.</param>
            <returns>True if the value was successfully converted to a decimal; otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToDecimal(System.IFormatProvider)">
            <summary>
            Convert this class instance's value to a decimal data type
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information</param>
            <returns>A <b>Decimal</b> equivalent to the value of this instance</returns>
            <remarks>
            <p class="body">
            If there is no meaningful conversion, this method will throw an <b>InvalidCastException</b>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.DateTimeToExcelDate(Infragistics.Documents.Excel.Workbook,System.DateTime)">
            <summary>
            Converts a DateTime to Excel's numerical representation of a date.
            </summary>
            <remarks>
            <p class="body">
            When using the 1900 date system in Excel, dates before 3/1/1900 must be corrected, because Excel 
            incorrectly assumes 1900 is a leap year. This overload assumes the 1900 date system is being used
            as so it corrects the date values.
            </p>
            </remarks>
            <param name="dateValue">The DateTime value to convert to the Microsoft Excel date format.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.DateTimeToExcelDate(Infragistics.Documents.Excel.Workbook,System.DateTime,System.Boolean)">
            <summary>
            Converts a DateTime to Excel's numerical representation of a date.
            </summary>
            <param name="dateValue">The DateTime value to convert to the Microsoft Excel date format.</param>
            <param name="shouldCorrect1900Dates">
            When using the 1900 date system in Excel, dates before 3/1/1900 must be corrected, because Excel 
            incorrectly assumes 1900 is a leap year. Pass False to disable this correction.
            </param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ExcelDateToDateTime(Infragistics.Documents.Excel.Workbook,System.Double)">
            <summary>
            Converts Excel's numerical representation of a date to a DateTime.
            </summary>
            <remarks>
            <p class="body">
            When using the 1900 date system in Excel, dates before 3/1/1900 must be corrected, because Excel 
            incorrectly assumes 1900 is a leap year. This overload assumes the 1900 date system is being used
            as so it corrects the date values.
            </p>
            </remarks>
            <param name="excelDate">The Microsoft Excel date format which should be converted to a DateTime.</param>		
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ExcelDateToDateTime(Infragistics.Documents.Excel.Workbook,System.Double,System.Boolean)">
            <summary>
            Converts Excel's numerical representation of a date to a DateTime.
            </summary>
            <param name="excelDate">The Microsoft Excel date format which should be converted to a DateTime.</param>
            <param name="shouldCorrect1900Dates">
            When using the 1900 date system in Excel, dates before 3/1/1900 must be corrected, because Excel 
            incorrectly assumes 1900 is a leap year. Pass False to disable this correction.
            </param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ExcelDateToTimeOfDay(System.Double,System.Boolean)">
            <summary>
            Converts Excel's numerical representation of a time of day to a TimeSpan.
            </summary>
            <remarks>
            <p class="body">
            In Excel, only the fractional portion of the date value represents the time of day, so if <paramref name="excelDate"/>
            is greater than 1, only the fractional part will be used.
            </p>
            </remarks>
            <param name="excelDate">The Microsoft Excel date format which should be converted to a DateTime.</param>	
            <param name="useDayInfo">Optional parameter to allow the day information to be included as well.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.TimeOfDayToExcelDate(System.TimeSpan,System.Boolean)">
            <summary>
            Converts a TimeSpan to Excel's numerical representation of a date.
            </summary>
            <remarks>
            <p class="body">
            The TimeSpan.Days portion of the <paramref name="timeValue"/> will not be used unless the <paramref name="useDayInfo"/> is true. Otherwise only the time of day will be used from the TimeSpan.
            </p>
            </remarks>
            <param name="timeValue">The TimeSpan value to convert to the Microsoft Excel date format.</param>
            <param name="useDayInfo">Optional parameter to allow the day information to be included as well.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.GetResolvedValue(System.Boolean)">
            <summary>
            Gets the resolved value of the reference. This method will walk down the reference chain recursively to get the resolved value of the reference that is not just another reference. 
            </summary>
            <param name="willUseValueInCalculations">
            True if the value returned will actually be used in calculations; False if the value is being requested to inspect some aspect of it, such as its type.
            </param>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.IExcelCalcFormula">
            <summary>
            Interface implemented by the formula object.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.IExcelCalcFormula.AddDynamicReference(Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference)">
            <summary>
            Adds a reference created during the evaluation of the formula to the references of the formula.
            </summary>
            <remarks>
            <p class="body">
            If the reference is already in the references or dynamic references collection of the formula, this will have no effect.
            </p>
            </remarks>
            <param name="reference">The reference to add to the formula's dynamic references collection.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcFormula.DynamicReferences">
            <summary>
            Gets the collection of reference created during the last evaluation of the formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcFormula.FormulaString">
            <summary>
            Formula string.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcFormula.HasAlwaysDirty">
            <summary>
            Returns whether the formula contains an always dirty function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcFormula.BaseReference">
            <summary>
            Base reference associated with the formula.
            </summary>
            <remarks>
            <p class="body">Base reference associated with the formula. For example, in the case of a column formula, BaseReference would be the column reference.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.IExcelCalcFormula.Evaluate(Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference)">
            <summary>
            Evaluate the compiled expression against the given base reference
            </summary>
            <param name="reference">Base reference used to resolve relative references into absolute references</param>
            <returns>Retuns an <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> containing result of formula evaluation</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcFormula.References">
            <summary>
            Retuns a collection of references contained in the formula token string
            </summary>
            <returns>Collection of <see cref="T:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference"/>s</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction">
            <summary>
            Base class for formula functions.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction"/>
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction.IsAlwaysDirty">
            <summary>
            Indicates whether the results of the function is always dirty.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction.PerformEvaluation(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>        
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction.GetArguments(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32,System.Boolean)">
            <summary>
            A helper method for extracting the <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> instances from the stack.
            </summary>
            <param name="numberStack">Number stack whose values should be popped.</param>
            <param name="argumentCount">Number of items to pop/evaluate from the number stack</param>
            <param name="skipEmptyValues">True to ignore values whose IsNull returns true; otherwise false to include empty items in the list.</param>
            <returns>An array of <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> instances removed from the number stack.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction.GetArguments(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            A helper method for extracting the <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> instances from the stack.
            </summary>
            <param name="numberStack">Number stack whose values should be popped.</param>
            <param name="argumentCount">Number of items to pop/evaluate from the number stack</param>
            <param name="skipEmptyValues">True to ignore values whose IsNull returns true; otherwise false to include empty items in the list.</param>
            <param name="skipHiddenCells">True to ignore values from hidden cells.</param>
            <returns>An array of UltraCalcValue instances removed from the number stack.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction.GetArgumentsInOrder(System.Collections.Generic.List{Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue},Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32,System.Boolean)">
            <summary>
            Gets the arguments in order, from left-to-right as they are passed into the methods. It takes
            into account any arguments that are enumerable references, in which case the contituent values
            of such enumerable references are returned in the correct order as well.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction.DoesParameterAllowIntermediateResultArray(System.Int32,System.Boolean)">
            <summary>
            Determines whether the function accepts an intermediate result array created by evaluating a nested function
            on a per-element basis of an array or region parameter when a single value is expected.
            </summary>
            <remarks>
            <p class="body">
            An intermediate result array will be generated when multiple values are specified where a single value is expected.
            For example, the following formula will generate the value 15: =SUM(10/{1,2}). This is because "10/{1,2}" will 
            result in an intermediate result array of {10/1,10/2}, or {10,5}. Then each element is summed up to result in the 
            value 15. However, the SUM function does not allow intermediate result arrays for region references. So a function
            such as =SUM(10/D6:E7) will result in a #VALUE! error. Unlike the SUM function, the LOOKUP function allows intermediate 
            result arrays from region references. So a formula like LOOKUP(10,D6:E7*2) will return a correct result if the value 10 
            can be found in the following intermediate result array when using the normal LOOKUP function logic: {D6*2,E6*2; D7*2,E7*2}.
            Therefore, SUM would return True from this method only when <paramref name="isCreatedFromRegionReference"/> is False 
            and LOOKUP would return True from this method always (for a <paramref name="parameterIndex"/> value of 1 in this example).
            </p>
            <p class="note">
            <b>Note:</b> if this function is being called in an array formula, the restrictions are relaxed in the following way: 
            if the function supports intermediate result arrays created from constant array, it will also support intermediate 
            result arrays created from region references, so the <paramref name="isCreatedFromRegionReference"/> value will always 
            be passed in as False.
            </p>
            </remarks>
            <param name="parameterIndex">The 0-based index of parameter in which the intermediate array will be passed.</param>
            <param name="isCreatedFromRegionReference">
            True if the value which will generate the intermediate result array is a region reference; False if it is a constant array.
            </param>
            <returns>True to allow intermediate result arrays for the specified parameter; False otherwise.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.BuiltInFunctionBase">
            <summary>
            Base class for the built in functions.
            </summary>	
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcBinaryOperatorBase">
            <summary>
            Abstract base class for binary operator functions.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcBinaryOperatorBase.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An UltraCalcValue represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcBinaryOperatorBase.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcBinaryOperatorBase.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcBinaryOperatorBase.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue,Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue)">
            <summary>
            Evaluates the the binary operator with the specified arguments and returns the result.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUnaryPlus">
            <summary>
            '+' Unary plus formula operator (+20)
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUnaryPlus.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUnaryPlus.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUnaryPlus.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUnaryPlus.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUnaryMinus">
            <summary>
            '-' Negation formula operator (-20)
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUnaryMinus.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUnaryMinus.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUnaryMinus.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUnaryMinus.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPlus">
            <summary>
            '+' Addition formula operator (1+2)
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPlus.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue,Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue)">
            <summary>
            Evaluates the the binary operator with the specified arguments and returns the result.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPlus.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinus">
            <summary>
            '-' Subtraction formula operator (3-2)
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinus.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue,Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue)">
            <summary>
            Evaluates the the binary operator with the specified arguments and returns the result.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinus.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPercent">
            <summary>
             '%' Percent formula operator (20%)
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPercent.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPercent.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPercent.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPercent.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMultiply">
            <summary>
            '*' Multiplication formula operator (2*3)
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMultiply.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue,Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue)">
            <summary>
            Evaluates the the binary operator with the specified arguments and returns the result.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMultiply.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDivide">
            <summary>
            '/' Division formula operator (3/2)
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDivide.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue,Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue)">
            <summary>
            Evaluates the the binary operator with the specified arguments and returns the result.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDivide.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcat">
            <summary>
            '&amp;' formula operator used to concatenate two strings. ("First" &amp; "Second")
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcat.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcat.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcat.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcat.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEqual">
            <summary>
            '=' Equality formula operator (Price = 200)
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEqual.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEqual.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEqual.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEqual.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNE">
            <summary>
            "&lt;&gt;" Inequality formula operator (Price &lt;&gt; 200)
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNE.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNE.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNE.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNE.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLT">
            <summary>
            '&lt;' Less than formula operator (Price &lt; 200)
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLT.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLT.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLT.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLT.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLE">
            <summary>
            "&lt;=" Less than or equal formula operator (Price &lt;= 200)
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLE.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLE.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLE.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLE.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGT">
            <summary>
            "&gt;" Greater than formula operator (Price > 200)
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGT.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGT.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGT.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGT.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGE">
            <summary>
            "&gt;=" Greater than or equal formula operator (Price >= 200)
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGE.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGE.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGE.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGE.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExpon">
            <summary>
            "^" Exponentiation formula operator (3^2)
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExpon.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExpon.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExpon.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExpon.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXLIntersect.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXLIntersect.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXLIntersect.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXLIntersect.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXLRange.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXLRange.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXLRange.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXLRange.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXLUnion.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXLUnion.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXLUnion.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXLUnion.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFactory">
            <summary>
            Class used to manage the stock and user defined <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction"/> instances
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFactory.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFactory"/>
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFactory.Item(System.String)">
            <summary>
            Returns the function with the specified name
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFactory.Add(Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction)">
            <summary>
            Adds the specified function to the function list.
            </summary>
            <param name="function">Function to add</param>
            <returns>A boolean indicating if the function was added.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFactory.AddLibrary(System.Reflection.Assembly)">
            <summary>
            Adds a library of user defined functions contained in the given assembly.
            </summary>
            <param name="assembly">Loaded assembly containing a library of user defined functions</param>
            <remarks>
            <p class="body">
            Once the assembly is loaded, any type that derives from <b>UltraCalcFunction</b> will be registered with the function factory
            </p>
            </remarks>
            <returns>True if the function library was successfully loaded and its functions registered, else false</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFactory.GetOperator(Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction)">
            <summary>
            Returns the <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction"/> for the specified operator enumeration
            </summary>
            <param name="operatorType">Operator whose function should be returned.</param>
            <returns>The <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction"/> associated with the specified enumeration.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode">
            <summary>
            Enumeration of error codes assigned to <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode.Reference">
            <summary>
            Occurs when an invalid or disconnected reference is encountered while evaluating a formula
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode.Value">
            <summary>
            Occurs when the wrong type of argument or operand is used in a formula
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode.Div">
            <summary>
            Occurs when a number is divided by zero (0)
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode.NA">
            <summary>
            Occurs when @NA is entered into a formula
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode.Num">
            <summary>
            Occurs with invalid numeric values in a formula or function
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode.Circularity">
            <summary>
            Occurs when a circularity formula is used when circularities are not allowed.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode.Null">
            <summary>
            Occurs when there is an intersection of two references that do not contain any common cells.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode.Name">
            <summary>
            Occurs when text in a formula is not recognized.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcErrorException">
            <summary>
            Exception containing an <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcErrorException.#ctor(Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcErrorException"/> using the specified <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue"/>
            </summary>
            <param name="errorValue">The UltraCalcErrorValue that has generated the exception.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcErrorException.Value">
            <summary>
            Get the <b>UltraCalcErrorValue</b> associated with the exception
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcErrorException.ToString">
            <summary>
            Returns the string representation of the underlying error value.
            </summary>
            <returns>The string representation of the underlying error value.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcException">
            <summary>
            Generic Calc Exception.  All Calc Exceptions derive from this so that a developer can
            easily turn off our exceptions during debugging.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcException.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcException"/>
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcException.#ctor(System.String)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcException"/> with the specified error message
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcException"/> with the specified error message and exception instance.
            </summary>
            <param name="message">Error message</param>
            <param name="innerException">The exception that caused this exception</param>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference">
            <summary>
            The Primary Reference Inteface.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference.AbsoluteName">
            <summary>
            The fully qualified unique name for the referenced element.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference.ElementName">
            <summary>
            The unqualified name of this referenced element.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference.Value">
            <summary>
            The <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/>, if any, associated with this Reference.  If this reference 
            does not contain a Value then a <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue"/> is returned.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference.Formula">
            <summary>
            The <see cref="T:Infragistics.Documents.Excel.CalcEngine.IExcelCalcFormula"/>, if any, associated with this Reference.  If this reference 
            can not contain a formula then null is returned.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference.Context">
            <summary>
            Returns a context for the Reference.
            </summary>
            <remarks><p class="body">Returns a meaningful object context for the reference. This could be an UltraGridCell, UltraGridColumn, NamedReference, Control, etc.</p></remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference.CreateReference(System.String)">
            <summary>
            Create a new reference relative to this reference.  
            </summary>
            <param name="referenceString">The reference string.</param>
            <returns>The new reference.</returns>
            <remarks>
            A reference string may be external or internal.  
            <p>A external reference has the form "//object_name/object_specific_part".  
            The control identified by object_name must implement <see cref="T:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference"/> and be able to 
            parse object_specific_part.</p>
            <p>An internal reference is a reference within the same control that implements this 
            instance of the interface.  An internal reference can be absolute or relative.  Absolute 
            references must begin with the "/" character.  Such references must be created relative to
            the root object in the control.  Relative references are created relative to this reference.</p>
            <p>Note that in complex reference models, multiple reference strings may point to the same
            underlying object.  The reference string used to create the reference must be available to
            other methods such as ResolveReference, References and MarkRelativeIndicies.  Consequently, if the reference 
            string is relative, a proxy reference object should be returned that retains the relative
            reference string.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference.References">
            <summary>
            Return a collection of references if this Reference is enumerable.  An exception is
            thrown if this reference is not enumerable.
            </summary>
            <returns>A Reference collection.</returns>
            <remarks>
            The collection returned by this method must be constrained to the scope specified by the 
            original string used to create the reference.  For example, if the original reference string
            was [Customers(State="MA")/Total], then the collection should be constrained to the Total cells
            for all customers that have State = "MA".
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference.ContainsReference(Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference)">
            <summary>
            Returns true if this reference contains inReference
            </summary>
            <param name="inReference">The contained candidate.</param>
            <returns>true if inReference is contained by this reference.</returns>
            <remarks>
            This method is used by the calculation engine to determine if the passed in reference
            is either a child of this reference or a more fully scoped version of this reference.  
            Each element in this reference is compared with the corresponding element in the input 
            reference.  If the identifiers are the same, and if this scope contains the input scope, then
            the input reference is contained by this reference.  If the input reference is longer than 
            this reference and the common element are contained, then the input reference is contained.
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference.IsSubsetReference(Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference)">
            <summary>
            Returns true if inReference is a proper subset of this reference
            </summary>
            <param name="inReference">The subset candidate.</param>
            <returns>true if inReference is contained by this reference.</returns>
            <remarks>
            This method is used by the calculation engine to determine if the passed in reference
            is fully contained by this reference.  
            Each element in this reference is compared with the corresponding element in the input 
            reference.  If the identifiers are the same, and if this scope entirely contains the input scope, then
            the input reference is a proper subset this reference.  
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference.IsEnumerable">
            <summary>
            Returns true if this reference is enumerable.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference.NormalizedAbsoluteName">
            <summary>
            Returns the normalized absolute name. Calculation engine makes use of normalized
            absolute names of references to compare two references and search for references.
            This property should return the absolute name with case insensitive parts of
            the absolute names converted to lower case.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReferenceCollection">
            <summary>
            Collection of <see cref="T:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference"/> objects
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFormulaTokenType">
            <summary>
            Identifies formula token types in the <b>UltraCalcFormulaToken</b> class
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcFormulaTokenType.Value">
            <summary>
            Indicates a value token containing an IUltraCalcReference.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcFormulaTokenType.Function">
            <summary>
            Indicates a function token containing an IUltraCalcFunction. 
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction">
            <summary>
            Enumeration of operator functions.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.Add">
            <summary>
            Operator used to add two values ("+")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly two operands/arguments.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.Subtract">
            <summary>
            Operator used to subtract two values ("-")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly two operands/arguments.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.Multiply">
            <summary>
            Operator used to multiply two values ("*")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly two operands/arguments.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.Divide">
            <summary>
            Operator used to divide two values ("/")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly two operands/arguments.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.Equal">
            <summary>
            Operator used to compare two objects for equality ("=")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly two operands/arguments.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.NotEqual">
            <summary>
            Operator used to compare if two values are different ("&gt;&lt;" or "!=")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly two operands/arguments.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.GreaterThanOrEqual">
            <summary>
            Operator used to determine if one value is greater than or equal to a second value. ("&gt;=")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly two operands/arguments.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.GreaterThan">
            <summary>
            Operator used to determine if one value is greater than a second value. ("&gt;")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly two operands/arguments.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.LessThanOrEqual">
            <summary>
            Operator used to determine if one value is less than or equal to a second value. ("&lt;=")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly two operands/arguments.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.LessThan">
            <summary>
            Operator used to determine if one value is less than a second value. ("&lt;")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly two operands/arguments.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.Concatenate">
            <summary>
            Operator used to concatenate 2 strings ("&amp;")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly two operands/arguments.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.Exponent">
            <summary>
            Operator used to raise a value to a specified power ("^")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly two operands/arguments.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.Percent">
            <summary>
            Operator used to convert a value to a percentage ("%")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly one operand/argument.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.UnaryMinus">
            <summary>
            Negative unary operator ("-")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly one operand/argument.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.UnaryPlus">
            <summary>
            Positive unary operator ("+")
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This operator must take exactly one operand/argument.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.DependencyGraph.DirtySingleReference(Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase)">
            <summary>
            Marks a single reference as dirty.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.CalcManagerUtilities.EnumGetValues(System.Type)">
            <summary>
            Get the values from enumeration
            </summary>
            <param name="enumType">Type of the enum.</param>
            <returns>array of values in the enumeration</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcatenate">
            <summary>
            Combines two or more text values into a single text string.
            </summary>
            <remarks>
            <p class="body">CONCATENATE(text1, text2, ..., textN)</p>
            <p class="body">Text1, text2, ..., textN are multiple text values that
            you want to concatenate into one text string. These text values may be
            text strings, numbers (which will be converted into text), or a single
            value reference (such as a cell reference) containing such a value.</p>
            <p class="body">This function provides for elementary text processing
            in UltraCalc, such as when building message text or appending some
            connective text or punctuation to the results of evaluating other
            text-bearing expressions.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcatenate.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcatenate.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcatenate.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcatenate.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcatenate.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAverage">
            <summary>
            Calculates an average (arithmetic mean) for a series of numbers.
            </summary>
            <remarks>
            <p class="body">AVERAGE(value1, value2, ...)</p>
            <p class="body">Value1, value2, ... are one or more numeric values or
            references to numeric values. An average (arithmetic mean) is calculated
            by taking the sum of all values, and dividing by the number of values.</p>
            <p class="body">Each value is equally weighted. To obtain a weighted average,
            you can multiply each value by a weight in the expression.</p>
            <code>
            AVERAGE( [Value1]*[Weight1], [Value2]*[Weight2], [Value3]*[Weight3])
            </code>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAverage.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAverage.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAverage.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAverage.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAverage.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSum">
            <summary>
            Adds a series of numbers to obtain a total amount.
            </summary>
            <remarks>
            <p class="body">SUM(value1,value2,...)</p>
            <p class="body">Value1, value2, ... are references for which you want to find the total value.
            Text representations of numbers and literal numeric constants that you specify in the list of
            arguments will be included in the sum. If <em>value</em> is a column or vector reference then
            the sum will be taken of all cells or values contained by the reference. Any error values in
            the argument list, or text that is not convertible to a numeric value, will produce an error.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSum.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSum.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSum.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSum.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSum.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIf">
            <summary>
            Chooses between two outcomes (or UltraCalc expressions to evaluate) based on
            the result of a logical test on a value or UltraCalc expression you specify.
            </summary>
            <remarks>
            <p class="body">IF( boolean_test, result_if_true, [result_if_false])</p>
            <p class="body">Boolean_test is a value (or an UltraCalc expression) which the IF function
            evaluates to produce a boolean value of either TRUE or FALSE. The outcome of
            this test determines which result will be returned by the function.
            </p>
            <p class="body">Result_if_true is a value (or the outcome of another
            UltraCalc expression) that will be returned only when boolean_test has
            evaluated to the boolean value, TRUE.</p>
            <p class="body">Result_if_false is a value (or the outcome of another
            UltraCalc expression) that will be returned only when boolean_test has
            evaluated to the boolean value, FALSE.</p>
            <p class="body">The IF function allows you to write an UltraCalc expression
            that branches to one expression (when the boolean_test is TRUE) or another
            (when the boolean_test is FALSE) based on an arbitrary condition you have
            specified.</p>
            <p class="body">The result_if_false is not specified and boolean_test is FALSE, the 
            IF function will return FALSE.</p>
            <p class="note">If boolean_test's evaluation produces an error value then
            neither Result_if_true nor Result_if_false will be evaluated. Instead, the
            IF function returns the error value from its evaluation of boolean_test.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIf.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIf.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIf.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIf.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAbs">
            <summary>
            Calculates a number's absolute value.
            </summary>
            <remarks>
            <p class="body">ABS( value)</p>
            <p class="body">A number's absolute value is it's value without any
            sign. It represents the magnitude of a value while ignoring it's
            direction (positive or negative) on a number line or vector.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAbs.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAbs.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAbs.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAbs.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMod">
            <summary>
            Gets the remainder following integer division of two numbers.
            </summary>
            <remarks>
            <p class="body">MOD(numerator, denominator)</p>
            <p class="body">Numerator is the number being divided by <em>denominator</em>.
            When <em>denominator</em> can only be taken from <em>numerator</em>
            a certain whole number of types (the quotient), any leftover is the
            remainder.</p>
            <p class="body">Denominator is the number dividing the <em>numerator</em>.
            Any remainder will have the sign of the <em>denominator</em>. This number
            cannot be zero, otherwise the MOD() function returns a #DIV/0 error.</p>
            <p class="body">If you want to perform integer division on these two numbers
            then use the <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionQuotient">QUOTIENT()</see> function.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMod.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMod.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMod.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMod.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionQuotient">
            <summary>
            Performs integer division on two numbers disregarding any remainder.
            </summary>
            <remarks>
            <p class="body">QUOTIENT(numerator, denominator)</p>
            <p class="body">Numerator is a numeric value that will be divided
            by the <em>denominator</em>. It is sometimes called the dividend.
            </p>
            <p class="body">Denominator is the numeric value that divides the
            <em>numerator</em>. It is sometimes called the divisor.  It cannot
            be zero or a #DIV/0 error value will be returned.
            </p>
            <p class="body">When either the <em>numerator</em> or the 
            <em>denominator</em> is not a number, the QUOTIENT() function
            returns an error value (#VALUE!).</p>
            <p class="body">If you need the remainder from an integer division,
            use the <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMod">MOD()</see> function.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionQuotient.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionQuotient.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionQuotient.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionQuotient.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionProduct">
            <summary>
            Multiplies a series of numbers to return their total product.
            </summary>
            <remarks>
            <p class="body">PRODUCT( value1, value2, ..., valueN)</p>
            <p class="body">Value1 is the first number (the multiplicand) in a
            series of numbers that you want to multiply.</p>
            <p class="body">Value2 is the second number (the first multiplier)
            in a series of numbers that you want to multiply.</p>
            <p class="body">Value<em>N</em> is the last number (the last multiplier)
            in a series of numbers that you want to multiply.</p>
            <p class="body">This function offers a convenience when you need to
            multiply many numbers or expressions at one time.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionProduct.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionProduct.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionProduct.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionProduct.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionProduct.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPower">
            <summary>
            Raises the specific number to a power.
            </summary>
            <remarks>
            <p class="body">POWER(value, exponent)</p>
            <p class="body">Value is a numeric value or reference to a numeric value
            which you want to raise to a power.</p>
            <p class="body">Exponent is a real number power to which <em>value</em>
            is to be raised. Imaginary exponents are not supported.</p>
            <p class="body">Common applications of the POWER() function occur when
            you need to multiply a number against itself multiple times. For example,
            it is common in many computer applications to create bit mask values by
            raising the value 2 to integer exponents, which produce a sequence such
            as (1, 2, 4, 8, 16, 32, 64, 128, ...)</p>
            <p class="body">The POWER() function additionally supports fractional
            exponents, and can be used to emulate other functions such as the quad
            root (raising to an exponent of 0.25, which is 1/4) or the inverse
            square (raising to an exponent of -2.0).</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPower.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPower.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPower.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPower.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionInt">
            <summary>
            Converts a real numeric value (which may have a fractional part)
            into a whole number.
            </summary>
            <remarks>
            <p class="body">INT(value)</p>
            <p class="body">Value is a real numeric value that you want to
            convert into a whole number. INT() is a more specialized version
            of the <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrunc">TRUNC()</see> function
            because it always produces integer values (whereas the TRUNC()
            function allows you to specify a precision at which to truncate
            the numeric value.)</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionInt.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionInt.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionInt.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionInt.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrunc">
            <summary>
            Truncates the fractional portion of a numeric value to produce an integer.
            </summary>
            <remarks>
            <p class="body">TRUNC(value, number_of_digits)</p>
            <p class="body">Value is a numeric value or reference to a numeric value
            that you want to truncate.</p>
            <p class="body">Number_of_digits specifies the precision at which truncation
            should occur. By default, truncation occurs zero places right of the decimal
            point which will produce an integer.</p>
            <p class="body">Truncation always discards the fractional value, causing the
            <em>Value</em> to move closer to zero (whether it was positive or negative
            before the truncation). It differs from the <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRound">ROUND()</see>
            function in that the value always changes to a lesser value.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrunc.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrunc.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrunc.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrunc.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCount">
            <summary>
            Counts how many cells have numeric or date/time values. 
            </summary>
            <remarks>
            <p class="body">COUNT(Value1, Value2, ..., ValueN)</p>
            <p class="body">Value1, value2, ... valueN can be references to different data structures,
            such as columns. Each numeric or date/time value is counted. Empty, error, boolean or text
            values that are not convertible into numeric values are not counted.</p>
            <p class="body">When a reference is a range reference, only those numeric and date/time
            values within the range will be counted.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCount.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCount.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCount.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCount.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCount.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrue">
            <summary>
            A constant function always returning the TRUE value of Boolean
            logic.
            </summary>
            <remarks>
            <p class="body">TRUE() will always evaluate to the boolean value
            of TRUE. It takes no arguments.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrue.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrue.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrue.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrue.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFalse">
            <summary>
            A constant function always returning the FALSE value of Boolean
            logic.
            </summary>
            <remarks>
            <p class="body">FALSE() will always evaluate to the boolean value
            of FALSE. It takes no arguments.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFalse.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFalse.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFalse.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFalse.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNot">
            <summary>
            Logical-NOT returns the inverse boolean value of it's argument.
            </summary>
            <remarks>
            <p class="body">NOT(boolean1)</p>
            <p class="body">Boolean1 is any boolean (TRUE or FALSE) value, or
            conditional statement (made up of any UltraCalc expression which
            itself evaluates to a boolean TRUE or FALSE value) to be inverted.</p>
            <p class="body">If boolean1 was TRUE, then the Logical-NOT would
            return FALSE. If boolean1 was FALSE, then the Logical-NOT would
            return TRUE.</p>
            <p class="note">If Boolean1 is an UltraCalc expression that evaluates
            to an error value, then the result of a Logical-NOT operation is
            undefined because an error value is neither TRUE nor FALSE.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNot.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNot.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNot.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNot.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAnd">
            <summary>
            Logical-AND returns the boolean value, FALSE, if at least one argument has a value of FALSE.
            When <em>all</em> arguments are TRUE, then this function returns TRUE.
            </summary>
            <remarks>
            <p class="body">AND(boolean1, boolean2, ...)</p>
            <p class="body">Boolean1, boolean2, ... are a list of boolean (TRUE or FALSE) values or
            conditional statements (any UltraCalc expression which itself evaluates to a boolean
            TRUE or FALSE value) to be evaluated for the constraint that all arguments should be
            TRUE (or conversely, that at least one argument should be FALSE.)</p>
            <p class="body">All arguments are tested (<em>i.e.</em>, the logical-AND function
            does not use "short-circuit" evaluation, in which the function can stop executing
            as soon as the first argument having the boolean value, FALSE, has been processed.)</p>
            <p class="note">This function stops evaluating immediately when any argument results in
            an error value. An error value is neither TRUE nor FALSE, therefore the return value of
            the logical-AND function is undefined.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAnd.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAnd.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAnd.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAnd.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAnd.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOr">
            <summary>
            Logical-OR returns the boolean value, TRUE, if at least one argument has a value of TRUE.
            When <em>all</em> arguments are FALSE, then this function returns FALSE.
            </summary>
            <remarks>
            <p class="body">OR(boolean1, boolean2, ...)</p>
            <p class="body">Boolean1, boolean2, ... are a list of boolean (TRUE or FALSE) values or
            conditional statements (any UltraCalc expression which itself evaluates to a boolean
            TRUE or FALSE value) to be evaluated for the constraint that at least one argument
            should be TRUE (or conversely, that all arguments should be FALSE.)</p>
            <p class="body">All arguments are tested (<em>i.e.</em>, the logical-OR function
            does not use "short-circuit" evaluation, in which the function can stop executing
            as soon as the first argument having the boolean value, TRUE, has been processed.)</p>
            <p class="note">This function stops evaluating immediately when any argument results in
            an error value. An error value is neither TRUE nor FALSE, therefore the return value of
            the logical-OR function is undefined.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOr.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOr.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOr.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOr.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOr.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMin">
            <summary>
            Gives you the smallest numeric value out of a series. 
            </summary>
            <remarks>
            <p class="body">MIN(Value1, value2, ..., valueN)</p>
            <p class="body">Value1, value2, ... valueN are any number of numeric values or references to
            numeric values from which you want the minimum value found. Arguments may be numbers, boolean
            values, text values convertible into numbers, or empty. Error values and text values that are
            not convertible into numbers will produce an error.</p>
            <p class="body">The minimum value for a series of numbers can be it's largest magnitude
            negative number because larger magnitude negative numbers are less than smaller magnitude
            negative numbers. For example, given the expression MIN( -1500, -50, 5, 150), the return value
            is -1500 and not 5. To determine the numeric value with the smallest magnitude you would
            use the <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAbs">ABS()</see> function on each argument. The
            following example would produce a minimum value of 5.</p>
            <code>MIN( ABS(-1500), ABS(-50), ABS(5), ABS(150))</code>
            <p class="body">When the argument list is empty, MIN() returns zero.</p>
            <seealso cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMax">MAX()</seealso>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMin.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMin.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMin.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMin.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMin.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMax">
            <summary>
            Gives you the largest numeric value out of a series. 
            </summary>
            <remarks>
            <p class="body">MAX(Value1, value2, ..., valueN)</p>
            <p class="body">Value1, value2, ... valueN are any number of numeric values or references to numeric
            values from which you want the maximum value found. Arguments may be numbers, boolean
            values, text values convertible into numbers, or empty. Error values and text values
            that are not convertible into numbers will produce an error.</p>
            <p class="body">When the argument list is empty, MAX() returns zero.</p>
            <seealso cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMin">MIN()</seealso>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMax.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMax.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMax.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMax.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMax.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExp">
            <summary>
            Calculates the mathematical constant, e, raised to the specified power.
            </summary>
            <remarks>
            <p class="body">EXP(exponent)</p>
            <p class="body">Exponent is the power to which the base, e, is raised.
            This gives the function it's characteristic "exponential" growth.</p>
            <p class="body">Euler's Number, e, is the value 2.718281828459..., and
            is also the base of the natural logarithm. You can represent the constant
            e within your UltraCalc formula by specifying EXP(1). The exponential
            function (and natural logarithm) have many applications in mathematics,
            engineering, and for modeling behavioral and statistical distributions 
            commonly observed in nature and the social sciences.</p>
            <seealso cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLn">LN()</seealso>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExp.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExp.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExp.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExp.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRound">
            <summary>
            Rounds the fractional portion of a numeric value up or down to produce an
            integer.
            </summary>
            <remarks>
            <p class="body">ROUND(value, number_of_digits)</p>
            <p class="body">Value is a numeric value or reference to a numeric value
            that you want to round up or down.</p>
            <p class="body">Number_of_digits specifies the precision at which rounding
            should occur. This will be the place value which UltraCalc examines to round
            up or down. By default, rounding occurs zero places right of the decimal point
            produces an integer.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRound.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRound.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRound.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRound.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPi">
            <summary>
            Returns the mathematical constant for the Greek letter, pi.
            </summary>
            <remarks>
            <p class="body">PI()</p>
            <p class="body">The mathematical constant pi represents the relationship
            between a circle's diameter and it's circumference. It is also the constant
            relating the square of a circle's radius with the surface area of the circle.
            It has a great many applications in mathematics, geometry, the sciences, and
            engineering.</p>
            <p class="body">The constant pi is a non-terminating decimal number, although
            UltraCalc approximates it to 15 significant digits of precision (3.14159265358979).</p>
            <p class="body">A common use of the PI function in UltraCalc is to convert
            a measurement in radians which is the form in which trigonometric functions
            take their arguments, and the more conventional degrees of arc. This conversion
            can be accomplished by multiplying the radian measurement by PI()/180. The
            following table describes some benchmarks for comparison between radians and
            degrees.</p>
            <table border="0">
            <thead>
            <th>Radians</th><th>Degrees</th><th>Turns of a wheel (common example)</th>
            </thead>
            <tbody>
            <tr><td>0</td><td>0</td><td>no turns</td></tr>
            <tr><td>PI/4</td><td>45</td><td>one-eighth turn</td></tr>
            <tr><td>PI/2</td><td>90</td><td>one-quarter turn</td></tr>
            <tr><td>PI</td><td>180</td><td>one-half turn</td></tr>
            <tr><td>2x PI</td><td>360</td><td>one complete turn</td></tr>
            <tr><td>3x PI</td><td>540</td><td>one and one-half turn</td></tr>
            </tbody>
            </table>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPi.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPi.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPi.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPi.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSqrt">
            <summary>
            Calculates the square root of a number.
            </summary>
            <remarks>
            <p class="body">SQRT(value)</p>
            <p class="body">Value is the numeric value or reference to a numeric
            value which you are calculating the square root of. Only real roots
            are supported, therefore if <em>value</em> is negative (which would
            produce an imaginary root) the SQRT() function will return an error
            value (#NUM!).</p>
            <p class="body">The square root is the number whose product, when
            the number is multiplied against itself (squared), is <em>value</em>.
            Note that it is possible to multiply two negative square roots to
            produce the same positive <em>value</em>. By convention, the SQRT()
            function only returns the positive root.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSqrt.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSqrt.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSqrt.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSqrt.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCos">
            <summary>
            Calculates the trigonometric cosine of a specified angle (measured in
            radians).
            </summary>
            <remarks>
            <p class="body">COS(value)</p>
            <p class="body">Value is the angle measured in radians for which you want
            to take the cosine. If your argument must be in degrees, multiply it by
            PI()/180 to convert it into radians.</p>
            <p class="body">The cosine is an sinusoidal function with a period of 2*PI()
            radians. It's value is always between 1 and -1. It behaves like the sine function,
            <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSin">SIN()</see>, with a phase shift (phi) of -PI()/4
            radians.</p>
            <p class="body">The cosine function value derives from the geometric ratio
            between the length of the adjacent (non-hypotenuse) leg to the hypotenuse of
            a right triangle, when the hypotenuse has a length of one. It is continuous
            because at intervals of PI() radians the length of the adjacent leg and the
            hypotenuse are equal.</p>
            <p class="body">Another way of looking at this function is to imagine the
            hypotenuse is the radius, r, of a unit circle centered on a Cartesian plane
            with x- and y- axes.  At any point on the edge of the unit circle, the
            hypotenuse makes an angle, theta, with the x-axis.  The cosine function
            value of the angle theta is the distance from the center of the circle
            to the point in the direction of the x-axis.  Applied in this fashion,
            the COS() function can be used to convert between Cartesian and Polar
            coordinate systems.</p>
            <p class="body">Both interpretations are equivalent because if you drop
            a line from a point on the unit circle that intersects the x-axis at a
            right angle you form a right triangle.</p>
            <p class="body">These trigonometric concepts appear frequently in many
            engineering, architectural and scientific applications.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCos.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCos.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCos.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCos.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionACos">
            <summary>
            Returns the angle (measured in radians) having the specified value of the trigonometric cosine function.
            </summary>
            <remarks>
            <p class="body">ACOS(value)</p>
            <p class="body">Value is the real number result of the cosine function taken of an angle you want
            to find. The legal values of the cosine function are from -1 to 1. An inverse cosine
            by default will return the normal angle from 0 up to PI. This is because there are
            several angles which may have an identical value of their cosine. For example, the
            angles -PI/2, PI/2, 3PI/2, etc., all have a cosine of zero. You can find alternate
            angles by adding (or subtracting) any multiple of PI radians to the normal angle
            returned by the inverse cosine function.</p>
            <p class="body">You can convert the result of the inverse cosine function from
            radians into degrees by multiplying it by 180/PI().</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionACos.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionACos.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionACos.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionACos.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCosh">
            <summary>
            Returns the angle (measured in radians) having the specified value of it's hyperbolic cosine function.
            </summary>
            <remarks>
            <p class="body">ACOSH(value)</p>
            <p class="body">Value is the hyperbolic cosine of some angle (measured in radians) that you want
            to find. As you might expect, the values of the hyperbolic cosine function (see the <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCosh">COSH</see> function)
            increase at a hyperbolic rate, but one consequence is that these ever larger changes in the hyperbolic
            cosine will correspond to ever smaller changes in the angle. This relationship is intrinsic to many of
            the mathematical and engineering applications of the inverse hyperbolic cosine function, such as when
            resistance or strain builds up on a body increasingly as it is rotated (hysteresis).</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCosh.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCosh.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCosh.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCosh.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSin">
            <summary>
            Calculates the trigonometric sine of a specified angle (measured in
            radians).
            </summary>
            <remarks>
            <p class="body">SIN(value)</p>
            <p class="body">Value is the angle measured in radians for which you want
            to take the cosine. If your argument must be in degrees, multiply it by
            PI()/180 to convert it into radians.</p>
            <p class="body">The sine is an sinusoidal function with a period of 2*PI()
            radians. It's value is always between 1 and -1.</p>
            <p class="body">The sine function value derives from the geometric ratio
            between the length of a right triangle's hypotenuse and the length of the
            opposite leg, when the hypotenuse has a length of one.  It is a continuous
            function because at intervals of PI() radians the length of the opposite
            leg and the hypotenuse are equal.</p>
            <p class="body">Another way of looking at this function is to imagine the
            hypotenuse is the radius, r, of a unit circle centered on a Cartesian plane
            with x- and y- axes.  At any point on the edge of the unit circle, the
            hypotenuse makes an angle, theta, with the x-axis.  The sine function
            value of the angle theta is the distance from the center of the circle
            to the point in the direction of the y-axis.  Applied in this fashion,
            the SIN() function can be used to convert between Cartesian and Polar
            coordinate systems.</p>
            <p class="body">Both interpretations are equivalent because if you drop a
            line from a point on the unit circle that intersects the y-axis at a right
            angle you form a right triangle.</p>
            <p class="body">These trigonometric concepts appear frequently in many
            engineering, architectural and scientific applications.</p>
            <seealso cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCos">COS()</seealso>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSin.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSin.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSin.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSin.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSinh">
            <summary>
            Calculates the hyperbolic sine of a specified angle measured in radians.
            </summary>
            <remarks>
            <p class="body">SINH(value)</p>
            <p class="body">Value is an angle measured in radians for which you want to
            calculate the hyperbolic sine. If your angle is measured in degrees, 
            multiply it by PI()/180 to convert into radians. </p>
            <p class="body">Many applications in mathematics and physics, for example
            determining the gravitational potential of a cylinder, make use of the
            hyperbolic sine function's characteristics.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSinh.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSinh.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSinh.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSinh.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionASin">
            <summary>
            Returns the angle (measured in radians) having the specified value of the trigonometric sine function.
            </summary>
            <remarks>
            <p class="body">ASIN(value)</p>
            <p class="body">Value is the sine value of the angle you want. Legal sine values are
            confined to real numbers from -1 to 1, inclusive.</p>
            <p class="body">The angle returned will be between -PI()/2 and PI()/2 radians. To convert
            this angle into degrees, multiply by PI()/180.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionASin.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionASin.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionASin.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionASin.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTan">
            <summary>
            Calculates the trigonometric tangent of a specified angle (measured in
            radians).
            </summary>
            <remarks>
            <p class="body">TAN(value)</p>
            <p class="body">Value is the angle measured in radians for which you want
            to take the tangent. If your argument must be in degrees, multiply it by
            PI()/180 to convert it into radians.</p>
            <p class="body">The tangent can have a value from -INF to +INF, however it
            is undefined at intervals of every PI()/2 radians +/- PI() radians.</p>
            <p class="body">The tangent function value derives from a well-known geometric
            ratio between the length of the opposite and the adjacent (non-hypotenuse) leg
            of a right triangle. All 3 angles inside of any triangle must add up to exactly
            PI() radians, and in a right triangle the angle opposite the hypotenuse must be
            PI()/2 radians. Given these facts, it is not possible for either of the other
            two angles within the triangle to reach PI()/2 radians themselves. If you choose
            an angle (other than the triangle's right angle) which approaches PI()/2 radians
            then the remaining angle must approach 0 radians. The tangent function value tells
            you in these circumstances how the leg of the right triangle opposite your angle
            approaches infinite length. These calculations have important applications in
            architecture and engineering.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTan.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTan.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTan.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTan.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTanh">
            <summary>
            Calculates the hyperbolic tangent of a specified angle measured in radians.
            </summary>
            <remarks>
            <p class="body">TANH(value)</p>
            <p class="body">Value is an angle measured in radians for which you want to
            calculate the hyperbolic tangent. If your angle is measured in degrees, 
            multiply it by PI()/180 to convert into radians. The hyperbolic tangent 
            has a range from -1 to 1.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTanh.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTanh.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTanh.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTanh.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATan">
            <summary>
            Calculates the normalized angle (measured in radians) which has the
            specified tangent function value.
            </summary>
            <remarks>
            <p class="body">ATAN(value)</p>
            <p class="body">Value is a number containing a tangent function value
            that you want to retrieve the angle of. This function returns an angle
            of between PI()/2 and -PI()/2. Although the tangent function is undefined
            for values of PI()/2 and -PI()/2, the return value of this function is
            rounded to these values if <em>Value</em> is +INF or -INF, respectively.</p>
            <p class="body">This function is sometimes referred to as the inverse
            tangent function or the arctangent.</p>
            <p class="body">The angle returned is the principal value, as
            there exist an uncountable number of alternative angles satisfying
            the requirement of having <em>Value</em> as their tangent function
            value, at regular intervals of +/- PI() to either side of this
            principal value.</p>
            <p class="body">If you require a result in degrees, multiply the
            arctangent by 180/PI().</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATan.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATan.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATan.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATan.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATan2">
            <summary>
            Calculates the angle made with the x-axis on a Cartesian coordinate
            plane by the specified (x, y) coordinates.
            </summary>
            <remarks>
            <p class="body">ATAN2(x_ordinate, y_abscissa)</p>
            <p class="body">X_ordinate is a number representing the distance along
            the x-axis of a Cartesian point. It may also be thought of as the
            adjacent leg of a right triangle, where the right angle is made by
            dropping a perpendicular line from (<em>x_ordinate</em>, <em>y_abscissa</em>)
            to the point (<em>x_ordinate</em>, 0) on the x-axis.</p>
            <p class="body">Y_abscissa is a number representing the distance along
            the y-axis of a Cartesian point. It may also be thought of as the
            opposite leg of the right triangle constructed above.</p>
            <p class="body">This variation on the arctangent (or inverse tangent function)
            calculates for you the angle, theta, made with the x-axis when you extend a
            line segment from the origin at (0, 0) to your specified coordinates at
            (<em>x_ordinate</em>, <em>y_abscissa</em>). This line segment can also be
            seen to be the hypotenuse of a right triangle, or the radius of the circle
            on which the point, (<em>x_ordinate</em>, <em>y_abscissa</em>), sits on
            the edge.  This function is another way of looking at the trigonometric
            tangent function value that is useful in many UltraCalc applications
            because it affords you a more convenient parameterization for some tasks,
            such as converting from Cartesian to Polar coordinate systems.</p>
            <p class="body">The return value of this function is within the range of
            PI()/2 and -PI()/2 measured in radians. If you need to convert this value
            into degrees then multiply the result by 180/PI().</p>
            <seealso cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATan">ATAN()</seealso>
            <seealso cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTan">TAN()</seealso>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATan2.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATan2.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATan2.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATan2.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFloor">
            <summary>
            Calculates the next lesser whole number for a specified numeric
            value.
            </summary>
            <remarks>
            <p class="body">FLOOR(value)</p>
            <p class="body">Value is a real numeric value to be rounded down
            to the next lesser whole number (also called an integer). FLOOR()
            behaves differently from the <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionInt">INT()</see>
            function because when <em>value</em> is negative, the "next lesser
            whole number" will be a number having greater magnitude (i.e., it
            becomes more negative.)</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFloor.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFloor.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFloor.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFloor.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCeiling">
            <summary>
            Returns the smallest whole number greater than or equal to the given number
            </summary>
            <remarks>
            <p class="body">
            CEILING(number)
            <p></p>
            Number   is the numeric value you want to round.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCeiling.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCeiling.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCeiling.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCeiling.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRand">
            <summary>
            Generates a pseudorandom number from zero up to (but not including) one.
            </summary>
            <remarks>
            <p class="body">RAND()</p>
            <p>The RAND() function will generate another pseudorandom number each time it
            is evaluated. It returns a fractional number on a unit basis, therefore
            you can use RAND() to produce numbers between 0 and <em>C</em> by multiplying
            the RAND() result by <em>C</em>. It follows that to produce a pseudorandom
            number between <em>A</em> and <em>B</em> you could translate the result by
            <em>A</em> like this:</p>
            <code>RAND() * ( [B] - [A] ) + [A]</code>
            <p class="body">The number generation of the RAND() function derives from the
            system clock, and therefore may not be entirely random. It should not be used
            for applications requiring cryptographically-strong randomness or uniform
            probability distributions.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRand.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRand.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRand.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRand.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLn">
            <summary>
            Calculates the natural logarithm of a specified numeric value.
            </summary>
            <remarks>
            <p class="body">LN(value)</p>
            <p class="body">Value is a real number to calculate the natural
            logarithm of. <em>Value</em> must be positive as the logarithm
            is undefined for negative values.</p>
            <p class="body">A natural logarithm is a special case of a logarithm
            having the base of Euler's Number, e (2.71828...). It is the inverse
            of the <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExp">EXP()</see> function.</p>
            <p class="body">Logarithms have many applications in mathematics,
            life and social sciences.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLn.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLn.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLn.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLn.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLog10">
            <summary>
            Calculates the logarithm (base 10) of a specified numeric value.
            </summary>
            <remarks>
            <p class="body">LOG10(value)</p>
            <p class="body">Value is a real number to calculate the decimal
            logarithm of. <em>Value</em> must be positive as the logarithm
            is undefined for negative values.</p>
            <p class="body">To specify your own base for a logarithm use the
            <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLog">LOG()</see> function. To calculate
            the natural logarithm use the <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLn">LN()</see>
            function.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLog10.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLog10.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLog10.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLog10.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLog">
            <summary>
            Calculates a logarithm for a specified numeric value to the
            specified base.
            </summary>
            <remarks>
            <p class="body">LOG(value, [base])</p>
            <p class="body">Value is a real number that you want to calculate the logarithm
            to <em>base</em> for. This number must be positive, as the logarithm
            is undefined for negative numbers.</p>
            <p class="body">Base is the base of the logarithm, which defaults to 10.</p>
            <p class="body">To calculate the natural logarithm (a logarithm to the base
            of Euler's Number, e) it is usually more convenient to call the <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLn">LN()</see>
            function.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLog.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLog.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLog.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLog.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPV">
            <summary>
            Calculates an investment's Net Present Value given it's expected rate or return and the cash flow
            represented as positive numeric values (income) and negative numeric values (payments).
            </summary>
            <remarks>
            <p class="body">NPV(discountRate, value1, value2, ..., valueN)</p>
            <p class="body">DiscountRate is the investment's expected rate of return over the life of the
            investment, expressed as a percentage growth (or decline) per payment period. In some applications
            this may be the fixed interest rate. This numeric value is used to discount cash flows paid into or
            received from the investment.</p>
            <p class="body">Value1, value2, ... valueN are any number of numeric values representing cash inflows
            (as positive numbers) or cash outflows (as negative numbers). These cash flows must occur at a fixed
            period (the same period at which the <em>discountRate</em> is expressed), although some cash flows
            may be zero. The order of the sequence is important, as <em>value1</em> is assumed to occur (<em>N</em>-1)
            periods before <em>valueN</em> and will have been able to accrue that much more interest at the assumed
            <em>discountRate</em>.</p>
            <p class="body">By convention, the NPV() assumes cash flows occur at the end of each period. Consequently,
            the NPV() represents the present value as of the date one period's length before the first cash flow, 
            <em>value1</em>, has been made. If you require flexibility in when cash flows occur (the beginning or
            end of each period), consider using the <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPV">PV()</see> function. However,
            it differs from NPV() in that NPV() allows cash flows of different amounts.</p>
            <p class="body">Only numeric values or text values convertible to numeric values may be passed to this
            function. If a column or range reference is passed as a <em>value</em> argument, only numeric values or
            text values convertible to numeric values are used.</p>
            <seealso cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIRR">IRR()</seealso>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPV.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPV.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPV.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPV.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPV.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFV">
            <summary>
            Calculates the future value of an annuity having fixed payments and assuming
            a fixed interest rate or rate of return.
            </summary>
            <remarks>
            <p class="body">FV(interestRate, nPeriod, payment, presentValue, paymentDue)</p>
            <p class="body">InterestRate is the assumed interest rate per period. The future
            value calculation assumes no change in the interest rate over the course of the
            investment. If you anticipate interest rate fluctuations, you should calculate
            the future value incrementally over shorter periods in which the interest rate
            is held constant. In some calculations, the <em>interestRate</em> may be
            synonymous with an investments' expected growth or rate of return per period.</p>
            <p class="body">NPeriod is the total number of payment periods in an annuity.
            Each payment is assumed to be of the same amount, and occur at regular fixed
            time intervals. A payment earlier in the annuity will be invested for a longer
            period of time and therefore would accrue more interest than a payment made
            later in the annuity.</p>
            <p class="body">Payment is a fixed amount invested in the annuity at each
            period. Use a negative number to represent an outflow of cash paid out, and a
            positive number to represent an inflow of cash received. Calculating a future
            value requires either a non-zero series of payments or a <em>presentValue</em>.</p>
            <p class="body">PresentValue is the value of the investment at the beginning of
            the annuity. It represents the discounted value of a series of future payments,
            which over time could be worth a greater amount because they have accrued interest.
            If the annuity has no present value, then you must specify a non-zero <em>payment</em>
            amount.</p>
            <p class="body">PaymentDue is a numeric value of either 1 or 0, and indicates whether
            payments are invested in the annuity at the beginning of each period (1) or at the end
            of each period (0).</p>
            <p class="body">The <em>interestRate</em> and <em>nPeriod</em> arguments determine the
            frequency of payments. If <em>interestRate</em> is given as an annual rate, and <em>nPeriod</em>
            is 1 then payments are once per year.  On the other hand, if <em>nPeriod</em> had been 4 then
            payments would occur quarterly. Please ensure you use consistent time values when specifying
            these arguments.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFV.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFV.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFV.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFV.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPV">
            <summary>
            Calculates an investment's present value by discounting what a series of fixed future payments is worth
            at a specified interest rate.
            </summary>
            <remarks>
            <p class="body">PV(interestRate, nPeriods, amount, futureValue, paymentDue)</p>
            <p class="body">InterestRate is the per-period rate of interest used to discount the future payments. For
            positive interest rates, the value of future payments diminishes (discounts) to what they are worth now.
            It is assumed you can reinvest the present value at <em>interestRate</em> to receive <em>futureValue</em>
            after <em>nPeriods</em>.</p>
            <p class="body">NPeriods are the total number of payment periods over the course of the annuity. If your
            retirement plan annuitizes in 35-years, and you make a fixed quarterly contribution into it, then you
            would use 35x4 or 140 as your total number of payment periods.</p>
            <p class="body">Amount is how much is paid (or received) each period. This <em>amount</em> must be constant
            over the course of the investment. If you need to calculate the Net Present Value of a series of variable
            payment amounts, then you should consider using the <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPV">NPV()</see> function.</p>
            <p class="body">FutureValue is the expected cash balance of the investment at culmination. If this argument
            is omitted, it will be assumed to be zero. In the common usage scenario of calculating loan repayments, a
            future value of zero represents having a zero liability when the loan is fully repaid. When specifying a
            zero future value, ensure that <em>amount</em> is non-zero (otherwise the loan could never be repaid). In
            retirement planning, you would normally estimate the future value you would like to have when you retire.
            </p>
            <p class="body">PaymentDue is a numeric value of either 1 or 0, and indicates whether
            payments are invested in the annuity at the beginning of each period (1) or at the end
            of each period (0).</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPV.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPV.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPV.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPV.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPmt">
            <summary>
            Calculates what the payment amount should be on a loan at a fixed interest rate requiring
            a fixed number of payments.
            </summary>
            <remarks>
            <p class="body">PMT(interestRate, nPeriods, presentValue, futureValue, paymentDue)</p>
            <p class="body">InterestRate is the interest rate for the loan.</p>
            <p class="body">NPeriods is the number of payments required to pay back the loan.</p>
            <p class="body">PresentValue is the current value of the loan (also called the principal),
            which is a lump sum that the future series of <em>nPeriods</em> payments (which accumulate
            interest at <em>interestRate</em>) is worth today.</p>
            <p class="body">FutureValue is the cash balance in the future (for a loan, this will typically
            be a loan liability balance of zero) following this series of fixed payments, accruing a fixed
            <em>interestRate</em>. If omitted, a default future value of 0 is used.</p>
            <p class="body">PaymentDue is a numeric value of either 1 or 0, and indicates whether
            payments are invested in the annuity at the beginning of each period (1) or at the end
            of each period (0).</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPmt.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPmt.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPmt.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPmt.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPer">
            <summary>
            Calculates an investment's number of payment periods when the payment frequency, amount,
            and interest rate are held steady.
            </summary>
            <remarks>
            <p class="body">NPER(interestRate, amount, presentValue, futureValue, paymentDue)</p>
            <p class="body">InterestRate is the rate of interest per payment period. This numeric
            value must be held fixed for the duration of the investment. If you must calculate
            financing based on changes in interest rate then you will need to break up the
            calculation into several stages over which the interest rate is held constant.</p>
            <p class="body">Amount is the payment amount due each period. This numeric value must
            be constant over the duration of the investment.</p>
            <p class="body">PresentValue is a discounted value or lump sum payment that if taken today
            and invested at the <em>interestRate</em> would be worth the same as this series of fixed
            payments in the future.</p>
            <p class="body">FutureValue is the value after the last payment has been made. If this
            numeric value is omitted it is assumed to be zero (since this function is normally used
            in calculating loan repayment you will reach zero liability when the loan is finally
            paid off.)</p>
            <p class="body">PaymentDue indicates whether payments come due at the beginning of each
            payment period (1) or at the end of each payment period (0). If left unspecified, the
            default is to assume <em>paymentDue</em> occurs at the end of each payment period.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPer.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPer.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPer.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPer.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEven">
            <summary>
            Rounds a positive number up and a negative number down to the nearest even integer.
            </summary>
            <remarks>
            <p class="body">
            EVEN(Number)
            <p></p>
            Number	is the value to round.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEven.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEven.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEven.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEven.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOdd">
            <summary>
            Rounds a positive number up and a negative number down to the nearest odd integer.
            </summary>
            <remarks>
            <p class="body">
            ODD(Number)
            <p></p>
            Number is the value to round.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOdd.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOdd.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOdd.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOdd.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPPmt">
            <summary>
            Calculates the principal portion of a payment due on an investment or loan with periodic, fixed payments
            and having a fixed rate of interest.
            </summary>
            <remarks>
            <p class="body">PPMT(interestRate, periodNumber, nPeriods, presentValue, futureValue, paymentDue)</p>
            <p class="body">InterestRate is a fixed rate of interest per period. This function assumes there
            is one payment made on each period, therefore in cases where you want to calculate quarterly or
            monthly payments you should adjust an annual <em>interestRate</em> accordingly by dividing it 
            by the number of payments per year.</p>
            <p class="body">PeriodNumber identifies the period of the current payment, where the first payment
            has the number 1. The <em>periodNumber</em> must not exceed the total number of periods (<em>nPeriods</em>).</p>
            <p class="body">NPeriods is the total number of payments over the course of this investment or loan.</p>
            <p class="body">PresentValue is the discounted value of this series of future payments, if you could take
            a lump sum payment today and invest it at the fixed <em>interestRate</em> until the future date when this
            investment or loan had been repaid.</p>
            <p class="body">FutureValue is the expected value of this series of payments after the last payment has
            been made, where all previous payments have been accumulating interest at the fixed <em>interestRate</em>.
            When omitted, such as when this function is used for calculating loan payments that reduce an outstanding
            liability, the future value is assumed to be zero.</p>
            <p class="body">PaymentDue is a numeric value indicating that payments are due at the beginning of each period (1)
            or at the end of each period (0).</p>
            <p class="body">The PPMT() function calculates the portion of a fixed payment attributed to principal. If you
            need to calculate the portion of a fixed payment repaying interest then use the <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIPmt">IPMT()</see>
            function. To calculate fixed payment amounts, use the <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPmt">PMT()</see> function.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPPmt.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPPmt.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPPmt.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPPmt.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIPmt">
            <summary>
            Calculates the interest portion of a payment due on an investment or loan with periodic, fixed payments
            and having a fixed rate of interest.
            </summary>
            <remarks>
            <p class="body">IPMT(interestRate, periodNumber, nPeriods, presentValue, futureValue, paymentDue)</p>
            <p class="body">InterestRate is a fixed rate of interest per period. This function assumes there
            is one payment made on each period, therefore in cases where you want to calculate quarterly or
            monthly payments you should adjust an annual <em>interestRate</em> accordingly by dividing it 
            by the number of payments per year.</p>
            <p class="body">PeriodNumber identifies the period of the current payment, where the first payment
            has the number 1. The <em>periodNumber</em> must not exceed the total number of periods (<em>nPeriods</em>).</p>
            <p class="body">NPeriods is the total number of payments over the course of this investment or loan.</p>
            <p class="body">PresentValue is the discounted value of this series of future payments, if you could take
            a lump sum payment today and invest it at the fixed <em>interestRate</em> until the future date when this
            investment or loan had been repaid.</p>
            <p class="body">FutureValue is the expected value of this series of payments after the last payment has
            been made, where all previous payments have been accumulating interest at the fixed <em>interestRate</em>.
            When omitted, such as when this function is used for calculating loan payments that reduce an outstanding
            liability, the future value is assumed to be zero.</p>
            <p class="body">PaymentDue is a numeric value indicating that payments are due at the beginning of each period (1)
            or at the end of each period (0).</p>
            <p class="body">The IPMT() function calculates the portion of a fixed payment attributed to interest. If you
            need to calculate the portion of a fixed payment repaying loan principal then use the <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPPmt">PPMT()</see>
            function. To calculate fixed payment amounts, use the <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPmt">PMT()</see> function.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIPmt.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIPmt.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIPmt.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIPmt.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLower">
            <summary>
            Converts a text value to all lowercase letters.
            </summary>
            <remarks>
            <p class="body">LOWER(text_value)</p>
            <p class="body">Text_value is a piece of text you want converted into lowercase. The invariant
            culture is used to translate characters, therefore this function may not be suitable for use
            with localizable text values.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLower.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLower.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLower.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLower.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUpper">
            <summary>
            Converts all lowercase letters in a text string to uppercase.
            </summary>
            <remarks>
            <p class="body">UPPER(text_value)</p>
            <p class="body">Text_value is the text you want to convert to uppercase. UPPER does not change characters in text that are not letters.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUpper.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUpper.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUpper.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUpper.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLeft">
            <summary>
            Gets the leftmost characters from a text value, up to the specified number of characters.
            </summary>
            <remarks>
            <p class="body">LEFT(text_value, num_chars)</p>
            <p class="body">Text_value is a piece of text or reference to some text starting with
            a substring you want to retrieve.</p>
            <p class="body">Num_chars indicate the number of characters retrieved from the beginning
            of <em>text_value</em>. An error value is returned if this argument is less than zero.
            If this argument exceeds the length of <em>text_value</em>, then all of <em>text_value</em>
            is retrieved. If omitted, the first character of <em>text_value</em> is retrieved.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLeft.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLeft.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLeft.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLeft.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRight">
            <summary>
            Gets the rightmost characters from a text value, up to the specified number of characters.
            </summary>
            <remarks>
            <p class="body">RIGHT(text_value, num_chars)</p>
            <p class="body">Text_value is a piece of text or reference to some text ending with
            a substring you want to retrieve.</p>
            <p class="body">Num_chars indicate the number of characters retrieved from the end
            of <em>text_value</em>. An error value is returned if this argument is less than zero.
            If this argument exceeds the length of <em>text_value</em>, then all of <em>text_value</em>
            is retrieved. If omitted, the last character of <em>text_value</em> is retrieved.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRight.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRight.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRight.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRight.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMid">
            <summary>
            Gets a specified number of characters from the middle of a text string, starting from a specified position in that string.
            </summary>
            <remarks>
            <p class="body">MID(text_value, starting_point, character_count)</p>
            <p class="body">Text_value is a piece of text containing the substring you want to retrieve, when you know
            the position and length of your desired substring.</p>
            <p class="body">Character_count specifies how long of a substring to retrieve from <em>text_value</em>
            measured as a number of characters. If the requested length, when added to the specified <em>starting_point</em>,
            exceeds the length of <em>text_value</em> then the remainder of the string starting at <em>starting_point</em>
            is returned.</p>
            <p class="body">Starting_point is the one-based position within <em>text_value</em> of the first character
            in the substring you want to retrieve. If this argument exceeds the length of <em>text_value</em> then the
            function will return an empty string.</p>
            <p class="body">If either <em>character_count</em> or <em>starting_point</em> has a negative value, or
            evaluate to an error value, then the function returns an error value.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMid.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMid.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMid.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMid.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrim">
            <summary>
            Removes any leading or trailing spaces from a text value, and normalizes runs of
            whitespace within a text value. 
            </summary>
            <remarks>
            <p class="body">TRIM(text_value)</p>
            <p class="body">Text_value is a piece of text to trim and normalize the white
            space of. Trimming removes all leading and trailing white space. Normalization
            reduces runs of consecutive whitespace appearing within the <em>text_value</em>
            to single blank spaces.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrim.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrim.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrim.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrim.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLen">
            <summary>
            Counts the number of characters in a text value.
            </summary>
            <remarks>
            <p class="body">LEN(text_value)</p>
            <p class="body">Text_value is any text string or reference to a text value
            for which you want a character count. The number of characters, including
            all whitespace, determines the length of the text string.</p>
            <p class="body">Depending on the character encoding used, some whitespace
            characters such as line-breaks may count as two characters (one character
            is a carriage return, the other character is a line feed).</p>
            <p class="body">An empty text string contains no characters.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLen.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLen.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLen.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLen.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionValue">
            <summary>
            Retrieves the numeric value of a piece of text that is supposed to
            represent either a number or a currency.
            </summary>
            <remarks>
            <p class="body">VALUE(text_value)</p>
            <p class="body">Text_value is any text value or single-value reference to
            a text string that you want to convert into a number. It may have been
            formatted with a sign, currency symbol, or thousands separator. These
            characters will be stripped to yield the numeric value of the text.</p>
            <p class="body">If the <em>text_value</em> is an error value or could not
            be converted into a numeric value then the function returns an error value.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionValue.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the argument on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <remarks>
            <p class="body">Returns an error if the <b>UltraCalcValue</b> argument at the top of the number stack was an error.</p>
            <p class="body">Returns a value conversion into a double-precision numeric type if the incoming text can be interpreted as a numeric value (possibly after filtering off thousands separators, decimal separators, currency symbols, exponents and signs.)</p>
            <p class="body">Returns a numeric conversion from another numeric type if the incoming argument was not text (sometimes when the result of such a conversion is poorly defined this may defy an application's expectations, for example, a <b>DATEVALUE</b> may convert into a numeric value of ticks.)</p>
            </remarks>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionValue.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionValue.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionValue.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFind">
            <summary>
            Finds one piece of text within another piece of text.
            </summary>
            <remarks>
            <p class="body">FIND(text_to_find, text_to_search, starting_point)</p>
            <p class="body">Text_to_find is the piece of text you want to find. It can
            be a reference (for example, a NamedReference to a constant text string or
            a CalcSettings reference to a TextBox on the form). It should be shorter in
            length than the <em>text_to_search</em>.</p>
            <p class="body">Text_to_search is the piece of text you want to search for
            <em>text_to_find</em> within. It's commonly a reference to a text string
            that you want to search.</p>
            <p class="body">Starting_point is the one-based character position inside of 
            <em>text_to_search</em> at which UltraCalc will begin searching. This argument
            is optional and if omitted, the search will begin at the first character.</p>
            <p class="body">If <em>text_to_find</em> is not found this function returns
            a Value error, otherwise it returns the starting position of <em>text_to_find</em>
            within <em>text_to_search</em>.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFind.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFind.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFind.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFind.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionReplace">
            <summary>
            Replaces a substring of a text value with some new text. This substring is specified by giving
            it's starting point and it's length in characters, within the original text value.
            </summary>
            <remarks>
            <p class="body">REPLACE(text_value, starting_point, character_count, new_text_value)</p>
            <p class="body">Text_value is the original text within which you want to replace some substring of text,
            and you already know the <em>starting_point</em> and <em>character_count</em> of that substring.</p>
            <p class="body">Starting_point is the one-based position within <em>text_value</em> where the replaced
            substring begins.</p>
            <p class="body">Character_count is the length of the substring being replaced as a count of the characters
            it contains. If this value when added to <em>starting_point</em> would exceed the length remaining in
            <em>text_value</em> then the entire remainder of <em>text_value</em> is replaced.</p>
            <p class="body">New_text_value is some new text that replaces the text of the specified substring. It is
            not required to be the same length as the replaced substring.</p>
            <p class="body">When <em>starting_point</em> or <em>character_count</em> are error values, or less than zero,
            an error value is returned. If <em>starting_point</em> exceeds the length of <em>text_value</em> then an error
            value is returned.</p>
            <p class="body">It is possible to use the REPLACE() function with other UltraCalc functions to express the
            replacement of one substring with another. The following UltraCalc expression replaces the word "Old" with
            the word "New" in the original text value.</p>
            <code>REPLACE("Hello Old World", FIND("Old"), LEN("Old"), "New")</code>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionReplace.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionReplace.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionReplace.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionReplace.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSYD">
            <summary>
            Calculates depreciation of an asset using the sum of years' digits (SYD)
            calculation method.
            </summary>
            <remarks>
            <p class="body">SYD(assetCost, salvageValue, lifespan, periodNumber)</p>
            <p class="body">AssetCost is the initial value of the asset
            when it was purchased new. This numeric value needs to be
            greater than the <em>salvageValue</em> (otherwise the asset
            would be appreciating in value).</p>
            <p class="body">SalvageValue is the market price you can get
            for an asset at the end of it's useful life (<em>lifespan</em>
            periods). In some situations, this may represent the value of
            the asset's spare parts.</p>
            <p class="body">Lifespan is the useful life of the asset being
            depreciated measured in fixed-length time periods (usually years).
            The appropriate <em>lifespan</em> to use may vary with the kind
            of asset being depreciated. As the name of this function suggests,
            the <em>lifespan</em> when using this depreciation method is normally
            measured in years (although this does not necessarily have to be the
            case).</p>
            <p class="body">PeriodNumber is the one-based number of the period
            to calculate the depreciation of the asset for, having a value of
            between 1 and <em>lifespan</em>. It must be measured in the same
            units of time as the <em>lifespan</em>.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSYD.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSYD.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSYD.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSYD.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSLN">
            <summary>
            Calculates what the straight-line depreciation
            of an asset should be per period.
            </summary>
            <remarks>
            <p class="body">SLN(assetCost, salvageValue, lifespan)</p>
            <p class="body">AssetCost is the initial value of the asset
            when it was purchased new. This numeric value needs to be
            greater than the <em>salvageValue</em> (otherwise the asset
            would be appreciating in value).</p>
            <p class="body">SalvageValue is the market price you can get
            for an asset at the end of it's useful life (<em>lifespan</em>
            periods). In some situations, this may represent the value of
            the asset's spare parts.</p>
            <p class="body">Lifespan is the useful life of the asset being
            depreciated measured in fixed-length time periods (usually years).
            The appropriate <em>lifespan</em> to use may vary with the kind
            of asset being depreciated.</p>
            <p class="body">Straight-line depreciation expresses an asset's
            depreciation at a constant rate per period. The asset is assumed
            to lose useful value no faster in the first period depreciation
            is calculated than in the last period. An accountant can advise
            you as to which assets the straight-line depreciation calculation
            method is suitable.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSLN.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSLN.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSLN.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSLN.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDB">
            <summary>
            Calculates an asset's depreciation using the fixed declining balance (DB) method over a specified term.
            </summary>
            <remarks>
            <p class="body">DB(assetCost, salvageValue, lifespan, period, months)</p>
            <p class="body">AssetCost is the original cost or purchase price of the asset at the start of the
            calculation.</p>
            <p class="body">SalvageValue is the market value of the asset after it's expected useful life ends,
            sometimes this will be the value of the asset as spare parts.</p>
            <p class="body">Lifespan indicates for how many periods the asset is useful (it's useful life), and
            must be depreciated. Accounting standards vary on what <em>lifespan</em> is appropriate for different
            classes of assets, such as durable and non-durable goods.</p>
            <p class="body">Period indicates the number of units of time between decremental calculations of the
            depreciation. If <em>lifespan</em> is measured in years, then the value specified for the <em>period</em>
            must also be in years.</p>
            <p class="body">Months allows you to specify the number of months in the first year, if the depreciation
            does not begin on the first day of the year. You might specify <em>months</em> based on when the asset
            was purchased new. If omitted, the calculation defaults to 12 which is equivalent to calculating starting
            from the first day of the year.</p>
            <p class="body">For some assets, alternative calculation methods such as the <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDDB">DDB()</see>
            function may be more appropriate. Your accountant can tell you for which assets the fixed declining
            balance method is an acceptable means of calculating depreciation.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDB.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDB.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDB.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDB.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDDB">
            <summary>
            Calculates an asset's depreciation using the double declining balance (DDB) or another weighted
            factor method over a specified term.
            </summary>
            <remarks>
            <p class="body">DDB(assetCost, salvageValue, lifespan, period, weight)</p>
            <p class="body">AssetCost is the original cost or purchase price of the asset at the start of the
            calculation.</p>
            <p class="body">SalvageValue is the market value of the asset after it's expected useful life ends,
            sometimes this will be the value of the asset as spare parts.</p>
            <p class="body">Lifespan indicates for how many periods the asset is useful (it's useful life), and
            must be depreciated. Accounting standards vary on what <em>lifespan</em> is appropriate for different
            classes of assets, such as durable and non-durable goods.</p>
            <p class="body">Period indicates the number of units of time between decremental calculations of the
            depreciation. If <em>lifespan</em> is measured in years, then the value specified for the <em>period</em>
            must also be in years.</p>
            <p class="body">Weight allows you to fine tune the calculation method. By default, the double declining
            balance method uses a factor of 2.</p>
            <p class="body">For some assets, alternative calculation methods such as the <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDB">DB()</see>
            function may be more appropriate. Your accountant can advise you for which assets the double declining
            balance method is an acceptable means of calculating depreciation, and what factors can be used when
            depreciating certain assets such as high-tech equipment or motor vehicles which exhibit accelerated
            depreciation in their first years of use.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDDB.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDDB.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDDB.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDDB.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIntRate">
            <summary>
            Calculates the interest rate yielded by a security
            investment redeemable at a future date, such as a
            zero coupon bond.
            </summary>
            <remarks>
            <p class="body">INTRATE(settlementDate, maturityDate,
            amount, redemptionValue, basis)</p>
            <p class="body">SettlementDate is the date on which a
            security purchase is settled with the buyer taking
            possession of the security. Market conventions for
            settlement of trades vary by security and exchange.
            The settlement date may be substantially later than
            a security's issue date when it is traded on the
            secondary market.</p>
            <p class="body">MaturityDate is the date when the
            security can be redeemed. It ceases to accrue any
            further value after this date. The maturity date
            must be later than the <em>settlementDate</em> or
            an error value is returned.</p>
            <p class="body">Amount is the purchase price of the
            security. For positive interest, this amount will be
            smaller than the <em>redemptionValue</em> because it
            discounts interest that will be accrued over the time
            period the security is held.</p>
            <p class="body">RedemptionValue is the price a security
            holder may redeem their security for at the <em>maturityDate</em>.
            In some cases, this may be called the face value of the
            security.</p>
            <p class="body">Basis describes what accounting convention to
            use when counting days per calendar year, and days on which
            interest can accrue. If omitted, a basis consistent with
            United States National Association of Security Dealers (NASD)
            of 30/360 will be employed.</p>
            <table>
            <colgroup><col width="100px"/><col width="240px"/></colgroup>
            <tr><th>Basis</th><th>Day counting method</th></tr>
            <tr><td>0</td><td>30/360 (US NASD)</td></tr>
            <tr><td>1</td><td>Actual/actual</td></tr>
            <tr><td>2</td><td>Actual/360</td></tr>
            <tr><td>3</td><td>Actual/365</td></tr>
            <tr><td>4</td><td>30/360 (European)</td></tr>
            </table>
            <p class="body">Date values should be passed to this function using either the
            <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDate">DATE()</see> function or <strong>UltraCalcValue</strong>
            objects containing .NET <strong>DateTime</strong> values. Date values represented
            as text may not be interpreted as you had intended.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIntRate.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIntRate.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIntRate.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIntRate.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateValue">
            <summary>
            Returns the .NET DateTime of the time represented by date formated in a string
            </summary>
            <remarks>
            <p class="body">
            DATEVALUE(date_text)
            <p></p>
            Date_text is text that represents a date in a .NET DateTime format
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateValue.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateValue.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateValue.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateValue.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDate">
            <summary>
            Returns the .NET DateTime ticks number that represents a particular date
            </summary>
            <remarks>
            <p class="body">
            DATE(year,month,day)
            <p></p>
            Year is the number representing the year 
            <p></p>
            Month is a number representing the month of the year
            <p></p>
            Day is a number representing the day of the month
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDate.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDate.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDate.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDate.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDays360">
            <summary>
            Returns the number of days between two dates based on a 360-day year (twelve 30-day months), which is used in some accounting calculations.
            </summary>
            <remarks>
            <p class="body">
            DAYS360(start_date,end_date,method)
            <p></p>
            Start_date and end_date are the two dates between which you want to know the number of days. 
            <p></p>
            If start_date occurs after end_date, DAYS360 returns a negative number. 
            Dates should be entered by using the DATE function, or as results of other formulas or functions. 
            For example, use DATE(2008,5,23) for the 23rd day of May, 2008. Problems can occur if dates are entered as text.
            <p></p>
            Method is a logical value that specifies whether to use the U.S. or European method in the calculation:
            <p></p><t></t>
            FALSE or omitted U.S. (NASD) method. If the starting date is the 31st of a month, it becomes equal to the 30th of the same month. If the ending date is the 31st of a month and the starting date is earlier than the 30th of a month, the ending date becomes equal to the 1st of the next month; otherwise the ending date becomes equal to the 30th of the same month. 
            <p></p><t></t>
            TRUE European method. Starting dates and ending dates that occur on the 31st of a month become equal to the 30th of the same month. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDays360.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDays360.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDays360.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDays360.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDay">
            <summary>
            Returns the day of a date value
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDay.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDay.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDay.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDay.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMonth">
            <summary>
            Returns the month of a date value
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMonth.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMonth.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMonth.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMonth.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionYear">
            <summary>
            Returns the year of a date value
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionYear.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionYear.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionYear.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionYear.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHour">
            <summary>
            Returns the hour of a time value
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHour.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHour.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHour.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHour.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinute">
            <summary>
            Returns the minute of a time value
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinute.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinute.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinute.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinute.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSecond">
            <summary>
            Returns the second of a time value
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSecond.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSecond.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSecond.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSecond.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNow">
            <summary>
            Returns a .NET DateTime ticks value of the current day and time
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNow.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNow.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNow.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNow.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTimeValue">
            <summary>
            Returns the .Net DateTime of the time represented by time formated in a string
            </summary>
            <remarks>
            <p class="body">
            TIMEVALUE(time_text)
            <p></p>
            Time_text is text that represents a date in the .NET DateTime format
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTimeValue.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTimeValue.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTimeValue.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTimeValue.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTime">
            <summary>
            Returns the .NET DateTime ticks value that represents a particular time
            </summary>
            <remarks>
            <p class="body">
            TIME(hour,minute,second)
            <p></p>
            Hour is a number representing the time's hour
            <p></p>
            Minute is a number representing the time's minute
            <p></p>
            Second is a number representing the time's second
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTime.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTime.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTime.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTime.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMedian">
            <summary>
            Calculates the median value of a specified list of numeric values.
            </summary>
            <remarks>
            <p class="body">MEDIAN(Value1, value2, ..., valueN)</p>
            <p class="body">Value1, value2, ..., valueN are any number of numeric values or references to
            numeric values for which you want the median value found. If any argument is an error value,
            or there are no numeric values within the series of arguments, then MEDIAN() will return an
            error value.</p>
            <p class="body">The median is the middle value of the sorted list of numeric values (you do
            not need to sort <em>Value1</em>, <em>value2</em>, ..., <em>valueN</em> prior to passing them
            to the MEDIAN() function). When the list contains an odd number of values, the median will be
            the value at position CEIL(<em>N</em>/2). For example, the median of the 5-value list 0, 20,
            30, 50, 80, is the value in the third position: 30. When the list contains an even number of
            values, the median will be the average of the two values in the middle. For example, the
            median of the 4-value list 7, 20, 30, 45, is the average of the two middle elements (20 and
            30): 25. Note that the value of the MEDIAN() varies most from the arithmetic mean of the
            sorted list when the distribution of values tends to favor one side or the other of that
            arithemtic mean. For example, the arithmetic mean of the 5-value list 1, 2, 3, 21, 43 is
            14 but it's median value is 3.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMedian.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMedian.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMedian.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMedian.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMedian.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionVar">
            <summary>
            Calculates the estimated variance for a specified sampling of numeric values.
            </summary>
            <remarks>
            <p class="body">VAR(Value1, value2, ..., valueN)</p>
            <p class="body">Value1, value2, ..., valueN are any number of numeric values or
            references to numeric values you provide to specify a sampling of your larger
            data population. If any argument contains an error value or there arte no numeric
            values in the sampling, the VAR() function evaluates to the first error value it
            encounters.</p>
            <p class="body">Variance is a measure of statistical variability, and is used in
            statistical studies based on small samplings from much larger data populations to
            draw inferences about the variability of those data populations.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionVar.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionVar.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionVar.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionVar.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionVar.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionStdev">
            <summary>
            Calculates an approximate standard deviation of a specified sampling of numeric
            values.
            </summary>
            <remarks>
            <p class="body">STDEV(Value1, value2, ..., valueN)</p>
            <p class="body">Value1, value2, ..., valueN are any number of numeric values or references
            to numeric values that you've given to provide a sample space of your data set. If any value
            contains an error, then the function evaluates to the first error encountered. An error value
            is returned if the sample space contains no numeric values.</p>
            <p class="body">The standard deviation is used in statistical studies to make inferences about
            a larger population of data based on sampling only a subset. For well chosen samplings, a small
            standard deviation indicates most data points tend to cluster within a narrow range of values.
            A larger standard deviations indicates greater variability in the data points, and that there
            is a higher likelihood for values to occur farther away and/or more frequently away from the
            expected norm.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionStdev.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionStdev.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionStdev.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionStdev.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionStdev.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionType">
            <summary>
            Returns the underlying UltraCalc data type for the specified value.
            </summary>
            <remarks>
            <p class="body">TYPE( value)</p>
            <p class="body">Value is an <strong>UltraCalcValue</strong> object or
            the result of evaluating an UltraCalc expression.</p>
            <p class="body">
            <table border="0">
            <colgroup><col width="160px"/><col width="160px"/></colgroup>
            <thead><th>UltraCalc data type:</th><th>TYPE function returns:</th></thead>
            <tbody>
            <tr><td>Number</td><td>1</td></tr>
            <tr><td>Text</td><td>2</td></tr>
            <tr><td>Boolean</td><td>4</td></tr>
            <tr><td>Error</td><td>16</td></tr>
            </tbody>
            </table>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionType.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionType.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionType.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionType.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErrorType">
            <summary>
            When an error value is returned, the ERRORTYPE function returns a
            numeric value corresponding to the UltraCalcErrorCode enumeration.
            </summary>
            <remarks>
            <p class="body">ERRORTYPE(error_value)</p>
            <p class="body">Error_value is an UltraCalc error value resulting
            from the unsuccessful evaluation of an expression.</p>
            <p class="body">The ERRORTYPE function returns an error value of
            #N/A (Not Applicable) if you pass it an UltraCalc value that was
            not an error value.</p>
            <p class="body">
            <table border="0">
            <thead>
            <th>Error_value</th>
            <th>ERRORTYPE returns</th>
            </thead>
            <tbody>
            <tr><td>#NULL!</td><td>1</td></tr>
            <tr><td>#DIV/0!</td><td>2</td></tr>
            <tr><td>#VALUE!</td><td>3</td></tr>
            <tr><td>#REF!</td><td>4</td></tr>
            <tr><td>#NAME?</td><td>5</td></tr>
            <tr><td>#NUM!</td><td>6</td></tr>
            <tr><td>#N/A!</td><td>7</td></tr>
            </tbody>
            </table>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErrorType.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErrorType.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErrorType.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErrorType.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNa">
            <summary>
            Returns #N/A!, the error value representing a not applicable result.
            </summary>
            <remarks>
            <p class="body">NA()</p>
            <p class="body">The NA function always returns the same constant
            error value.</p>
            <p class="body">You might use this function when you wanted an IF
            function or other complex UltraCalc expression to return the #N/A!
            error value.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNa.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNa.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNa.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNa.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsBlank">
            <summary>
            Returns TRUE if the specified value is blank.
            </summary>
            <remarks>
            <p class="body">ISBLANK(value)</p>
            <p class="body">Value can be any constant, reference or the result of
            evaluating an UltraCalc expression.</p>
            <p class="body">The definition of what constitutes "blank" is anything
            that causes the <strong>IsNull</strong> method of the <strong>UltraCalcValue</strong>
            object containing the argument, value, to return TRUE. This may vary
            for different kinds of <strong>UltraCalcValue</strong> object.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsBlank.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsBlank.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsBlank.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsBlank.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsErr">
            <summary>
            Returns TRUE if the specified value is any error value, except #N/A!
            </summary>
            <remarks>
            <p class="body">ISERR(value)</p>
            <p class="body">Value is an <strong>UltraCalcValue</strong> object (perhaps
            the result of evaluating an UltraCalc expression) thought to be an error
            value. The ISERR function will return FALSE when value is not an error
            value, or it is an error but the error value was not applicable.</p>
            <p class="body">This is a weaker variation of the more stringent
            <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsError">ISERROR</see> function.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsErr.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsErr.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsErr.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsErr.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsError">
            <summary>
            Returns TRUE if the specified value is any error value without exception.
            </summary>
            <remarks>
            <p class="body">ISERROR(value)</p>
            <p class="body">Value is an <strong>UltraCalcValue</strong> object (perhaps
            the result of evaluating an UltraCalc expression) thought to be an error
            value. The ISERROR function will return FALSE only when value is not an
            error value.</p>
            <p class="body">A more relaxed variation of this function is the
            <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsErr">ISERR</see> function, which
            returns TRUE when an error value is not applicable. The ISERROR
            function treats this case as being an error. If you are using
            certain UltraCalc functions then sometimes error values of #N/A!
            should be treated by your application as non-errors and you
            should choose ISERR instead of ISERROR.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsError.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsError.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsError.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsError.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsLogical">
            <summary>
            Returns TRUE if the specified value refers to a two-state logic
            or Boolean value.
            </summary>
            <remarks>
            <p class="body">ISLOGICAL(value)</p>
            <p class="body">Value is an <strong>UltraCalcValue</strong> object,
            or the result of evaluating an UltraCalc expression, which is thought
            to be a boolean value (TRUE or FALSE.) Boolean values are named in
            honor of George Boole, whose development of Boolean algebra governs
            the special characteristics of logical functions upon these two
            values.</p>
            <p class="body">Depending on the kind of value, it may not be convertible
            into a boolean value and therefore the ISLOGICAL function returns FALSE.
            The ISLOGICAL function only furnishes information about the compatibility
            of a value with the boolean-typed values evaluated by UltraCalc.</p>
            <p class="note">The ISLOGICAL function does not perform deductive reasoning.
            A return value of TRUE should not be interpreted as proof any value or UltraCalc
            expression passed to the ISLOGICAL function represents a logical outcome.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsLogical.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsLogical.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsLogical.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsLogical.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNa">
            <summary>
            Returns TRUE if an error value is #N/A (not applicable.)
            </summary>
            <remarks>
            <p class="body">ISNA(value)</p>
            <p class="body">Value is an error value thought to be the error value
            returned when an error has happened, but the error code was not applicable.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNa.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNa.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNa.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNa.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNonText">
            <summary>
            Returns TRUE if the specified value refers to any not-text value.
            </summary>
            <remarks>
            <p class="body">ISNONTEXT( value)</p>
            <p class="body">Value is an <strong>UltraCalcValue</strong> object
            or the result of an UltraCalc expression evaluation that you want
            to test to determine whether it is a text value (such as a .NET
            <strong>String</strong> object) or a non-text value.</p>
            <seealso cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsText">ISTEXT function</seealso>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNonText.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNonText.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNonText.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNonText.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNumber">
            <summary>
            Returns TRUE if the specified value refers to a numeric value.
            </summary>
            <remarks>
            <p class="body">ISNUMBER( value)</p>
            <p class="body">Value is an <strong>UltraCalcValue</strong> or the
            result of evaluating an UltraCalc expression that you want to test
            to determine whether it is a number or not. A numeric value can be
            an integer, floating-point or decimal number.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNumber.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNumber.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNumber.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNumber.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsRef">
            <summary>
            Returns TRUE if the specified value is an UltraCalc reference.
            </summary>
            <remarks>
            <p class="body">ISREF( reference)</p>
            <p class="body">Reference is an <strong>UltraCalcValue</strong>
            object that contains a reference to some application-specific
            control, field, or piece of information. You can think of it as
            an address which the UltraCalc engine uses to look-up a value
            in your application when one is needed to evaluate an expression.
            </p>
            <p class="body">The ISREF function returns TRUE when the specified
            <strong>UltraCalcValue</strong> is a reference. Since it's value
            is defined by the contents at another referenced location, it's
            possible for this <strong>UltraCalcValue</strong> object to change
            in value based on changes in your application (outside of the
            UltraCalc engine.) Proper implementation of the <strong>IUltraCalcReference</strong>
            interface and <strong>NotifyValueChange</strong> methods will ensure the
            UltraCalc engine is made aware of any changes in a referenced value,
            and that all references depending on this value are refreshed.</p>
            <p class="body">Conversely, the ISREF function will return FALSE
            should the <strong>UltraCalcValue</strong> you supply represent
            a constant value or the temporary result of evaluating an UltraCalc
            expression (a constant value sitting at the top of the UltraCalc
            engine's number stack.)</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsRef.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsRef.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsRef.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsRef.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsText">
            <summary>
            Returns TRUE if the specified value refers to a text (or string) value.
            </summary>
            <remarks>
            <p class="body">ISTEXT(value)</p>
            <p class="body">Value is an <strong>UltraCalcValue</strong> object or
            the result of evaluating an UltraCalc expression that you want to test
            to determine whether it is of a text (<em>e.g.</em>, string) value or
            a non-text value (which could be a numeric, boolean, or error value.)
            </p>
            <seealso cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNonText">ISNONTEXT function</seealso>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsText.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsText.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsText.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsText.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsEven">
            <summary>
            Returns TRUE if the specified value is an even number.
            </summary>
            <remarks>
            <p class="body">ISEVEN(value)</p>
            <p class="body">Value is a number thought to be even (divisible by the
            integer 2.) A value that is not an integer will first be converted to
            an integer using the <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFloor">FLOOR</see>
            function before evaluation.</p>
            <seealso cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsOdd">ISODD function</seealso>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsEven.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsEven.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsEven.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsEven.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsOdd">
            <summary>
            Returns TRUE if the specified value is an odd number.
            </summary>
            <remarks>
            <p class="body">ISODD(value)</p>
            <p class="body">Value is a number thought to be odd (not divisible by
            the integer 2.) A value that is not an integer will first be converted
            to an integer using the <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFloor">FLOOR</see>
            function before evaluation.</p>
            <seealso cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsEven">ISEVEN function</seealso>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsOdd.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsOdd.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsOdd.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsOdd.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIRR">
            <summary>
            Calculates an internal rate of return for a given series of cash flows represented by either positive (incoming) or
            negative (outgoing) numeric values.
            </summary>
            <remarks>
            <p class="body">IRR(value_reference, estimate)</p>
            <p class="body">Value_reference must be a column or range reference of numeric values representing cash outflows
            (payments) as negative numeric values, and cash inflows (income) as positive numeric values. Each cash flow must
            occur with a regular period. If payments occur at irregular intervals, then you must represent the cash flow periods
            as taking place on a period common to all cash flows, and at intervals without a cash flow specify a zero value. 
            For example, if you finance the purchase of a television by taking a $300 loan with monthly payments of $110, but
            your payments do not start for three months, your series of cash flows would be monthly but would show three zero
            values for the months without payments (+300, 0, 0, 0, -110, -110, -110).</p>
            <p class="body">Estimate is an approximation close to what you expect the resulting internal rate of return to
            be. This function employs an iterative algorithm starting with this estimate and then repeatedly converging on
            a result that has a diminishing margin of error. If you do not provide an <em>estimate</em> then this function
            uses 10 percent as it's starting point.</p>
            <p class="body">If after twenty iterations the margin of error has not closed to within 1/1000 basis point then
            a #NUM error value will be returned.</p>
            <p class="body">The IRR() function has applications where you may be given a series of cash flows without an
            interest rate, such as in the retail financing example above, and wish to calculate what it's effective rate
            of interest would be. The internal rate is based on the period between cash flows, therefore when calculating
            payments that are not annual, you must annualize the internal rate.</p>
            <seealso cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPV">NPV()</seealso>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIRR.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIRR.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIRR.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIRR.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIRR.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRate">
            <summary>
            Calculates the per-period interest rate for a series of cash flows (an annuity).
            </summary>
            <remarks>
            <p class="body">RATE(nPeriods, amount, presentValue, paymentDue, futureValue, estimate)</p>
            <p class="body">NPeriods are the total number of cash flows, whether a payment (negative <em>amount</em>)
            or a receipt (positive <em>amount</em>) occuring periodically with a fixed time period between each cash
            flow.</p>
            <p class="body">Amount is the amount of cash paid (negative) or received (positive). It must be held
            constant over the course of the annuity.</p>
            <p class="body">PresentValue is the value today of the series of future payments. Payments made in the
            future are discounted by the interest rate being calculated, because it is assumed that at that interest
            rate a smaller sum could be invested today and would grow to the <em>amount</em> at a future time when
            that payment became due.</p>
            <p class="body">PaymentDue indicates whether cash flows occur at the beginning of each period (1) or at
            the end of each period (0). If not specified, the payments at the end of each period is assumed.</p>
            <p class="body">FutureValue is the accumulated balance attained after <em>nPeriods</em> payments have
            been made and accrued interest at the calculated rate. If left unspecified, the default future value
            is assumed to be zero (this represents reaching zero loan liability, when a loan has been fully repaid).
            </p>
            <p class="body">Estimate is an approximation of the interest rate used to start the calculation (which
            works by iteratively refining the <em>estimate</em> until it converges on the correct value). When no
            <em>estimate</em> is given a default of 10% is assumed.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRate.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRate.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRate.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRate.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNull">
            <summary>
            Returns a boolean indicating if the value is null (Nothing in VB).
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNull.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNull.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNull.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNull.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNull">
            <summary>
            Returns a null value (Nothing in VB)
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNull.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNull.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNull.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNull.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsDBNull">
            <summary>
            Returns a boolean indicating if the value is DBNull.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsDBNull.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsDBNull.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsDBNull.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsDBNull.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDBNull">
            <summary>
            Returns DBNull
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDBNull.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDBNull.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDBNull.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDBNull.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateAdd">
            <summary>
            Returns a <see cref="T:System.DateTime"/> value resulting from adding a specified interval to a DateTime.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateAdd.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateAdd.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateAdd.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateAdd.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateDiff">
            <summary>
            Returns a value specifying the number of time intervals between two DateTime values.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateDiff.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateDiff.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateDiff.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateDiff.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionChar">
            <summary>
            Returns the character specified by the code number from the character set for your computer.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionChar.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionChar.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionChar.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionChar.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCode">
            <summary>
            Gives you the numeric code corresponding the the first character in a
            specific text string.
            </summary>
            <remarks>
            <p class="body">CODE(Text)</p>
            <p class="body">Text is a text string of at least one character in length.
            This function returns the numeric code of the first character in <em>Text</em>.
            These code values correspond to those used by your machine to encode the text
            characters in a string (<em>e.g.</em>, Unicode).</p>
            <p class="body">If <em>Text</em> is an empty string of zero length, then
            this function returns the code zero.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCode.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCode.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCode.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCode.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFixed">
            <summary>
            Formats a numeric value rounded to a specified number of decimal places and
            with optional thousands separators.
            </summary>
            <remarks>
            <p class="body">FIXED(value, decimal_places, exclude_thousands_separators)</p>
            <p class="body">Value is the numeric value to be rounded and formatted as text.</p>
            <p class="body">Decimal_places indicate how many places to the right of the decimal point
            the <em>value</em> should be rounded. If omitted, rounding occurs to two decimal places.</p>
            <p class="body">Exclude_thousands_separators is a boolean value (TRUE or FALSE) indicating
            whether commas should appear in the formatted text value. By default the formatted text
            includes commas as thousands separators.</p>
            <p class="body">This function may not return text values consistent with your locale's
            formatting of numbers because it operates using culture invariant settings (these include
            commas as thousands separators and decimal points) to facilitate unambiguously parsing the
            text values it formats into numeric values for subsequent calculations. Applications may
            instead choose to format numeric values after UltraCalc has finished processing them, but
            before presenting them to their end user.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFixed.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFixed.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFixed.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFixed.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionToday">
            <summary>
            Gets the host's current date.
            </summary>
            <remarks>
            <p class="body">No arguments are passed to this function.</p>
            <p class="body">The date returned for TODAY() is based on the local time of the
            host running UltraCalc. In some distributed applications, such as those built for
            the Web, this may be different from today's date at the client.</p>
            <p class="body">The date/time value returned is always adjusted to Midnight 
            (00:00).</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionToday.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionToday.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionToday.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionToday.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionASinh">
            <summary>
            Returns the angle (measured in radians) having the specified value of it's hyperbolic sine function.
            </summary>
            <remarks>
            <p class="body">ASINH(value)</p>
            <p class="body">Value is the hyperbolic sine of some angle (measured in radians) that you want
            to find. As you might expect, the values of the hyperbolic sine function (see the <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSinh">SINH</see> function)
            increase at a hyperbolic rate, but one consequence is that these ever larger changes in the hyperbolic
            sine will correspond to ever smaller changes in the angle. This relationship is intrinsic to many of
            the mathematical and engineering applications of the inverse hyperbolic sine function, such as when
            resistance or strain builds up on a body increasingly as it is rotated (hysteresis).</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionASinh.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function, Arcsinh, against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionASinh.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionASinh.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionASinh.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATanh">
            <summary>
            Calculates the hyperbolic tangent of a specified angle measured in radians.
            </summary>
            <remarks>
            <p class="body">TANH(value)</p>
            <p class="body">Value is an angle measured in radians for which you want to
            calculate the hyperbolic tangent. If your angle is measured in degrees, 
            multiply it by PI()/180 to convert into radians. The hyperbolic tangent 
            has a range from -1 to 1.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATanh.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function, Arctanh, against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATanh.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATanh.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATanh.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionACosh">
            <summary>
            Returns the angle (measured in radians) having the specified value of it's hyperbolic cosine function.
            </summary>
            <remarks>
            <p class="body">ACOSH(value)</p>
            <p class="body">Value is the hyperbolic cosine of some angle (measured in radians) that you want
            to find. As you might expect, the values of the hyperbolic cosine function (see the <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCosh">COSH</see> function)
            increase at a hyperbolic rate, but one consequence is that these ever larger changes in the hyperbolic
            cosine will correspond to ever smaller changes in the angle. This relationship is intrinsic to many of
            the mathematical and engineering applications of the inverse hyperbolic cosine function, such as when
            resistance or strain builds up on a body increasingly as it is rotated (hysteresis).</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionACosh.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function, Arccosh, against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionACosh.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionACosh.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionACosh.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEDate">
            <summary>
            Returns a date that is the specified number of months before or after the start date.
            </summary>
            <remarks>
            <p class="body">
            DATE(date, numberOfMonths)
            <br/>
            Date is the starting date
            <br/>
            NumberOfMonths is a number of months to shift the date. A positive number means a date after the startdate. A negative number indicates a date prior to the start date.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEDate.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEDate.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEDate.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEDate.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEOMonth">
            <summary>
            Returns a date that is at the end of the month which is the specified number of months before or after the start date.
            </summary>
            <remarks>
            <p class="body">
            EOMONTH(date, numberOfMonths)
            <br/>
            Date is the starting date
            <br/>
            NumberOfMonths is a number of months to shift the date. A positive number means a date after the startdate. A negative number indicates a date prior to the start date.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEOMonth.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEOMonth.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEOMonth.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEOMonth.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeekDay">
            <summary>
            Returns a number representing the day of the week of the specified date. 
            </summary>
            <remarks>
            <p class="body">
            WEEKDAY(date, returnType)
            <br/>
            Date is a date.
            <br/>
            ReturnType determines which numbering scheme is used for the days of the week.
            1 (default) = Sunday (1) through Saturday (7)
            2 = Monday (1) through Sunday (7)
            3 = Monday (0) through Sunday (6)
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeekDay.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeekDay.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeekDay.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeekDay.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNetWorkDays">
            <summary>
            Returns the total number of whole work days between the specified dates, excluding any specified holidays.
            </summary>
            <remarks>    
            <p class="body">
            NETWORKDAYS(startDate, endDate [, holiday1, holiday2, ..., holidayN])
            <br/>
            StartDate is the date from which to start.
            <br/>
            EndDate is the date at which to end.
            <br/>
            Holiday1, holiday2, ..., holidayN is any number of dates or range references containing dates that are to be considered non-working days.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNetWorkDays.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNetWorkDays.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNetWorkDays.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNetWorkDays.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNetWorkDays.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeekNum">
            <summary>
            Returns the number of the week into which the specified date falls. 
            </summary>
            <remarks>
            <p class="body">
            WEEKNUM(date, returnType)
            <br/>
            Date is a date.
            <br/>
            ReturnType determines which day begins the week.
            1 (default) = Sunday is the first day of the week.
            2 = Monday is the first day of the week.    
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeekNum.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeekNum.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeekNum.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeekNum.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWorkDay">
            <summary>
            Returns a work day the specified number of days from the specified date, excluding any specified holidays.
            </summary>
            <remarks>    
            <p class="body">
            WORKDAY(startDate, days [, holiday1, holiday2, ..., holidayN])
            <br/>
            StartDate is the date from which to start.
            <br/>
            Days is the number of work days to offset from the start date.
            <br/>
            Holiday1, holiday2, ..., holidayN is any number of dates or range references containing dates that are to be considered non-working days.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWorkDay.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWorkDay.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWorkDay.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWorkDay.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWorkDay.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2XBase">
            <summary>
            Returns a string representing the specified decimal value in the specified base number scheme.
            </summary>
            <remarks>
            <p class="body">
            Dec2X(number, places)
            <br/>
            Number is the decimal value to be converted.
            <br/>
            Places is the number of characters to use in representing the value. If places is not specified, the mimumum number of characters neccessary to represent the value will be used. Places allows you to specify leading zeros.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2XBase.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2XBase.MinNumber">
            <summary>
            The minimum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2XBase.MaxNumber">
            <summary>
            The maximum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2XBase.NumberSystem">
            <summary>
            The number system to convert to (2 = binary, 8 = octal, 16 = Hexadecimal, etc.)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2XBase.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2XBase.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Bin">
            <summary>
            Returns a string representing the specified decimal value as a binary number.
            </summary>
            <remarks>
            <p class="body">
            Dec2Bin(number, places)
            <br/>
            Number is the decimal value to be converted.
            <br/>
            Places is the number of characters to use in representing the value. If places is not specified, the mimumum number of characters neccessary to represent the value will be used. Places allows you to specify leading zeros.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Bin.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Bin.MinNumber">
            <summary>
            The minimum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Bin.MaxNumber">
            <summary>
            The maximum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Bin.NumberSystem">
            <summary>
            The number system to convert to (2 = binary, 8 = octal, 16 = Hexadecimal, etc.)
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Hex">
            <summary>
            Returns a string representing the specified decimal value as a hexadecimal number.
            </summary>
            <remarks>
            <p class="body">
            Dec2Hex(number, places)
            <br/>
            Number is the decimal value to be converted.
            <br/>
            Places is the number of characters to use in representing the value. If places is not specified, the mimumum number of characters neccessary to represent the value will be used. Places allows you to specify leading zeros.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Hex.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Hex.MinNumber">
            <summary>
            The minimum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Hex.MaxNumber">
            <summary>
            The maximum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Hex.NumberSystem">
            <summary>
            The number system to convert to (2 = hexadecimal, 8 = octal, 16 = Hexadecimal, etc.)
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Oct">
            <summary>
            Returns a string representing the specified decimal value as a octal number.
            </summary>
            <remarks>
            <p class="body">
            Dec2Oct(number, places)
            <br/>
            Number is the decimal value to be converted.
            <br/>
            Places is the number of characters to use in representing the value. If places is not specified, the mimumum number of characters neccessary to represent the value will be used. Places allows you to specify leading zeros.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Oct.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Oct.MinNumber">
            <summary>
            The minimum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Oct.MaxNumber">
            <summary>
            The maximum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Oct.NumberSystem">
            <summary>
            The number system to convert to (2 = octal, 8 = octal, 16 = Hexadecimal, etc.)
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2Dec">
            <summary>
            Returns the decimal value of a string representation of a number in a non-decimal number system.
            </summary>
            <remarks>
            <p class="body">
            X2Dec(number)
            <br/>
            Number is a string represeting a number in a non-decimal number system.    
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2Dec.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2Dec.MinNumber">
            <summary>
            The minimum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2Dec.MaxNumber">
            <summary>
            The maximum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2Dec.NumberSystem">
            <summary>
            The number system to convert to (2 = binary, 8 = octal, 16 = Hexadecimal, etc.)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2Dec.MaxLength">
            <summary>
            The maximum length of the number string.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2Dec.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2Dec.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Dec">
            <summary>
            Returns the decimal value of a string representation of a number in a binary system.
            </summary>
            <remarks>
            <p class="body">
            Bin2Dec(number)
            <br/>
            Number is a string represeting a binary number.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Dec.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Dec.MinNumber">
            <summary>
            The minimum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Dec.MaxNumber">
            <summary>
            The maximum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Dec.NumberSystem">
            <summary>
            The number system to convert from (2 = binary, 8 = octal, 16 = Hexadecimal, etc.)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Dec.MaxLength">
            <summary>
            The maximum length of the 'number' string.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Dec">
            <summary>
            Returns the decimal value of a string representation of a number in a hexadecimal system.
            </summary>
            <remarks>
            <p class="body">
            Hex2Dec(number)
            <br/>
            Number is a string represeting a hexadecimal number.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Dec.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Dec.MinNumber">
            <summary>
            The minimum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Dec.MaxNumber">
            <summary>
            The maximum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Dec.NumberSystem">
            <summary>
            The number system to convert to (2 = hexadecimal, 8 = octal, 16 = Hexadecimal, etc.)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Dec.MaxLength">
            <summary>
            The maximum length of the 'number' string.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Dec">
            <summary>
            Returns the decimal value of a string representation of a number in a octal system.
            </summary>
            <remarks>
            <p class="body">
            Oct2Dec(number)
            <br/>
            Number is a string represeting a octal number.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Dec.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Dec.MinNumber">
            <summary>
            The minimum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Dec.MaxNumber">
            <summary>
            The maximum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Dec.NumberSystem">
            <summary>
            The number system to convert to (2 = octal, 8 = octal, 16 = Hexadecimal, etc.)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Dec.MaxLength">
            <summary>
            The maximum length of the 'number' string.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2XBase">
            <summary>
            Converts a string representing a number in a non-decimal number system to a number in another non-decimal number system.
            </summary>
            <remarks>
            <p class="body">
            XBase2XBase(number, places)
            <br/>
            Number is the value to be converted.
            <br/>
            Places is the number of characters to use in representing the value. If places is not specified, the mimumum number of characters neccessary to represent the value will be used. Places allows you to specify leading zeros.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2XBase.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2XBase.OriginalMinNumber">
            <summary>
            The minimum value that the number argument to this function will allow in the original number system.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2XBase.OriginalMaxNumber">
            <summary>
            The maximum value that the number argument to this function will allow in the original number system.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2XBase.NewMinNumber">
            <summary>
            The minimum value that the number argument to this function will allow in the new number system.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2XBase.NewMaxNumber">
            <summary>
            The maximum value that the number argument to this function will allow in the new number system.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2XBase.OriginalNumberSystem">
            <summary>
            The number system to convert from (2 = binary, 8 = octal, 16 = Hexadecimal, etc.)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2XBase.NewNumberSystem">
            <summary>
            The number system to convert to (2 = binary, 8 = octal, 16 = Hexadecimal, etc.)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2XBase.MaxLength">
            <summary>
            The maximum length of the number string.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2XBase.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2XBase.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Oct">
            <summary>
            Converts a string representing a binary number  to a string representing the same number in the octal number system.
            </summary>
            <remarks>
            <p class="body">
            Bin2Oct(number, places)
            <br/>
            Number is the value to be converted.
            <br/>
            Places is the number of characters to use in representing the value. If places is not specified, the mimumum number of characters neccessary to represent the value will be used. Places allows you to specify leading zeros.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Oct.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Oct.OriginalMinNumber">
            <summary>
            The minimum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Oct.OriginalMaxNumber">
            <summary>
            The maximum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Oct.NewMinNumber">
            <summary>
            The minimum value that the number argument to this function will allow in the new number system.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Oct.NewMaxNumber">
            <summary>
            The maximum value that the number argument to this function will allow in the new number system.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Oct.OriginalNumberSystem">
            <summary>
            The number system to convert from (2 = binary, 8 = octal, 16 = Hexadecimal, etc.)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Oct.NewNumberSystem">
            <summary>
            The number system to convert to (2 = binary, 8 = octal, 16 = Hexadecimal, etc.)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Oct.MaxLength">
            <summary>
            The maximum length of the 'number' string.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Hex">
            <summary>
            Converts a string representing a binary number  to a string representing the same number in the hexadecimal number system.
            </summary>
            <remarks>
            <p class="body">
            Bin2Hex(number, places)
            <br/>
            Number is the value to be converted.
            <br/>
            Places is the number of characters to use in representing the value. If places is not specified, the mimumum number of characters neccessary to represent the value will be used. Places allows you to specify leading zeros.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Hex.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Hex.OriginalMinNumber">
            <summary>
            The minimum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Hex.OriginalMaxNumber">
            <summary>
            The maximum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Hex.NewMinNumber">
            <summary>
            The minimum value that the number argument to this function will allow in the new number system.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Hex.NewMaxNumber">
            <summary>
            The maximum value that the number argument to this function will allow in the new number system.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Hex.OriginalNumberSystem">
            <summary>
            The number system to convert from (2 = binary, 8 = octal, 16 = Hexadecimal, etc.)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Hex.NewNumberSystem">
            <summary>
            The number system to convert to (2 = binary, 8 = octal, 16 = Hexadecimal, etc.)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Hex.MaxLength">
            <summary>
            The maximum length of the 'number' string.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Bin">
            <summary>
            Converts a string representing an octal number to a string representing the same number in the binary number system.
            </summary>
            <remarks>
            <p class="body">
            Oct2Bin(number, places)
            <br/>
            Number is the value to be converted.
            <br/>
            Places is the number of characters to use in representing the value. If places is not specified, the mimumum number of characters neccessary to represent the value will be used. Places allows you to specify leading zeros.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Bin.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Bin.OriginalMinNumber">
            <summary>
            The minimum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Bin.OriginalMaxNumber">
            <summary>
            The maximum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Bin.NewMinNumber">
            <summary>
            The minimum value that the number argument to this function will allow in the new number system.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Bin.NewMaxNumber">
            <summary>
            The maximum value that the number argument to this function will allow in the new number system.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Bin.OriginalNumberSystem">
            <summary>
            The number system to convert from (2 = binary, 8 = octal, 16 = Hexadecimal, etc.)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Bin.NewNumberSystem">
            <summary>
            The number system to convert to (2 = binary, 8 = octal, 16 = Hexadecimal, etc.)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Bin.MaxLength">
            <summary>
            The maximum length of the 'number' string.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Hex">
            <summary>
            Converts a string representing an octal number to a string representing the same number in the hexadecimal number system.
            </summary>
            <remarks>
            <p class="body">
            Oct2Hex(number, places)
            <br/>
            Number is the value to be converted.
            <br/>
            Places is the number of characters to use in representing the value. If places is not specified, the mimumum number of characters neccessary to represent the value will be used. Places allows you to specify leading zeros.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Hex.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Hex.OriginalMinNumber">
            <summary>
            The minimum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Hex.OriginalMaxNumber">
            <summary>
            The maximum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Hex.NewMinNumber">
            <summary>
            The minimum value that the number argument to this function will allow in the new number system.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Hex.NewMaxNumber">
            <summary>
            The maximum value that the number argument to this function will allow in the new number system.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Hex.OriginalNumberSystem">
            <summary>
            The number system to convert from (2 = binary, 8 = octal, 16 = Hexadecimal, etc.)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Hex.NewNumberSystem">
            <summary>
            The number system to convert to (2 = binary, 8 = octal, 16 = Hexadecimal, etc.)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Hex.MaxLength">
            <summary>
            The maximum length of the 'number' string.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Bin">
            <summary>
            Converts a string representing an hexadecimal number to a string representing the same number in the binary number system.
            </summary>
            <remarks>
            <p class="body">
            Hex2Bin(number, places)
            <br/>
            Number is the value to be converted.
            <br/>
            Places is the number of characters to use in representing the value. If places is not specified, the mimumum number of characters neccessary to represent the value will be used. Places allows you to specify leading zeros.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Bin.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Bin.OriginalMinNumber">
            <summary>
            The minimum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Bin.OriginalMaxNumber">
            <summary>
            The maximum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Bin.NewMinNumber">
            <summary>
            The minimum value that the number argument to this function will allow in the new number system.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Bin.NewMaxNumber">
            <summary>
            The maximum value that the number argument to this function will allow in the new number system.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Bin.OriginalNumberSystem">
            <summary>
            The number system to convert from (2 = binary, 8 = octal, 16 = Hexadecimal, etc.)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Bin.NewNumberSystem">
            <summary>
            The number system to convert to (2 = binary, 8 = octal, 16 = Hexadecimal, etc.)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Bin.MaxLength">
            <summary>
            The maximum length of the 'number' string.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Oct">
            <summary>
            Converts a string representing an hexadecimal number to a string representing the same number in the octal number system.
            </summary>
            <remarks>
            <p class="body">
            Hex2Oct(number, places)
            <br/>
            Number is the value to be converted.
            <br/>
            Places is the number of characters to use in representing the value. If places is not specified, the mimumum number of characters neccessary to represent the value will be used. Places allows you to specify leading zeros.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Oct.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Oct.OriginalMinNumber">
            <summary>
            The minimum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Oct.OriginalMaxNumber">
            <summary>
            The maximum value that the number argument to this function will allow.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Oct.NewMinNumber">
            <summary>
            The minimum value that the number argument to this function will allow in the new number system.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Oct.NewMaxNumber">
            <summary>
            The maximum value that the number argument to this function will allow in the new number system.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Oct.OriginalNumberSystem">
            <summary>
            The number system to convert from (2 = binary, 8 = octal, 16 = Hexadecimal, etc.)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Oct.NewNumberSystem">
            <summary>
            The number system to convert to (2 = binary, 8 = octal, 16 = Hexadecimal, etc.)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Oct.MaxLength">
            <summary>
            The maximum length of the 'number' string.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConvert">
            <summary>
            Converts a value from one system of measurement to another. For example, meters to inches or hours to seconds.
            </summary>
            <remarks>
            <p class="body">CONVERT(number, fromUnit, toUnit)
            <br/>
            Number is the value to convert.
            <br/>
            FromUnit is the unit in which the number is given.
            <br/>
            ToUnit is the units to convert to.
            <br/>
            Weight and mass units:
            "g" = gram
            "sg" = slug
            "lbm" = pound mass (avoirdupois)
            "u" = U (atomic mass unit)
            "ozm" = Ounce mass (avoirdupois)
            <br/>
            Distance units:
            "m" = Meter
            "mi" = Statute mile
            "Nmi" = Nautical mile 
            "in" = Inch
            "ft" = Foot 
            "yd" = Yard
            "ang" = Angstrom
            "Pica" = Pica (1/72 in.)    
            <br/>
            Time units:
            "yr" = Year
            "day" = Day
            "hr" = Hour
            "mn" = Minute
            "sec" = Second
            <br/>
            Pressure units
            "Pa" (or "p") = Pascal
            "atm" (or "at") = Atmosphere
            "mmHg" = mm of Mercury
            <br/>
            Force units
            "N" = Newton
            "dyn" (or "dy") = Dyne
            "lbf" = Pound force
            <br/>
            Energy units:
            "J" = Joule
            "e" = Erg
            "c" = Thermodynamic calorie
            "cal" = IT calorie
            "eV" (or "ev") = Electron volt
            "HPh" (or "hh") = Horsepower-hour
            "Wh" (or "wh") = Watt-hour
            "flb" = Foot-pound
            "BTU" (or "btu") = BTU
            <br/>
            Power units:
            "HP" (or "h") = Horsepower
            "W" (or "w") = Watt
            <br/>
            Magentism units:
            "T" = Tesla
            "ga" = Gauss
            <br/>
            Temperature units:
            "C" (or "cel") = Degree Celsius
            "F" (or "fah") = Degree Fahrenheit
            "K" (or "kel") = Kelvin
            <br/>
            Liquid measure units:
            "tsp" = Teaspoon
            "tbs" = Tablespoon
            "oz" = Fluid ounce
            "cup" = Cup
            "pt" (or "us_pt") = U.S. pint
            "uk_pt" = U.K. pint
            "qt" = Quart
            "gal" = Gallon
            "l" (or "lt") = Liter
            <br/>
            Any metric ToUnit or FromUnit may be prefixed with one of the following:
            exa ("E") = 1E+18
            peta ("P") = 1E+15
            tera ("T") = 1E+12
            giga ("G") = 1E+09
            mega ("M") = 1E+06
            kilo ("k") = 1E+03
            hecto ("h") = 1E+02
            dekao ("e") = 1E+01
            deci ("d") = 1E-01
            centi ("c") = 1E-02
            milli ("m") = 1E-03
            micro ("u") = 1E-06
            nano ("n") = 1E-09
            pico ("p") = 1E-12
            femto ("f") = 1E-15
            atto ("a") = 1E-18
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConvert.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConvert.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConvert.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConvert.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDelta">
            <summary>
            Compares two numbers and returns 1 if they are equal or 0 if they are not. 
            </summary>
            <remarks>
            <p class="body">DELTA(number1, [number2])
            <br/>
            Number1 is a number.
            <br/>
            Number2 is a number. If Number2 is not specified, Number1 will be compared to 0.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDelta.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDelta.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDelta.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDelta.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGeStep">
            <summary>
            Compares two numbers and returns 1 the first number is greater than or equal to the second or returns 0 if not.
            </summary>
            <remarks>
            <p class="body">GESTEP(number, [step])
            <br/>
            Number is a number.
            <br/>
            Step is a number. If step is not specified, Number will be compared to 0.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGeStep.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGeStep.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGeStep.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGeStep.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionComplex">
            <summary>
            Returns a complex number represented as a string in the format "x + yi" or "x + yj" by comining a real and imaginary number.
            </summary>
            <remarks>
            <p class="body">COMPLEX(realNumber, imaginaryNumber, [suffix])
            <br/>
            RealNumber is the real coefficient of the complex number.
            <br/>
            ImaginaryNumber is the imaginary coefficient of the number.
            <br/>
            Suffix specifies the suffix to use. The acceptable values are "i" or "j". If omitted, "i" is used. Note that the suffix is case-sensitive; upper case "I" and "J" are not allowed and will result in a #VALUE error.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionComplex.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionComplex.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionComplex.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionComplex.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImAbs">
            <summary>
            Returns the absolute value of a complex number.
            </summary>
            <remarks>
            <p class="body">IMABS(complexNumber)
            <br/>
            ComplexNumber is a complex number in the format: "x + yi" or "x + yj".    
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImAbs.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImAbs.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImAbs.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImAbs.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImaginary">
            <summary>
            Returns the imaginary coefficient of a complex number.
            </summary>
            <remarks>
            <p class="body">IMAGINARY(complexNumber)
            <br/>
            ComplexNumber is a complex number in the format: "x + yi" or "x + yj".    
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImaginary.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImaginary.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImaginary.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImaginary.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImArgument">
            <summary>
            Returns the argument theta, and angle expressed in radians.
            </summary>
            <remarks>
            <p class="body">IMARGUMENT(complexNumber)
            <br/>
            ComplexNumber is a complex number in the format: "x + yi" or "x + yj".    
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImArgument.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImArgument.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImArgument.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImArgument.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImConjugate">
            <summary>
            Returns the conjugate of a complex number.
            </summary>
            <remarks>
            <p class="body">IMCONJUGATE(complexNumber)
            <br/>
            ComplexNumber is a complex number in the format: "x + yi" or "x + yj".    
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImConjugate.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImConjugate.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImConjugate.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImConjugate.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImCos">
            <summary>
            Returns the cosine of a complex number.
            </summary>
            <remarks>
            <p class="body">IMCOS(complexNumber)
            <br/>
            ComplexNumber is a complex number in the format: "x + yi" or "x + yj".    
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImCos.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImCos.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImCos.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImCos.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImDiv">
            <summary>
            Returns the quotient of two complex numbers.
            </summary>
            <remarks>
            <p class="body">IMDIV(dividend, divisor)
            <br/>
            Dividend is a complex number in the format: "x + yi" or "x + yj".
            <br/>
            Divisor is a complex number in the format: "x + yi" or "x + yj".    
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImDiv.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImDiv.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImDiv.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImDiv.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImExp">
            <summary>
            Returns the exponential of a complex number.
            </summary>
            <remarks>
            <p class="body">IMEXP(complexNumber)
            <br/>
            ComplexNumber is a complex number in the format: "x + yi" or "x + yj".    
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImExp.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImExp.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImExp.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImExp.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLn">
            <summary>
            Returns the natural logarithm of a complex number.
            </summary>
            <remarks>
            <p class="body">IMLN(complexNumber)
            <br/>
            ComplexNumber is a complex number in the format: "x + yi" or "x + yj".    
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLn.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLn.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLn.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLn.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImReal">
            <summary>
            Returns the real coefficient of a complex number.
            </summary>
            <remarks>
            <p class="body">IMREAL(complexNumber)
            <br/>
            ComplexNumber is a complex number in the format: "x + yi" or "x + yj".    
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImReal.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImReal.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImReal.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImReal.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSub">
            <summary>
            Returns the difference between two complex numbers.
            </summary>
            <remarks>
            <p class="body">IMSUB(complexNumber1, complexNumber2)
            <br/>
            ComplexNumber1 is a complex number in the format: "x + yi" or "x + yj" from which ComplexNumber2 will be subtracted.
            <br/>
            ComplexNumber2 is a complex number in the format: "x + yi" or "x + yj" which will be subtracted from ComplexNumber1.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSub.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSub.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSub.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSub.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImProduct">
            <summary>
            Returns the product of 1 to n complex numbers. 
            </summary>
            <remarks>
            <p class="body">IMPRODUCT(complexNumber1 [, complexNumber2, complexNumber3, ..., complexNumberN])
            <br/>    
            ComplexNumber1, ComplexNumber2, ..., ComplexNumberN is any number of complex numbers in the format: "x + yi" or "x + yj" which will be multiplied together.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImProduct.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImProduct.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImProduct.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImProduct.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImProduct.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSum">
            <summary>
            Returns the sum of 1 to n complex numbers. 
            </summary>
            <remarks>
            <p class="body">IMSUM(complexNumber1 [, complexNumber2, complexNumber3, ..., complexNumberN])
            <br/>    
            ComplexNumber1, ComplexNumber2, ..., ComplexNumberN is any number of complex numbers in the format: "x + yi" or "x + yj" which will be added together.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSum.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSum.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSum.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSum.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSum.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLog10">
            <summary>
            Returns the base-10 logarithm of a complex number.
            </summary>
            <remarks>
            <p class="body">IMLOG10(complexNumber)
            <br/>
            ComplexNumber is a complex number in the format: "x + yi" or "x + yj".    
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLog10.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLog10.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLog10.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLog10.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLog2">
            <summary>
            Returns the base-2 logarithm of a complex number.
            </summary>
            <remarks>
            <p class="body">IMLOG2(complexNumber)
            <br/>
            ComplexNumber is a complex number in the format: "x + yi" or "x + yj".    
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLog2.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLog2.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLog2.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLog2.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSin">
            <summary>
            Returns the sine of a complex number.
            </summary>
            <remarks>
            <p class="body">IMSIN(complexNumber)
            <br/>
            ComplexNumber is a complex number in the format: "x + yi" or "x + yj".    
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSin.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSin.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSin.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSin.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSqrt">
            <summary>
            Returns the square root of a complex number.
            </summary>
            <remarks>
            <p class="body">IMSQRT(complexNumber)
            <br/>
            ComplexNumber is a complex number in the format: "x + yi" or "x + yj".    
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSqrt.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSqrt.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSqrt.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSqrt.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImPower">
            <summary>
            Returns the complex number raised to the specified power. 
            </summary>
            <remarks>
            <p class="body">IMPOWER(complexNumber, power)
            <br/>
            ComplexNumber is a complex number in the format: "x + yi" or "x + yj".    
            <br/>
            Power is the power to which ComplexNumber will be raised. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImPower.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImPower.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImPower.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImPower.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDollarFr">
            <summary>
            Converts a dollary amount expressed as a decimal into a dollar amount expressed as a fraction. 
            </summary>
            <remarks>
            <p class="body">DollarFr(decimalDollarAmount, Fraction)
            <br/>
            DecimalDollarAmount is the dollar amount expressed as a decimal. 
            <br/>
            Fraction is the value used as the denominator of the fraction. If this value is not an integer, it will be truncated. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDollarFr.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDollarFr.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDollarFr.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDollarFr.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDollarDe">
            <summary>
            Converts a dollary amount expressed as a decimal into a dollar amount expressed as a fraction. 
            </summary>
            <remarks>
            <p class="body">DollarFr(decimalDollarAmount, Fraction)
            <br/>
            DecimalDollarAmount is the dollar amount expressed as a decimal. 
            <br/>
            Fraction is the value used as the denominator of the fraction. If this value is not an integer, it will be truncated. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDollarDe.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDollarDe.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDollarDe.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDollarDe.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionInfo">
            <summary>
            Returns information about the current operating environment. 
            </summary>
            <remarks>
            <p class="body">INFO(type)
            <br/>
            Type is a string indicating the type of information to return.
            <br/>
            "directory" = The full path to the current folder.
            "osversion" = The currently operating system version as a string. 
            "system" = The name of the operating system - "pcdos" for Windows or "mac" for Macintosh. 
            <br/>
            The following are supported by Microsoft Excel, but have no correlation in UltraCalcManager: "numfile", "origin", "recalc", "release".
            <br/>
            The following are supported in older versions of Excel, but not Office2007, and have no correlation in UltraCalcManager: "memavail", "memused", "totmem".
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionInfo.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionInfo.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionInfo.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionInfo.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionN">
            <summary>
            Converts a value to a number.
            </summary>
            <remarks>
            <p class="body">N(value)
            <br/>
            Value is the value to be converted to a number. The following are acceptable values:
            <br/>
            A number - returns the number.
            A date - returns the date.
            True - returns 1.
            False - returns 0.
            An error value - returns the error value. 
            Any other value - returns 0.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionN.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionN.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionN.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionN.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFact">
            <summary>
            Returns the factorial of a number.
            </summary>
            <remarks>
            <p class="body">FACT(number)
            <br/>
            Number is a positive number for which the factorial will be calculated. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFact.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFact.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFact.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFact.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFactDouble">
            <summary>
            Returns the double factorial of a number.
            </summary>
            <remarks>
            <p class="body">FACTDOUBLE(number)
            <br/>
            Number is a positive number for which the double factorial will be calculated. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFactDouble.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFactDouble.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFactDouble.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFactDouble.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCombin">
            <summary>
            Returns the number of possible combinations given a set of items and a number of chosen items from that set.
            </summary>
            <remarks>
            <p class="body">Combin(number, numberChosen)
            <br/>
            Number is the number of items.    
            <br/>
            NumberChosen is the number of items chosen in each combination.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCombin.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCombin.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCombin.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCombin.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCombina">
            <summary>
            Returns the number of possible combinations (with repetitions) given a set of items and a number of chosen items from that set.
            </summary>
            <remarks>
            <p class="body">Combina(number, numberChosen)
            <br/>
            Number is the number of items.    
            <br/>
            NumberChosen is the number of items chosen in each combination.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCombina.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCombina.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCombina.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCombina.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBinomDist">
            <summary>
            Returns the individual term binomial distribution probability.
            </summary>
            <remarks>
            <p class="body">BinomDist(number, trials, probability, cumulative)
            <br/>
            Number is the number of successes in trials.    
            <br/>
            Trial is the number of independent trials.
            <br/>
            Probability is the probability of success on each trial.
            <br/>
            Cumulative is a logical value that determines the form of the function. If true, returns the cumulative distribution function otherwise returns the probability mass function.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBinomDist.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBinomDist.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBinomDist.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBinomDist.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCritBinom">
            <summary>
            Returns the the smallest value for which the cumulative binomial distribution is greater than or equal to a criterion value.
            </summary>
            <remarks>
            <p class="body">CritBinom(trials, probability, alpha)
            <br/>
            Trial is the number of independent trials.
            <br/>
            Probability is the probability of success on each trial.
            <br/>
            Alpha is the criterion value.    
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCritBinom.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCritBinom.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCritBinom.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCritBinom.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDegrees">
            <summary>
            Converts radians to degrees.
            </summary>
            <remarks>
            <p class="body">DEGREES(radians)
            <br/>
            Radians is a value in radians which will be converted to degrees.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDegrees.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDegrees.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDegrees.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDegrees.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRadians">
            <summary>
            Converts degrees to radians.
            </summary>
            <remarks>
            <p class="body">RADIANS(degrees)
            <br/>
            Degrees is a value in degrees which will be converted to radians.     
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRadians.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRadians.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRadians.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRadians.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGcd">
            <summary>
            Returns the greatest common divisor of integer values. 
            </summary>
            <remarks>
            <p class="body">GCD(number1, [number2, number3, ..., numberN])
            <br/>
            Number1, Number2, ..., NumberN is any number of integers. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGcd.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGcd.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGcd.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGcd.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGcd.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLcm">
            <summary>
            Returns the least common multiple of integer values.
            </summary>
            <remarks>
            <p class="body">LCM(number1, [number2, number3, ..., numberN])
            <br/>
            Number1, Number2, ..., NumberN is any number of integers. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLcm.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLcm.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLcm.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLcm.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLcm.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMultinomial">
            <summary>
            Returns the multinomial of a set of numbers. 
            </summary>
            <remarks>
            <p class="body">MULTINOMIAL(number1, [number2, number3, ..., numberN])
            <br/>
            Number1, Number2, ..., NumberN is any number of numbers. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMultinomial.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMultinomial.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMultinomial.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMultinomial.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMultinomial.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMRound">
            <summary>
            Rounds a number to the nearest multiple of another number.
            </summary>
            <remarks>
            <p class="body">MRound(number, multiple)
            <br/>
            Number is a number to be rounded.
            <br/>
            Multiple is a number indicating the multiple to which to round.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMRound.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMRound.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMRound.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMRound.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRandBetween">
            <summary>
            Generates a pseudorandom integer between two specified numbers. 
            </summary>
            <remarks>
            <p class="body">RANDBETWEEN(bottom, top)
            <br/>
            Bottom is the minumum value that will be returned.
            <br/>
            Top is the maximum value that will be returned.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRandBetween.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRandBetween.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRandBetween.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRandBetween.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoman">
            <summary>
            Converts a number into a roman number as a string.
            </summary>
            <remarks>
            <p class="body">ROMAN(number, form)
            <br/>
            Number is the number to convert to roman numerals.
            <br/>
            Form is a number or boolean value indicating whether to use classic roman numerals or a more concise version. 
            <br/>
            0  = (Default) Classic. (499 = "CDXCIX")
            1  = More concise. (499 = "LDVLIV")
            2  = More concise. (499 = "XDIX")
            3  = More concise. (499 = "VDIV")
            4  = Simplified. (499 = "ID")
            TRUE  = Classic. 
            FALSE = Simplified. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoman.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoman.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoman.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoman.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoundDown">
            <summary>
            Rounds a number to down to the specified number of digits. 
            </summary>
            <remarks>
            <p class="body">ROUNDDOWN(number, digits)
            <br/>
            Number is a number to be rounded down.
            <br/>
            Digits indicates the number of decimal places to round to. Positive numbers indicates places after the decimal point, negative numbers indicate places before the decimal point.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoundDown.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoundDown.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoundDown.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoundDown.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoundUp">
            <summary>
            Rounds a number to up to the specified number of digits.
            </summary>
            <remarks>
            <p class="body">ROUNDUP(number, digits)
            <br/>
            Number is a number to be rounded up.
            <br/>
            Digits indicates the number of decimal places to round to. Positive numbers indicates places after the decimal point, negative numbers indicate places before the decimal point.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoundUp.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoundUp.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoundUp.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoundUp.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSeriesSum">
            <summary>
            Returns the sum of a power series.
            </summary>
            <remarks>
            <p class="body">SERIESSUM(inputValue, initialPower, step, coefficient1 [, coefficient2, coefficient3, ..., coefficientN])
            <br/>
            InputValue is the input value to the power series. 
            <br/>
            InitialPower is the initial power to which X will be raised.
            <br/>
            Step is the step which will be used to increase N for each term in the series. 
            <br/>
            Coefficient1, Coefficient2, ..., CoefficientN is a set of coefficients by which each successive power of X is multiplied.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSeriesSum.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSeriesSum.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSeriesSum.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSeriesSum.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSeriesSum.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSign">
            <summary>
            Returns the sign of a number. (-1, 0, or 1)
            </summary>
            <remarks>
            <p class="body">SIGN(number)
            <br/>
            The number whose sign wil be returned. 
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSign.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSign.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSign.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSign.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSqrtPi">
            <summary>
            Returns the square root of the specified number times Pi.
            </summary>
            <remarks>
            <p class="body">SQRTPI(number)
            <br/>
            The number which will be multiplied by Pi.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSqrtPi.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSqrtPi.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSqrtPi.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSqrtPi.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionChoose">
            <summary>
            The CHOOSE function returns one of the values provided in its arguments based on the number in the first argument.
            </summary>
            <remarks>
            <p class="body">CHOOSE(index_num, value1, [value2, ..., valueN])
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionChoose.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionChoose.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionChoose.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionChoose.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRept">
            <summary>
            Repeats text a specific number of times.
            </summary>
            <remarks>
            <p class="body">REPT(text_value, repeat_count)</p>
            <p class="body">Text_value is the text which should be repeated.</p>
            <p class="body">Repeat_count is the positive number of times <em>text_value</em> should be repeated.</p>
            <p class="body">When <em>repeat_count</em> is negative, and error value is returned. When <em>repeat_count</em> 
            is 0, an empty string is returned. When <em>repeat_count</em> is not an integer, it will be truncated.</p>
            <p class="body">If the length of the returned string would be greater than 32,767, an error value is returned.</p>
            <code>REPT("-", 10)</code>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRept.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRept.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRept.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRept.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSubtotal">
            <summary>
            Calculates the subtotal in one of more references.
            </summary>
            <remarks>
            <p class="body">Subtotal(function_num, ref1, ref2,...)</p>
            <p class="body">Function_num is the type which should be calculated.
            <table>
            <colgroup><col width="180px"/><col width="180px"/><col width="80px"/></colgroup>
            <tr><th>Function_num (includes hidden values)</th><th>Function_num (ignores hidden values)</th><th>Function</th></tr>
            <tr><td>1</td><td>101</td><td>AVERAGE</td></tr>
            <tr><td>2</td><td>102</td><td>COUNT</td></tr>
            <tr><td>4</td><td>104</td><td>MAX</td></tr>
            <tr><td>5</td><td>105</td><td>MIN</td></tr>
            <tr><td>6</td><td>106</td><td>PRODUCT</td></tr>
            <tr><td>7</td><td>107</td><td>STDEV</td></tr>
            <tr><td>9</td><td>109</td><td>SUM</td></tr>
            <tr><td>10</td><td>110</td><td>VAR</td></tr>
            </table>
            </p>
            <p class="body">Ref1, ref2, ... are references for which you want to find the subtotal.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSubtotal.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSubtotal.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSubtotal.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSubtotal.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSubtotal.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionText">
            <summary>
            Converts the value to text based on the specified format.
            </summary>
            <remarks>
            <p class="body">Text(value, format_text)</p>
            <p class="body">value is the numeric value which should be formatted.</p>
            <p class="body">format_text is a the number format with which to format the value.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionText.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionText.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionText.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionText.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIfError">
            <summary>
            Returns one of two values depending on whether or not the first value is an error or not.
            </summary>
            <remarks>
            <p class="body">IFERROR(value, value_if_error)</p>
            <p class="body">value is the value to use when it is not an error.</p>
            <p class="body">value_if_error is the value to use if the value argument is an error.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIfError.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIfError.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIfError.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIfError.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCountA">
            <summary>
            Counts how many cells are not blank. 
            </summary>
            <remarks>
            <p class="body">COUNTA(Value1, Value2, ..., ValueN)</p>
            <p class="body">Value1, value2, ... valueN can be references to different data structures,
            such as columns. Each non-blank value is counted.</p>
            <p class="body">
            When a reference is a range reference, only the non-blank values within the range will be counted.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCountA.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCountA.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCountA.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCountA.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCountA.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSearch">
            <summary>
            Returns the 1-based index of one string within another, searching case insensitively.
            </summary>
            <remarks>
            <p class="body">SEARCH(search_text, value, [start_index])</p>
            <p class="body">search_text is the text to find in value.</p>
            <p class="body">value is the text in which to find search_text.</p>
            <p class="body">start_index is the 1-based index in which to start the search (if omitted, the start_index is 1).</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSearch.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An UltraCalcValue represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSearch.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSearch.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSearch.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSearchB">
            <summary>
            Returns the 1-based index of one string within another, searching case insensitively.
            </summary>
            <remarks>
            <p class="body">SEARCHB(search_text, value, [start_index])</p>
            <p class="body">search_text is the text to find in value.</p>
            <p class="body">value is the text in which to find search_text.</p>
            <p class="body">start_index is the 1-based index in which to start the search (if omitted, the start_index is 1).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSearchB.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAveDev">
            <summary>
            Returns the average deviation from the average of all numeric values.
            </summary>
            <remarks>
            <p class="body">AVEDEV(number1, number2, ...)</p>
            <p class="body">Number1, number2, ... are one or more numeric values or references to numeric values.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAveDev.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An UltraCalcValue represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAveDev.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAveDev.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAveDev.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAddress.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAddress.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAddress.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAddress.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAreas.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAreas.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAreas.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAreas.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionColumn.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionColumn.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionColumn.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionColumn.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionColumns.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionColumns.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionColumns.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionColumns.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCorrel.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCorrel.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCovar.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCovar.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionForecast.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionForecast.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionForecast.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionForecast.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHLookup.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHLookup.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHyperlink.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHyperlink.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHyperlink.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHyperlink.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIndex.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIndex.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIndex.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIndex.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIndirect.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIndirect.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIndirect.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIndirect.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIntercept.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIntercept.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLookup.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLookup.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLookup.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLookup.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLookupBase.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLookupBase.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMatch.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An ExcelCalcValue represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMatch.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMatch.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMatch.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMdeterm.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMdeterm.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMdeterm.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMdeterm.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinverse.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinverse.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinverse.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinverse.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMmult.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMmult.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMmult.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMmult.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOffset.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOffset.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOffset.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOffset.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPearson.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPearson.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRow.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRow.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRow.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRow.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRows.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRows.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRows.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRows.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRsq.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRsq.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSlope.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSlope.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSteyx.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSteyx.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumproduct.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumproduct.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumproduct.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumproduct.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumx2my2.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumx2my2.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumx2py2.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumx2py2.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumxmy2.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumxmy2.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTranspose.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTranspose.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTranspose.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTranspose.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTwoMatrixFunction.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTwoMatrixFunction.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionVLookup.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionVLookup.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBinom_Dist.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBinom_Inv.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBinom_Dist_Range.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBinom_Dist_Range.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBinom_Dist_Range.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBinom_Dist_Range.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAverageA">
            <summary>
            Calculates an average (arithmetic mean) for a series of numbers.
            </summary>
            <remarks>
            <p class="body">AVERAGEA(value1, value2, ...)</p>
            <p class="body">Value1, value2, ... are one or more numeric values or
            references to numeric values. An average (arithmetic mean) is calculated
            by taking the sum of all values, and dividing by the number of values.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAverageA.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAverageA.CanParameterBeEnumerable(System.Int32)">
            <summary>
            Determines whether the parameter at the specified index will accept an enumerable reference.
            </summary>
            <param name="parameterIndex">In 0-based index of the parameter.</param>
            <returns>
            True if the parameter at the specified index can accept enumerable references; False otherwise or if the parameter is out of range for this function.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAverageA.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAverageA.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAverageA.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCeilingPrecise">
            <summary>
            Returns a number that is rounded up to the nearest integer or to the nearest multiple of significance.
            </summary>
            <remarks>
            <p class="body">Ceiling.Precise(number, [significance])
            <br/>
            number is the value to be rounded.
            <br/>
            significance is the optional multiple to which the value will be rounded.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCeilingPrecise.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCeilingPrecise.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCeilingPrecise.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCeilingPrecise.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsoCeiling">
            <summary>
            Returns a number that is rounded up to the nearest integer or to the nearest multiple of significance.
            </summary>
            <remarks>
            <p class="body">ISO.Ceiling(number, [significance])
            <br/>
            number is the value to be rounded.
            <br/>
            significance is the optional multiple to which the value will be rounded.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsoCeiling.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsoCeiling.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsoCeiling.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsoCeiling.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEcmaCeiling">
            <summary>
            Returns a number that is rounded up to the nearest integer or to the nearest multiple of significance.
            </summary>
            <remarks>
            <p class="body">ECMA.Ceiling(number, [significance])
            <br/>
            number is the value to be rounded.
            <br/>
            significance is the optional multiple to which the value will be rounded.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEcmaCeiling.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEcmaCeiling.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEcmaCeiling.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEcmaCeiling.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCeilingMath">
            <summary>
            Returns a number that is rounded up to the nearest integer or to the nearest multiple of significance.
            </summary>
            <remarks>
            <p class="body">Ceiling.Math(number, [significance], [mode])
            <br/>
            number is the value to be rounded.
            <br/>
            significance is the optional multiple to which the value will be rounded.
            <br/>
            mode is the optional used to indicate whether negative numbers are rounded to or away from zero.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCeilingMath.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCeilingMath.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCeilingMath.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCeilingMath.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFloorPrecise">
            <summary>
            Returns a number that is rounded down to the nearest integer or to the nearest multiple of significance.
            </summary>
            <remarks>
            <p class="body">Floor.Precise(number, [significance])
            <br/>
            number is the value to be rounded.
            <br/>
            significance is the optional multiple to which the value will be rounded.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFloorPrecise.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFloorPrecise.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFloorPrecise.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFloorPrecise.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFloorMath">
            <summary>
            Returns a number that is rounded down to the nearest integer or to the nearest multiple of significance.
            </summary>
            <remarks>
            <p class="body">Floor.Math(number, [significance], [mode])
            <br/>
            number is the value to be rounded.
            <br/>
            significance is the optional multiple to which the value will be rounded.
            <br/>
            mode is the optional used to indicate whether negative numbers are rounded to or away from zero.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFloorMath.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFloorMath.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFloorMath.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFloorMath.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNumberValue">
            <summary>
            Returns a number converted from text in a locale independent way.
            </summary>
            <remarks>
            <p class="body">NumberValue(text, [decimalSeparator], [groupSeparator])
            <br/>
            text is the string to be converted to a number.
            <br/>
            decimalSeparator is the optional character used to separate the integer and fractional part of the number.
            <br/>
            groupSeparator is the optional character used to separate the groupings of numbers in the integer portion of the number.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNumberValue.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNumberValue.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNumberValue.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNumberValue.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIfs">
            <summary>
            Chooses an outcome based on the result of one or more logical tests provided.
            </summary>
            <remarks>
            <p class="body">Ifs(boolean_test1, result_if_true1, [boolean_test2, result_if_true2] ...)
            <br/>
            boolean_test1 is the logical condition to evaluate.
            <br/>
            result_if_true1 is the value to return if boolean_test1 is true.
            <br/>
            [boolean_test2, result_if_true2], ...) are additional logical values and their corresponding value to return if true.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIfs.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIfs.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIfs.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIfs.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSwitch">
            <summary>
            Chooses an outcome based on comparing one value to a list of specified values returning the matching value's corresponding result.
            </summary>
            <remarks>
            <p class="body">Switch(expression, value1, result1, [default or value2, result2] ...)
            <br/>
            expression is the value to compare against value1, value2, etc.
            <br/>
            value1 is the value to return if boolean_test1 is true.
            <br/>
            result2 is the value to return if valuw1 equals the expression.
            <br/>
            [value2, result2], ...) are additional values and their corresponding result to return if it matches the expression value.
            <br/>
            default is the optional value to return if there are no matches. It is identified by having no corresponding value and must be the last argument.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSwitch.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSwitch.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSwitch.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSwitch.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcatEx">
            <summary>
            Returns a string combining the text from the arguments.
            </summary>
            <remarks>
            <p class="body">Concat(text1, [text2], ...)
            <br/>
            text1 is a string or array of strings, such as a range of cells, whose text is to be combined.
            <br/>
            [text2],... are optional additional string or array of strings, such as a range of cells, whose text is to be combined.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcatEx.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcatEx.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcatEx.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcatEx.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTextJoin">
            <summary>
            Returns a string combining the text from the arguments including a specified delimiter between each.
            </summary>
            <remarks>
            <p class="body">TextJoin(delimiter, ignore_empty, text1, [text2], ...)
            <br/>
            delimiter is a string that is included between each text value.
            <br/>
            ignore_empty is a boolean indicating if empty values should be skipped.
            <br/>
            text1 is a string or array of strings, such as a range of cells, whose text is to be joined.
            <br/>
            [text2],... are optional additional string or array of strings, such as a range of cells, whose text is to be joined.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTextJoin.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTextJoin.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTextJoin.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTextJoin.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCountBlank">
            <summary>
            Returns a count of the number of blank or empty cells in the specified range.
            </summary>
            <remarks>
            <p class="body">CountBlank(range)
            <br/>
            range is the range from which you want to count the blank cells.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCountBlank.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCountBlank.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCountBlank.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCountBlank.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUSDollar">
            <summary>
            Converts a number to text using currency format, with the decimals rounded to the specified place. The format used is $#,##0.00_);($#,##0.00) adjusted for the associated culture.
            </summary>
            <remarks>
            <p class="body">UsDollar(number, [decimals])
            <br/>
            number is the numeric value which should be formatted.
            <br/>
            [decimals] is optional number of digits to the right of the decimal point. If decimals is negative, number is rounded to the left of the decimal point. If you omit decimals, it is assumed to be 2.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUSDollar.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUSDollar.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUSDollar.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUSDollar.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDollar">
            <summary>
            Converts a number to text using currency format, with the decimals rounded to the specified place. The format used is $#,##0.00_);($#,##0.00) adjusted for the associated culture.
            </summary>
            <remarks>
            <p class="body">Dollar(number, [decimals])
            <br/>
            number is the numeric value which should be formatted.
            <br/>
            [decimals] is optional number of digits to the right of the decimal point. If decimals is negative, number is rounded to the left of the decimal point. If you omit decimals, it is assumed to be 2.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDollar.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExact">
            <summary>
            Compares two strings and returns a boolean indicating if they are exactly the same.
            </summary>
            <remarks>
            <p class="body">Exact(text1, text2)
            <br/>
            text1 is the first text string.
            <br/>
            text2 is the first text string.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExact.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExact.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExact.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExact.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSubstitute">
            <summary>
            Compares two strings and returns a boolean indicating if they are exactly the same.
            </summary>
            <remarks>
            <p class="body">Substitute(text, old_text, new_text, [instance_num])
            <br/>
            text is the string containing the text for which you want to substitute some characters.
            <br/>
            old_text is the text you want to replace.
            <br/>
            text is the text that should replace the old_text in the text provided.
            <br/>
            instance_num is optional number representing the occurrence of the old_text in the text. If 
            instance_num is specified then only that instance is replaced; otherwise all occurrences of 
            old_text within the text are replaced with the new_text.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSubstitute.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSubstitute.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSubstitute.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSubstitute.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionProper">
            <summary>
            Capitalizes the first letter in a text string and any other letters in text that follow any character other than a letter. Converts all other letters to lowercase letters.
            </summary>
            <remarks>
            <p class="body">Proper(text)
            <br/>
            text is the string where the leading letter of each alphabetic grouping is capitalized and lower cased.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionProper.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionProper.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionProper.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionProper.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMode">
            <summary>
            Returns the most frequently occurring, or repetitive, value in an array or range of data.
            </summary>
            <remarks>
            <p class="body">Mode(number1, [number2], ...)
            <br/>
            number1 is the first number argument for which you want to calculate the mode.
            <br/>
            [number2], ... are optional numeric arguments for which you want to calculate the mode.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMode.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMode.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMode.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMode.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionModeMult">
            <summary>
            Returns a vertical array of the most frequently occurring, or repetitive values in an array or 
            range of data. For horizontal arrays, use TRANSPOSE(MODE.MULT(number1,number2,...)). This will 
            return more than one result if there are multiple modes.Because this function returns an array 
            of values, it must be entered as an array formula.
            </summary>
            <remarks>
            <p class="body">Mode.Mult(number1, [number2], ...)
            <br/>
            number1 is the first number argument for which you want to calculate the mode.
            <br/>
            [number2], ... are optional numeric arguments for which you want to calculate the mode.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionModeMult.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionModeMult.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionModeSngl">
            <summary>
            Returns the most frequently occurring, or repetitive, value in an array or range of data.
            </summary>
            <remarks>
            <p class="body">Mode.Sngl(number1, [number2], ...)
            <br/>
            number1 is the first number argument for which you want to calculate the mode.
            <br/>
            [number2], ... are optional numeric arguments for which you want to calculate the mode.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionModeSngl.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRank">
            <summary>
            Returns the rank of a number in a list of numbers.
            </summary>
            <remarks>
            <p class="body">Rank(number, ref, [order])
            <br/>
            number is the number whose rank you want to find.
            <br/>
            ref is the list of numbers. Non-numeric vaues are ignored.
            <br/>
            significance is the optional number specifying how to rank the number. Zero indicates that the rank should be calculated as if the list were in descending order. Non-zero indicates that the rank should be calculated as if the list were in ascending order.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRankEqual">
            <summary>
            Returns the rank of a number in a list of numbers. If more than one value has the same rank the top rank of that set is returned.
            </summary>
            <remarks>
            <p class="body">Rank.Eq(number, ref, [order])
            <br/>
            number is the number whose rank you want to find.
            <br/>
            ref is the list of numbers. Non-numeric vaues are ignored.
            <br/>
            significance is the optional number specifying how to rank the number. Zero or omitted indicates that the rank should be calculated as if the list were in descending order. Non-zero indicates that the rank should be calculated as if the list were in ascending order.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRankAverage">
            <summary>
            Returns the rank of a number in a list of numbers. If more than one value has the same rank, the average rank is returned.
            </summary>
            <remarks>
            <p class="body">Rank.Avg(number, ref, [order])
            <br/>
            number is the number whose rank you want to find.
            <br/>
            ref is the list of numbers. Non-numeric vaues are ignored.
            <br/>
            significance is the optional number specifying how to rank the number. Zero indicates that the rank should be calculated as if the list were in descending order. Non-zero indicates that the rank should be calculated as if the list were in ascending order.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPercentRank">
            <summary>
            Returns the rank of a number in a list of numbers as a percentage.
            </summary>
            <remarks>
            <p class="body">PercentRank(array, x, [significance])
            <br/>
            array is the list of values that defines the relative standing.
            <br/>
            x is the the value for which you want its rank.
            <br/>
            significance is the optional number of significant digitis for the returned percentage. If omitted then 3 digits are used.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPercentRankInclusive">
            <summary>
            Returns the rank of a number in a list of numbers as a percentage from 0 to 1 inclusive.
            </summary>
            <remarks>
            <p class="body">PercentRank.Inc(array, x, [significance])
            <br/>
            array is the list of values that defines the relative standing.
            <br/>
            x is the the value for which you want its rank.
            <br/>
            significance is the optional number of significant digitis for the returned percentage. If omitted then 3 digits are used.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPercentRankExclusive">
            <summary>
            Returns the rank of a number in a list of numbers as a percentage from 0 to 1 exclusive.
            </summary>
            <remarks>
            <p class="body">Rank.Exc(array, x, [significance])
            <br/>
            array is the list of values that defines the relative standing.
            <br/>
            x is the the value for which you want its rank.
            <br/>
            significance is the optional number of significant digitis for the returned percentage. If omitted then 3 digits are used.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDevSq">
            <summary>
            Returns the sum of the squares of deviations of data points from their sample mean.
            </summary>
            <remarks>
            <p class="body">DevSq(number1, number2, ...)
            <br/>
            number1, number2, ... are the numbers for which you want to calculate the sum of the squared deviations.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumSq">
            <summary>
            Returns the sum of the squares of the arguments.
            </summary>
            <remarks>
            <p class="body">SumSq(number1, number2, ...)
            <br/>
            number1, number2, ... is the list of numbers for which you want the sum of the squared.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionVar_S">
            <summary>
            Returns the estimated variance based on a sample ignoring logical values and text.
            </summary>
            <remarks>
            <p class="body">Var.S(number1, number2, ...)
            <br/>
            number1, number2, ... are the numbers corresponding to a sample of a population.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionVarA">
            <summary>
            Returns the estimated variance based on a sample.
            </summary>
            <remarks>
            <p class="body">VarA(number1, number2, ...)
            <br/>
            number1, number2, ... are the numbers corresponding to a sample of a population.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionVarP">
            <summary>
            Returns the variance based on the entire population.
            </summary>
            <remarks>
            <p class="body">VarP(number1, number2, ...)
            <br/>
            number1, number2, ... are the numbers corresponding to a population.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionVar_P">
            <summary>
            Returns the variance based on the entire population ignoring logical values and text.
            </summary>
            <remarks>
            <p class="body">Var.P(number1, number2, ...)
            <br/>
            number1, number2, ... are the numbers corresponding to a population.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionVarPA">
            <summary>
            Returns the variance based on the entire population.
            </summary>
            <remarks>
            <p class="body">VarPA(number1, number2, ...)
            <br/>
            number1, number2, ... are the numbers corresponding to a population.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionStDev_S">
            <summary>
            Returns the estimated standard deviation based on a sample ignoring logical values and text.
            </summary>
            <remarks>
            <p class="body">StDev.S(number1, number2, ...)
            <br/>
            number1, number2, ... are the numbers corresponding to a sample of a population.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionStDevA">
            <summary>
            Returns the estimated standard deviation based on a sample.
            </summary>
            <remarks>
            <p class="body">StDevA(number1, number2, ...)
            <br/>
            number1, number2, ... are the numbers corresponding to a sample of a population.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionStDev_P">
            <summary>
            Returns the standard deviation based on the entire population ignoring logical values and text.
            </summary>
            <remarks>
            <p class="body">StDev.P(number1, number2, ...)
            <br/>
            number1, number2, ... are the numbers corresponding to a population.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionStDevPA">
            <summary>
            Returns the standard deviation based on the entire population including text and logical values.
            </summary>
            <remarks>
            <p class="body">StDevPA(number1, number2, ...)
            <br/>
            number1, number2, ... are the numbers corresponding to a population.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPercentile">
            <summary>
            Returns the k-th percentile of values in a range.
            </summary>
            <remarks>
            <p class="body">Percentile(array, k)
            <br/>
            array is the range of data that defines the relative standing.
            <br/>
            k is the percentile value in the range 0 to 1 inclusive.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPercentileInclusive">
            <summary>
            Returns the k-th percentile of values in a range where k is in the range 0 to 1 inclusive.
            </summary>
            <remarks>
            <p class="body">Percentile.Inc(array, k)
            <br/>
            array is the range of data that defines the relative standing.
            <br/>
            k is the percentile value in the range 0 to 1 inclusive.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPercentileExclusive">
            <summary>
            Returns the k-th percentile of values in a range where k is in the range 0 to 1 exclusive.
            </summary>
            <remarks>
            <p class="body">Percentile.Exc(array, k)
            <br/>
            array is the range of data that defines the relative standing.
            <br/>
            k is the percentile value in the range 0 to 1 exclusive.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionQuartile">
            <summary>
            Returns the quartile of a dataset.
            </summary>
            <remarks>
            <p class="body">Quartile(array, quart)
            <br/>
            array is the range of numeric values for which you want the quartile value.
            <br/>
            quart indicates which value to return.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionQuartileInclusive">
            <summary>
            Returns the quartile of a dataset based on a percentile value from 0 to 1 inclusive.
            </summary>
            <remarks>
            <p class="body">Quartile.Inc(array, quart)
            <br/>
            array is the range of numeric values for which you want the quartile value.
            <br/>
            quart indicates which value to return.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionQuartileExclusive">
            <summary>
            Returns the quartile of a dataset based on a percentile value from 0 to 1 exclusive.
            </summary>
            <remarks>
            <p class="body">Quartile.Exc(array, quart)
            <br/>
            array is the range of numeric values for which you want the quartile value.
            <br/>
            quart indicates which value to return.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSmall">
            <summary>
            Returns the k-th smallest value in a data set.
            </summary>
            <remarks>
            <p class="body">Small(array, k)
            <br/>
            array is the range of numeric values for which you want the k-th smallest value.
            <br/>
            k is the position from the smallest in the range of values whose value is to be returned.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLarge">
            <summary>
            Returns the k-th largest value in a data set.
            </summary>
            <remarks>
            <p class="body">Large(array, k)
            <br/>
            array is the range of numeric values for which you want the k-th largest value.
            <br/>
            k is the position from the largest in the range of values whose value is to be returned.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSec">
            <summary>
            Returns the secant of an angle.
            </summary>
            <remarks>
            <p class="body">Sec(number)
            <br/>
            number is the angle in radians for which you want the secant.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSecH">
            <summary>
            Returns the hyperbolic secant of an angle.
            </summary>
            <remarks>
            <p class="body">SecH(number)
            <br/>
            number is the angle in radians for which you want the hyperbolic secant.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCsc">
            <summary>
            Returns the cosecant of an angle.
            </summary>
            <remarks>
            <p class="body">csc(number)
            <br/>
            number is the angle in radians for which you want the cosecant.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCscH">
            <summary>
            Returns the hyperbolic cosecant of an angle.
            </summary>
            <remarks>
            <p class="body">CscH(number)
            <br/>
            number is the angle in radians for which you want the hyperbolic cosecant.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCot">
            <summary>
            Returns the cotangent of an angle.
            </summary>
            <remarks>
            <p class="body">Cot(number)
            <br/>
            number is the angle in radians for which you want the cotangent.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCotH">
            <summary>
            Returns the hyoerbolic cotangent of an angle.
            </summary>
            <remarks>
            <p class="body">CotH(number)
            <br/>
            number is the angle in radians for which you want the hyperbolic cotangent.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAcot">
            <summary>
            Returns the arccotangent, or inverse cotangent, of an angle.
            </summary>
            <remarks>
            <p class="body">Acot(number)
            <br/>
            number is the angle in radians for which you want the arccotagent.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAcotH">
            <summary>
            Returns the inverse hyperbolic cotagent of an angle.
            </summary>
            <remarks>
            <p class="body">AcotH(number)
            <br/>
            number is the angle in radians for which you want the hyperbolic arccotagent.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBitAnd">
            <summary>
            Returns the bitwise 'AND' of two numbers.
            </summary>
            <remarks>
            <p class="body">BitAnd(number1, number2)
            <br/>
            number1 is a numeric value 0 or greater.
            <br/>
            number2 is a numeric value 0 or greater.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBitOr">
            <summary>
            Returns the bitwise 'OR' of two numbers.
            </summary>
            <remarks>
            <p class="body">BitOr(number1, number2)
            <br/>
            number1 is a numeric value 0 or greater.
            <br/>
            number2 is a numeric value 0 or greater.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBitXor">
            <summary>
            Returns the bitwise 'XOR' of two numbers.
            </summary>
            <remarks>
            <p class="body">BitAnd(number1, number2)
            <br/>
            number1 is a numeric value 0 or greater.
            <br/>
            number2 is a numeric value 0 or greater.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBitLShift">
            <summary>
            Returns a number shifted left by the specified number of bits.
            </summary>
            <remarks>
            <p class="body">BitLShift(number, shift_amount)
            <br/>
            number is an integer value 0 or greater.
            <br/>
            shift_amount is the number of hits to shift left.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBitRShift">
            <summary>
            Returns a number shifted right by the specified number of bits.
            </summary>
            <remarks>
            <p class="body">BitRShift(number, shift_amount)
            <br/>
            number is an integer value 0 or greater.
            <br/>
            shift_amount is the number of hits to shift right.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFisher">
            <summary>
            Returns the Fisher transformation at x.
            </summary>
            <remarks>
            <p class="body">Fisher(x)
            <br/>
            x is a numeric value for which you want the transformation.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFisherInv">
            <summary>
            Returns the inverse of the Fisher transformation.
            </summary>
            <remarks>
            <p class="body">FisherInv(y)
            <br/>
            y is a numeric value for which you want to perform the inverse of the transformation.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIfNa">
            <summary>
            Returns the value you specify if the formula returns the #N/A error; otherwise returns the result of the formula.
            </summary>
            <remarks>
            <p class="body">IfNA(value, value_if_na)
            <br/>
            value is the argument that is checked for the #N/A error value.
            <br/>
            value_if_na is the value to return if the formula evaluates to the #N/A error value.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionArabic">
            <summary>
            Returns the conversion of a roman numeral to an arabic numeral.
            </summary>
            <remarks>
            <p class="body">Arabic(text)
            <br/>
            text is a string containing the roman numeral to convert.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXor">
            <summary>
            Returns the logical exclusive Or of all the arguments.
            </summary>
            <remarks>
            <p class="body">XOR(logical1, logical2, ...)
            <br/>
            logical1, logical2, ... are logical values to calculate.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSkew">
            <summary>
            Returns the skewness of a distribution.
            </summary>
            <remarks>
            <p class="body">Skew(number1, number2, ...)
            <br/>
            number1, number2, ... are numeric values for which you want to calculate the skewness.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSkew_P">
            <summary>
            Returns the skewness of a distribution based on a population.
            </summary>
            <remarks>
            <p class="body">Skew.P(number1, number2, ...)
            <br/>
            number1, number2, ... are numeric values for which you want to calculate the population skewness.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionClean">
            <summary>
            Removes all non-printable characters from text such as 0-31, 129, 141, 143, 144, 157.
            </summary>
            <remarks>
            <p class="body">Clean(text)
            <br/>
            text is the string for which you want to remove non-printable characters.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBase">
            <summary>
            Converts a number into a text representation with the given radix/base.
            </summary>
            <remarks>
            <p class="body">Base(number, radix, [min_length])
            <br/>
            number is the positive integer that you want to convert.
            <br/>
            radix is base radix that you want to convert the number into.
            <br/>
            min_length is the optional minimum length of the returned string.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDecimal">
            <summary>
            Converts a text representation of a number in a given base into a decimal number.
            </summary>
            <remarks>
            <p class="body">Decimal(text, radix)
            <br/>
            text is the string in the specified base to be converted to a decimal value.
            <br/>
            radix is base radix that is used to parse the text into a decimal value.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionStandardize">
            <summary>
            Returns a normalized value from a distribution.
            </summary>
            <remarks>
            <p class="body">Standardize(x, mean, standard_dev)
            <br/>
            x is the value you want to normalize.
            <br/>
            mean is arithmetic mean of the distribution.
            <br/>
            standard_dev is standard deviation of the distribution.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEffect">
            <summary>
            Returns the effective annual interest rate given the nominal interest rate and the number of compound periods per year.
            </summary>
            <remarks>
            <p class="body">Effect(nominal_rate, npery)
            <br/>
            nominal_rate is the nominal interest rate.
            <br/>
            npery is the number of compouding periods per year.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNominal">
            <summary>
            Returns the nominal annual interest rate given the effective rate and the number of compound periods per year.
            </summary>
            <remarks>
            <p class="body">Nominal(effective_rate, npery)
            <br/>
            effective_rate is the effective interest rate.
            <br/>
            npery is the number of compound periods per year.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRRI">
            <summary>
            Returns an equivalent interest rate for the growth of an investment.
            </summary>
            <remarks>
            <p class="body">RRI(nper, pv, fv)
            <br/>
            nper is the number of periods for an investment.
            <br/>
            pv is the present value of the investment.
            <br/>
            fv is the future value of the investment.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPDuration">
            <summary>
            Returns the number of periods required by an investment to reach a specified value.
            </summary>
            <remarks>
            <p class="body">PDuration(rate, pv, fv)
            <br/>
            rate is the interest rate per period.
            <br/>
            pv is present value of the investment.
            <br/>
            fv is the future value of the investment.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDays">
            <summary>
            Returns the number of days between two dates.
            </summary>
            <remarks>
            <p class="body">Days(end_date, start_date)
            <br/>
            end_date is the end date for which you want the difference.
            <br/>
            start_date is the start date for which you want the difference.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionYearFrac">
            <summary>
            Returns the fraction of the year represented by the number of whole days between two dates.
            </summary>
            <remarks>
            <p class="body">YearFrac(start_date, end_date, [basis])
            <br/>
            start_date is the start date for which you want the difference.
            <br/>
            end_date is the end date for which you want the difference.
            <br/>
            basis is the optional type of day count basis to use.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionProbFunction">
            <summary>
            Returns the probability that values in a range are between two limits. If upper_limit is not supplied then it returns the probability that values in x_range are equal to lower_limit.
            </summary>
            <remarks>
            <p class="body">Prob(x_range, prob_range, [lower_limit], [upper_limit])
            <br/>
            X_range is the range of numeric values of x with which there are associated probabilities.
            <br/>
            Prob_range is a set of probabilities associated with values in x_range.
            <br/>
            Lower_limit is the optional lower bound on the value for which you want a probability.
            <br/>
            Upper_limit is the optional upper bound on the value for which you want a probability.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPermutationA">
            <summary>
            Returns the number of permutations for a given number of objects with repetitions that can be selected from the total objects.
            </summary>
            <remarks>
            <p class="body">PermutationA(number, numberChosen)
            <br/>
            Number is the total number of items.    
            <br/>
            NumberChosen is the number of items chosen in each permutation.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPermutationA.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPermutationA.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPermutationA.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPermutationA.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPermut">
            <summary>
            Returns the number of permutations for a given number of objects that can be selected from the total objects.
            </summary>
            <remarks>
            <p class="body">Permut(number, numberChosen)
            <br/>
            Number is the total number of items.    
            <br/>
            NumberChosen is the number of items chosen in each permutation.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPermut.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPermut.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPermut.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPermut.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPoisson">
            <summary>
            Returns the number of permutations for a given number of objects that can be selected from the total objects.
            </summary>
            <remarks>
            <p class="body">Poisson(x, mean, cumulative)
            <br/>
            X is the number of events.    
            <br/>
            Mean is the expected numeric value.
            <br/>
            Cumulative is a logical value that determines the form of the probability distribution returned. If cumulative is TRUE, POISSON returns the cumulative Poisson probability that the number of random events occurring will be between zero and x inclusive; if FALSE, it returns the Poisson probability mass function that the number of events occurring will be exactly x..
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPoisson.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPoisson.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPoisson.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPoisson.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPoissonDist">
            <summary>
            Returns the number of permutations for a given number of objects that can be selected from the total objects.
            </summary>
            <remarks>
            <p class="body">Poisson.Dist(x, mean, cumulative)
            <br/>
            X is the number of events.    
            <br/>
            Mean is the expected numeric value.
            <br/>
            Cumulative is a logical value that determines the form of the probability distribution returned. If cumulative is TRUE, POISSON returns the cumulative Poisson probability that the number of random events occurring will be between zero and x inclusive; if FALSE, it returns the Poisson probability mass function that the number of events occurring will be exactly x..
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPoissonDist.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErf">
            <summary>
            Returns the error function between the lower and upper limit.
            </summary>
            <remarks>
            <p class="body">Erf(lowerLimit, [upperLimit])
            <br/>
            LowerLimit is the lower bound for the error function.    
            <br/>
            UpperLimit is an optional upper bound for the error function. If the upperLimit is not specified the return value is for the error function between 0 and the lowerLimit.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErf.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErf.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErf.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErf.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErfPrecise">
            <summary>
            Returns the error function.
            </summary>
            <remarks>
            <p class="body">Erf.Precise(x)
            <br/>
            X is the lower bound for the error function.    
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErfPrecise.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErfPrecise.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErfPrecise.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErfPrecise.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErfc">
            <summary>
            Returns the complementary error function.
            </summary>
            <remarks>
            <p class="body">Erfc(x)
            <br/>
            X is the lower bound for the error function.    
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErfc.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErfc.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErfc.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErfc.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErfcPrecise">
            <summary>
            Returns the complementary error function.
            </summary>
            <remarks>
            <p class="body">Erfc.Precise(x)
            <br/>
            X is the lower bound for the error function.    
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErfcPrecise.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExponDist">
            <summary>
            Returns the exponential distribution.
            </summary>
            <remarks>
            <p class="body">ExponDist(x, lambda, cumulative)
            <br/>
            X is the value of the function.    
            <br/>
            Lambda is the parameter value.
            <br/>
            Cumulative is a logical value that indicates which form of the exponential function to 
            provide. If cumulative is TRUE, it returns the cumulative distribution function; if FALSE, 
            it returns the probability density function.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExponDist.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExponDist.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExponDist.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExponDist.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExpon_Dist">
            <summary>
            Returns the exponential distribution.
            </summary>
            <remarks>
            <p class="body">Expon.Dist(x, lambda, cumulative)
            <br/>
            X is the value of the function.    
            <br/>
            Lambda is the parameter value.
            <br/>
            Cumulative is a logical value that indicates which form of the exponential function to 
            provide. If cumulative is TRUE, it returns the cumulative distribution function; if FALSE, 
            it returns the probability density function.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExpon_Dist.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeibull">
            <summary>
            Returns the Weibull distribution.
            </summary>
            <remarks>
            <p class="body">Weibull(x, alpha, beta, cumulative)
            <br/>
            X is the value at which to evaluate the function.
            <br/>
            Alpha is a parameter to the distribution.
            <br/>
            Beta is a parameter to the distribution.
            <br/>
            Cumulative is a logical value that indicates which form of the Weibull function to 
            provide. If cumulative is TRUE, it returns the cumulative distribution function; if FALSE, 
            it returns the probability density function.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeibull.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeibull.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeibull.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeibull.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeibullDist">
            <summary>
            Returns the Weibull distribution.
            </summary>
            <remarks>
            <p class="body">Weibull.Dist(x, alpha, beta, cumulative)
            <br/>
            X is the value at which to evaluate the function.
            <br/>
            Alpha is a parameter to the distribution.
            <br/>
            Beta is a parameter to the distribution.
            <br/>
            Cumulative is a logical value that indicates which form of the Weibull function to 
            provide. If cumulative is TRUE, it returns the cumulative distribution function; if FALSE, 
            it returns the probability density function.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeibullDist.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrimMean">
            <summary>
            Returns the mean of the interior of a data set.
            </summary>
            <remarks>
            <p class="body">TrimMean(array, percent)
            <br/>
            Array is the array or range of values to trim and average.
            <br/>
            Percent is the fractional number of data points to exclude from the calculation.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrimMean.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrimMean.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrimMean.MinArgs">
            <summary>
            Minimum number of arguments required for the function.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrimMean.MaxArgs">
            <summary>
            Maximum number of arguments required for the function.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAverageIfs.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An ExcelCalcValue represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAverageIfs.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAverageIfs.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAverageIfs.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCell.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An ExcelCalcValue represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCell.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCell.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCell.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCountIfs.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An ExcelCalcValue represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCountIfs.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCountIfs.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCountIfs.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCovarianceP.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCovarianceP.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCovarianceS.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack.
            </summary>
            <param name="numberStack">Formula number stack containing function arguments.</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue"/> that represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCovarianceS.Name">
            <summary>
            Function name used to reference the function in a formula.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFormulaText">
            <summary>
            Returns the formula as a string.
            </summary>
            <remarks>
            <p class="body">FormulaText(reference)
            <br/>
            reference is the reference to a cell or range of cells.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsFormula">
            <summary>
            Returns a boolean indicating if there is a reference to a cell with a formula.
            </summary>
            <remarks>
            <p class="body">IsFormula(reference)
            <br/>
            reference is the reference to a cell or range of cells.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMaxIfs.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An ExcelCalcValue represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMaxIfs.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMaxIfs.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMaxIfs.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinIfs.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An ExcelCalcValue represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinIfs.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinIfs.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinIfs.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSheet">
            <summary>
            Returns the sheet number of the reference sheet.
            </summary>
            <remarks>
            <p class="body">Sheet([value])
            <br/>
            value is the optional is the name of a sheet or a reference for which you want the sheet number. 
            If value is omitted, SHEET returns the number of the sheet that contains the function.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSheets">
            <summary>
            Returns the number of sheets in a reference.
            </summary>
            <remarks>
            <p class="body">Sheets([reference])
            <br/>
            reference is the optional reference for which you want to know the number of sheets it 
            contains. If reference is omitted, SHEETS returns the number of sheets in the workbook 
            that contains the function.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumIfs.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>
            Evaluates the function against the arguments on the number stack
            </summary>
            <param name="numberStack">Formula number stack containing function arguments</param>
            <param name="argumentCount">Denotes the number of function arguments pushed onto the number stack.</param>
            <returns>An ExcelCalcValue represents the result of the function evaluation.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumIfs.Name">
            <summary>
            Function name used to reference the function in a formula
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumIfs.MinArgs">
            <summary>
            Minimum number of arguments required for the function
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumIfs.MaxArgs">
            <summary>
            Maximum number of arguments required for the function
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.FormulaParseException">
            <summary>
            The exception thrown when a formula parse error occurs.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormulaParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Documents.Excel.FormulaParseException"/> class with the serialized data.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="info"/> is null.
            </exception>
            <param name="info">The serialized object data.</param>
            <param name="context">The context information about the source serialized stream.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormulaParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates the specified <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with this object's data.
            </summary>
            <param name="info">The serialized object data.</param>
            <param name="context">The context information about the destination serialized stream.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="info"/> is null.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormulaParseException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Documents.Excel.FormulaParseException"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormulaParseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Documents.Excel.FormulaParseException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormulaParseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Documents.Excel.FormulaParseException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of this exception.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormulaParseException.#ctor(System.Int32,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Documents.Excel.FormulaParseException"/> class with a specified error message 
            and information which helps determine the location of the parse error in the formula.
            </summary>
            <param name="charIndexOfError">The character index in the <paramref name="formulaValue"/> parameter where the parse error occurred.</param>
            <param name="formulaValue">The formula which had the error being parsed.</param>
            <param name="message">The message that describes the error.</param>
            <param name="portionWithError">The portion of the formula which had the error being parsed.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormulaParseException.CharIndexOfError">
            <summary>
            Gets the character index in the <see cref="P:Infragistics.Documents.Excel.FormulaParseException.FormulaValue"/> at which the parse error occurred.
            </summary>
            <value>The character index in the FormulaValue at which the parse error occurred.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormulaParseException.FormulaValue">
            <summary>
            Gets the formula string which had the error being parsed.
            </summary>
            <value>The formula string which had the error being parsed.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormulaParseException.Message">
            <summary>
            Gets the error message and the portion of the formula with the error.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormulaParseException.PortionWithError">
            <summary>
            Gets the portion of the formula which contains the error.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.DataValidationRule">
            <summary>
            Base class for all data validations rules which can be applied to a cell.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DataValidationRules"/>
            <seealso cref="T:Infragistics.Documents.Excel.AnyValueDataValidationRule"/>
            <seealso cref="T:Infragistics.Documents.Excel.ListDataValidationRule"/>
            <seealso cref="T:Infragistics.Documents.Excel.CustomDataValidationRule"/>
            <seealso cref="T:Infragistics.Documents.Excel.OneConstraintDataValidationRule"/>
            <seealso cref="T:Infragistics.Documents.Excel.TwoConstraintDataValidationRule"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRule.Clone">
            <summary>
            Creates a copy of this rule which can be applied to other worksheets.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRule.IsEquivalentTo(Infragistics.Documents.Excel.DataValidationRule)">
            <summary>
            Indicates if this rule is structurally equivalent to another.
            </summary>
            <param name="other">The rule to compare against</param>
            <returns>Returns true if the specified <paramref name="other"/> has the same settings as this rule.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.DataValidationRule.ErrorMessageDescription">
            <summary>
            Gets or sets the description which appears in the dialog box when an invalid value is applied to a cell
            in Microsoft Excel.
            </summary>
            <remarks>
            <p class="body">
            This value is only used when <see cref="P:Infragistics.Documents.Excel.DataValidationRule.ShowErrorMessageForInvalidValue"/> is True.
            </p>
            <p class="note">
            <b>Note:</b> the title cannot be more than 225 characters.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            Occurs when the specified value is longer than 225 characters.
            </exception>
            <value>The description to show the user or null to use a default error description.</value>
            <seealso cref="P:Infragistics.Documents.Excel.DataValidationRule.ErrorMessageTitle"/>
            <seealse cref="P:Infragistics.Documents.Excel.DataValidationRule.ShowErrorMessageForInvalidValue"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.DataValidationRule.ErrorMessageTitle">
            <summary>
            Gets or sets the title which appears in the dialog box when an invalid value is applied to a cell
            in Microsoft Excel.
            </summary>
            <remarks>
            <p class="body">
            This value is only used when <see cref="P:Infragistics.Documents.Excel.DataValidationRule.ShowErrorMessageForInvalidValue"/> is True.
            </p>
            <p class="note">
            <b>Note:</b> the title cannot be more than 32 characters.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            Occurs when the specified value is longer than 32 characters.
            </exception>
            <value>The title to show the user or null to use a default error dialog title.</value>
            <seealso cref="P:Infragistics.Documents.Excel.DataValidationRule.ErrorMessageDescription"/>
            <seealse cref="P:Infragistics.Documents.Excel.DataValidationRule.ShowErrorMessageForInvalidValue"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.DataValidationRule.ErrorStyle">
            <summary>
            Gets or sets the value which indicates whether the value is allowed when it is invalid and which options are given to 
            the user in the error dialog shown by Microsoft Excel.
            </summary>
            <remarks>
            <p class="body">
            This value is only used when <see cref="P:Infragistics.Documents.Excel.DataValidationRule.ShowErrorMessageForInvalidValue"/> is True.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when the value is not a member of the <see cref="T:Infragistics.Documents.Excel.DataValidationErrorStyle"/> enumeration.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.DataValidationRule.ShowErrorMessageForInvalidValue"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.DataValidationRule.InputMessageDescription">
            <summary>
            Gets or sets the description in the tooltip which appears when the user selects the cell in Microsoft Excel.
            </summary>
            <remarks>
            <p class="body">
            This value is only used when <see cref="P:Infragistics.Documents.Excel.DataValidationRule.ShowInputMessage"/> is True.
            </p>
            <p class="note">
            <b>Note:</b> the description cannot be more than 255 characters.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            Occurs when the specified value is longer than 255 characters.
            </exception>
            <value>The description to show the user in the tooltip.</value>
            <seealso cref="P:Infragistics.Documents.Excel.DataValidationRule.InputMessageTitle"/>
            <seealse cref="P:Infragistics.Documents.Excel.DataValidationRule.ShowInputMessage"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.DataValidationRule.InputMessageTitle">
            <summary>
            Gets or sets the title in the tooltip which appears when the user selects the cell in Microsoft Excel.
            </summary>
            <remarks>
            <p class="body">
            This value is only used when <see cref="P:Infragistics.Documents.Excel.DataValidationRule.ShowInputMessage"/> is True.
            </p>
            <p class="note">
            <b>Note:</b> the title cannot be more than 32 characters.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            Occurs when the specified value is longer than 32 characters.
            </exception>
            <value>The title to show the user in the tooltip.</value>
            <seealso cref="P:Infragistics.Documents.Excel.DataValidationRule.InputMessageDescription"/>
            <seealse cref="P:Infragistics.Documents.Excel.DataValidationRule.ShowInputMessage"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.DataValidationRule.ShowErrorMessageForInvalidValue">
            <summary>
            Gets or sets the value which indicates whether the error dialog should appear in Microsoft Excel when invalid data 
            is entered in the cell.
            </summary>
            <remarks>
            <p class="body">
            When the value is False, invalid data can be entered into cells, but when the user chooses to subsequently circle 
            invalid values in Microsoft Excel, the cell will be circled.
            </p>
            </remarks>
            <value>True to show the error dialog for invalid cell data; False otherwise.</value>
            <seealso cref="P:Infragistics.Documents.Excel.DataValidationRule.ErrorMessageDescription"/>
            <seealso cref="P:Infragistics.Documents.Excel.DataValidationRule.ErrorMessageTitle"/>
            <seealso cref="P:Infragistics.Documents.Excel.DataValidationRule.ErrorStyle"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.DataValidationRule.ShowInputMessage">
            <summary>
            Gets or sets the value which indicates whether to show the user an input prompt tooltip when the user selects 
            the cell in Microsoft Excel.
            </summary>
            <remarks>
            <p class="body">
            The input prompt will only be shown if this value is True and the <see cref="P:Infragistics.Documents.Excel.DataValidationRule.InputMessageDescription"/> is not null.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.DataValidationRule.InputMessageDescription"/>
            <seealso cref="P:Infragistics.Documents.Excel.DataValidationRule.InputMessageTitle"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.FormattedString">
            <summary>
            Represents a string with mixed formatting in a cell or cell comment.
            </summary>
            <remarks>
            <p class="body">
            The formatting of the string is controlled in a similar fashion as it would be in Microsoft Excel. In Excel, the user
            must select a portion of the text and set the various formatting properties of that selected text. 
            </p>
            <p class="body">
            With the FormattedString, a portion of the string is "selected" by calling either <see cref="M:Infragistics.Documents.Excel.FormattedString.GetFont(System.Int32)">GetFont(int)</see> or 
            <see cref="M:Infragistics.Documents.Excel.FormattedString.GetFont(System.Int32,System.Int32)">GetFont(int,int)</see>. Formatting properties are then set on the returned 
            <see cref="T:Infragistics.Documents.Excel.FormattedStringFont"/> and all characters in the font's selection range are given these properties.
            </p>
            <p class="body">
            Getting the formatting properties of a <see cref="T:Infragistics.Documents.Excel.FormattedStringFont"/> will return the formatting of the first 
            character in font's selection range. This is similar to Excel, which will update the formatting interface to 
            reflect the formatting of the first character in a selection range when a cell's text is selected.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedString.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Documents.Excel.FormattedString"/> class.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="unformattedString"/> is null.
            </exception>
            <param name="unformattedString">The string that will be displayed in the cell with the formatting.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedString.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this <see cref="T:Infragistics.Documents.Excel.FormattedString"/>.
            </summary>
            <param name="obj">The value to test for equality to this FormattedString.</param>
            <returns>
            True if the <paramref name="obj"/> is a FormattedString instance and it contains the same unformatted 
            string and formatting as this FormattedString; False otherwise.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedString.GetHashCode">
            <summary>
            Calculates the has code for this <see cref="T:Infragistics.Documents.Excel.FormattedString"/>.
            </summary>
            <returns>A number which can be used in hashing functions.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedString.ToString">
            <summary>
            Returns the <see cref="T:System.String"/> that represents this <see cref="T:Infragistics.Documents.Excel.FormattedString"/>.
            This is just the unformatted string.
            </summary>
            <remarks>
            <p class="body">
            This will return the same value as <see cref="P:Infragistics.Documents.Excel.FormattedString.UnformattedString"/>.
            </p>
            </remarks>
            <returns>The String that represents this FormattedString.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedString.Clone">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.FormattedString"/> that is a copy of this one.
            </summary>
            <remarks>
            <p class="body">
            This should be used if the same formatted string needs to be used in multiple cells.
            The FormattedString class can only exist as the <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Value"/>
            of one cell at a time. If the FormattedString is already the value of a cell, and needs
            to be set as the value of another cell, clone the FormattedString and set the returned
            clone as value of the cell.
            </p>
            <p class="body">
            The cloned FormattedString only takes its original configuration for this instance.
            If this instance is cloned and than changed, the clone will not be changed as well; it will
            remain as it was when it was cloned.
            </p>
            </remarks>
            <returns>A new FormattedString that is a copy of this one.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedString.GetFont(System.Int32)">
            <summary>
            Gets the font which controls the formatting properties in the string from the specified start index to 
            the end of the string.
            </summary>
            <remarks>
            <p class="body">
            If the start index is greater than or equal to the length of the unformatted string, no exception 
            will be thrown. It will be thrown later when one of the formatting properties of the returned
            <see cref="T:Infragistics.Documents.Excel.FormattedStringFont"/> is set.
            </p>
            </remarks>
            <param name="startIndex">The index of the first character the returned font controls.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="startIndex"/> is less than zero.
            </exception>
            <returns>
            A FormattedStringFont instance which controls the formatting of the end portion of the string.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedString.GetFont(System.Int32,System.Int32)">
            <summary>
            Gets the font which controls the formatting properties in the string from the specified start index for
            the specified number of characters.
            </summary>
            <remarks>
            <p class="body">
            If the start index is greater than or equal to the length of the unformatted string, no exception 
            will be thrown. It will be thrown later when one of the formatting properties of the returned
            <see cref="T:Infragistics.Documents.Excel.FormattedStringFont"/> is set.
            </p>
            </remarks>
            <param name="startIndex">The index of the first character the returned font controls.</param>
            <param name="length">The number of characters after the start index controlled by the returned font.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="startIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="length"/> is less than one. A zero length string cannot be controlled by a formatting font.
            </exception>
            <returns>
            A FormattedStringFont instance which controls the formatting of a portion of the string.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedString.GetFormattingRuns">
            <summary>
            Gets the collection of formatting runs representing contiguous blocks of similar formatting starting at the beginning of the string.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedString.UnformattedString">
            <summary>
            Gets or sets the unformatted string.
            </summary>
            <remarks>
            <p class="body">
            If the new unformatted string assigned is shorter than the old unformatted string, all formatting
            outside the range of the new value will be lost.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            The value assigned is a null string.
            </exception>
            <value>The unformatted string.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.FormattedText">
            <summary>
            Represents text with multiple paragraphs and mixed formatting in a shape.
            </summary>
            <remarks>
            <p class="body">
            The formatting of the string is controlled in a similar fashion as it would be in Microsoft Excel. In Excel, the user
            must select a portion of the text and set the various formatting properties of that selected text. 
            </p>
            <p class="body">
            With the FormattedText, a portion of the text is "selected" by calling either <see cref="M:Infragistics.Documents.Excel.FormattedText.GetFont(System.Int32)"/> 
            or <see cref="M:Infragistics.Documents.Excel.FormattedText.GetFont(System.Int32,System.Int32)"/>. Formatting properties are then set on the returned 
            <see cref="T:Infragistics.Documents.Excel.FormattedTextFont"/> and all characters in the font's selection range are given these properties.
            </p>
            <p class="body">
            Getting the formatting properties of a <see cref="T:Infragistics.Documents.Excel.FormattedTextFont"/> will return the formatting of the first 
            character in font's selection range.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShapeWithText.Text"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedText.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Documents.Excel.FormattedText"/> class.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="unformattedString"/> is null.
            </exception>
            <param name="unformattedString">
            The string that will be displayed in the shape. Each line of the string will be placed in a separate paragraph of the 
            <see cref="P:Infragistics.Documents.Excel.FormattedText.Paragraphs"/> collection.
            </param>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedText.ToString">
            <summary>
            Returns the string that represents the <see cref="T:Infragistics.Documents.Excel.FormattedText"/>, which is the unformatted string.
            </summary>
            <returns>The string that represents the FormattedText.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedText.Clone">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.FormattedText"/> that is a copy of this one.
            </summary>
            <remarks>
            <p class="body">
            This should be used if the same formatted text needs to be used in multiple shapes.
            The FormattedText class can only exist as the <see cref="P:Infragistics.Documents.Excel.WorksheetShapeWithText.Text"/>
            of one shape at a time. If the FormattedText is already the text of a shape, and needs
            to be set as the text of another shape, clone the FormattedText and set the returned
            clone as text of the shape.
            </p>
            <p class="body">
            The cloned FormattedText only takes its original configuration for this instance.
            If this instance is cloned and than changed, the clone will not be changed as well; it will
            remain as it was when it was cloned.
            </p>
            </remarks>
            <returns>A new FormattedText that is a copy of this one.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedText.GetFont(System.Int32)">
            <summary>
            Gets the font which controls the formatting properties in the string from the specified start index to 
            the end of the string.
            </summary>
            <remarks>
            <p class="body">
            If the start index is greater than or equal to the length of the unformatted string, no exception 
            will be thrown. It will be thrown later when one of the formatting properties of the returned
            <see cref="T:Infragistics.Documents.Excel.FormattedTextFont"/> is set.
            </p>
            </remarks>
            <param name="startIndex">The index of the first character the returned font controls.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="startIndex"/> is less than zero.
            </exception>
            <returns>
            A FormattedTextFont instance which controls the formatting of the end portion of the string.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedText.GetFont(System.Int32,System.Int32)">
            <summary>
            Gets the font which controls the formatting properties in the string from the specified start index for
            the specified number of characters.
            </summary>
            <remarks>
            <p class="body">
            If the start index is greater than or equal to the length of the unformatted string, no exception 
            will be thrown. It will be thrown later when one of the formatting properties of the returned
            <see cref="T:Infragistics.Documents.Excel.FormattedTextFont"/> is set.
            </p>
            </remarks>
            <param name="startIndex">The index of the first character the returned font controls.</param>
            <param name="length">The number of characters after the start index controlled by the returned font.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="startIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="length"/> is less than one. A zero length string cannot be controlled by a formatting font.
            </exception>
            <returns>
            A FormattedTextFont instance which controls the formatting of a portion of the string.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedText.GetFormattingRuns">
            <summary>
            Gets the collection of formatting runs representing contiguous blocks of similar formatting starting at the beginning of the string.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedText.Paragraphs">
            <summary>
            Gets the paragraphs in the formatted text.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedText.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment of the formatted text in the owning shape.
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The specified value is not defined in the <see cref="T:Infragistics.Documents.Excel.VerticalTextAlignment"/> enumeration.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedText.HorizontalAlignment">
            <summary>
            Used only for round-tripping
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Formula">
            <summary>
            Represents a formula for a cell or group of cells.
            </summary>
            <remarks>
            <p class="body">
            Formulas provide a way to show dynamic values in a cell. The value could be based any number of factors, such as 
            the values of other cells and the time of day.  Those alternate cells can even exist in different workbook files
            on the user's machine or on the internet.
            </p>
            <p class="body">
            See Microsoft Excel help for more information on formulas.
            </p>
            <p class="body">
            Use one of the Parse or TryParse overloads to create a new formula.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.ToString">
            <summary>
            Converts the formula to a string representation, similar to the string with which it was created. 
            This uses the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> with which the formula was created to create cell
            reference strings.
            </summary>
            <returns>The string representing the formula.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetCell)">
            <summary>
            Applies the formula to the specified cell.
            </summary>
            <remarks>
            <p class="body">
            This method, or one of the other ApplyTo overrides must be used to set the value of a cell to a formula.
            </p>
            <p class="body">
            After this method returns, the <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Formula"/> of the specified cell will return the formula.
            </p>
            </remarks>
            <param name="cell">The cell to apply the formula to.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="cell"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="cell"/> is part of an array formula or data table which is not confined to just the cell.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Value"/>
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion[])"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.ApplyFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyArrayFormula(System.String)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>
            Applies the formula to the specified region of cells.
            </summary>
            <remarks>
            <p class="body">
            This method, or one of the other ApplyTo overrides must be used to set the value of a cell to a formula.
            </p>
            <p class="body">
            After this method returns, the <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Formula"/> of all cells in the specified region will
            return the formula.
            </p>
            </remarks>
            <param name="region">The region of cells to apply the formula to.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="region"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="region"/> contains an array formula or data table which extends outside the region.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetCell)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion[])"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.ApplyFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyArrayFormula(System.String)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion[])">
            <summary>
            Applies the formula to all specified regions of cells.
            </summary>
            <remarks>
            <p class="body">
            This method, or one of the other ApplyTo overrides must be used to set the value of a cell to a formula.
            </p>
            <p class="body">
            After this method returns, the <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Formula"/> of all cells in all specified regions will
            return the formula.
            </p>
            </remarks>
            <param name="regions">The regions of cells to apply the formula to.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="regions"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="regions"/> has a length of 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            Not all regions specified are from the same worksheet.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            One or more regions specified contain array formulas or data tables which extend outside the region.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetCell)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.ApplyFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyFormula(System.String)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.ToString(Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>
            Converts the formula to a string representation, similar to the string with which it was created.
            </summary>
            <param name="cellReferenceMode">The cell reference mode used to create cell reference strings.</param>
            <returns>The string representing the formula.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.ToString(Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>
            Converts the formula to a string representation, similar to the string with which it was created.
            </summary>
            <param name="cellReferenceMode">The cell reference mode used to create cell reference strings.</param>
            <param name="culture">The culture used to generate the formula string.</param>
            <returns>The string representing the formula.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.Equals(Infragistics.Documents.Excel.Formula,Infragistics.Documents.Excel.Formula,Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>
            Determines whether two <see cref="T:Infragistics.Documents.Excel.Formula"/> instances are equal using the specified cell reference mode.
            </summary>
            <remarks>
            This essentially performs a case-insensitive string comparison, ignoring the white space in the formula.
            </remarks>
            <param name="formulaA">The first Formula to compare.</param>
            <param name="formulaB">The second Formula to compare.</param>
            <param name="cellReferenceMode">The cell reference mode to use when comparing the two formulas.</param>
            <returns>True if the formulas are both null or both equivalent; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.Parse(System.String,Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>
            Parses the specified formula value and returns the formula which was created from it.
            </summary>
            <param name="value">The string which defines the formula to parse.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the formula.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="value"/> is not a valid formula.
            </exception>
            <returns>A <see cref="T:Infragistics.Documents.Excel.Formula"/> instance which represents the formula specified.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.Parse(System.String,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>
            Parses the specified formula value and returns the formula which was created from it.
            </summary>
            <param name="value">The string which defines the formula to parse.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the formula.</param>
            <param name="culture">The culture used to parse the formula.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="value"/> is not a valid formula.
            </exception>
            <returns>A <see cref="T:Infragistics.Documents.Excel.Formula"/> instance which represents the formula specified.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.Parse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorkbookFormat)">
            <summary>
            Parses the specified formula value and returns the formula which was created from it.
            </summary>
            <param name="value">The string which defines the formula to parse.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the formula.</param>
            <param name="fileFormat">The file format to use when parsing the formula. This will be used to determine certain limits which are format dependant.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="fileFormat"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookFormat"/> enumeration.
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="value"/> is not a valid formula.
            </exception>
            <returns>A <see cref="T:Infragistics.Documents.Excel.Formula"/> instance which represents the formula specified.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.Parse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorkbookFormat,System.Globalization.CultureInfo)">
            <summary>
            Parses the specified formula value and returns the formula which was created from it.
            </summary>
            <param name="value">The string which defines the formula to parse.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the formula.</param>
            <param name="fileFormat">The file format to use when parsing the formula. This will be used to determine certain limits which are format dependant.</param>
            <param name="culture">The culture used to parse the formula.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="fileFormat"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookFormat"/> enumeration.
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="value"/> is not a valid formula.
            </exception>
            <returns>A <see cref="T:Infragistics.Documents.Excel.Formula"/> instance which represents the formula specified.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.Formula@)">
            <summary>
            Parses the specified formula value. The return value indicates whether the operation succeeded.
            </summary>
            <param name="value">The string which defines the formula to parse.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the formula.</param>
            <param name="formula">
            When this method returns, contains the formula which was parsed from <paramref name="value"/>,
            if the conversion succeeded, or null if the conversion failed. This parameter is passed uninitialized.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <returns>True if <paramref name="value"/> was converted successfully; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo,Infragistics.Documents.Excel.Formula@)">
            <summary>
            Parses the specified formula value. The return value indicates whether the operation succeeded.
            </summary>
            <param name="value">The string which defines the formula to parse.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the formula.</param>
            <param name="culture">The culture used to parse the formula.</param>
            <param name="formula">
            When this method returns, contains the formula which was parsed from <paramref name="value"/>,
            if the conversion succeeded, or null if the conversion failed. This parameter is passed uninitialized.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <returns>True if <paramref name="value"/> was converted successfully; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.Formula@,Infragistics.Documents.Excel.FormulaParseException@)">
            <summary>
            Parses the specified formula value. The return value indicates whether the operation succeeded.
            </summary>
            <param name="value">The string which defines the formula to parse.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the formula.</param>
            <param name="formula">
            When this method returns, contains the formula which was parsed from <paramref name="value"/>
            if the conversion succeeded or null if the conversion failed. This parameter is passed uninitialized.
            </param>
            <param name="exception">
            When this method returns, contains the error information if the conversion failed or null if the 
            conversion succeeded. This parameter is passed uninitialized.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <returns>True if <paramref name="value"/> was converted successfully; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo,Infragistics.Documents.Excel.Formula@,Infragistics.Documents.Excel.FormulaParseException@)">
            <summary>
            Parses the specified formula value. The return value indicates whether the operation succeeded.
            </summary>
            <param name="value">The string which defines the formula to parse.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the formula.</param>
            <param name="culture">The culture used to parse the formula.</param>
            <param name="formula">
            When this method returns, contains the formula which was parsed from <paramref name="value"/>
            if the conversion succeeded or null if the conversion failed. This parameter is passed uninitialized.
            </param>
            <param name="exception">
            When this method returns, contains the error information if the conversion failed or null if the 
            conversion succeeded. This parameter is passed uninitialized.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <returns>True if <paramref name="value"/> was converted successfully; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.Formula@)">
            <summary>
            Parses the specified formula value. The return value indicates whether the operation succeeded.
            </summary>
            <param name="value">The string which defines the formula to parse.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the formula.</param>
            <param name="fileFormat">The file format to use when parsing the formula. This will be used to determine certain limits which are format dependant.</param>
            <param name="formula">
            When this method returns, contains the formula which was parsed from <paramref name="value"/>,
            if the conversion succeeded, or null if the conversion failed. This parameter is passed uninitialized.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="fileFormat"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookFormat"/> enumeration.
            </exception>
            <returns>True if <paramref name="value"/> was converted successfully; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorkbookFormat,System.Globalization.CultureInfo,Infragistics.Documents.Excel.Formula@)">
            <summary>
            Parses the specified formula value. The return value indicates whether the operation succeeded.
            </summary>
            <param name="value">The string which defines the formula to parse.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the formula.</param>
            <param name="fileFormat">The file format to use when parsing the formula. This will be used to determine certain limits which are format dependant.</param>
            <param name="culture">The culture used to parse the formula.</param>
            <param name="formula">
            When this method returns, contains the formula which was parsed from <paramref name="value"/>,
            if the conversion succeeded, or null if the conversion failed. This parameter is passed uninitialized.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="fileFormat"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookFormat"/> enumeration.
            </exception>
            <returns>True if <paramref name="value"/> was converted successfully; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.Formula@,Infragistics.Documents.Excel.FormulaParseException@)">
            <summary>
            Parses the specified formula value. The return value indicates whether the operation succeeded.
            </summary>
            <param name="value">The string which defines the formula to parse.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the formula.</param>
            <param name="fileFormat">The file format to use when parsing the formula. This will be used to determine certain limits which are format dependant.</param>
            <param name="formula">
            When this method returns, contains the formula which was parsed from <paramref name="value"/>
            if the conversion succeeded or null if the conversion failed. This parameter is passed uninitialized.
            </param>
            <param name="exception">
            When this method returns, contains the error information if the conversion failed or null if the 
            conversion succeeded. This parameter is passed uninitialized.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="fileFormat"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookFormat"/> enumeration.
            </exception>
            <returns>True if <paramref name="value"/> was converted successfully; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorkbookFormat,System.Globalization.CultureInfo,Infragistics.Documents.Excel.Formula@,Infragistics.Documents.Excel.FormulaParseException@)">
            <summary>
            Parses the specified formula value. The return value indicates whether the operation succeeded.
            </summary>
            <param name="value">The string which defines the formula to parse.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the formula.</param>
            <param name="fileFormat">The file format to use when parsing the formula. This will be used to determine certain limits which are format dependant.</param>
            <param name="culture">The culture used to parse the formula.</param>
            <param name="formula">
            When this method returns, contains the formula which was parsed from <paramref name="value"/>
            if the conversion succeeded or null if the conversion failed. This parameter is passed uninitialized.
            </param>
            <param name="exception">
            When this method returns, contains the error information if the conversion failed or null if the 
            conversion succeeded. This parameter is passed uninitialized.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="fileFormat"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookFormat"/> enumeration.
            </exception>
            <returns>True if <paramref name="value"/> was converted successfully; False otherwise.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.FormattedFontBase">
            <summary>
            Abstract base class which controls the formatting of a range of characters in a <see cref="T:Infragistics.Documents.Excel.FormattedString"/> or <see cref="T:Infragistics.Documents.Excel.FormattedText"/>.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.FormattedStringFont"/>
            <seealso cref="T:Infragistics.Documents.Excel.FormattedTextFont"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedFontBase.Color">
            <summary>
            Obsolete. Use <see cref="P:Infragistics.Documents.Excel.FormattedFontBase.ColorInfo"/> instead.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedFontBase.SetFontFormatting(Infragistics.Documents.Excel.IWorkbookFont)">
            <summary>
            Sets all properties of this font to the properties of the specified font.
            </summary>
            <remarks>
            <p class="note">
            <b>Note:</b> default values cannot be used in <see cref="T:Infragistics.Documents.Excel.FormattedString"/> values applied to cells. If this font belongs to a FormattedString 
            which is the value of a cell, any default values on the specified font will be ignored.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The formatted string or text associated with the font is not assigned to a cell, comment, or shape.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The font's selection range is outside the valid character range of the associated formatted string or text.
            </exception>
            <param name="source">The font whose properties should be copied over to this font.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedFontBase.Bold">
            <summary>
            Gets or sets the value indicating whether the font is bold.
            </summary>
            <remarks>
            <p class="body">
            All characters in the selection range of this font will be affected by setting this property.
            Getting this property will return a value which indicates the formatting of the first character
            in this font's range.
            </p>
            <p class="note">
            <b>Note:</b> default values cannot be used in <see cref="T:Infragistics.Documents.Excel.FormattedString"/> values applied to cells. If this font belongs to a FormattedString 
            which is the value of a cell, and a default value is assigned, it will be ignored.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.ExcelDefaultableBoolean"/> enumeration.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The formatted string or text associated with the font is not assigned to a cell, comment, or shape.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The font's selection range is outside the valid character range of the associated formatted string or text.
            </exception>
            <value>The value indicating whether the font is bold.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedFontBase.ColorInfo">
            <summary>
            Gets or sets the fore color of the font.
            </summary>
            <remarks>
            <p class="body">
            All characters in the selection range of this font will be affected by setting this property.
            Getting this property will return a value which indicates the formatting of the first character
            in this font's range.
            </p>
            <p class="note">
            <b>Note:</b> default values cannot be used in <see cref="T:Infragistics.Documents.Excel.FormattedString"/> values applied to cells. If this font belongs to a FormattedString 
            which is the value of a cell, and a default value is assigned, it will be ignored.
            </p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            The formatted string or text associated with the font is not assigned to a cell, comment, or shape.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The font's selection range is outside the valid character range of the associated formatted string or text.
            </exception>
            <value>The fore color of the font.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedFontBase.Height">
            <summary>
            Gets or sets the height of the font.
            </summary>
            <remarks>
            <p class="body">
            All characters in the selection range of this font will be affected by setting this property.
            Getting this property will return a value which indicates the formatting of the first character
            in this font's range.
            </p>
            <p class="note">
            <b>Note:</b> default values cannot be used in <see cref="T:Infragistics.Documents.Excel.FormattedString"/> values applied to cells. If this font belongs to a FormattedString 
            which is the value of a cell, and a default value is assigned, it will be ignored.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value assigned is positive and outside the valid font height range of 20 and 8180.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The formatted string or text associated with the font is not assigned to a cell, comment, or shape.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The font's selection range is outside the valid character range of the associated formatted string or text.
            </exception>
            <value>The height of the font.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedFontBase.Italic">
            <summary>
            Gets or sets the value indicating whether the font is italic.
            </summary>
            <remarks>
            <p class="body">
            All characters in the selection range of this font will be affected by setting this property.
            Getting this property will return a value which indicates the formatting of the first character
            in this font's range.
            </p>
            <p class="note">
            <b>Note:</b> default values cannot be used in <see cref="T:Infragistics.Documents.Excel.FormattedString"/> values applied to cells. If this font belongs to a FormattedString 
            which is the value of a cell, and a default value is assigned, it will be ignored.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.ExcelDefaultableBoolean"/> enumeration.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The formatted string or text associated with the font is not assigned to a cell, comment, or shape.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The font's selection range is outside the valid character range of the associated formatted string or text.
            </exception>
            <value>The value indicating whether the font is italic.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedFontBase.Length">
            <summary>
            Gets the number of characters covered by this font. Zero indicates the font controls from 
            the <see cref="P:Infragistics.Documents.Excel.FormattedFontBase.StartIndex"/> to the end of the string.
            </summary>
            <value>
            The number of characters covered by this font. Zero indicates the font controls from the 
            StartIndex to the end of the string.
            </value>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedFontBase.Name">
            <summary>
            Gets or sets the name of the font.
            </summary>
            <remarks>
            <p class="body">
            All characters in the selection range of this font will be affected by setting this property.
            Getting this property will return a value which indicates the formatting of the first character
            in this font's range.
            </p>
            <p class="note">
            <b>Note:</b> default values cannot be used in <see cref="T:Infragistics.Documents.Excel.FormattedString"/> values applied to cells. If this font belongs to a FormattedString 
            which is the value of a cell, and a default value is assigned, it will be ignored.
            </p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            The formatted string or text associated with the font is not assigned to a cell, comment, or shape.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The font's selection range is outside the valid character range of the associated formatted string or text.
            </exception>
            <value>The name of the font.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedFontBase.StartIndex">
            <summary>
            Gets the index of the first character covered by this font.
            </summary>
            <value>The index of the first character covered by this font.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedFontBase.Strikeout">
            <summary>
            Gets or sets the value indicating whether the font is struck out.
            </summary>
            <remarks>
            <p class="body">
            All characters in the selection range of this font will be affected by setting this property.
            Getting this property will return a value which indicates the formatting of the first character
            in this font's range.
            </p>
            <p class="note">
            <b>Note:</b> default values cannot be used in <see cref="T:Infragistics.Documents.Excel.FormattedString"/> values applied to cells. If this font belongs to a FormattedString 
            which is the value of a cell, and a default value is assigned, it will be ignored.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.ExcelDefaultableBoolean"/> enumeration.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The formatted string or text associated with the font is not assigned to a cell, comment, or shape.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The font's selection range is outside the valid character range of the associated formatted string or text.
            </exception>
            <value>The value indicating whether the font is struck out.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedFontBase.SuperscriptSubscriptStyle">
            <summary>
            Gets or sets the value indicating whether the font is superscript or subscript.
            </summary>
            <remarks>
            <p class="body">
            All characters in the selection range of this font will be affected by setting this property.
            Getting this property will return a value which indicates the formatting of the first character
            in this font's range.
            </p>
            <p class="note">
            <b>Note:</b> default values cannot be used in <see cref="T:Infragistics.Documents.Excel.FormattedString"/> values applied to cells. If this font belongs to a FormattedString 
            which is the value of a cell, and a default value is assigned, it will be ignored.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle"/> enumeration.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The formatted string or text associated with the font is not assigned to a cell, comment, or shape.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The font's selection range is outside the valid character range of the associated formatted string or text.
            </exception>
            <value>The value indicating whether the font is superscript or subscript.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedFontBase.UnderlineStyle">
            <summary>
            Gets or sets the underline style of the font.
            </summary>
            <remarks>
            <p class="body">
            All characters in the selection range of this font will be affected by setting this property.
            Getting this property will return a value which indicates the formatting of the first character
            in this font's range.
            </p>
            <p class="note">
            <b>Note:</b> default values cannot be used in <see cref="T:Infragistics.Documents.Excel.FormattedString"/> values applied to cells. If this font belongs to a FormattedString 
            which is the value of a cell, and a default value is assigned, it will be ignored.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.FontUnderlineStyle"/> enumeration.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The formatted string or text associated with the font is not assigned to a cell, comment, or shape.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The font's selection range is outside the valid character range of the associated formatted string or text.
            </exception>
            <value>The underline style of the font.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.IWorkbookFont">
            <summary>
            Represents a font for the cell in the related context.
            </summary>
            <remarks>
            <p class="body">
            If a property of a font has a default value, value of the previous font in resolution chain is used. The resolution priority 
            is the following: 
            <list type="number">
            <item>Cell (highest priority)</item>
            <item>Row</item>
            <item>Column</item>
            <item>Default Cell Format (lowest priority)</item>
            </list>
            For example, if a column font is set to blue and bold and a row font is set to italic and not bold, the font in the cell at 
            the intersection of the row and column would have blue, italic text in the saved workbook.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorkbookFont.Color">
            <summary>
            Obsolete. Use <see cref="P:Infragistics.Documents.Excel.IWorkbookFont.ColorInfo"/> instead.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.IWorkbookFont.SetFontFormatting(Infragistics.Documents.Excel.IWorkbookFont)">
            <summary>
            Sets all font properties to specific font formatting.
            </summary>
            <param name="source">Source font format.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorkbookFont.Bold">
            <summary>
            Gets or sets the value which indicates whether the font is bold.
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.ExcelDefaultableBoolean"/> enumeration.
            </exception>
            <value>The value which indicates whether the font is bold.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorkbookFont.ColorInfo">
            <summary>
            Gets or sets the foreground color of the font.
            </summary>
            <value>The foreground color of the font.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorkbookFont.Height">
            <summary>
            Gets or sets the font height in twips (1/20th of a point).
            </summary>
            <remarks>
            <p class="body">
            A negative value indicates the default font height, in which case the default font height is used.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value assigned is positive and outside the valid font height range of 20 and 8180.
            </exception>
            <value>The font height in twips (1/20th of a point).</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorkbookFont.Italic">
            <summary>
            Gets or sets the value which indicates whether the font is italic.
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.ExcelDefaultableBoolean"/> enumeration.
            </exception>
            <value>The value which indicates whether the font is italic.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorkbookFont.Name">
            <summary>
            Gets or sets the font family name.
            </summary>
            <value>The font family name.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorkbookFont.Strikeout">
            <summary>
            Gets or sets the value which indicates whether the font is struck out.
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.ExcelDefaultableBoolean"/> enumeration.
            </exception>
            <value>The value which indicates whether the font is struck out.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorkbookFont.SuperscriptSubscriptStyle">
            <summary>
            Gets or sets the value which indicates whether the font is superscript or subscript.
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle"/> enumeration.
            </exception>
            <value>The value which indicates whether the font is superscript or subscript.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorkbookFont.UnderlineStyle">
            <summary>
            Gets or sets the underline style of the font.
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.FontUnderlineStyle"/> enumeration.
            </exception>
            <value>The underline style of the font.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.IWorksheetCellFormat">
            <summary>
            Represents the format for the cell.
            </summary>
            <remarks>
            <p class="body">
            Depending on where the format is exposed, it will have a different meaning. For example, a cell's format just applies to itself, 
            but a row or column's format applies to all cells in that row or column. There are also style formats, which can be the parent of
            other formats, meaning they provide defaults for values not set on the format. And finally, there are differential formats, such
            as the format for areas in a table, which provide default values for cells which exist in the associated area.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.CellFormat"/>
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.CellFormat"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegion.CellFormat"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookStyle.StyleFormat"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.AreaFormats"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.AreaFormats"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetResolvedCellFormat"/>
            <seealso cref="M:Infragistics.Documents.Excel.RowColumnBase.GetResolvedCellFormat"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetMergedCellsRegion.GetResolvedCellFormat"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColor">
            <summary>
            Obsolete. Use <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo"/> instead.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColor">
            <summary>
            Obsolete. Use <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo"/> instead.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FillPattern">
            <summary>
            Obsolete. Use <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill"/> instead.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FillPatternBackgroundColor">
            <summary>
            Obsolete. Use <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill"/> instead.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FillPatternForegroundColor">
            <summary>
            Obsolete. Use <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill"/> instead.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColor">
            <summary>
            Obsolete. Use <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo"/> instead.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColor">
            <summary>
            Obsolete. Use <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo"/> instead.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColor">
            <summary>
            Obsolete. Use <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo"/> instead.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.IWorksheetCellFormat.SetFormatting(Infragistics.Documents.Excel.IWorksheetCellFormat)">
            <summary>
            Copies all cell format properties to from the specified cell format.
            </summary>
            <param name="source">The cell format from which to copy the properties.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Alignment">
            <summary>
            Gets or sets the horizontal alignment of the content in a cell.
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.HorizontalCellAlignment"/> enumeration.
            </exception>
            <value>The horizontal alignment of the content in a cell.</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.VerticalAlignment"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo">
            <summary>
            Gets or sets the bottom border color.
            </summary>
            <remarks>
            <p class="body">
            If the border color is set to a non-default value and the <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle"/> is set to Default, 
            it will be resolved to Thin.
            </p>
            </remarks>
            <value>The bottom border color.</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorders"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle">
            <summary>
            Gets or sets the bottom border style.
            </summary>
            <remarks>
            <p class="body">
            If the border style is set to a non-default value and the <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo"/> is null,
            it will be resolved to <see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Automatic"/>.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.CellBorderLineStyle"/> enumeration.
            </exception>
            <value>The bottom border style.</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorders"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo">
            <summary>
            Gets or sets the diagonal border color.
            </summary>
            <remarks>
            <p class="body">
            If the border color is set to a non-default value and the <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle"/> is set to Default, 
            it will be resolved to Thin.
            </p>
            </remarks>
            <value>The diagonal border color.</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorders"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorders">
            <summary>
            Gets or sets the diagonal borders.
            </summary>
            <remarks>
            <p class="body">
            If the diagonal borders are set to something other than None and the <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle"/> is set to Default, 
            it will be resolved to Thin. Similarly, if the <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo"/> is null, it will be 
            resolved to Color.Black.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.CellBorderLineStyle"/> enumeration.
            </exception>
            <value>The diagonal border style.</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle">
            <summary>
            Gets or sets the diagonal border style.
            </summary>
            <remarks>
            <p class="body">
            If the border style is set to a non-default value and the <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo"/> is null, 
            it will be resolved to <see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Automatic"/>.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.CellBorderLineStyle"/> enumeration.
            </exception>
            <value>The diagonal border style.</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorders"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill">
            <summary>
            Gets or sets the fill of the cell.
            </summary>
            <value>The fill of the cell.</value>
            <seealso cref="T:Infragistics.Documents.Excel.CellFill"/>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillPattern"/>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillLinearGradient"/>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Font">
            <summary>
            Gets or sets the default font formatting.
            </summary>
            <remarks>
            <p class="body">
            This font formatting is just the default font used in the cell. This can be overridden by strings on a character by character basis by
            using the <see cref="T:Infragistics.Documents.Excel.FormattedString"/> class.
            </p>
            </remarks>
            <value>The default font formatting.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FormatOptions">
            <summary>
            Gets or sets the groups of properties provided by the format.
            </summary>
            <remarks>
            <p class="body">
            For style formats, this value indicates which properties should be used in the format when applying the style to 
            a cell. All other groups of properties will return a default value.
            </p>
            <p class="body">
            For cell and differential formats, this value indicates which properties should be resolved and returned by the 
            format. All other properties should will be resolved and returned by the parent <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Style"/>.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Style"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookStyle.StyleFormat"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FormatString">
            <summary>
            Gets or sets the number format string.
            </summary>
            <remarks>
            <p class="body">For more information on excel format strings, consult Microsoft Excel help.</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            The assigned value is an invalid format string and <see cref="P:Infragistics.Documents.Excel.Workbook.ValidateFormatStrings"/> is True.
            </exception>
            <value>The number format string.</value>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.ValidateFormatStrings"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Indent">
            <summary>
            Gets or sets the indent in units of average character widths.
            </summary>
            <remarks>
            <p class="body">
            A value of -1 indicates that the default value should be used.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value is not -1 and is outside the valid indent level range of 0 and 250.
            </exception>
            <value>The indent in units of average character widths or -1 to use the default indent.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo">
            <summary>
            Gets or sets the left border color.
            </summary>
            <remarks>
            <p class="body">
            If the border color is set to a non-default value and the <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle"/> is set to Default, 
            it will be resolved to Thin.
            </p>
            </remarks>
            <value>The left border color.</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorders"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle">
            <summary>
            Gets or sets the left border style.
            </summary>
            <remarks>
            <p class="body">
            If the border style is set to a non-default value and the <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo"/> is null, 
            it will be resolved to <see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Automatic"/>.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.CellBorderLineStyle"/> enumeration.
            </exception>
            <value>The left border style.</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorders"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Locked">
            <summary>
            Gets or sets the valid which indicates whether the cell is locked in protected mode.
            </summary>
            <remarks>
            <p class="body">The Locked valid is used in Excel file only if the associated <see cref="T:Infragistics.Documents.Excel.Worksheet"/> or <see cref="T:Infragistics.Documents.Excel.Workbook"/> 
            is protected. Otherwise the value is ignored.
            </p>
            </remarks>
            <value>The valid which indicates whether the cell is locked in protected mode.</value>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IsProtected"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo">
            <summary>
            Gets or sets the right border color.
            </summary>
            <remarks>
            <p class="body">
            If the border color is set to a non-default value and the <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle"/> is set to Default, 
            it will be resolved to Thin.
            </p>
            </remarks>
            <value>The right border color.</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorders"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle">
            <summary>
            Gets or sets the right border style.
            </summary>
            <remarks>
            <p class="body">
            If the border style is set to a non-default value and the <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo"/> is null, 
            it will be resolved to <see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Automatic"/>.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.CellBorderLineStyle"/> enumeration.
            </exception>
            <value>The right border style.</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorders"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Rotation">
            <summary>
            Gets or sets the rotation of the cell content in degrees.
            </summary>
            <remarks>
            <p class="body">
            Cell text rotation, in degrees; 0 – 90 is up 0 – 90 degrees, 91 – 180 is down 1 – 90 degrees, and 255 is vertical.
            </p>
            </remarks>
            <value>The rotation of the cell content in degrees.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.ShrinkToFit">
            <summary>
            Gets or sets the value indicating whether the cell content will shrink to fit the cell.
            </summary>
            <remarks>
            <p class="body">
            If True, the size of the cell font will shrink so all data fits within the cell.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.ExcelDefaultableBoolean"/> enumeration.
            </exception>
            <value>The value indicating whether the cell content will shrink to fit the cell.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Style">
            <summary>
            Gets or sets the parent <see cref="T:Infragistics.Documents.Excel.WorkbookStyle"/> of the format.
            </summary>
            <remarks>
            <p class="body">
            The parent style of a cell or differential format provides default format values. Depending on which <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FormatOptions"/>
            flags are present, only certain groups of format properties will be resolved from parent style. When any of the properties in a
            group is set to a non-default value, the FormatOptions will automatically have that flag included so the format provides values
            in that group rather than the style providing values in that group.
            </p>
            <p class="body">
            By default, all cell and differential formats will have a parent style of the normal style, which is exposed by the 
            <see cref="P:Infragistics.Documents.Excel.WorkbookStyleCollection.NormalStyle"/> property. If a value of null is assigned as the Style for a cell or differential 
            format, then NormalStyle will actually be set.
            </p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            The value assigned is non-null and the format is a style format.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value assigned is from a different <see cref="T:Infragistics.Documents.Excel.Workbook"/>.
            </exception>
            <value>
            A <see cref="T:Infragistics.Documents.Excel.WorkbookStyle"/> instance if this is a cell or differential format, or null if this is a style format.
            </value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FormatOptions"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.Styles"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorkbookStyle"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo">
            <summary>
            Gets or sets the top border color.
            </summary>
            <remarks>
            <p class="body">
            If the border color is set to a non-default value and the <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle"/> is set to Default, 
            it will be resolved to Thin.
            </p>
            </remarks>
            <value>The top border color.</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorders"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle">
            <summary>
            Gets or sets the top border style.
            </summary>
            <remarks>
            <p class="body">
            If the border style is set to a non-default value and the <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo"/> is null, 
            it will be resolved to <see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Automatic"/>.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.CellBorderLineStyle"/> enumeration.
            </exception>
            <value>The top border style.</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorders"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment of the content in a cell.
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.VerticalCellAlignment"/> enumeration.
            </exception>
            <value>The vertical alignment of the content in a cell.</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Alignment"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.WrapText">
            <summary>
            Gets or sets the value which indicates whether text will wrap in a cell.
            </summary>
            <remarks>
            <p class="body">
            If True, and the row associated with the cell has a default <see cref="P:Infragistics.Documents.Excel.WorksheetRow.Height"/>, the row's
            height will automatically be increased to fit wrapped content.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.ExcelDefaultableBoolean"/> enumeration.
            </exception>
            <value>The value which indicates whether text will wrap in a cell.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.RowColumnBase">
            <summary>
            Abstract base class for worksheet row and worksheet column.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetColumn"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetRow"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.RowColumnBase.Expanded">
            <summary>
            Gets or sets the expanded state of the row or column.
            </summary>
            <remarks>
            <p class="body">This property is deprecated. Use <see cref="P:Infragistics.Documents.Excel.RowColumnBase.Hidden"/> instead.</p>
            <p class="note"><B>Note:</B> Hidden and Expanded are opposites (setting Expanded to True is equivalent to setting Hidden to False).</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.RowColumnBase.GetResolvedCellFormat">
            <summary>
            Gets the resolved cell formatting for the cells in the row or column.
            </summary>
            <returns>
            A format object describing the actual formatting that will be used when displayed the row or column in Microsoft Excel.
            </returns>
            <exception cref="T:System.InvalidOperationException">If the object was removed from the worksheet.</exception>
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.CellFormat"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.RowColumnBase.CellFormat">
            <summary>
            Gets the default cell format for cells in this row or column.
            </summary>
            <remarks>
            <p class="body">
            Any default properties of the cell's format will take their value from this format when getting a resolved format.
            </p>
            </remarks>
            <value>The default cell format for cells in this row or column.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.RowColumnBase.Hidden">
            <summary>
            Gets or sets the value indicating whether the row or column is hidden.
            </summary>
            <remarks>
            The Hidden state also controls the expanded state of rows or columns in outline groups. Basically, an outline group
            simply provides an easy way to hide and unhide all rows or columns in the group at the same time, via the expansion 
            indicator.
            </remarks>
            <value>The value indicating whether the row or column is hidden.</value>
            <exception cref="T:System.InvalidOperationException">From the stter if the object was removed from the worksheet.</exception>
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.OutlineLevel"/>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetHiddenColumns(Infragistics.Documents.Excel.Worksheet,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetHiddenRows(Infragistics.Documents.Excel.Worksheet,System.Boolean)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.RowColumnBase.Index">
            <summary>
            Gets the 0-based index of the row or column in the worksheet.
            </summary>
            <value>The 0-based index of the row or column in the worksheet.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.RowColumnBase.OutlineLevel">
            <summary>
            Gets or sets the outline level for the row or column.
            </summary>
            <remarks>
            <p class="body">
            Microsoft Excel supports hierarchical grouping of rows and columns with a maximum of seven levels of hierarchy. 
            To create a group, set adjacent rows or columns to same outline level. When rows or columns are grouped, an
            outline indicator will provide a visual representation of the outline level.  In addition, an outline group has
            an expansion indicator at one end of the group, which allows the user to easily hide and unhide all rows or column
            in the group with a single click.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value assigned is outside the valid outline level range of 0 and 7.
            </exception>
            <exception cref="T:System.InvalidOperationException">From the stter if the object was removed from the worksheet.</exception>
            <value>The outline level for the row or column.</value>
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.Hidden"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.RowColumnBase.Worksheet">
            <summary>
            Gets the worksheet to which the row or column belongs.
            </summary>
            <value>The worksheet to which the row or column belongs.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.Workbook">
            <summary>
            Represents a Microsoft Excel workbook.
            </summary>
            <remarks>
            <p class="body">Every workbook consists of one or more worksheets (<see cref="T:Infragistics.Documents.Excel.Worksheet"/>). The default constructor creates an empty workbook.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.Workbook.MaxExcelColorCount">
            <summary>
            Obsolete.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.#ctor(Infragistics.Documents.Excel.WorkbookPaletteMode)">
            <summary>
            Obsolete. Use <see cref="M:Infragistics.Documents.Excel.Workbook.#ctor"/> instead.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.#ctor(Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.WorkbookPaletteMode)">
            <summary>
            Obsolete. Use <see cref="M:Infragistics.Documents.Excel.Workbook.#ctor(Infragistics.Documents.Excel.WorkbookFormat)"/> instead.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Load(System.String,System.Boolean)">
            <summary>
            Reads a workbook from a file.
            </summary>
            <remarks>
            <p class="body">
            When loading the workbook, the format will be determined the file extension or by the contents of the file. If the extension is
            a standard Excel format extension, the workbook will be assumed to be in the corresponding format. Otherwise, the contents of the
            file will be examined to try to determine the format. The <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/> of the returned workbook will indicate the
            format the workbook was loaded from.
            </p>
            <p class="note">
            <B>Note:</B> This method creates a <see cref="T:System.IO.FileStream"/> using the 
            <a href="http://msdn2.microsoft.com/en-us/library/47ek66wy.aspx">FileStream(string, FileMode)</a> overload of the constructor.  
            See the remarks section of this overload for the exceptions that could be thrown.
            </p>
            </remarks>
            <param name="fileName">The file from which to read the workbook.</param>        
            <param name="verifyExcel2007Xml">A boolean specifying whether or not to verify the contents of the markup against the rules defined in Part 2 of the 'Office Open XML - Open Packaging Conventions' document (see final draft, <a href="http://www.ecma-international.org">ECMA</a> document TC45).</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="fileName"/> is a path to an invalid Microsoft Excel file.
            </exception>
            <exception cref="T:System.ArgumentException">
            The file format cannot be determined from the specified file.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The format of the workbook data is in an unsupported format.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The workbook being loaded is in an Excel 2007 format and the CLR 2.0 Excel assembly is being used. The overload taking an 
            <see cref="T:Infragistics.Documents.Core.Packaging.IPackageFactory"/> must be used in this case so the Excel 2007 file package can be accessed.
            </exception>
            <exception cref="T:Infragistics.Documents.Core.DocumentEncryptedException">
            Occurs when the workbook is encrypted and no password was specified to open the file via <see cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPassword"/>.
            </exception>
            <exception cref="T:Infragistics.Documents.Core.EncryptionAlgorithmNotSupportedException">
            Occurs when the workbook is encrypted with an unsupported encryption algorithm and cannot be decrypted.
            </exception>
            <returns>The workbook loaded from the file.</returns>        
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Load(System.String,Infragistics.Documents.Core.Packaging.IPackageFactory,System.Boolean)">
            <summary>
            Reads a workbook from a file.
            </summary>
            <remarks>
            <p class="body">
            When loading the workbook, the format will be determined the file extension or by the contents of the file. If the extension is
            a standard Excel format extension, the workbook will be assumed to be in the corresponding format. Otherwise, the contents of the
            file will be examined to try to determine the format. The <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/> of the returned workbook will indicate the
            format the workbook was loaded from.
            </p>
            <p class="note">
            <B>Note:</B> This method creates a <see cref="T:System.IO.FileStream"/> using the 
            <a href="http://msdn2.microsoft.com/en-us/library/47ek66wy.aspx">FileStream(string, FileMode)</a> overload of the constructor.  
            See the remarks section of this overload for the exceptions that could be thrown.
            </p>
            </remarks>
            <param name="fileName">The file from which to read the workbook.</param>
            <param name="packageFactory">An IPackageFactory which can be used to open an IPackage from a stream.</param>
            <param name="verifyExcel2007Xml">A boolean specifying whether or not to verify the contents of the markup against the rules defined in Part 2 of the 'Office Open XML - Open Packaging Conventions' document (see final draft, <a href="http://www.ecma-international.org">ECMA</a> document TC45).</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="fileName"/> is a path to an invalid Microsoft Excel file.        
            </exception>
            <exception cref="T:System.ArgumentException">
            The file format cannot be determined from the specified file.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The format of the workbook data is in an unsupported format.
            </exception>
            <exception cref="T:System.NotSupportedException">
            <paramref name="packageFactory"/> is null and the workbook being loaded is in an Excel 2007 format and the CLR 2.0 Excel assembly is 
            being used. An <see cref="T:Infragistics.Documents.Core.Packaging.IPackageFactory"/> must be specified so the Excel 2007 file package can be accessed.
            </exception>
            <exception cref="T:Infragistics.Documents.Core.DocumentEncryptedException">
            Occurs when the workbook is encrypted and no password was specified to open the file via <see cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPassword"/>.
            </exception>
            <exception cref="T:Infragistics.Documents.Core.EncryptionAlgorithmNotSupportedException">
            Occurs when the workbook is encrypted with an unsupported encryption algorithm and cannot be decrypted.
            </exception>
            <returns>The workbook loaded from the file.</returns>        
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Load(System.IO.Stream,System.Boolean)">
            <summary>
            Reads a workbook from a stream.
            </summary>
            <remarks>
            <p class="body">
            When loading the workbook, the format will be determined the file extension or by the contents of the file. If a FileStream is 
            specified, the extension of the file will be examined. If the extension is a standard Excel format extension, the workbook will 
            be assumed to be in the corresponding format. Otherwise, the contents of the file will be examined to try to determine the format. 
            The <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/> of the returned workbook will indicate the format the workbook was loaded from.
            </p>
            </remarks>
            <param name="stream">The stream to read the workbook from.</param>
            <param name="verifyExcel2007Xml">A boolean specifying whether or not to verify the contents of the markup against the rules defined in Part 2 of the 'Office Open XML - Open Packaging Conventions' document (see final draft, <a href="http://www.ecma-international.org">ECMA</a> document TC45).</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="stream"/> does not contain valid Microsoft Excel file contents.
            </exception>
            <exception cref="T:System.ArgumentException">
            The file format cannot be determined from the specified stream.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The format of the workbook data is in an unsupported format.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The workbook being loaded is in an Excel 2007 format and the CLR 2.0 Excel assembly is being used. The overload taking an 
            <see cref="T:Infragistics.Documents.Core.Packaging.IPackageFactory"/> must be used in this case so the Excel 2007 file package can be accessed.
            </exception>
            <exception cref="T:Infragistics.Documents.Core.DocumentEncryptedException">
            Occurs when the workbook is encrypted and no password was specified to open the stream via <see cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPassword"/>.
            </exception>
            <exception cref="T:Infragistics.Documents.Core.EncryptionAlgorithmNotSupportedException">
            Occurs when the workbook is encrypted with an unsupported encryption algorithm and cannot be decrypted.
            </exception>
            <returns>The workbook loaded from the stream.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Load(System.IO.Stream,Infragistics.Documents.Core.Packaging.IPackageFactory,System.Boolean)">
            <summary>
            Reads a workbook from a stream.
            </summary>
            <remarks>
            <p class="body">
            When loading the workbook, the format will be determined the file extension or by the contents of the file. If a FileStream is 
            specified, the extension of the file will be examined. If the extension is a standard Excel format extension, the workbook will 
            be assumed to be in the corresponding format. Otherwise, the contents of the file will be examined to try to determine the format. 
            The <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/> of the returned workbook will indicate the format the workbook was loaded from.
            </p>
            </remarks>
            <param name="stream">The stream to read the workbook from.</param>
            <param name="packageFactory">An IPackageFactory which can be used to open an IPackage from a stream.</param>
            <param name="verifyExcel2007Xml">A boolean specifying whether or not to verify the contents of the markup against the rules defined in Part 2 of the 'Office Open XML - Open Packaging Conventions' document (see final draft, <a href="http://www.ecma-international.org">ECMA</a> document TC45).</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="stream"/> does not contain valid Microsoft Excel file contents.
            </exception>
            <exception cref="T:System.ArgumentException">
            The file format cannot be determined from the specified stream.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The format of the workbook data is in an unsupported format.
            </exception>
            <exception cref="T:System.NotSupportedException">
            <paramref name="packageFactory"/> is null and the workbook being loaded is in an Excel 2007 format and the CLR 2.0 Excel assembly is 
            being used. An <see cref="T:Infragistics.Documents.Core.Packaging.IPackageFactory"/> must be specified so the Excel 2007 file package can be accessed.
            </exception>
            <exception cref="T:Infragistics.Documents.Core.DocumentEncryptedException">
            Occurs when the workbook is encrypted and no password was specified to open the stream via <see cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPassword"/>.
            </exception>
            <exception cref="T:Infragistics.Documents.Core.EncryptionAlgorithmNotSupportedException">
            Occurs when the workbook is encrypted with an unsupported encryption algorithm and cannot be decrypted.
            </exception>
            <returns>The workbook loaded from the stream.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.ActiveWorksheet">
            <summary>
            Gets or sets the active worksheet.
            </summary>
            <remarks>
            <p class="body">This property is deprecated. Use <see cref="P:Infragistics.Documents.Excel.WindowOptions.SelectedWorksheet"/> instead.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.DefaultFontHeight">
            <summary>
            Obsolete. Gets or sets the default font height in twips (1/20th of a point).
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value is outside the valid font height range of 20 and 8180.
            </exception>
            <value>The default font height in twips (1/20th of a point).</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorkbookFont.Height"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Protect(System.String,System.Boolean,System.Boolean)">
            <summary>
            Protects the worksheet with the specified password.
            </summary>
            <param name="password">The password used to protect the Worksheet.</param>
            <param name="allowEditStructure">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorkbookProtection.AllowEditStructure"/>.</param>
            <param name="allowEditWindows">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorkbookProtection.AllowEditWindows"/>.</param>
            <remarks>
            <p class="body">When a Workbook is protected without a password, the end user may unprotect the Workbook in Excel without 
            having to supply a password. To programatically unprotect a Workbook, one may use the <see cref="M:Infragistics.Documents.Excel.Workbook.Unprotect"/> method.</p>
            <p class="body">When a Workbook is protected, the values of the properties of the <see cref="T:Infragistics.Documents.Excel.WorkbookProtection"/> instance from 
            this Workbook's <see cref="P:Infragistics.Documents.Excel.Workbook.Protection"/> property indicate the disabled operations.</p>
            <p class="note"><b>Note:</b> If <see cref="P:Infragistics.Documents.Excel.Workbook.IsProtected"/> is already true, the method will be ignored.</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasProtectionPassword"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IsProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.Protection"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorkbookProtection"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Protect(System.Boolean,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Protect(System.Security.SecureString,System.Boolean,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect(System.String)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Protect(System.Security.SecureString,System.Boolean,System.Boolean)">
            <summary>
            Protects the worksheet with the specified password.
            </summary>
            <param name="password">The password used to protect the Worksheet.</param>
            <param name="allowEditStructure">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorkbookProtection.AllowEditStructure"/>.</param>
            <param name="allowEditWindows">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorkbookProtection.AllowEditWindows"/>.</param>
            <remarks>
            <p class="body">When a Workbook is protected without a password, the end user may unprotect the Workbook in Excel without 
            having to supply a password. To programatically unprotect a Workbook, one may use the <see cref="M:Infragistics.Documents.Excel.Workbook.Unprotect"/> method.</p>
            <p class="body">When a Workbook is protected, the values of the properties of the <see cref="T:Infragistics.Documents.Excel.WorkbookProtection"/> instance from 
            this Workbook's <see cref="P:Infragistics.Documents.Excel.Workbook.Protection"/> property indicate the disabled operations.</p>
            <p class="note"><b>Note:</b> If <see cref="P:Infragistics.Documents.Excel.Workbook.IsProtected"/> is already true, the method will be ignored.</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasProtectionPassword"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IsProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.Protection"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorkbookProtection"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Protect(System.String,System.Boolean,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Protect(System.Boolean,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect(System.Security.SecureString)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.SetEncryptionMode(Infragistics.Documents.Excel.WorkbookEncryptionMode)">
            <summary>
            Sets the encryption modes to use to encrypt documents saved in the 2007 file formats and later.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPassword"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPasswordSecure"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasOpenPassword"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.Security.SecureString)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.String,System.String)">
            <summary>
            Sets the password used to protect the file from automatic writes.
            </summary>
            <param name="password">The password to use to protect the file; null or the empty string will remove write protection from the file.</param>
            <param name="userName">
            The name of the user to store as the <see cref="P:Infragistics.Documents.Excel.Workbook.FileWriteProtectedBy"/> value. If null is specified and a valid password is specified,
            the Environment.UserName will be used instead (on all platforms except for Silverlight and WinRT).
            </param>
            <remarks>
            <p class="body">
            If the <paramref name="userName"/> is specified but the password is being clear because it is being set to null or empty, the user name is 
            ignored and <see cref="P:Infragistics.Documents.Excel.Workbook.FileWriteProtectedBy"/> is set to null.
            </p>
            <p class="note">
            <b>Note:</b> The <see cref="T:Infragistics.Documents.Excel.Workbook"/> and its related sub-objects do not prevent modifications at runtime when a file is write protected, 
            as Microsoft Excel allows UI modifications to write protected files which are not unlocked with the proper password. In addition, write 
            protected Workbook instances do not prevent saves to the file location from which they were loaded, as it is possible to overwrite files in 
            this situation in Microsoft Excel via the 'Save As' dialog. It is the responsibility of the Workbook's consumer to prevent automatic file 
            overwrites when <see cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected"/> is true.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasFileWriteProtectionPassword"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.Security.SecureString,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.ValidateFileWriteProtectionPassword(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.ValidateFileWriteProtectionPassword(System.Security.SecureString)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.Security.SecureString,System.String)">
            <summary>
            Sets the password used to protect the file from automatic writes.
            </summary>
            <param name="password">The password to use to protect the file; null or the empty string will remove write protection from the file.</param>
            <param name="userName">
            The name of the user to store as the <see cref="P:Infragistics.Documents.Excel.Workbook.FileWriteProtectedBy"/> value. If null is specified and a valid password is specified,
            the Environment.UserName will be used instead (on all platforms except for Silverlight and WinRT).
            </param>
            <remarks>
            <p class="body">
            If the <paramref name="userName"/> is specified but the password is being clear because it is being set to null or empty, the user name is 
            ignored and <see cref="P:Infragistics.Documents.Excel.Workbook.FileWriteProtectedBy"/> is set to null.
            </p>
            <p class="note">
            <b>Note:</b> The <see cref="T:Infragistics.Documents.Excel.Workbook"/> and its related sub-objects do not prevent modifications at runtime when a file is write protected, 
            as Microsoft Excel allows UI modifications to write protected files which are not unlocked with the proper password. In addition, write 
            protected Workbook instances do not prevent saves to the file location from which they were loaded, as it is possible to overwrite files in 
            this situation in Microsoft Excel via the 'Save As' dialog. It is the responsibility of the Workbook's consumer to prevent automatic file 
            overwrites when <see cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected"/> is true.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasFileWriteProtectionPassword"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.ValidateFileWriteProtectionPassword(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.ValidateFileWriteProtectionPassword(System.Security.SecureString)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.String)">
            <summary>
            Sets the password used to encrypt the document on subsequent saves.
            </summary>
            <param name="password">
            The password to use to encrypt the document; null or the empty string will prevent the document from being encrypted on subsequent saves.
            </param>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.IsWorkbookEncrypted(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.IsWorkbookEncrypted(System.IO.Stream)"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasOpenPassword"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.Security.SecureString)"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPassword"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.Security.SecureString)">
            <summary>
            Sets the password used to encrypt the document on subsequent saves.
            </summary>
            <param name="password">
            The password to use to encrypt the document; null will prevent the document from being encrypted on subsequent saves.
            </param>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.IsWorkbookEncrypted(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.IsWorkbookEncrypted(System.IO.Stream)"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasOpenPassword"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.String)"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPasswordSecure"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.ValidateFileWriteProtectionPassword(System.String)">
            <summary>
            Validates the password for a <see cref="T:Infragistics.Documents.Excel.Workbook"/> loaded with file write protection. and returns the value indicating whether the 
            protection was successfully disabled.
            </summary>
            <remarks>
            <p class="body">
            Workbook instances loaded from files or streams with a write protection password will initially have <see cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected"/> set to 
            true. It is recommended that consumers of these instances prevent (or at least warn) users from automatically overwriting the files or streams 
            from which the instances were loaded. These instances will initially not have their <see cref="P:Infragistics.Documents.Excel.Workbook.HasFileWriteProtectionPassword"/> set to true. 
            Although it is possible to validate a file write protection password when provided via ValidateFileWriteProtectionPassword, it is 
            not possible to obtain the original password from the loaded file or stream. So file write protected Workbook instances which are loaded, but 
            which never have the proper file write protection password validated will be saved without file write protection. Only when the password is 
            validated via ValidateFileWriteProtectionPassword or overwritten via SetFileWriteProtectionPassword will HasFileWriteProtectionPassword return 
            true, indicating that file write protection will be added to subsequently saved files or streams.
            </p>
            <p class="note">
            <b>Note:</b> The <see cref="T:Infragistics.Documents.Excel.Workbook"/> and its related sub-objects do not prevent modifications at runtime when a file is write protected, 
            as Microsoft Excel allows UI modifications to write protected files which are not unlocked with the proper password. In addition, write 
            protected Workbook instances do not prevent saves to the file location from which they were loaded, as it is possible to overwrite files in 
            this situation in Microsoft Excel via the 'Save As' dialog. It is the responsibility of the Workbook's consumer to prevent automatic file 
            overwrites when <see cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected"/> is true.
            </p>
            </remarks>
            <returns>
            True if the workbook file is write protected or has a file write protection password to be used on subsequent saves and the specified 
            password matches the password used to protect the file.
            </returns>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasFileWriteProtectionPassword"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.Security.SecureString,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.ValidateFileWriteProtectionPassword(System.Security.SecureString)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.ValidateFileWriteProtectionPassword(System.Security.SecureString)">
            <summary>
            Validates the password for a <see cref="T:Infragistics.Documents.Excel.Workbook"/> loaded with file write protection. and returns the value indicating whether the 
            protection was successfully disabled.
            </summary>
            <remarks>
            <p class="body">
            Workbook instances loaded from files or streams with a write protection password will initially have <see cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected"/> set to 
            true. It is recommended that consumers of these instances prevent (or at least warn) users from automatically overwriting the files or streams 
            from which the instances were loaded. These instances will initially not have their <see cref="P:Infragistics.Documents.Excel.Workbook.HasFileWriteProtectionPassword"/> set to true. 
            Although it is possible to validate a file write protection password when provided via ValidateFileWriteProtectionPassword, it is 
            not possible to obtain the original password from the loaded file or stream. So file write protected Workbook instances which are loaded, but 
            which never have the proper file write protection password validated will be saved without file write protection. Only when the password is 
            validated via ValidateFileWriteProtectionPassword or overwritten via SetFileWriteProtectionPassword will HasFileWriteProtectionPassword return 
            true, indicating that file write protection will be added to subsequently saved files or streams.
            </p>
            <p class="note">
            <b>Note:</b> The <see cref="T:Infragistics.Documents.Excel.Workbook"/> and its related sub-objects do not prevent modifications at runtime when a file is write protected, 
            as Microsoft Excel allows UI modifications to write protected files which are not unlocked with the proper password. In addition, write 
            protected Workbook instances do not prevent saves to the file location from which they were loaded, as it is possible to overwrite files in 
            this situation in Microsoft Excel via the 'Save As' dialog. It is the responsibility of the Workbook's consumer to prevent automatic file 
            overwrites when <see cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected"/> is true.
            </p>
            </remarks>
            <returns>
            True if the workbook file is write protected or has a file write protection password to be used on subsequent saves and the specified 
            password matches the password used to protect the file.
            </returns>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasFileWriteProtectionPassword"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.Security.SecureString,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.ValidateFileWriteProtectionPassword(System.String)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Unprotect(System.String)">
            <summary>
            Attempts to use the specified password to remove the Worksheet protection currently in place.
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> If the Worksheet is not currently protected (i.e. <see cref="P:Infragistics.Documents.Excel.Workbook.IsProtected"/> returns 
            false) the method will not do anything. Also, if the Worksheet was not protected with a password (i.e. <see cref="P:Infragistics.Documents.Excel.Workbook.HasProtectionPassword"/> 
            returns false) the specified password will not be used and the protection will removed as if the <see cref="M:Infragistics.Documents.Excel.Workbook.Unprotect"/> 
            method had been invoked.</p>
            </remarks>
            <param name="password">The password to validate against the current Worksheet protection password</param>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IsProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasProtectionPassword"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect(System.Security.SecureString)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Protect(System.String,System.Boolean,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Unprotect(System.Security.SecureString)">
            <summary>
            Attempts to use the specified password to remove the Worksheet protection currently in place.
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> If the Worksheet is not currently protected (i.e. <see cref="P:Infragistics.Documents.Excel.Workbook.IsProtected"/> returns 
            false) the method will not do anything. Also, if the Worksheet was not protected with a password (i.e. <see cref="P:Infragistics.Documents.Excel.Workbook.HasProtectionPassword"/> 
            returns false) the specified password will not be used and the protection will removed as if the <see cref="M:Infragistics.Documents.Excel.Workbook.Unprotect"/> 
            method had been invoked.</p>
            </remarks>
            <param name="password">The password to validate against the current Worksheet protection password</param>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IsProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasProtectionPassword"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Protect(System.Security.SecureString,System.Boolean,System.Boolean)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.FileWriteProtectedBy">
            <summary>
            Gets the name of the user who initially added file write protection to the document.
            </summary>
            <remarks>
            <p class="body">
            This value is valid if <see cref="P:Infragistics.Documents.Excel.Workbook.HasFileWriteProtectionPassword"/> or <see cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected"/> is true. It will be updated
            when SetFileWriteProtectionPassword is called and a user name is specified with a new password.
            </p>
            <p class="note">
            <b>Note:</b> The <see cref="T:Infragistics.Documents.Excel.Workbook"/> and its related sub-objects do not prevent modifications at runtime when a file is write protected, 
            as Microsoft Excel allows UI modifications to write protected files which are not unlocked with the proper password. In addition, write 
            protected Workbook instances do not prevent saves to the file location from which they were loaded, as it is possible to overwrite files in 
            this situation in Microsoft Excel via the 'Save As' dialog. It is the responsibility of the Workbook's consumer to prevent automatic file 
            overwrites when <see cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected"/> is true.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasFileWriteProtectionPassword"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.Security.SecureString,System.String)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.HasFileWriteProtectionPassword">
            <summary>
            Gets the value indicating whether the <see cref="T:Infragistics.Documents.Excel.Workbook"/> has a file write protection password that will be used to protect saved files 
            or streams.
            </summary>
            <remarks>
            <p class="body">
            Workbook instances loaded from files or streams with a write protection password will initially have <see cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected"/> set to 
            true. It is recommended that consumers of these instances prevent (or at least warn) users from automatically overwriting the files or streams 
            from which the instances were loaded. These instances will initially not have their HasFileWriteProtectionPassword set to true. Although
            it is possible to validate a file write protection password when provided via ValidateFileWriteProtectionPassword, it is not possible to obtain 
            the original password from the loaded file or stream. So file write protected Workbook instances which are loaded, but which never have the 
            proper file write protection password validated will be saved without file write protection. Only when the password is validated via 
            ValidateFileWriteProtectionPassword or overwritten via v will HasFileWriteProtectionPassword return true, indicating that file write protection 
            will be added to subsequently saved files or streams.
            </p>
            <p class="body">
            The file write protection password can be cleared or reset by using SetOpenPassword.
            </p>
            <p class="note">
            <b>Note:</b> The <see cref="T:Infragistics.Documents.Excel.Workbook"/> and its related sub-objects do not prevent modifications at runtime when a file is write protected, 
            as Microsoft Excel allows UI modifications to write protected files which are not unlocked with the proper password. In addition, write 
            protected Workbook instances do not prevent saves to the file location from which they were loaded, as it is possible to overwrite files in 
            this situation in Microsoft Excel via the 'Save As' dialog. It is the responsibility of the Workbook's consumer to prevent automatic file 
            overwrites when <see cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected"/> is true.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.Security.SecureString,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.ValidateFileWriteProtectionPassword(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.ValidateFileWriteProtectionPassword(System.Security.SecureString)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.HasOpenPassword">
            <summary>
            Gets the value indicating whether the <see cref="T:Infragistics.Documents.Excel.Workbook"/> has an open password and will therefore be encrypted on subsequent saves.
            </summary>
            <remarks>
            <p class="body">
            Workbook instances loaded from encrypted files or streams will cache the password used to decrypt the document and reuse it on 
            subsequent saves. Therefore, HasOpenPassword will initially be true for Workbooks loaded from encrypted files or streams and false
            for all other Workbooks.
            </p>
            <p class="body">
            The open password can be cleared or reset by using SetOpenPassword.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.Security.SecureString)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.IsWorkbookEncrypted(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.IsWorkbookEncrypted(System.IO.Stream)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected">
            <summary>
            Gets the value indicating whether the <see cref="T:Infragistics.Documents.Excel.Workbook"/> was loaded with file write protection and the correct password has not yet been
            provided to ValidateFileWriteProtectionPassword.
            </summary>
            <remarks>
            <p class="body">
            Workbook instances loaded from files or streams with a write protection password will initially have <see cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected"/> set to 
            true. It is recommended that consumers of these instances prevent (or at least warn) users from automatically overwriting the files or streams 
            from which the instances were loaded. These instances will initially not have their <see cref="P:Infragistics.Documents.Excel.Workbook.HasFileWriteProtectionPassword"/> set to true. 
            Although it is possible to validate a file write protection password when provided via ValidateFileWriteProtectionPassword, it is not possible 
            to obtain the original password from the loaded file or stream. So file write protected Workbook instances which are loaded, but which never 
            have the proper file write protection password validated will be saved without file write protection. Only when the password is validated via 
            ValidateFileWriteProtectionPassword or overwritten via SetFileWriteProtectionPassword will HasFileWriteProtectionPassword return true, 
            indicating that file write protection will be added to subsequently saved files or streams.
            </p>
            <p class="body">
            When IsFileWriteProtected is true and the file write protected password is validated via ValidateFileWriteProtectionPassword or overwritten
            via SetFileWriteProtectionPassword, IsFileWriteProtected will subsequently return false, indicating that the file or stream from which the 
            Workbook was loaded can automatically be overwritten by the user if desired.
            </p>
            <p class="note">
            <b>Note:</b> The <see cref="T:Infragistics.Documents.Excel.Workbook"/> and its related sub-objects do not prevent modifications at runtime when a file is write protected, 
            as Microsoft Excel allows UI modifications to write protected files which are not unlocked with the proper password. In addition, write 
            protected Workbook instances do not prevent saves to the file location from which they were loaded, as it is possible to overwrite files in 
            this situation in Microsoft Excel via the 'Save As' dialog. It is the responsibility of the Workbook's consumer to prevent automatic file 
            overwrites when <see cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected"/> is true.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasFileWriteProtectionPassword"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.Security.SecureString,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.ValidateFileWriteProtectionPassword(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.ValidateFileWriteProtectionPassword(System.Security.SecureString)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Save(System.String,Infragistics.Documents.Excel.WorkbookSaveOptions)">
            <summary>
            Writes the workbook to a file.
            </summary>
            <remarks>
            <p class="body">
            The workbook will be written in the format specified by the <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/>.
            </p>
            <p class="body">
            The <paramref name="fileName"/> specified should have an extension corresponding to the current format so it can be opened in Microsoft Excel 
            by default (if it is installed).
            </p>
            <p class="note">
            <B>Note:</B> This method creates a <see cref="T:System.IO.FileStream"/> using the 
            <a href="http://msdn2.microsoft.com/en-us/library/tyhc0kft.aspx">FileStream(string, FileMode, FileAccess)</a> overload of the constructor.
            See the remarks section of this overload to for the exceptions that could be thrown.
            </p>
            </remarks>
            <param name="fileName">The file to write the workbook to.</param>
            <param name="saveOptions">The options to use to save the file or null to use the default options.</param>
            <exception cref="T:System.InvalidOperationException">
            The workbook has no worksheets in its <see cref="P:Infragistics.Documents.Excel.Workbook.Worksheets"/> collection.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            No worksheet in this workbook's Worksheets collection has its <see cref="P:Infragistics.Documents.Excel.DisplayOptionsBase.Visibility"/> 
            set to Visible. At least one worksheet in the workbook must be visible.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            A <see cref="T:Infragistics.Documents.Excel.CustomView"/> in the workbook's <see cref="P:Infragistics.Documents.Excel.Workbook.CustomViews"/> collection has all worksheets hidden.
            At least one worksheet must be visible in all custom views.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Save(System.String,Infragistics.Documents.Core.Packaging.IPackageFactory)">
            <summary>
            Writes the workbook to a file.
            </summary>
            <remarks>
            <p class="body">
            The workbook will be written in the format specified by the <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/>.
            </p>
            <p class="body">
            The <paramref name="fileName"/> specified should have an extension corresponding to the current format so it can be opened in Microsoft Excel 
            by default (if it is installed).
            </p>
            <p class="note">
            <B>Note:</B> This method creates a <see cref="T:System.IO.FileStream"/> using the 
            <a href="http://msdn2.microsoft.com/en-us/library/tyhc0kft.aspx">FileStream(string, FileMode, FileAccess)</a> overload of the constructor.
            See the remarks section of this overload to for the exceptions that could be thrown.
            </p>
            </remarks>
            <param name="fileName">The file to write the workbook to.</param>
            <param name="packageFactory">An IPackageFactory which can be used to open an IPackage from a stream.</param>
            <exception cref="T:System.InvalidOperationException">
            The workbook has no worksheets in its <see cref="P:Infragistics.Documents.Excel.Workbook.Worksheets"/> collection.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            No worksheet in this workbook's Worksheets collection has its <see cref="P:Infragistics.Documents.Excel.DisplayOptionsBase.Visibility"/> 
            set to Visible. At least one worksheet in the workbook must be visible.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            A <see cref="T:Infragistics.Documents.Excel.CustomView"/> in the workbook's <see cref="P:Infragistics.Documents.Excel.Workbook.CustomViews"/> collection has all worksheets hidden.
            At least one worksheet must be visible in all custom views.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Load(System.String,Infragistics.Documents.Excel.WorkbookLoadOptions)">
            <summary>
            Reads a workbook from a file.
            </summary>
            <remarks>
            <p class="body">
            When loading the workbook, the format will be determined the file extension or by the contents of the file. If the extension is
            a standard Excel format extension, the workbook will be assumed to be in the corresponding format. Otherwise, the contents of the
            file will be examined to try to determine the format. The <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/> of the returned workbook will indicate the
            format the workbook was loaded from.
            </p>
            <p class="note">
            <B>Note:</B> This method creates a <see cref="T:System.IO.FileStream"/> using the 
            <a href="http://msdn2.microsoft.com/en-us/library/47ek66wy.aspx">FileStream(string, FileMode)</a> overload of the constructor.  
            See the remarks section of this overload for the exceptions that could be thrown.
            </p>
            </remarks>
            <param name="fileName">The file from which to read the workbook.</param>
            <param name="loadOptions">The options to use to load the file or null to use the default options.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="fileName"/> is a path to an invalid Microsoft Excel file.
            </exception>
            <exception cref="T:System.ArgumentException">
            The file format cannot be determined from the specified file.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The format of the workbook data is in an unsupported format.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The workbook being loaded is in an Excel 2007 format and the CLR 2.0 Excel assembly is being used. The overload taking an 
            <see cref="T:Infragistics.Documents.Core.Packaging.IPackageFactory"/> must be used in this case so the Excel 2007 file package can be accessed.
            </exception>
            <exception cref="T:Infragistics.Documents.Core.InvalidPasswordException">
            Occurs when the workbook is encrypted and the open password specified in the <paramref name="loadOptions"/> is not correct.
            </exception>
            <exception cref="T:Infragistics.Documents.Core.DocumentEncryptedException">
            Occurs when the workbook is encrypted and no password was specified to open the file in the <paramref name="loadOptions"/>.
            </exception>
            <exception cref="T:Infragistics.Documents.Core.EncryptionAlgorithmNotSupportedException">
            Occurs when the workbook is encrypted with an unsupported encryption algorithm and cannot be decrypted.
            </exception>
            <returns>The workbook loaded from the file.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Load(System.String,Infragistics.Documents.Core.Packaging.IPackageFactory)">
            <summary>
            Reads a workbook from a file.
            </summary>
            <remarks>
            <p class="body">
            When loading the workbook, the format will be determined the file extension or by the contents of the file. If the extension is
            a standard Excel format extension, the workbook will be assumed to be in the corresponding format. Otherwise, the contents of the
            file will be examined to try to determine the format. The <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/> of the returned workbook will indicate the
            format the workbook was loaded from.
            </p>
            <p class="note">
            <B>Note:</B> This method creates a <see cref="T:System.IO.FileStream"/> using the 
            <a href="http://msdn2.microsoft.com/en-us/library/47ek66wy.aspx">FileStream(string, FileMode)</a> overload of the constructor.  
            See the remarks section of this overload for the exceptions that could be thrown.
            </p>
            </remarks>
            <param name="fileName">The file from which to read the workbook.</param>
            <param name="packageFactory">An IPackageFactory which can be used to open an IPackage from a stream.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="fileName"/> is a path to an invalid Microsoft Excel file.        
            </exception>
            <exception cref="T:System.ArgumentException">
            The file format cannot be determined from the specified file.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The format of the workbook data is in an unsupported format.
            </exception>
            <exception cref="T:System.NotSupportedException">
            <paramref name="packageFactory"/> is null and the workbook being loaded is in an Excel 2007 format and the CLR 2.0 Excel assembly is 
            being used. An <see cref="T:Infragistics.Documents.Core.Packaging.IPackageFactory"/> must be specified so the Excel 2007 file package can be accessed.
            </exception>
            <exception cref="T:Infragistics.Documents.Core.DocumentEncryptedException">
            Occurs when the workbook is encrypted and no password was specified to open the file via <see cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPassword"/>.
            </exception>
            <exception cref="T:Infragistics.Documents.Core.EncryptionAlgorithmNotSupportedException">
            Occurs when the workbook is encrypted with an unsupported encryption algorithm and cannot be decrypted.
            </exception>
            <returns>The workbook loaded from the file.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Load(System.IO.Stream,Infragistics.Documents.Core.Packaging.IPackageFactory)">
            <summary>
            Reads a workbook from a stream.
            </summary>
            <remarks>
            <p class="body">
            When loading the workbook, the format will be determined the file extension or by the contents of the file. If a FileStream is 
            specified, the extension of the file will be examined. If the extension is a standard Excel format extension, the workbook will 
            be assumed to be in the corresponding format. Otherwise, the contents of the file will be examined to try to determine the format. 
            The <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/> of the returned workbook will indicate the format the workbook was loaded from.
            </p>
            </remarks>
            <param name="stream">The stream to read the workbook from.</param>
            <param name="packageFactory">An IPackageFactory which can be used to open an IPackage from a stream.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="stream"/> does not contain valid Microsoft Excel file contents.
            </exception>
            <exception cref="T:System.ArgumentException">
            The file format cannot be determined from the specified stream.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The format of the workbook data is in an unsupported format.
            </exception>
            <exception cref="T:System.NotSupportedException">
            <paramref name="packageFactory"/> is null and the workbook being loaded is in an Excel 2007 format and the CLR 2.0 Excel assembly is 
            being used. An <see cref="T:Infragistics.Documents.Core.Packaging.IPackageFactory"/> must be specified so the Excel 2007 file package can be accessed.
            </exception>
            <exception cref="T:Infragistics.Documents.Core.DocumentEncryptedException">
            Occurs when the workbook is encrypted and no password was specified to open the stream via <see cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPassword"/>.
            </exception>
            <exception cref="T:Infragistics.Documents.Core.EncryptionAlgorithmNotSupportedException">
            Occurs when the workbook is encrypted with an unsupported encryption algorithm and cannot be decrypted.
            </exception>
            <returns>The workbook loaded from the stream.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.IsWorkbookEncrypted(System.String)">
            <summary>
            Determines whether the workbook at the specified path is encrypted with an open password.
            </summary>
            <param name="path">The path of the file to check for encryption.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="path"/> is null.
            </exception>
            <returns>True if the file contains a workbook which is encrypted; False otherwise</returns>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPassword"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPasswordSecure"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasOpenPassword"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.Security.SecureString)"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007RowCount">
            <summary>
            Maximum number of rows in the worksheet allowed by the Excel 2007 file format.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007ColumnCount">
            <summary>
            Maximum number of columns in the worksheet allowed by the Excel 2007 file format.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Workbook.MaxExcelRowCount">
            <summary>
            Maximum number of rows in the worksheet allowed by the Excel 97-2003 file format.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Workbook.MaxExcelColumnCount">
            <summary>
            Maximum number of columns in the worksheet allowed by the Excel 97-2003 file format.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Workbook.MaxExcelCellFormatCount">
            <summary>
            Maximum number of distinct cell formats in the workbook allowed by the Excel 97-2003 file format.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007CellFormatCount">
            <summary>
            Maximum number of distinct cell formats in the workbook allowed by the Excel 2007 file format.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Workbook.MaxExcelWorkbookFonts">
            <summary>
            Maximum number fonts in a workbook allowed by Excel.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Documents.Excel.Workbook"/> class.
            </summary>
            <remarks>
            <p class="body">
            The new workbook created is empty. At least one <see cref="T:Infragistics.Documents.Excel.Worksheet"/> must be added to it before 
            it can be saved.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.Worksheets"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.#ctor(Infragistics.Documents.Excel.WorkbookFormat)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Documents.Excel.Workbook"/> class.
            </summary>
            <param name="format">The file format to use when imposing format restrictions and saving.</param>
            <remarks>
            <p class="body">
            The new workbook created is empty. At least one <see cref="T:Infragistics.Documents.Excel.Worksheet"/> must be added to it before 
            it can be saved.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="format"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookFormat"/> enumeration.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.Worksheets"/>
        </member>
        <member name="E:Infragistics.Documents.Excel.Workbook.PropertyChanged">
            <summary>
            Occurs after a property value has changed
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.CharacterWidth256thsToPixels(System.Double)">
            <summary>
            Converts units of 1/256s of the average character width to pixels.
            </summary>
            <param name="characterWidth256ths">The number of units of 1/256s of the average character width.</param>
            <returns>The number of pixels equivalent to the <paramref name="characterWidth256ths"/> value.</returns>
            <remarks>
            <p class="body">
            The units of 1/256s of the average character width are based on the font height of the normal style.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.PixelsToCharacterWidth256ths(System.Double)"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetColumn.Width"/>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DefaultColumnWidth"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.ClearConnectionData">
            <summary>
            Clears all external data connections from the <see cref="T:Infragistics.Documents.Excel.Workbook"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.ClearPivotTableData">
            <summary>
            Clears all pivot tables and associated slicers from the <see cref="T:Infragistics.Documents.Excel.Workbook"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.ClearVbaData">
            <summary>
            Clears all vba information from the <see cref="T:Infragistics.Documents.Excel.Workbook"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.CreateNewWorkbookFont">
            <summary>
            Factory method which creates new workbook font.
            </summary>
            <remarks>
            <p class="body"><see cref="T:Infragistics.Documents.Excel.IWorkbookFont"/> describes font used in excel workbook.
            If many parts of excel workbook have same and complex (more than one property in common) font formatting, use this method in following manner: 
            <ol>
            <li class="taskitem"><span class="taskitemtext">Create new font format with <see cref="M:Infragistics.Documents.Excel.Workbook.CreateNewWorkbookFont"/>,</span></li>
            <li class="taskitem"><span class="taskitemtext">Set all necessary properties on given font format,</span></li>
            <li class="taskitem"><span class="taskitemtext">Apply font format to all excel objects which use it with <see cref="M:Infragistics.Documents.Excel.IWorkbookFont.SetFontFormatting(Infragistics.Documents.Excel.IWorkbookFont)"/> method.</span></li>
            </ol></p>
            <p class="body">Use of this procedure will simplify you code for complex font formats and increase speed of resulting program. It will not reduce total number of font formats in a workbook as font formats are internally cached no matter which method is used.</p>
            </remarks>
            <returns>The created excel font object.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.CreateNewWorksheetCellFormat">
            <summary>
            Creates new worksheet cell format.
            </summary>
            <returns>The cell format which was created.</returns>
            <remarks>
            <p class="body"><see cref="T:Infragistics.Documents.Excel.IWorksheetCellFormat"/> describes cell specific formatting (font, number format, appearance etc.). Total number of different cell formats in excel workbook is limited to <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelCellFormatCount"/>. 
            If many parts of excel workbook have same and complex (more than one property in common) cell formatting, use this method in following manner: 
            <ol>
            <li class="taskitem"><span class="taskitemtext">Create new cell format with <see cref="M:Infragistics.Documents.Excel.Workbook.CreateNewWorksheetCellFormat"/>,</span></li>
            <li class="taskitem"><span class="taskitemtext">Set all necessary properties on given cell format,</span></li>
            <li class="taskitem"><span class="taskitemtext">Apply cell format to all excel objects which use it with <see cref="M:Infragistics.Documents.Excel.IWorksheetCellFormat.SetFormatting(Infragistics.Documents.Excel.IWorksheetCellFormat)"/> method.</span></li>
            </ol></p>
            <p class="body">Use of this procedure will simplify you code for complex cell formats and increase speed of resulting program. It will not reduce total number of cell formats in a workbook as cell formats are internally cached no matter which method is used.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.GetTable(System.String)">
            <summary>
            Gets the table with the specified name.
            </summary>
            <param name="name">The name of the table to get.</param>
            <remarks>
            <p class="body">
            Table names are compared case-insensitively.
            </p>
            </remarks>
            <returns>A <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> instance if a table exists with the specified name; Otherwise null.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.PixelsToCharacterWidth256ths(System.Double)">
            <summary>
            Converts pixels to units of 1/256s of the average character width.
            </summary>
            <param name="pixels">The number of pixels.</param>
            <returns>The number of units of 1/256s of the average character width equivalent to the <paramref name="pixels"/> value.</returns>
            <remarks>
            <p class="body">
            The units of 1/256s of the average character width are based on the font height of the normal style.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.CharacterWidth256thsToPixels(System.Double)"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetColumn.Width"/>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DefaultColumnWidth"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Protect(System.Boolean,System.Boolean)">
            <summary>
            Protects the Workbook without a password.
            </summary>
            <param name="allowEditStructure">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorkbookProtection.AllowEditStructure"/>.</param>
            <param name="allowEditWindows">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorkbookProtection.AllowEditWindows"/>.</param>
            <remarks>
            <p class="body">When a Workbook is protected without a password, the end user may unprotect the Workbook in Excel without 
            having to supply a password. To programatically unprotect a Workbook, one may use the <see cref="M:Infragistics.Documents.Excel.Workbook.Unprotect"/> method.</p>
            <p class="body">When a Workbook is protected, the values of the properties of the <see cref="T:Infragistics.Documents.Excel.WorkbookProtection"/> instance from 
            this Workbook's <see cref="P:Infragistics.Documents.Excel.Workbook.Protection"/> property indicate the disabled operations.</p>
            <p class="note"><b>Note:</b> If <see cref="P:Infragistics.Documents.Excel.Workbook.IsProtected"/> is already true, the method will be ignored.</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasProtectionPassword"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IsProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.Protection"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorkbookProtection"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Protect(System.String,System.Boolean,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Protect(System.Security.SecureString,System.Boolean,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect(System.Security.SecureString)"/> 
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Recalculate">
            <summary>
            Recalculates all dirty formulas pending a calculation on the workbook.
            </summary>
            <remarks>
            <p class="body">
            This can be used when the <see cref="P:Infragistics.Documents.Excel.Workbook.CalculationMode"/> is Manual. In Manual mode, when cells are dirtied, formulas referencing
            those cells will not be recalculated until Recalculate is called or <see cref="P:Infragistics.Documents.Excel.Workbook.RecalculateBeforeSave"/> is True and the workbook is saved.
            </p>
            <p class="body">
            To force a recalculation of non-dirty formulas, use the <see cref="M:Infragistics.Documents.Excel.Workbook.Recalculate(System.Boolean)"/> overload and specify True for the includeNonDirtyFormulas
            parameter.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CalculationMode"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.RecalculateBeforeSave"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Recalculate(System.Boolean)">
            <summary>
            Recalculates all formulas on the workbook.
            </summary>
            <param name="includeNonDirtyFormulas">
            True to recalculate all formulas on the workbook regardless of whether they had a pending evaluation. False to only calculate dirty formulas.
            </param>
            <remarks>
            <p class="body">
            This can be used when the <see cref="P:Infragistics.Documents.Excel.Workbook.CalculationMode"/> is Manual. In Manual mode, when cells are dirtied, formulas referencing
            those cells will not be recalculated until Recalculate is called or <see cref="P:Infragistics.Documents.Excel.Workbook.RecalculateBeforeSave"/> is True and the workbook is saved.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CalculationMode"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.RecalculateBeforeSave"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.RegisterUserDefinedFunctionLibrary(System.Reflection.Assembly)">
            <summary>
            Registers an assembly containing <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction"/> derived types.
            </summary>
            <param name="assembly">Loaded assembly to register</param>
            <returns>Returns true if the assembly was registered successfully, else false if the registration failed</returns>
            <remarks>
            <p class="body">
            All types within the registered assembly are enumerated and any that derive from <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction"/> class are added to the list of available formula functions
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.RegisterUserDefinedFunction(Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction)">
            <summary>
            Registers a single <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction"/> instance.
            </summary>
            <param name="userDefinedFunction">User defined function instance to register</param>
            <returns>Returns true if the type was registered successfully, else false if the registration failed</returns>
            <remarks>
            <p class="body">
            Users can build custom functions used in formulas by sub-classing the <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction"/> class.  
            Once the derived class is instantiated it must be registered by using the RegisterUserDefinedFunction method before being available and referenced by a formulas.
            Users can build a library of functions packaged in an assembly and register all the functions within the assembly by using the <see cref="M:Infragistics.Documents.Excel.Workbook.RegisterUserDefinedFunctionLibrary(System.Reflection.Assembly)"/> method.
            </p>
            </remarks> 
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.ResumeCalculations">
            <summary>
            Resumes the calculation of formulas.
            </summary>
            <remarks>
            <p class="body">
            If calculations were not suspended when this is called, it will have no effect.
            </p>
            <p class="body">
            For each call to <see cref="M:Infragistics.Documents.Excel.Workbook.SuspendCalculations"/>, a call to ResumeCalculations must be made. As soon as the number of calls to 
            ResumeCalculations equals the number of calls to SuspendCalculations, calculations will be resumed.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SuspendCalculations"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Save(System.IO.Stream,Infragistics.Documents.Excel.WorkbookSaveOptions)">
            <summary>
            Writes the workbook to a stream.
            </summary>
            <remarks>
            <p class="body">
            The workbook will be written in the format specified by the <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/>.
            </p>
            </remarks>
            <param name="stream">The stream to write the workbook to.</param>
            <param name="saveOptions">The options to use to save the stream or null to use the default options.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="stream"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The workbook has no worksheets in its <see cref="P:Infragistics.Documents.Excel.Workbook.Worksheets"/> collection.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            No worksheet in this workbook's Worksheets collection has its <see cref="P:Infragistics.Documents.Excel.DisplayOptionsBase.Visibility"/> 
            set to Visible.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            A <see cref="T:Infragistics.Documents.Excel.CustomView"/> in the workbook's <see cref="P:Infragistics.Documents.Excel.Workbook.CustomViews"/> collection has all worksheets hidden.
            At least one worksheet must be visible in all custom views.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Save(System.IO.Stream,Infragistics.Documents.Core.Packaging.IPackageFactory)">
            <summary>
            Writes the workbook to a stream.
            </summary>
            <remarks>
            <p class="body">
            The workbook will be written in the format specified by the <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/>.
            </p>
            </remarks>
            <param name="stream">The stream to write the workbook to.</param>
            <param name="packageFactory">An IPackageFactory which can be used to open an IPackage from a stream.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="stream"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The workbook has no worksheets in its <see cref="P:Infragistics.Documents.Excel.Workbook.Worksheets"/> collection.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            No worksheet in this workbook's Worksheets collection has its <see cref="P:Infragistics.Documents.Excel.DisplayOptionsBase.Visibility"/> 
            set to Visible.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            A <see cref="T:Infragistics.Documents.Excel.CustomView"/> in the workbook's <see cref="P:Infragistics.Documents.Excel.Workbook.CustomViews"/> collection has all worksheets hidden.
            At least one worksheet must be visible in all custom views.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.SetCurrentFormat(Infragistics.Documents.Excel.WorkbookFormat)">
            <summary>
            Sets the current format of the workbook.
            </summary>
            <param name="format">The file format to use when imposing format restrictions and saving.</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="format"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookFormat"/> enumeration.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The workbook already contains data which exceeds the limits imposed by <paramref name="format"/>.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.SuspendCalculations">
            <summary>
            Temporarily suspends the calculation of formulas.
            </summary>
            <remarks>
            <p class="body">
            This should be used when adding many formulas or modifying large amounts of data on a workbook at once so formulas are not calculated 
            each time cells are dirtied.
            </p>
            <p class="body">
            For each call to SuspendCalculations, a call to <see cref="M:Infragistics.Documents.Excel.Workbook.ResumeCalculations"/> must be made. As soon as the number of calls to 
            ResumeCalculations equals the number of calls to SuspendCalculations, calculations will be resumed.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.ResumeCalculations"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Unprotect">
            <summary>
            Removes the Workbook protection.
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> If the <see cref="P:Infragistics.Documents.Excel.Workbook.HasProtectionPassword"/> returns true and you only want to 
            remove the protection if the correct password was provided then the <see cref="M:Infragistics.Documents.Excel.Workbook.Unprotect(System.String)"/> 
            should be used instead.</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IsProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasProtectionPassword"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Protect(System.Boolean,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect(System.Security.SecureString)"/> 
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Load(System.IO.Stream,Infragistics.Documents.Excel.WorkbookLoadOptions)">
            <summary>
            Reads a workbook from a stream.
            </summary>
            <remarks>
            <p class="body">
            When loading the workbook, the format will be determined the file extension or by the contents of the file. If a FileStream is 
            specified, the extension of the file will be examined. If the extension is a standard Excel format extension, the workbook will 
            be assumed to be in the corresponding format. Otherwise, the contents of the file will be examined to try to determine the format. 
            The <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/> of the returned workbook will indicate the format the workbook was loaded from.
            </p>
            </remarks>
            <param name="stream">The stream to read the workbook from.</param>
            <param name="loadOptions">The options to use to load the stream or null to use the default options.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="stream"/> does not contain valid Microsoft Excel file contents.
            </exception>
            <exception cref="T:System.ArgumentException">
            The file format cannot be determined from the specified stream.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The format of the workbook data is in an unsupported format.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The workbook being loaded is in an Excel 2007 format and the CLR 2.0 Excel assembly is being used. The overload taking an 
            <see cref="T:Infragistics.Documents.Core.Packaging.IPackageFactory"/> must be used in this case so the Excel 2007 file package can be accessed.
            </exception>
            <exception cref="T:Infragistics.Documents.Core.InvalidPasswordException">
            Occurs when the workbook is encrypted and the open password specified in the <paramref name="loadOptions"/> is not correct.
            </exception>
            <exception cref="T:Infragistics.Documents.Core.DocumentEncryptedException">
            Occurs when the workbook is encrypted and no password was specified to open the stream in the <paramref name="loadOptions"/>.
            </exception>
            <exception cref="T:Infragistics.Documents.Core.EncryptionAlgorithmNotSupportedException">
            Occurs when the workbook is encrypted with an unsupported encryption algorithm and cannot be decrypted.
            </exception>
            <returns>The workbook loaded from the stream.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.GetWorkbookFormat(System.String)">
            <summary>
            Returns the WorkbookFormat based on the file extension of the specified file. 
            </summary>
            <param name="fileName">The filename of an excel file.</param>
            <returns>The workbook format based on the file extension of the file, or null if the correct format cannot be determined.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.IsWorkbookEncrypted(System.IO.Stream)">
            <summary>
            Determines whether the workbook in the specified stream is encrypted with an open password.
            </summary>
            <param name="stream">The stream to check for encryption.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="stream"/> is null.
            </exception>
            <returns>True if the stream contains a workbook which is encrypted; False otherwise</returns>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPassword"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPasswordSecure"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasOpenPassword"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.Security.SecureString)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.GetMaxColumnCount(Infragistics.Documents.Excel.WorkbookFormat)">
            <summary>
            Returns the number of columns that are supported by the specified format.
            </summary>
            <param name="format">The format used by the workbook.</param>
            <returns>The maximum number of columns supported by the format.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.GetMaxRowCount(Infragistics.Documents.Excel.WorkbookFormat)">
            <summary>
            Returns the number of rows that are supported by the specified format.
            </summary>
            <param name="format">The format used by the workbook.</param>
            <returns>The maximum number of rows supported by the format.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.CalculationMode">
            <summary>
            Gets or sets the value which indicates how a formula will be recalculated when a referenced value changes.
            </summary>
            <remarks>
            <p class="body">
            If this is set to a value of Manual, the <see cref="P:Infragistics.Documents.Excel.Workbook.RecalculateBeforeSave"/> property will determine
            if formulas are recalculated just before saving the file.  Otherwise, that property is ignored.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The assigned value is not defined in the <see cref="P:Infragistics.Documents.Excel.Workbook.CalculationMode"/> enumeration.
            </exception>
            <value>The value which indicates how a formula will be recalculated when a referenced value changes.</value>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.RecalculateBeforeSave"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode">
            <summary>
            Gets or sets the value which indicates the way cells in the workbook are referenced.
            </summary>
            <remarks>
            <p class="body">
            The value of this property will affect the row and columns labels of the workbook when opened in Microsoft Excel.
            In addition, it will affect the display of formulas referencing different cells.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The assigned value is not defined in the <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> enumeration.
            </exception>
            <value>The value which indicates the way cells in the workbook are referenced.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.Culture">
            <summary>
            Gets or sets the culture to use as the current culture for the workbook when doing any culture-aware conversions 
            or comparisons.
            </summary>
            <remarks>
            <p class="note">
            <b>Note:</b> The culture is not saved or loaded in workbook files, so this is only used at when accessing and 
            manipulating objects owned or associated with the Workbook.
            </p>
            </remarks>
            <value>The current culture for the workbook or Null to use the thread's current culture.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.CurrentFormat">
            <summary>
            Gets the current format of the workbook. This is the format which will be used when saving and imposing format restrictions.
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetCurrentFormat(Infragistics.Documents.Excel.WorkbookFormat)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles">
            <summary>
            Gets the collection of custom table styles in the workbook.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.CustomViews">
            <summary>
            Gets the collection of custom views for the workbook.
            </summary>
            <remarks>
            <p class="body">
            Each custom view stores display settings and optionally print settings, which can later be applied to the workbook
            and its worksheets as one operation, through both the Microsoft Excel UI and the Excel assembly by calling the 
            <see cref="M:Infragistics.Documents.Excel.CustomView.Apply"/> method.
            </p>
            </remarks>
            <value>The collection of custom views for the workbook.</value>
            <seealso cref="T:Infragistics.Documents.Excel.CustomView"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.DateSystem">
            <summary>
            Gets or sets the date system used internally by Microsoft Excel.
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The assigned value is not defined in the <see cref="P:Infragistics.Documents.Excel.Workbook.DateSystem"/> enumeration.
            </exception>
            <value>The date system used internally by Microsoft Excel.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle">
            <summary>
            Gets or sets the default style for tables in the workbook.
            </summary>
            <remarks>
            <p class="body">
            This can be set to any <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle"/> in the <see cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles"/> or <see cref="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles"/> collection.
            </p>
            <p class="body">
            This will never return a null value. If it is set to null, it will be reset to the TableStyleMedium2 table style.
            </p>
            <p class="body">
            If this value is changed, it will not be applied to existing tables in the workbook. Only newly created tables will use
            default table style on the workbook.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            The specified value is not in the <see cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles"/> or <see cref="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles"/> collections.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Style"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.DocumentProperties">
            <summary>
            Gets the properties associated with the workbook document.
            </summary>
            <remarks>
            <p class="body">
            The document properties are pieces of information which provide details on the content of the workbook,
            such as the author, title, and subject of the workbook.
            </p>
            </remarks>
            <value>The properties associated with the workbook document.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.EditingCulture">
            <summary>
            The editing culture affects certain language specific features such as formatting of dates.
            or comparisons.
            </summary>
            <remarks>
            <p class="note">
            <b>Note:</b> The EditingCulture is not saved or loaded in workbook files, so this is only used at when accessing and 
            manipulating objects owned or associated with the Workbook.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.Culture"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.HasProtectionPassword">
            <summary>
            Returns a boolean indicating if the Workbook has been protected with a password.
            </summary>
            <remarks>
            <p class="body">When protecting a Workbook, a password is optional. The HasProtectionPassword will return true if the 
            Workbook is currently protected (see <see cref="P:Infragistics.Documents.Excel.Workbook.IsProtected"/>) and a password was specified when it was protected. To protect 
            a Workbook without a password, one may use the <see cref="M:Infragistics.Documents.Excel.Workbook.Protect(System.Boolean,System.Boolean)"/> 
            method that doesn't take a password. To require a specific password to be entered in order to unprotect the Workbook one 
            could use one of the other overloads that take a password (e.g.<see cref="M:Infragistics.Documents.Excel.Workbook.Unprotect(System.String)"/>).</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IsProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.Protection"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorkbookProtection"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Protect(System.Boolean,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Protect(System.String,System.Boolean,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Protect(System.Security.SecureString,System.Boolean,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect(System.Security.SecureString)"/> 
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.IsProtected">
            <summary>
            Returns a boolean indicating if the Workbook has been protected.
            </summary>
            <remarks>
            <p class="body">The IsProtected property will return true if the Workbook is currently protected. When a Workbook is protected 
            certain operations related to the Worksheets displayed or their order or the properties of the windows for the Workbook may be 
            restricted based on the values of the <see cref="P:Infragistics.Documents.Excel.Workbook.Protection"/>.</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasProtectionPassword"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.Protection"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorkbookProtection"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Protect(System.Boolean,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Protect(System.String,System.Boolean,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Protect(System.Security.SecureString,System.Boolean,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect(System.Security.SecureString)"/> 
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.IsValidFunctionName(System.String)">
            <summary>
            Gets a value indicating whether the specified function will be recognized and solved by Microsoft Excel when the workbook is saved out.
            </summary>
            <param name="functionName">The case-insensitive name of the function.</param>
            <returns>True if the function will be recognized in Microsoft Excel; False otherwise.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.IterativeCalculationsEnabled">
            <summary>
            Gets or sets the value which indicates whether iterations are allowed while calculating formulas containing 
            circular references.
            </summary>
            <remarks>
            <p class="body">
            When iterative calculations are enabled, a formula is allowed to use circular references, 
            or directly or indirectly reference the cell to which it belongs. Microsoft Excel stops iteratively
            calculating formulas after iterating <see cref="P:Infragistics.Documents.Excel.Workbook.MaxRecursionIterations"/> times or when all formula
            values change by less than <see cref="P:Infragistics.Documents.Excel.Workbook.MaxChangeInIteration"/> between two iterations.
            </p>
            <p class="body">
            When iterative calculations are disabled, circular references are not allowed, and a formula which 
            references the cell to which it belongs, directly or indirectly, will cause Microsoft Excel to show an 
            error message and the cell will contain a <see cref="P:Infragistics.Documents.Excel.ErrorValue.Circularity">Circularity</see> error.
            </p>
            </remarks>
            <value>
            The value which indicates whether iterations are allowed while calculating recursive formulas.
            </value>
            <seealso cref="P:Infragistics.Documents.Excel.ErrorValue.Circularity"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.MaxChangeInIteration"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.MaxRecursionIterations"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.MaxChangeInIteration">
            <summary>
            Gets or sets the maximum change of the values in a formula between iterations which will exit from iteration.
            </summary>
            <remarks>
            <p class="body">
            This property is only valid when <see cref="P:Infragistics.Documents.Excel.Workbook.IterativeCalculationsEnabled"/> is True. Otherwise it is ignored.
            </p>
            <p class="body">
            When iterative calculations, or circular references, are enabled, this property determines the maximum change in 
            all values of a formula between two iterations that will cause the formula to exit iterative calculations. Iterative
            calculations will also be stopped if the formula iterates <see cref="P:Infragistics.Documents.Excel.Workbook.MaxRecursionIterations"/> times.
            </p>
            </remarks>
            <value>The maximum change of the values in a formula between iterations which will exit from iteration.</value>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IterativeCalculationsEnabled"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.MaxRecursionIterations"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.MaxColumnCount">
            <summary>
            Gets the maximum number of columns allowed in each worksheet based on the <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.MaxRecursionIterations">
            <summary>
            Gets or sets the maximum number of times formulas should be iteratively calculated.
            </summary>
            <remarks>
            <p class="body">
            This property is only valid when <see cref="P:Infragistics.Documents.Excel.Workbook.IterativeCalculationsEnabled"/> is True. Otherwise it is ignored.
            </p>
            <p class="body">
            When iterative calculations, or circular references, are enabled, this property determines the number of iterations
            allowed when calculating iteratively.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value is outside the valid range of 1 and 32767.
            </exception>
            <value>The maximum number of times formulas should be iteratively calculated.</value>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IterativeCalculationsEnabled"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.MaxChangeInIteration"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.MaxRowCount">
            <summary>
            Gets the maximum number of rows allowed in each worksheet based on the <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.NamedReferences">
            <summary>
            Gets the collection of named references in the workbook.
            </summary>
            <remarks>
            <p class="body">
            Named references are typically used to refer to cells or ranges of cells by name.
            The named reference names are used by formulas instead of explicitly naming the 
            cells or cell ranges.
            </p>
            </remarks>
            <value>The collection of named references in the workbook.</value>
            <seealso cref="T:Infragistics.Documents.Excel.NamedReference"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.Palette">
            <summary>
            Gets the color palette used when the saved file is opened in Microsoft Excel 2003 and earlier versions.
            </summary>
            <remarks>
            <p class="body">
            When the file is opened in Microsoft Excel 2003 and earlier versions, the actual colors used in cells and shapes may not be displayed. 
            Instead, the closest color in the palette will be displayed instead. Therefore, the palette can be customized if necessary to keep the 
            colors as accurate as possible in older versions of Excel.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.Precision">
            <summary>
            Gets or sets the precision to use when obtaining a cell's value.
            </summary>
            <remarks>
            <p class="body">
            The precision determines whether to use the actual value of the cell or the display value of the cell.
            These are typically the same, but the format of a cell could cause a loss of precision in the displayed
            value.  For example, if a cell's value is 18.975, and a currency format is used for the cell, the display 
            value will be 18.98.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The assigned value is not defined in the <see cref="T:Precision"/> enumeration.
            </exception>
            <value>The precision to use when obtaining a cell's value.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.Protected">
            <summary>
            Gets or sets the value which indicates whether the workbook is protected.
            </summary>
            <remarks>
            <p class="body">If True, prevents changes to worksheet and to locked cells.</p>
            </remarks>
            <value>The value which indicates whether the workbook is protected.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.Protection">
            <summary>
            Returns an object that provides information used when the Workbook has been protected.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasProtectionPassword"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IsProtected"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorkbookProtection"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Protect(System.Boolean,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Protect(System.String,System.Boolean,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Protect(System.Security.SecureString,System.Boolean,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect(System.Security.SecureString)"/> 
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.RecalculateBeforeSave">
            <summary>
            Gets or sets the value which indicates whether the workbook should recalculate all formulas before saving.
            </summary>
            <remarks>
            <p class="body">
            This property only applies if the <see cref="P:Infragistics.Documents.Excel.Workbook.CalculationMode"/> is set to Manual.  Otherwise, it is ignored.
            </p>
            </remarks>
            <value>The value which indicates whether the workbook should recalculate all formulas before saving.</value>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Recalculate"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CalculationMode"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.SaveExternalLinkedValues">
            <summary>
            Gets or sets the value which indicates whether to save values linked from external workbooks.
            </summary>
            <remarks>
            <p class="body">
            This value will only be used when the workbook is opened in Microsoft Excel. When referencing external values
            and saving a workbook through the Excel assembly, external linked values will never be saved.
            </p>
            </remarks>
            <value>The value which indicates whether to save values linked from external workbooks.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.ScreenDpi">
            <summary>
            Gets or sets the Dpi to use when calculating row and column sizes for the workbook. If empty, the system Dpi will be used.
            </summary>
            <exception cref="T:System.ArgumentException">
            Occurs when the specified value is not empty and does not have two positive values.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.Sheets">
            <summary>
            Gets the collection of sheets in the workbook.
            </summary>
            <remarks>
            <p class="body">
            Use <see cref="P:Infragistics.Documents.Excel.WindowOptions.SelectedSheet">WindowOptions.SelectedSheet</see> to set the 
            selected sheet. The selected sheet is the sheet seen when the workbook is opened in Microsoft Excel.
            </p>
            </remarks>
            <value>The collection of worksheets in the workbook.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.ShouldRemoveCarriageReturnsOnSave">
            <summary>
            Gets or sets the value which indicates whether carriage return characters should be removed from string values in cells
            when the workbook is saved to an Excel file.
            </summary>
            <remarks>
            <p class="body">
            In Microsoft Excel 2003, carriage return characters are displayed as boxes. Most of the time, this should not be seen
            and removing the carriage return characters has no adverse effect on the layout of the text within a cell. Therefore,
            this property is True by default.
            </p>
            </remarks>
            <value>
            True if the saved workbook file should not contain the carriage return characters from cell values; False to export the 
            string values as they have been set on the cells.
            </value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles">
            <summary>
            Gets the read-only collection of preset table styles in the workbook.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.Styles">
            <summary>
            Gets the collection of custom styles in the workbook.
            </summary>
            <remarks>
            <p class="body">
            Use this collection to add custom styles to Excel workbook. The user can apply those styles to different 
            parts of excel workbook and thereby set complex formatting with ease.
            </p>
            </remarks>
            <value>The collection of custom styles in the workbook.</value>
            <seealso cref="T:Infragistics.Documents.Excel.WorkbookStyle"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.ValidateFormatStrings">
            <summary>
            Gets or sets the value indicating whether the format strings should be validated when they are set.
            </summary>
            <remarks>
            <p class="body">
            This value is False by default to maintain backward compatibility.
            </p>
            <p class="body">
            When True, format strings will be validated when a <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FormatString"/> property is set. An invalid
            format string will cause an exception. When False, invalid format strings will be allowed, but if the display text of a cell is
            requested, an exception will be thrown at that time. If invalid format strings are allowed and the workbook is saved and opened
            in Microsoft Excel, it will show an error.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FormatString"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetText"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetText(Infragistics.Documents.Excel.TextFormatMode)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32,Infragistics.Documents.Excel.TextFormatMode)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.WindowOptions">
            <summary>
            Gets the options which control various workbook level display properties.
            </summary>
            <remarks>
            <p class="body">
            The window options control properties of the child MDI window showing the workbook in Microsoft Excel.
            They also control display options of the workbook which do not change based on the selected worksheet.
            </p>
            </remarks>
            <value>The options which control various workbook level display properties.</value>
            <seealso cref="P:Infragistics.Documents.Excel.CustomView.WindowOptions"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.Worksheets">
            <summary>
            Gets the collection of worksheets in the workbook.
            </summary>
            <remarks>
            <p class="body">
            Use <see cref="P:Infragistics.Documents.Excel.WindowOptions.SelectedWorksheet">WindowOptions.SelectedWorksheet</see> to set the 
            selected worksheet. The selected worksheet is the worksheet seen when the workbook is opened in Microsoft Excel.
            </p>
            </remarks>
            <value>The collection of worksheets in the workbook.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookPaletteMode">
            <summary>
            Obsolete. The WorkbookPaletteMode enumeration is no longer used.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookPaletteMode.CustomPalette">
            <summary>
            Use a custom palette based on the actual colors.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookPaletteMode.StandardPalette">
            <summary>
            Use the standard Excel palette by matching the nearest color. 
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetDisplayOptions">
            <summary>
            Class which exposes the display options which can only be controlled through the worksheet.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DisplayOptions"/>
            <seealso cref="T:Infragistics.Documents.Excel.CustomViewDisplayOptions"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.TabColor">
            <summary>
            Obsolete. Use <see cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.TabColorInfo"/> instead.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetDisplayOptions.ResetCore">
            <summary>
            Resets the display options to their default settings.
            </summary>
            <remarks>
            <p class="body">
            The defaults used for each setting are the same defaults with which Microsoft Excel creates a blank worksheet.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInNormalView">
            <summary>
            Gets or sets the magnification level of the worksheet when it is displayed in normal view.
            </summary>
            <remarks>
            <p class="body">
            Magnifications are stored as percentages of the normal viewing magnification. A value of 100 indicates normal magnification
            whereas a value of 200 indicates a zoom that is twice the normal viewing magnification.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value is outside the valid range of magnification levels for a worksheet. The level must be between 10 and 400.
            </exception>
            <value>The magnification level of the worksheet when it is displayed in normal view.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInPageBreakView"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInPageLayoutView"/>
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.View"/>
            <seealso cref="P:Infragistics.Documents.Excel.CustomViewDisplayOptions.MagnificationInCurrentView"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInPageBreakView">
            <summary>
            Gets or sets the magnification level of the worksheet when it is displayed in the page break preview.
            </summary>
            <remarks>
            <p class="body">
            Magnifications are stored as percentages of the normal viewing magnification. A value of 100 indicates normal magnification
            whereas a value of 200 indicates a zoom that is twice the normal viewing magnification.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value is outside the valid range of magnification levels for a worksheet. The level must be between 10 and 400.
            </exception>
            <value>The magnification level of the worksheet when it is displayed in the page break preview.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInNormalView"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInPageLayoutView"/>
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.View"/>
            <seealso cref="P:Infragistics.Documents.Excel.CustomViewDisplayOptions.MagnificationInCurrentView"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInPageLayoutView">
            <summary>
            Gets or sets the magnification level of the worksheet when it is displayed in page layout view.
            </summary>
            <remarks>
            <p class="body">
            Magnifications are stored as percentages of the normal viewing magnification. A value of 100 indicates normal magnification
            whereas a value of 200 indicates a zoom that is twice the normal viewing magnification.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value is outside the valid range of magnification levels for a worksheet. The level must be between 10 and 400.
            </exception>
            <value>The magnification level of the worksheet when it is displayed in page layout view.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInNormalView"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInPageBreakView"/>
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.View"/>
            <seealso cref="P:Infragistics.Documents.Excel.CustomViewDisplayOptions.MagnificationInCurrentView"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.OrderColumnsRightToLeft">
            <summary>
            Gets or sets the value indicating whether the columns are ordered right to left.
            </summary>
            <remarks>
            <p class="body">
            If the columns are ordered right to left, other aspects of the worksheet display differently. The vertical scrollbar
            will display on the left side of the worksheet and the worksheet tab bar, usually displayed on the left side of the
            worksheet, will display on the right side.
            </p>
            </remarks>
            <value>The value indicating whether the columns are ordered right to left.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.ShowWhitespaceInPageLayoutView">
            <summary>
            Gets or sets the value which indicates whether to show whitespace between worksheet pages in page layout view.
            </summary>
            <remarks>
            <p class="note">
            <B>Note:</B> For this value to affect the display of the worksheet, the <see cref="P:Infragistics.Documents.Excel.DisplayOptions.View"/> must 
            be set to PageLayout. However, if a different view is used, this is still saved with the workbook.
            </p>
            <p class="note">
            <b>Note:</b> The <see cref="T:Infragistics.Documents.Excel.WorksheetView"/> value of PageLayout is only supported in Excel 2007. 
            If a worksheet with that View is viewed in earlier versions of Microsoft Excel, the view will default to Normal view.
            </p>
            </remarks>
            <value>The value which indicates whether to show white page between worksheet pages in page layout view.</value>
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.View"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.TabColorInfo">
            <summary>
            Gets or sets the <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> to use for the associated worksheet's tab in the tab bar of Microsoft Excel.
            </summary>
            <remarks>
            <p class="body">
            If the tab bar is not visible, this color will not be seen.
            </p>
            </remarks>
            <value>The WorkbookColorInfo to use for the associated worksheet's tab in the tab bar of Microsoft Excel.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WindowOptions.TabBarVisible"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.BIFF8.CfType">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd910387(v=office.12).aspx
            https://msdn.microsoft.com/en-us/library/dd906300(v=office.12).aspx
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.BIFF8.CfTemplate">
            <summary>
            See the icfTemplate field of the CF12 record:
            https://msdn.microsoft.com/en-us/library/dd906300(v=office.12).aspx
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.BIFF8.CfTemplate.FilterAKATopTen">
            <summary>
            Filter in this context means a TopTen (or RankCondition
            as we call it).
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.BIFF8.CfTextOperator">
            <summary>
            See the ctp field pf the CFExTextTemplateParams struct:
            https://msdn.microsoft.com/en-us/library/dd951767(v=office.12).aspx
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.BIFF8.CfDateOperator">
            <summary>
            See the dateOp field for CFExDateTemplateParams:
            https://msdn.microsoft.com/en-us/library/dd949800(v=office.12).aspx
            Note that these values correspond to values 0x000F through 0x0018
            of the CfTemplate enumeration.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.BIFF8.CfValueType">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd906353(v=office.12).aspx
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.BIFF8.CfValueType.Min">
            <summary>Shows up in Excel's UI as 'LowestValue', maps to same in our enum</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.BIFF8.CfValueType.Max">
            <summary>Shows up in Excel's UI as 'HighestValue', maps to same in our enum</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.BIFF8.IconSet">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd908120(v=office.12).aspx
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.BIFF8.CondFmtBase">
            <summary>
            Exposes the properties of interest for both deserialization and serialization.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.BIFF8.CondFmtWrapper">
            <summary>
            Wrapper class for a CONDFMT record
            https://msdn.microsoft.com/en-us/library/dd943350(v=office.12).aspx
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.BIFF8.CfWrapper">
            <summary>
            Wrapper class for a CF record
            https://msdn.microsoft.com/en-us/library/dd910387(v=office.12).aspx
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.BIFF8.CfWrapper.Formula">
            <summary>
            Only used for CF12 records which represent a ColorScale, DataBar, or IconSet.
            Maps to ThresholdBase.Formula. Use Formula1/Formula2 for OperatorConditionalFormat
            or FormulaConditionalFormat.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.BIFF8.CfWrapper.Formula1">
            <summary>Maps to OperatorConditionalFormat.Operand1 OR FormulaConditionalFormat.Format</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.BIFF8.CfWrapper.Formula2">
            <summary>Maps to OperatorConditionalFormat.Operand2</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.BIFF8.CfWrapper.NonCf12">
            <summary>A reference to the associated CFEXNONCF12 record, if there is one.</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.BIFF8.CfWrapper.ColorScale">
            <summary>Only applicable for ColorScaleConditionalFormat.</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.BIFF8.CfWrapper.Rank">
            <summary>
            Only applicable for RankConditionalFormat.
            Note that this is redundant as we already have it in
            TemplateParams.Rank, but they store it separately so
            for now we will too.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.BIFF8.CfWrapper.DataBar">
            <summary>Only applicable for DataBarConditionalFormat</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.BIFF8.CfWrapper.IconSet">
            <summary>Only applicable for IconSetConditionalFormat</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.BIFF8.CfExWrapper">
            <summary>
            Wrapper class for a CfEx record
            https://msdn.microsoft.com/en-us/library/dd947115(v=office.12).aspx
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.BIFF8.CfExWrapper.CondFmt">
            <summary>A reference to the CondFmtWrapper instance which represents the parent CONDFMT record.</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.BIFF8.CfExWrapper.NonCf12">
            <summary>A reference to the associated CFEXNONCF12 record, if there is one.</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.BIFF8.CfExNonCf12Wrapper">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd909608(v=office.12).aspx
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.BIFF8.CFExFilterParams">
            <summary>
            Watch the name here, this actually holds properties of the
            TopTen condition (or what we call a RankConditionalFormat)
            https://msdn.microsoft.com/en-us/library/dd924971(v=office.12).aspx
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.BIFF8.CFExTextTemplateParams">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd951767(v=office.12).aspx
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.BIFF8.CFExDateTemplateParams">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd949800(v=office.12).aspx
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.BIFF8.CFExAveragesTemplateParams">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd907877(v=office.12).aspx
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.BIFF8.CfVo">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd906353(v=office.12).aspx
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.BIFF8.CfDataBar">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd948172(v=office.12).aspx
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.BIFF8.CfIconCriterion.ThresholdInclusive">
            <summary>
            Maps to the IconCriterion.Comparison property.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream.ReadCondFmt(Infragistics.Documents.Excel.Worksheet,System.Boolean)">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd943350(v=office.12).aspx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream.ReadCondFmt12(Infragistics.Documents.Excel.Worksheet)">
            <summary>
            CONDFMT12 is just an FrtRefHeaderU followed by a CONDFMT
            https://msdn.microsoft.com/en-us/library/dd773198(v=office.12).aspx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream.WriteCondFmt12(Infragistics.Documents.Excel.Serialization.BIFF8.CONDFMTSerializer,Infragistics.Documents.Excel.Worksheet)">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd944103(v=office.12).aspx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream.ReadCf(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003,Infragistics.Documents.Excel.Worksheet)">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd910387(v=office.12).aspx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream.ReadCf12(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003,Infragistics.Documents.Excel.Worksheet)">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd906300(v=office.12).aspx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream.WriteCf12(Infragistics.Documents.Excel.Serialization.BIFF8.CONDFMTSerializer,Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase,Infragistics.Documents.Excel.Worksheet,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd906300(v=office.12).aspx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream.ReadCfHelper(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003,Infragistics.Documents.Excel.Worksheet,System.Boolean)">
            <summary>
            Handles reading for both the CF and CF12 records.
            CF: https://msdn.microsoft.com/en-us/library/dd910387(v=office.12).aspx 
            CF12: https://msdn.microsoft.com/en-us/library/dd906300(v=office.12).aspx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream.ReadCfEx(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003,Infragistics.Documents.Excel.Worksheet)">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd947115(v=office.12).aspx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream.ReadCfExNonCf12(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003,Infragistics.Documents.Excel.Worksheet)">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd909608(v=office.12).aspx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream.ReadCFFilter">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd921561(v=office.12).aspx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream.ReadCFFilter(System.Boolean@,System.Boolean@,System.UInt16@)">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd921561(v=office.12).aspx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream.ReadCFGradient(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd952815(v=office.12).aspx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream.ReadCFGradient(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003,Infragistics.Documents.Excel.Serialization.BIFF8.CfVo[]@,Infragistics.Documents.Excel.WorkbookColorInfo[]@)">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd952815(v=office.12).aspx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream.ReadCFGradientItem(System.Double@)">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd925425(v=office.12).aspx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream.ReadCFVO(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003)">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd906353(v=office.12).aspx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream.ReadCFDatabar(Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2003,Infragistics.Documents.Excel.Worksheet)">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd948172(v=office.12).aspx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream.WriteCFDatabar(Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2003)">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd948172(v=office.12).aspx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream.WriteDXFN12(Infragistics.Documents.Excel.WorksheetCellFormatData)">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd952719(v=office.12).aspx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream.ReadSqRefU(Infragistics.Documents.Excel.Worksheet)">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd925783(v=office.12).aspx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.BIFF8.Biff8RecordStream.ReadFrtRefHeaderU(Infragistics.Documents.Excel.Worksheet,System.UInt16@,System.Boolean@,System.Boolean@,Infragistics.Documents.Excel.WorksheetRegion@)">
            <summary>
            https://msdn.microsoft.com/en-us/library/dd947923(v=office.12).aspx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.XLSX.PartManagers.ObjectModelDrawingPartManager.WriteFallbackElement_ChartEx">
            <summary>
            Writes out the mc:Fallback element and all descendants.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.XLSX.PartManagers.ObjectModelWorksheetPartManager.LoadIdElement2009(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            Handles the
            http://schemas.microsoft.com/office/spreadsheetml/2009/9/main/id
            element (child of ext)
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.RegisterElementCallbacks(Infragistics.Documents.Excel.Serialization.Excel2007.XLSX.PartManagers.ObjectModelChartPartManager)">
            <summary>Registers element load callbacks for &lt;chartSpace&gt; and all descendants.</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadChartSpace_ChartEx(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2014/chartex/chartSpace
            http://schemas.openxmlformats.org/drawingml/2014/chartex:CT_ChartSpace
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadChartSpace(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/chartSpace
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ChartSpace
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadChartSpace_End(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/chartSpace
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ChartSpace
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadDate1904(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/date1904
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLang(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/lang
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_TextLanguageID
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadRoundedCorners(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/roundedCorners
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadStyle(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/style
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Style
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadClrMapOvr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/clrMapOvr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ColorMapping
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPivotSource(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/pivotSource
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_PivotSource
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadProtection(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/protection
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Protection
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadChart(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/chart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Chart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSpPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/spPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ShapeProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadTxPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/txPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBody_DML
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadExternalData(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/externalData
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ExternalData
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPrintSettings(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/printSettings
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_PrintSettings
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadUserShapes(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/userShapes
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_RelId
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadExtLst_Chart(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/extLst
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ExtensionList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadExtLst_DML(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/extLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_OfficeArtExtensionList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadExt_DML(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ext
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_OfficeArtExtension
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadName(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/name
            http://schemas.openxmlformats.org/drawingml/2006/chart:String
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadFmtId(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/fmtId
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_UnsignedInt
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadChartObject(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/chartObject
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadData(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/data
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadFormatting(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/formatting
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSelection(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/selection
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadUserInterface(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/userInterface
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadTitle(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/title
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Title
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadAutoTitleDeleted(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/autoTitleDeleted
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPivotFmts(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/pivotFmts
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_PivotFmts
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadView3D(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/view3D
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_View3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadFloor(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/floor
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Surface
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSideWall(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/sideWall
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Surface
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBackWall(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/backWall
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Surface
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPlotArea(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/plotArea
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_PlotArea
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLegend(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/legend
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Legend
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPlotVisOnly(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/plotVisOnly
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadDispBlanksAs(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/dispBlanksAs
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DispBlanksAs
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadShowDLblsOverMax(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/showDLblsOverMax
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadTx(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/tx
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Tx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLayout(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/layout
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Layout
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadOverlay(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/overlay
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadStrRef(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/strRef
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_StrRef
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadRich(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/rich
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBody_DML
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadF(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/f
            http://www.w3.org/2001/XMLSchema:String
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadStrCache(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/strCache
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_StrData
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPtCount(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/ptCount
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_UnsignedInt
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPt_Chart(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/pt
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_StrVal
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_NumVal
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadV(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/v
            http://schemas.openxmlformats.org/drawingml/2006/chart:String
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBodyPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bodyPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBodyProperties_DML
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLstStyle(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lstStyle
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextListStyle_DML
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadP(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/p
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraph_DML
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPrstTxWarp(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/prstTxWarp
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetTextShape
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadNoAutofit(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/noAutofit
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextNoAutofit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadNormAutofit(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/normAutofit
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextNormalAutofit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSpAutoFit(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/spAutoFit
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextShapeAutofit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadScene3d(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/scene3d
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Scene3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSp3d(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/sp3d
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Shape3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadFlatTx(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/flatTx
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_FlatText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadAvLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/avLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GeomGuideList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadGd(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gd
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GeomGuide
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadCamera(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/camera
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Camera
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLightRig(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lightRig
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LightRig
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBackdrop(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/backdrop
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Backdrop
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadRot(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/rot
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SphereCoords
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadAnchor(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/anchor
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Point3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadNorm(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/norm
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Vector3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadUp(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/up
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Vector3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBevelT(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bevelT
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Bevel
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBevelB(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bevelB
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Bevel
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadExtrusionClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/extrusionClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadContourClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/contourClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadScrgbClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/scrgbClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ScRgbColor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSrgbClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/srgbClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SRgbColor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadHslClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hslClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_HslColor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSysClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/sysClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SystemColor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSchemeClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/schemeClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SchemeColor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPrstClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/prstClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetColor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadTint(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/tint
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositiveFixedPercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadShade(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/shade
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositiveFixedPercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadComp(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/comp
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ComplementTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadInv(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/inv
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_InverseTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadGray(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gray
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GrayscaleTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadAlpha(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alpha
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositiveFixedPercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadAlphaOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_FixedPercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadAlphaMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositivePercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadHue(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hue
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositiveFixedAngle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadHueOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hueOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Angle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadHueMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hueMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositivePercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSat(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/sat
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSatOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/satOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSatMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/satMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLum(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lum
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLumOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lumOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLumMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lumMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadRed(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/red
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadRedOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/redOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadRedMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/redMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadGreen(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/green
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadGreenOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/greenOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadGreenMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/greenMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBlue(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blue
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBlueOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blueOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBlueMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blueMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadGamma(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gamma
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GammaTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadInvGamma(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/invGamma
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_InverseGammaTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadDefPPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/defPPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraphProperties_DML
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLvl1pPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lvl1pPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraphProperties_DML
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLvl2pPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lvl2pPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraphProperties_DML
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLvl3pPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lvl3pPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraphProperties_DML
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLvl4pPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lvl4pPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraphProperties_DML
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLvl5pPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lvl5pPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraphProperties_DML
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLvl6pPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lvl6pPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraphProperties_DML
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLvl7pPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lvl7pPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraphProperties_DML
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLvl8pPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lvl8pPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraphProperties_DML
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLvl9pPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lvl9pPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraphProperties_DML
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLnSpc(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lnSpc
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextSpacing
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSpcBef(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/spcBef
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextSpacing
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSpcAft(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/spcAft
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextSpacing
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBuClrTx(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buClrTx
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletColorFollowText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBuClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBuSzTx(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buSzTx
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletSizeFollowText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBuSzPct(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buSzPct
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletSizePercent
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBuSzPts(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buSzPts
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletSizePoint
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBuFontTx(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buFontTx
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletTypefaceFollowText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBuFont(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buFont
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextFont
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBuNone(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buNone
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextNoBullet
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBuAutoNum(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buAutoNum
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextAutonumberBullet
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBuChar(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buChar
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextCharBullet
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBuBlip(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buBlip
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBlipBullet
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadTabLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/tabLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextTabStopList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadDefRPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/defRPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextCharacterProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSpcPct(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/spcPct
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextSpacingPercent
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSpcPts(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/spcPts
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextSpacingPoint
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBlip(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blip
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Blip
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadAlphaBiLevel(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaBiLevel
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaBiLevelEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadAlphaCeiling(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaCeiling
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaCeilingEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadAlphaFloor(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaFloor
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaFloorEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadAlphaInv(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaInv
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaInverseEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadAlphaModFix(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaModFix
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaModulateFixedEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadAlphaRepl(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaRepl
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaReplaceEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBiLevel(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/biLevel
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_BiLevelEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBlur(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blur
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_BlurEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadClrChange(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/clrChange
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ColorChangeEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadClrRepl(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/clrRepl
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ColorReplaceEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadDuotone(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/duotone
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_DuotoneEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadFillOverlay(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fillOverlay
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_FillOverlayEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadGrayscl(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/grayscl
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GrayscaleEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadHsl(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hsl
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_HSLEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadCont(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/cont
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectContainer
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadEffect(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/effect
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectReference
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadAlphaOutset(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaOutset
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaOutsetEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBlend(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blend
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_BlendEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadFill(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_FillEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadGlow(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/glow
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GlowEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadInnerShdw(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/innerShdw
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_InnerShadowEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadOuterShdw(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/outerShdw
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_OuterShadowEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPrstShdw(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/prstShdw
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetShadowEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadReflection(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/reflection
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ReflectionEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadRelOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/relOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_RelativeOffsetEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSoftEdge(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/softEdge
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SoftEdgesEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadXfrm(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/xfrm
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TransformEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadNoFill(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/noFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_NoFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSolidFill(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/solidFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SolidColorFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadGradFill(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gradFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GradientFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBlipFill(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blipFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_BlipFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPattFill(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/pattFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PatternFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadGrpFill(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/grpFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GroupFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadGsLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gsLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GradientStopList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLin(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lin
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LinearShadeProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPath(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/path
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PathShadeProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadTileRect(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/tileRect
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_RelativeRect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadGs(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gs
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GradientStop
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadFillToRect(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fillToRect
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_RelativeRect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSrcRect(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/srcRect
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_RelativeRect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadTile(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/tile
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TileInfoProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadStretch(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/stretch
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_StretchInfoProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadFillRect(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fillRect
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_RelativeRect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadFgClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fgClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBgClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bgClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadClrFrom(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/clrFrom
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadClrTo(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/clrTo
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadTab(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/tab
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextTabStop
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLn(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ln
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadEffectLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/effectLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadEffectDag(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/effectDag
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectContainer
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadHighlight(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/highlight
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadULnTx(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/uLnTx
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextUnderlineLineFollowText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadULn(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/uLn
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadUFillTx(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/uFillTx
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextUnderlineFillFollowText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadUFill(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/uFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextUnderlineFillGroupWrapper
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLatin(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/latin
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextFont
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadEa(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ea
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextFont
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadCs(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/cs
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextFont
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSym(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/sym
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextFont
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadHlinkClick(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hlinkClick
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Hyperlink
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadHlinkMouseOver(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hlinkMouseOver
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Hyperlink
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPrstDash(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/prstDash
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetLineDashProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadCustDash(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/custDash
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_DashStopList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadRound(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/round
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineJoinRound
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBevel(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bevel
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineJoinBevel
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadMiter(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/miter
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineJoinMiterProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadHeadEnd(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/headEnd
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineEndProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadTailEnd(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/tailEnd
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineEndProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadDs(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ds
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_DashStop
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSnd(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/snd
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EmbeddedWAVAudioFile
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/pPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraphProperties_DML
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadR(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/r
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_RegularTextRun
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/br
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextLineBreak
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadFld(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fld
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextField
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadEndParaRPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/endParaRPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextCharacterProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadRPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/rPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextCharacterProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadT(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/t
            http://www.w3.org/2001/XMLSchema:String
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadManualLayout(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/manualLayout
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ManualLayout
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLayoutTarget(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/layoutTarget
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LayoutTarget
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadXMode(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/xMode
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LayoutMode
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadYMode(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/yMode
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LayoutMode
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadWMode(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/wMode
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LayoutMode
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadHMode(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/hMode
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LayoutMode
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadX(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/x
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Double
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadY(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/y
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Double
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadW(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/w
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Double
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadH(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/h
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Double
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPivotFmt(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/pivotFmt
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_PivotFmt
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadIdx(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/idx
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_UnsignedInt
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadMarker(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/marker
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Marker_Chart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadDLbl(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/dLbl
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DLbl
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSymbol(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/symbol
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_MarkerStyle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSize(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/size
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_MarkerSize
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadDelete(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/delete
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadNumFmt(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/numFmt
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_NumFmt
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadDLblPos(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/dLblPos
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DLblPos
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadShowLegendKey(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/showLegendKey
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadShowVal(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/showVal
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadShowCatName(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/showCatName
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadShowSerName(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/showSerName
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadShowPercent(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/showPercent
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadShowBubbleSize(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/showBubbleSize
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSeparator(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/separator
            http://www.w3.org/2001/XMLSchema:String
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadRotX(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/rotX
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_RotX
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadHPercent(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/hPercent
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_HPercent
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadRotY(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/rotY
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_RotY
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadDepthPercent(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/depthPercent
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DepthPercent
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadRAngAx(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/rAngAx
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPerspective(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/perspective
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Perspective
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadThickness(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/thickness
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_UnsignedInt
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPictureOptions(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/pictureOptions
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_PictureOptions
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadApplyToFront(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/applyToFront
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadApplyToSides(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/applyToSides
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadApplyToEnd(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/applyToEnd
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPictureFormat(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/pictureFormat
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_PictureFormat
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPictureStackUnit(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/pictureStackUnit
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_PictureStackUnit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadAreaChart(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/areaChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_AreaChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadArea3DChart(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/area3DChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Area3DChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLineChart(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/lineChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LineChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLine3DChart(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/line3DChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Line3DChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadStockChart(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/stockChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_StockChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadRadarChart(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/radarChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_RadarChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadScatterChart(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/scatterChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ScatterChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPieChart(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/pieChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_PieChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPie3DChart(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/pie3DChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Pie3DChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadDoughnutChart(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/doughnutChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DoughnutChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBarChart(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/barChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_BarChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBar3DChart(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/bar3DChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Bar3DChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadOfPieChart(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/ofPieChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_OfPieChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSurfaceChart(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/surfaceChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_SurfaceChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSurface3DChart(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/surface3DChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Surface3DChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBubbleChart(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/bubbleChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_BubbleChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadValAx(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/valAx
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ValAx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadCatAx(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/catAx
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_CatAx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadDateAx(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/dateAx
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DateAx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSerAx(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/serAx
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_SerAx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadDTable(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/dTable
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DTable
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadGrouping(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/grouping
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Grouping
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadVaryColors(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/varyColors
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSer(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/ser
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_AreaSer
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_BarSer
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_BubbleSer
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LineSer
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_RadarSer
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_PieSer
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ScatterSer
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_SurfaceSer
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadDLbls(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/dLbls
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DLbls
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadDropLines(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/dropLines
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ChartLines
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadAxId(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/axId
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_UnsignedInt
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadOrder(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/order
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_UnsignedInt
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadDPt(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/dPt
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DPt
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadTrendline(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/trendline
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Trendline
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadErrBars(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/errBars
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ErrBars
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadCat(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/cat
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_AxDataSource
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadVal(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/val
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_NumDataSource
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadInvertIfNegative(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/invertIfNegative
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBubble3D(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/bubble3D
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadExplosion(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/explosion
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_UnsignedInt
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadTrendlineType(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/trendlineType
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_TrendlineType
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPeriod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/period
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Period
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadForward(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/forward
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Double
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBackward(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/backward
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Double
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadIntercept(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/intercept
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Double
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadDispRSqr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/dispRSqr
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadDispEq(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/dispEq
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadTrendlineLbl(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/trendlineLbl
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_TrendlineLbl
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadErrDir(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/errDir
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ErrDir
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadErrBarType(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/errBarType
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ErrBarType
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadErrValType(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/errValType
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ErrValType
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadNoEndCap(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/noEndCap
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPlus(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/plus
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_NumDataSource
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadMinus(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/minus
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_NumDataSource
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadNumRef(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/numRef
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_NumRef
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadNumLit(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/numLit
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_NumData
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadNumCache(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/numCache
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_NumData
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadFormatCode(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/formatCode
            http://schemas.openxmlformats.org/drawingml/2006/chart:String
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadMultiLvlStrRef(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/multiLvlStrRef
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_MultiLvlStrRef
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadStrLit(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/strLit
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_StrData
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadMultiLvlStrCache(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/multiLvlStrCache
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_MultiLvlStrData
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLvl(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/lvl
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Lvl
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadShowLeaderLines(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/showLeaderLines
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLeaderLines(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/leaderLines
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ChartLines
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadGapDepth(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/gapDepth
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_GapAmount
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadHiLowLines(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/hiLowLines
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ChartLines
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadUpDownBars(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/upDownBars
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_UpDownBars
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSmooth(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/smooth
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadGapWidth(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/gapWidth
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_GapAmount
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadUpBars(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/upBars
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_UpDownBar
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadDownBars(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/downBars
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_UpDownBar
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadRadarStyle(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/radarStyle
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_RadarStyle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadScatterStyle(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/scatterStyle
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ScatterStyle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadXVal(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/xVal
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_AxDataSource
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadYVal(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/yVal
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_NumDataSource
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadFirstSliceAng(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/firstSliceAng
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_FirstSliceAng
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadHoleSize(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/holeSize
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_HoleSize
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBarDir(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/barDir
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_BarDir
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadOverlap(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/overlap
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Overlap
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSerLines(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/serLines
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ChartLines
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadShape(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/shape
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Shape_Chart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadOfPieType(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/ofPieType
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_OfPieType
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSplitType(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/splitType
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_SplitType
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSplitPos(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/splitPos
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Double
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadCustSplit(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/custSplit
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_CustSplit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSecondPieSize(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/secondPieSize
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_SecondPieSize
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSecondPiePt(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/secondPiePt
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_UnsignedInt
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadWireframe(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/wireframe
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBandFmts(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/bandFmts
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_BandFmts
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBandFmt(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/bandFmt
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_BandFmt
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBubbleScale(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/bubbleScale
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_BubbleScale
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadShowNegBubbles(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/showNegBubbles
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadSizeRepresents(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/sizeRepresents
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_SizeRepresents
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBubbleSize(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/bubbleSize
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_NumDataSource
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadScaling(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/scaling
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Scaling
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadAxPos(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/axPos
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_AxPos
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadMajorGridlines(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/majorGridlines
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ChartLines
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadMinorGridlines(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/minorGridlines
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ChartLines
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadMajorTickMark(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/majorTickMark
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_TickMark
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadMinorTickMark(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/minorTickMark
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_TickMark
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadTickLblPos(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/tickLblPos
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_TickLblPos
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadCrossAx(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/crossAx
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_UnsignedInt
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadCrosses(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/crosses
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Crosses
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadCrossesAt(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/crossesAt
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Double
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadCrossBetween(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/crossBetween
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_CrossBetween
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadMajorUnit(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/majorUnit
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_AxisUnit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadMinorUnit(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/minorUnit
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_AxisUnit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadDispUnits(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/dispUnits
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DispUnits
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLogBase(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/logBase
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LogBase
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadOrientation(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/orientation
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Orientation
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadMax(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/max
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Double
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadMin(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/min
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Double
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadCustUnit(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/custUnit
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Double
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBuiltInUnit(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/builtInUnit
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_BuiltInUnit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadDispUnitsLbl(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/dispUnitsLbl
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DispUnitsLbl
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadAuto(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/auto
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLblAlgn(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/lblAlgn
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LblAlgn
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLblOffset(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/lblOffset
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LblOffset
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadTickLblSkip(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/tickLblSkip
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Skip
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadTickMarkSkip(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/tickMarkSkip
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Skip
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadNoMultiLvlLbl(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/noMultiLvlLbl
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadBaseTimeUnit(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/baseTimeUnit
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_TimeUnit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadMajorTimeUnit(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/majorTimeUnit
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_TimeUnit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadMinorTimeUnit(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/minorTimeUnit
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_TimeUnit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadShowHorzBorder(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/showHorzBorder
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadShowVertBorder(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/showVertBorder
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadShowOutline(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/showOutline
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadShowKeys(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/showKeys
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLegendPos(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/legendPos
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LegendPos
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLegendEntry(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/legendEntry
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LegendEntry
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadCustGeom(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/custGeom
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_CustomGeometry2D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPrstGeom(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/prstGeom
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetGeometry2D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/off
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Point2D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadGdLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gdLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GeomGuideList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadAhLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ahLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AdjustHandleList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadCxnLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/cxnLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ConnectionSiteList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadRect(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/rect
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GeomRect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPathLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/pathLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Path2DList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadAhXY(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ahXY
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_XYAdjustHandle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadAhPolar(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ahPolar
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PolarAdjustHandle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPos(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/pos
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AdjPoint2D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadCxn(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/cxn
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ConnectionSite
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadClose(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/close
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Path2DClose
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadMoveTo(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/moveTo
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Path2DMoveTo
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLnTo(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lnTo
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Path2DLineTo
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadArcTo(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/arcTo
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Path2DArcTo
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadQuadBezTo(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/quadBezTo
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Path2DQuadBezierTo
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadCubicBezTo(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/cubicBezTo
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Path2DCubicBezierTo
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPt_DML(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/pt
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AdjPoint2D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadAutoUpdate(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/autoUpdate
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadHeaderFooter(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/headerFooter
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_HeaderFooter
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPageMargins(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/pageMargins
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_PageMargins
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadPageSetup(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/pageSetup
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_PageSetup
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLegacyDrawingHF(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/legacyDrawingHF
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_RelId
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadOddHeader(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/oddHeader
            http://schemas.openxmlformats.org/drawingml/2006/chart:String
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadOddFooter(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/oddFooter
            http://schemas.openxmlformats.org/drawingml/2006/chart:String
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadEvenHeader(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/evenHeader
            http://schemas.openxmlformats.org/drawingml/2006/chart:String
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadEvenFooter(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/evenFooter
            http://schemas.openxmlformats.org/drawingml/2006/chart:String
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadFirstHeader(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/firstHeader
            http://schemas.openxmlformats.org/drawingml/2006/chart:String
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadFirstFooter(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/firstFooter
            http://schemas.openxmlformats.org/drawingml/2006/chart:String
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadExt_Chart(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/ext
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Extension
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadShowLeaderLines_Chart2012(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2012/chart/showLeaderLines
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadShowDataLabelsRange_Chart2012(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2012/chart/showLeaderLines
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLeaderLines_Chart2012(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2012/chart/leaderLines
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadLayout_Chart2012(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2012/chart/layout
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadDataLabelsRange(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2012/chart/datalabelsRange
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartDeserializer.LoadF_Chart2012(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2012/chart/datalabelsRange
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.RegisterElementCallbacks(Infragistics.Documents.Excel.Serialization.Excel2007.XLSX.PartManagers.ObjectModelChartExPartManager)">
            <summary>Registers element load callbacks for &lt;chartSpace&gt; and all descendants.</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadChartSpace(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/chartSpace
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ChartSpace
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadChartSpace_End(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/chartSpace
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ChartSpace
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadChartData(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/chartData
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ChartData
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadChart(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/chart
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Chart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadSpPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/spPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ShapeProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadTxPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/txPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBody
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadClrMapOvr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/clrMapOvr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ColorMapping
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadFmtOvrs(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/fmtOvrs
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_FormatOverrides
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadPrintSettings(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/printSettings
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_PrintSettings
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadExtLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/extLst
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ExtensionList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadExternalData(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/externalData
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ExternalData
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadData(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/data
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Data
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadNumDim(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/numDim
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_NumericDimension
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadStrDim(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/strDim
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_StringDimension
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadF(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/f
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Formula
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadNf(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/nf
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Formula
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadLvl(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/lvl
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_NumericLevel
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadPt(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/pt
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_NumericValue
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadTitle(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/title
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ChartTitle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadPlotArea(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/plotArea
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_PlotArea
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadLegend(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/legend
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Legend
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadTx(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/tx
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Text
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadTxData(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/txData
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_TextData
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadRich(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/rich
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBody
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadV(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/v
            http://www.w3.org/2001/XMLSchema:String
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBodyPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bodyPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBodyProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadLstStyle(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lstStyle
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextListStyle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadP(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/p
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraph
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadPrstTxWarp(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/prstTxWarp
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetTextShape
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadNoAutofit(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/noAutofit
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextNoAutofit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadNormAutofit(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/normAutofit
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextNormalAutofit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadSpAutoFit(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/spAutoFit
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextShapeAutofit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadScene3d(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/scene3d
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Scene3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadSp3d(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/sp3d
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Shape3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadFlatTx(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/flatTx
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_FlatText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadExtLst_DML(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/extLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_OfficeArtExtensionList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadAvLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/avLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GeomGuideList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGd(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gd
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GeomGuide
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadCamera(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/camera
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Camera
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadLightRig(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lightRig
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LightRig
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBackdrop(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/backdrop
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Backdrop
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadRot(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/rot
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SphereCoords
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadAnchor(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/anchor
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Point3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadNorm(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/norm
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Vector3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadUp(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/up
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Vector3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBevelT(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bevelT
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Bevel
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBevelB(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bevelB
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Bevel
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadExtrusionClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/extrusionClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadContourClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/contourClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadScrgbClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/scrgbClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ScRgbColor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadSrgbClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/srgbClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SRgbColor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadHslClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hslClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_HslColor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadSysClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/sysClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SystemColor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadSchemeClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/schemeClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SchemeColor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadPrstClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/prstClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetColor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadTint(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/tint
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositiveFixedPercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadShade(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/shade
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositiveFixedPercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadComp(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/comp
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ComplementTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadInv(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/inv
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_InverseTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGray(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gray
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GrayscaleTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadAlpha(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alpha
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositiveFixedPercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadAlphaOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_FixedPercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadAlphaMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositivePercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadHue(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hue
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositiveFixedAngle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadHueOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hueOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Angle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadHueMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hueMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositivePercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadSat(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/sat
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadSatOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/satOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadSatMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/satMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadLum(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lum
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadLumOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lumOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadLumMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lumMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadRed(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/red
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadRedOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/redOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadRedMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/redMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGreen(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/green
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGreenOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/greenOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGreenMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/greenMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBlue(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blue
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBlueOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blueOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBlueMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blueMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGamma(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gamma
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GammaTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadInvGamma(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/invGamma
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_InverseGammaTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadExt_DML(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ext
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_OfficeArtExtension
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadDefPPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/defPPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraphProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadLvl1pPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lvl1pPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraphProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadLvl2pPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lvl2pPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraphProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadLvl3pPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lvl3pPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraphProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadLvl4pPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lvl4pPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraphProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadLvl5pPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lvl5pPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraphProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadLvl6pPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lvl6pPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraphProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadLvl7pPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lvl7pPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraphProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadLvl8pPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lvl8pPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraphProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadLvl9pPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lvl9pPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraphProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadLnSpc(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lnSpc
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextSpacing
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadSpcBef(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/spcBef
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextSpacing
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadSpcAft(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/spcAft
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextSpacing
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBuClrTx(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buClrTx
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletColorFollowText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBuClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBuSzTx(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buSzTx
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletSizeFollowText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBuSzPct(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buSzPct
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletSizePercent
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBuSzPts(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buSzPts
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletSizePoint
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBuFontTx(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buFontTx
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletTypefaceFollowText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBuFont(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buFont
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextFont
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBuNone(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buNone
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextNoBullet
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBuAutoNum(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buAutoNum
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextAutonumberBullet
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBuChar(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buChar
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextCharBullet
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBuBlip(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buBlip
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBlipBullet
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadTabLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/tabLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextTabStopList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadDefRPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/defRPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextCharacterProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadSpcPct(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/spcPct
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextSpacingPercent
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadSpcPts(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/spcPts
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextSpacingPoint
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBlip(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blip
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Blip
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadAlphaBiLevel(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaBiLevel
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaBiLevelEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadAlphaCeiling(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaCeiling
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaCeilingEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadAlphaFloor(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaFloor
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaFloorEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadAlphaInv(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaInv
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaInverseEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadAlphaModFix(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaModFix
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaModulateFixedEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadAlphaRepl(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaRepl
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaReplaceEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBiLevel(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/biLevel
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_BiLevelEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBlur(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blur
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_BlurEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadClrChange(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/clrChange
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ColorChangeEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadClrRepl(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/clrRepl
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ColorReplaceEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadDuotone(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/duotone
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_DuotoneEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadFillOverlay(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fillOverlay
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_FillOverlayEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGrayscl(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/grayscl
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GrayscaleEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadHsl(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hsl
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_HSLEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadCont(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/cont
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectContainer
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadEffect(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/effect
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectReference
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadAlphaOutset(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaOutset
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaOutsetEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBlend(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blend
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_BlendEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadFill(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_FillEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGlow(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/glow
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GlowEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadInnerShdw(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/innerShdw
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_InnerShadowEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadOuterShdw(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/outerShdw
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_OuterShadowEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadPrstShdw(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/prstShdw
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetShadowEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadReflection(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/reflection
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ReflectionEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadRelOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/relOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_RelativeOffsetEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadSoftEdge(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/softEdge
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SoftEdgesEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadXfrm(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/xfrm
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TransformEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadNoFill(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/noFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_NoFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadSolidFill(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/solidFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SolidColorFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGradFill(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gradFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GradientFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBlipFill(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blipFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_BlipFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadPattFill(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/pattFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PatternFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGrpFill(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/grpFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GroupFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGsLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gsLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GradientStopList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadLin(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lin
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LinearShadeProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadPath(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/path
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PathShadeProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadTileRect(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/tileRect
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_RelativeRect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGs(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gs
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GradientStop
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadFillToRect(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fillToRect
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_RelativeRect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadSrcRect(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/srcRect
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_RelativeRect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadTile(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/tile
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TileInfoProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadStretch(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/stretch
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_StretchInfoProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadFillRect(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fillRect
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_RelativeRect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadFgClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fgClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBgClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bgClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadClrFrom(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/clrFrom
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadClrTo(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/clrTo
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadTab(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/tab
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextTabStop
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadLn(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ln
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadEffectLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/effectLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadEffectDag(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/effectDag
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectContainer
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadHighlight(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/highlight
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadULnTx(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/uLnTx
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextUnderlineLineFollowText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadULn(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/uLn
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadUFillTx(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/uFillTx
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextUnderlineFillFollowText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadUFill(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/uFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextUnderlineFillGroupWrapper
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadLatin(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/latin
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextFont
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadEa(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ea
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextFont
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadCs(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/cs
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextFont
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadSym(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/sym
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextFont
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadHlinkClick(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hlinkClick
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Hyperlink
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadHlinkMouseOver(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hlinkMouseOver
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Hyperlink
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadPrstDash(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/prstDash
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetLineDashProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadCustDash(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/custDash
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_DashStopList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadRound(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/round
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineJoinRound
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBevel(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bevel
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineJoinBevel
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadMiter(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/miter
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineJoinMiterProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadHeadEnd(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/headEnd
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineEndProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadTailEnd(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/tailEnd
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineEndProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadDs(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ds
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_DashStop
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadSnd(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/snd
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EmbeddedWAVAudioFile
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadPPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/pPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraphProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadR(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/r
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_RegularTextRun
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/br
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextLineBreak
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadFld(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fld
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextField
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadEndParaRPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/endParaRPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextCharacterProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadRPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/rPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextCharacterProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadT(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/t
            http://www.w3.org/2001/XMLSchema:String
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadPlotAreaRegion(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/plotAreaRegion
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_PlotAreaRegion
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadAxis(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/axis
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Axis
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadPlotSurface(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/plotSurface
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_PlotSurface
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadSeries(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/series
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Series
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadValueColors(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/valueColors
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ValueColors
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadValueColorPositions(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/valueColorPositions
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ValueColorPositions
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadDataPt(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/dataPt
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_DataPoint
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadDataLabels(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/dataLabels
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_DataLabels
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadDataId(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/dataId
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_DataId
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadLayoutPr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/layoutPr
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_SeriesLayoutProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadAxisId(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/axisId
            http://schemas.microsoft.com/office/drawing/2014/chartex:UInt32
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadMinColor(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/minColor
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SolidColorFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadMidColor(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/midColor
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SolidColorFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadMaxColor(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/maxColor
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SolidColorFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadMin(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/min
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ValueColorEndPosition
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadMid(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/mid
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ValueColorMiddlePosition
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadMax(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/max
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ValueColorEndPosition
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadExtremeValue(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/extremeValue
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ExtremeValueColorPosition
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadNumber(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/number
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_NumberColorPosition
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadPercent(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/percent
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_PercentageColorPosition
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadNumFmt(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/numFmt
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_NumberFormat
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadVisibility(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            Ambiguous
            http://schemas.microsoft.com/office/drawing/2014/chartex/visibility
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_DataLabelVisibilities
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_SeriesElementVisibilities
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadSeparator(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/separator
            http://www.w3.org/2001/XMLSchema:String
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadDataLabel(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/dataLabel
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_DataLabel
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadDataLabelHidden(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/dataLabelHidden
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_DataLabelHidden
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadParentLabelLayout(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/parentLabelLayout
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ParentLabelLayout
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadRegionLabelLayout(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/regionLabelLayout
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_RegionLabelLayout
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadAggregation(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/aggregation
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Aggregation
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBinning(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/binning
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Binning
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGeography(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geography
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Geography
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadStatistics(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/statistics
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Statistics
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadSubtotals(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/subtotals
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Subtotals
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBinSize(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/binSize
            http://www.w3.org/2001/XMLSchema:Double
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadBinCount(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/binCount
            http://www.w3.org/2001/XMLSchema:UInt32
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGeoCache(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoCache
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoCache
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadClear(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/clear
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Clear
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGeoLocationQueryResults(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoLocationQueryResults
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoLocationQueryResults
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGeoDataEntityQueryResults(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoDataEntityQueryResults
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoDataEntityQueryResults
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGeoDataPointToEntityQueryResults(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoDataPointToEntityQueryResults
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoDataPointToEntityQueryResults
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGeoChildEntitiesQueryResults(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoChildEntitiesQueryResults
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoChildEntitiesQueryResults
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGeoLocationQueryResult(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoLocationQueryResult
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoLocationQueryResult
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGeoLocationQuery(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoLocationQuery
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoLocationQuery
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGeoLocations(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoLocations
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoLocations
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGeoLocation(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoLocation
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoLocation
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadAddress(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/address
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Address
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGeoDataEntityQueryResult(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoDataEntityQueryResult
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoDataEntityQueryResult
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGeoDataEntityQuery(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoDataEntityQuery
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoDataEntityQuery
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGeoData(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoData
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoData
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGeoPolygons(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoPolygons
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoPolygons
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadCopyrights(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/copyrights
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Copyrights
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGeoPolygon(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoPolygon
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoPolygon
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadCopyright(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/copyright
            http://www.w3.org/2001/XMLSchema:String
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGeoDataPointToEntityQueryResult(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoDataPointToEntityQueryResult
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoDataPointToEntityQueryResult
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGeoDataPointQuery(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoDataPointQuery
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoDataPointQuery
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGeoDataPointToEntityQuery(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoDataPointToEntityQuery
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoDataPointToEntityQuery
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGeoChildEntitiesQueryResult(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoChildEntitiesQueryResult
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoChildEntitiesQueryResult
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGeoChildEntitiesQuery(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoChildEntitiesQuery
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoChildEntitiesQuery
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGeoChildEntities(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoChildEntities
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoChildEntities
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGeoChildTypes(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoChildTypes
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoChildTypes
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadEntityType(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/entityType
            http://schemas.microsoft.com/office/drawing/2014/chartex:ST_EntityType
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGeoHierarchyEntity(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoHierarchyEntity
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoHierarchyEntity
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadIdx(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/idx
            http://www.w3.org/2001/XMLSchema:UInt32
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadCatScaling(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/catScaling
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_CategoryAxisScaling
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadValScaling(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/valScaling
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ValueAxisScaling
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadUnits(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/units
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_AxisUnits
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadMajorGridlines(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/majorGridlines
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Gridlines
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadMinorGridlines(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/minorGridlines
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Gridlines
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadMajorTickMarks(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/majorTickMarks
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_TickMarks
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadMinorTickMarks(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/minorTickMarks
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_TickMarks
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadTickLabels(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/tickLabels
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_TickLabels
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadUnitsLabel(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/unitsLabel
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_AxisUnitsLabel
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadCustGeom(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/custGeom
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_CustomGeometry2D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadPrstGeom(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/prstGeom
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetGeometry2D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/off
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Point2D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadGdLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gdLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GeomGuideList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadAhLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ahLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AdjustHandleList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadCxnLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/cxnLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ConnectionSiteList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadRect(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/rect
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GeomRect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadPathLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/pathLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Path2DList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadAhXY(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ahXY
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_XYAdjustHandle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadAhPolar(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ahPolar
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PolarAdjustHandle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadPos(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/pos
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AdjPoint2D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadCxn(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/cxn
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ConnectionSite
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadClose(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/close
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Path2DClose
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadMoveTo(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/moveTo
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Path2DMoveTo
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadLnTo(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lnTo
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Path2DLineTo
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadArcTo(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/arcTo
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Path2DArcTo
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadQuadBezTo(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/quadBezTo
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Path2DQuadBezierTo
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadCubicBezTo(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/cubicBezTo
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Path2DCubicBezierTo
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadPt_DML(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/pt
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AdjPoint2D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadFmtOvr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/fmtOvr
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_FormatOverride
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadHeaderFooter(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/headerFooter
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_HeaderFooter
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadPageMargins(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/pageMargins
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_PageMargins
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadPageSetup(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/pageSetup
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_PageSetup
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadOddHeader(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/oddHeader
            http://www.w3.org/2001/XMLSchema:String
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadOddFooter(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/oddFooter
            http://www.w3.org/2001/XMLSchema:String
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadEvenHeader(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/evenHeader
            http://www.w3.org/2001/XMLSchema:String
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadEvenFooter(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/evenFooter
            http://www.w3.org/2001/XMLSchema:String
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadFirstHeader(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/firstHeader
            http://www.w3.org/2001/XMLSchema:String
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadFirstFooter(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/firstFooter
            http://www.w3.org/2001/XMLSchema:String
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartExDeserializer.LoadExt(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/ext
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Extension
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.Excel2007.SeriesGroup.Key">
            <summary>
            Returns the key which identifies this group's contents.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.Excel2007.SeriesGroup.Series">
            <summary>
            Returns a list of the series that share the same chart type.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Layout,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Layout
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ManualLayout,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/manualLayout
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ManualLayout
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_LayoutMode,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/xMode
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LayoutMode
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_LayoutTarget,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LayoutTarget
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_TextLanguageID,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/lang
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_TextLanguageID
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ChartSpace,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/chartSpace
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ChartSpace
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Chart,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/chart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Chart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_DispBlanksAs,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/dispBlanksAs
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DispBlanksAs
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Legend,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/legend
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Legend
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_LegendEntry,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/legendEntry
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LegendEntry
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_LegendPos,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/legendPos
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LegendPos
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Surface,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/floor
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Surface
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PictureFormat,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/pictureFormat
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_PictureFormat
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PictureStackUnit,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/pictureStackUnit
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_PictureStackUnit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/plotArea
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_PlotArea
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_BarChart,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/barChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_BarChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_LineChart,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/barChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LineChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_AreaChart,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/areaChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_AreaChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PieChart,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/pieChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_PieChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_DoughnutChart,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/doughnutChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DoughnutChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_HoleSize,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/holeSize
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_HoleSize
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_FirstSliceAng,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/firstSliceAng
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_FirstSliceAng
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ChartLines,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/dropLines
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ChartLines
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_GapAmount,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/gapDepth
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_GapAmount
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Overlap,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/overlap
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Overlap
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Title,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/title
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Title
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Tx,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/tx
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Tx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_View3D,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/view3D
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_View3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_RotX,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/rotX
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_RotX
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_HPercent,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/hPercent
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_HPercent
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_RotY,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/rotY
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_RotY
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_DepthPercent,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/depthPercent
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DepthPercent
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Perspective,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/perspective
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Perspective
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_RadarChart,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/radarChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_RadarChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_RadarStyle,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/radarStyle
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_RadarStyle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_RadarSer,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/ser
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_RadarSer
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_BubbleChart,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/bubbleChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_BubbleChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_BubbleSer,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/ser
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_BubbleSer
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_BubbleScale,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/bubbleScale
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_BubbleScale
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_SizeRepresents,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/sizeRepresents
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_SizeRepresents
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_SurfaceChart,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/surfaceChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_SurfaceChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_SurfaceSer,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/ser
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_SurfaceSer
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Bar3DChart,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/bar3DChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Bar3DChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Line3DChart,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/line3DChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Line3DChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Pie3DChart,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/pie3DChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Pie3DChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Surface3DChart,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/surface3DChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Surface3DChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_OfPieChart,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/ofPieChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_OfPieChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_OfPieType,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/ofPieType
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_OfPieType
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_SplitType,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/splitType
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_SplitType
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Area3DChart,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/area3DChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Area3DChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_SecondPieSize,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/secondPieSize
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_SecondPieSize
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_StockChart,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/stockChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_StockChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_UpDownBars,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/upDownBars
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_UpDownBars
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ChartSerializerExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_UpDownBar,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/upBars
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_UpDownBar
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.WorksheetChartExtensions.InitializeFrom(Infragistics.Documents.Excel.WorksheetChart,Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ChartSpace,Infragistics.Documents.Excel.Sheet,Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2007)">
            <summary>
            Used during deserialization to initialize a WorksheetChart
            instance from a CT_ChartSpace instance.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.WorksheetChartExtensions.InitializeFrom(Infragistics.Documents.Excel.WorksheetChart,Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ChartSpaceEx,Infragistics.Documents.Excel.Sheet,Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2007)">
            <summary>
            Used during deserialization to initialize a WorksheetChart
            instance from a CT_ChartSpaceEx instance.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.Excel2007.CfRuleInfo">
            <summary>
            Wrapper class for the cfRule tag.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.Excel2007.CfRuleInfo.IsParsingCfvoX14">
            <summary>
            Returns true when we're between the opening and closing
            tags for a cfvo element.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.Excel2007.CfRuleInfo.X14Rule">
            <summary>
            In cases where the same condition appeared in both x14 and non-x14 markup,
            this property will hold a ref to the x14 one.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.Excel2007.CfRuleInfo.Id">
            <summary>x14:cfRule only</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.Excel2007.CfRuleInfo.ResolvedValues.Operator">
            <summary>
            Used only for OperatorConditionalFormat class
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.Excel2007.CfRuleInfo.ResolvedValues.TextOperator">
            <summary>
            Used only for TextOperatorConditionalFormat class
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionalFormatInfo">
            <summary>
            Used to deserialize conditional format elements and persist transient
            objects while tags are being processed.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionalFormatInfo.ExtLstPending">
            <summary>
            After all the conditionalFormatting tags are processed, some of the
            conditions might have additional v14 properties serialized in the
            extLst/ext/conditionalFormattings section. The presence of a condition
            in this table implies that there is still data that needs to be deserialized.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.Excel2007.IconSetWrapper.Percentile">
            <summary>
            The corresponding attribute is named 'percent' but according
            to the docs it represents percentile, hence the name of this property.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.Excel2007.IconSetWrapper.Custom">
            <summary>x14 only</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.EnumConverter.ToFormatConditionType(Infragistics.Documents.OfficeOpenXml.Excel.ST_CfType)">
            <summary>
            Returns the FormatConditionType constant which equates to the
            specified ST_CfType value.
            </summary>
            <param name="value">The ST_CfType value to convert</param>
            <returns>The corresponding FormatConditionType value.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.EnumConverter.FromFormatConditionType(Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionType,System.Nullable{Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTextOperator})">
            <summary>
            FormatConditionType -> ST_CfType
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.EnumConverter.ToOperator(Infragistics.Documents.OfficeOpenXml.Excel.ST_ConditionalFormattingOperator,System.Nullable{Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionOperator}@,System.Nullable{Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTextOperator}@)">
            <summary>
            Converts the specified ST_ConditionalFormattingOperator constant into
            a constant from either the FormatConditionOperator or FormatConditionTextOperator
            enums, depending on the value.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionFactory_XLSX">
            <summary>
            Creates ConditionBase-derived instances from a ConditionalFormatInfo
            and CfRuleInfo.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionFactory_XLSX.Create(Infragistics.Documents.Excel.Serialization.Excel2007.ConditionalFormatInfo,Infragistics.Documents.Excel.Serialization.Excel2007.CfRuleInfo)">
            <summary>
            Creates a ConditionBase-derived instance from the specified OpenXML tag info.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionFactory_XLSX.SetBaseProps(Infragistics.Documents.Excel.Serialization.Excel2007.ConditionalFormatInfo,Infragistics.Documents.Excel.Serialization.Excel2007.CfRuleInfo,Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase)">
            <summary>
            Sets the ConditionBase-level properties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionFactory_XLSX.SetCellFormat(Infragistics.Documents.Excel.Serialization.Excel2007.ConditionalFormatInfo,Infragistics.Documents.Excel.Serialization.Excel2007.CfRuleInfo,Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatBase)">
            <summary>
            Sets the ConditionalFormatBase.CellFormat property.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionalFormattingSerializer.SaveConditionalFormatting(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager)">
            <summary>
            Serializes the &lt;conditionalFormatting&gt; element and descendant elements
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionalFormattingSerializer.SaveConditionalFormattingX14(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.Boolean)">
            <summary>
            Serializes an &lt;extLst&gt; element with an &lt;ext&gt;
            child element, under which a &lt;conditionalFormattings&gt;
            element is written. Under that, one or more
            &lt;x14:conditionalFormatting&gt; elements is written to persist
            x14 content.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionalFormattingSerializer.WriteCfRuleElement(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase)">
            <summary>
            Serializes the &lt;cfRule&gt; element and descendant elements.
            If a ConditionX14Wrapper instance is returned, it means the
            condition requires x14 markup.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionalFormattingSerializer.WriteCfRuleElement(Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager)">
            <summary>
            Writes a cfRule for OperatorConditionalFormat.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionalFormattingSerializer.WriteCfRuleElement(Infragistics.Documents.Excel.ConditionalFormatting.FormulaConditionalFormat,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager)">
            <summary>
            Writes a cfRule for FormulaConditionalFormat.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionalFormattingSerializer.WriteCfRuleElement(Infragistics.Documents.Excel.ConditionalFormatting.AverageConditionalFormat,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager)">
            <summary>
            Writes a cfRule for AverageConditionalFormat.
            Note that this condition never requires x14 markup.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionalFormattingSerializer.WriteCfRuleElement(Infragistics.Documents.Excel.ConditionalFormatting.RankConditionalFormat,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager)">
            <summary>
            Writes a cfRule for RankConditionalFormat.
            Note that this condition never requires x14 markup.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionalFormattingSerializer.WriteCfRuleElement(Infragistics.Documents.Excel.ConditionalFormatting.TextOperatorConditionalFormat,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager)">
            <summary>
            Writes a cfRule for TextOperatorConditionalFormat.
            Note that this condition never requires x14 markup.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionalFormattingSerializer.WriteCfRuleElement(Infragistics.Documents.Excel.ConditionalFormatting.DateTimeConditionalFormat,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager)">
            <summary>
            Writes a cfRule for DateTimeConditionalFormat.
            Note that this condition never requires x14 markup.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionalFormattingSerializer.WriteCfRuleElement(Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatBase,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager)">
            <summary>
            Writes a cfRule for the following "simple" condition classes:
            
            DuplicateConditionalFormat
            UniqueConditionalFormat
            BlanksConditionalFormat
            NoBlanksConditionalFormat
            ErrorsConditionalFormat
            NoErrorsConditionalFormat
            
            Note that non of these conditions require x14 markup.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionalFormattingSerializer.WriteCfRuleElement(Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager)">
            <summary>
            Writes a cfRule for DataBarConditionalFormat.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionalFormattingSerializer.WriteCfRuleElement(Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager)">
            <summary>
            Writes a cfRule for IconSetConditionalFormat.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionalFormattingSerializer.WriteCfRuleElement(Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager)">
            <summary>
            Writes a cfRule for ColorScaleConditionalFormat.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionalFormattingSerializer.WriteExtLstElement(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            Serializes the &lt;extLst&gt; element and its
            descendant elements (&lt;ext&gt; and &lt;x14:id&gt;).
            Note that all elements are also closed by this method.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionalFormattingSerializer.WriteFormulaElement(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            Writes and closes the formula element.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionalFormattingSerializer.GroupConditions(Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection)">
            <summary>
            Handles the first pass of serialization by writing out the non-x14 markup
            and at the same time gathering the conditions that also require x14 markup.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionalFormattingSerializer.GroupConditions(System.Collections.Generic.IList{Infragistics.Documents.Excel.Serialization.Excel2007.ConditionX14Wrapper})">
            <summary>
            Handles the second pass of serialization by writing out the x14 markup,
            i.e., the content found under the &lt;x14:conditionalFormattings&gt;
            element.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionX14Wrapper.Id">
            <summary>
            Returns a stringified GUID to provide a value for the id attribute.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.X14Serializer.WriteCfRuleElement(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,Infragistics.Documents.Excel.Serialization.Excel2007.ConditionX14Wrapper)">
            <summary>
            Serializes the &lt;x14:cfRule&gt; element and descendant elements.
            Note that this method closes all elements.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.X14Serializer.WriteCfRuleElement(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat,System.String)">
            <summary>
            Serializes the &lt;x14:cfRule&gt; element and descendant elements
            for a ColorScaleConditionalFormat instance.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.X14Serializer.WriteCfRuleElement(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat,System.String,System.Boolean)">
            <summary>
            Serializes the &lt;x14:cfRule&gt; element and descendant elements
            for a DataBarConditionalFormat instance.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.X14Serializer.WriteCfRuleElement(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat,System.String)">
            <summary>
            Serializes the &lt;x14:cfRule&gt; element and descendant elements
            for a DataBarConditionalFormat instance.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.X14Serializer.WriteCfRuleElement(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat,System.String)">
            <summary>
            Serializes the &lt;x14:cfRule&gt; element and descendant elements
            for an OperatorConditionalFormat instance.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.X14Serializer.WriteCfRuleElement(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,Infragistics.Documents.Excel.ConditionalFormatting.FormulaConditionalFormat,System.String)">
            <summary>
            Serializes the &lt;x14:cfRule&gt; element and descendant elements
            for a FormulaConditionalFormat instance.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.ConditionValueExtensions.WriteCfvoElement(Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,Infragistics.Documents.Excel.Worksheet,System.Boolean,System.Nullable{System.Boolean})">
            <summary>
            Writes out a &lt;cfvo&gt; element or, if the <paramref name="isX14"/>
            is true, a &lt;x14:cfvo&gt; element. If isX14 is true, also writes out
            an &lt;xm:f&gt; element for the value/formula. Note that all elements
            are closed by this method.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.CouldNotGetPackagePart">
            <summary>
            The IPackage.GetPart method threw an exception.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.Conformant">
            <summary>
            The IPackagePart conforms fully to the ECMA TC45 Open Packaging Conventions.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.NameMissing">
            <summary>
            The package implementer shall require a part name. [M1.1]
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.ContentTypeMissing">
            <summary>
            The package implementer shall require a content type and
            the format designer shall specify the content type. [M1.2], [M1.13]
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.SegmentEmpty">
            <summary>
            A part name shall not have empty segments. [M1.3]
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.NameDoesNotStartWithForwardSlash">
            <summary>
            A part name shall start with a forward slash (“/”) character. [M1.4]
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.NameEndsWithForwardSlash">
            <summary>
            A part name shall not have a forward slash as the last character. [M1.5]
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.SegmentHasNonPCharCharacters">
            <summary>
            A segment shall not hold any characters other than pchar characters. [M1.6]
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.SegmentHasPercentEncodedSlashCharacters">
            <summary>
            A segment shall not contain percent-encoded forward slash (“/”),
            or backward slash (“\”) characters. [M1.7]
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.SegmentHasPercentEncodedUnreservedCharacters">
            <summary>
            A segment shall not contain percent-encoded unreserved characters. [M1.8]
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.SegmentEndsWithDotCharacter">
            <summary>
            A segment shall not end with a dot (“.”) character. [M1.9]
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.SegmentMissingNonDotCharacter">
            <summary>
            A segment shall include at least one non-dot character. [M1.10]
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.NameDerivesFromExistingPartName">
            <summary>
            A package implementer shall neither create nor recognize
            a part with a part name derived from another part name by
            appending segments to it. [M1.11]
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.DuplicateName">
            <summary>
            Part name equivalence is determined by comparing part names as
            case-insensitive ASCII strings. Packages shall not contain equivalent
            part names and package implementers shall neither create nor recognize
            packages with equivalent part names. [M1.12]
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.ContentTypeHasInvalidSyntax">
            <summary>
            IPackage implementers shall only create and only recognize parts with a content type;
            format designers shall specify a content type for each part included in the format.
            Content types for package parts shall fit the definition and syntax for media types
            as specified in RFC 2616, §3.7. [M1.13]
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.ContentTypeHasInvalidWhitespace">
            <summary>
            Content types shall not use linear white space either between the type and subtype or
            between an attribute and its value. Content types also shall not have leading or
            trailing white spaces. IPackage implementers shall create only such content types
            and shall require such content types when retrieving a part from a package;
            format designers shall specify only such content types for inclusion in the format. [M1.14]
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.ContentTypeHasComments">
            <summary>
            The package implementer shall require a content type that does not include comments
            and the format designer shall specify such a content type. [M1.15]
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.ContentTypeHasParameters">
            <summary>
            IPackage implementers and format designers shall not create content types
            with parameters for the package specific parts defined in this Open Packaging
            specification and shall treat the presence of parameters in these content types
            as an error. [M1.22]
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.GrowthHintChanged">
            <summary>
            If the package implementer specifies a growth hint, it is set when a
            part is created and the package implementer shall not change the growth
            hint after the part has been created. [M1.16]
            </summary>
            <remarks><p class="body">The PackageConformanceManager does not verify this convention.</p></remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.XmlEncodingUnsupported">
            <summary>
            XML content shall be encoded using either UTF-8 or UTF-16.
            If any part includes an encoding declaration, as defined in
            §4.3.3 of the XML 1.0 specification, that declaration shall
            not name any encoding other than UTF-8 or UTF-16. IPackage
            implementers shall enforce this requirement upon creation
            and retrieval of the XML content. [M1.17]
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.XmlContentInvalidForSchema">
            <summary>
            XML content shall be valid against the corresponding XSD schema defined
            in this Open Packaging specification. In particular, the XML content shall
            not contain elements or attributes drawn from namespaces that are not explicitly
            defined in the corresponding XSD unless the XSD allows elements or attributes drawn
            from any namespace to be present in particular locations in the XML markup. IPackage
            implementers  shall enforce this requirement upon creation and retrieval of the
            XML content. [M1.20]
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.XmlContentDrawsOnUndefinedNamespace">
            <summary>
            XML content shall not contain elements or attributes drawn from “xml” or “xsi”
            namespaces unless they are explicitly defined in the XSD schema or by other means
            described in this Open Packaging specification. IPackage implementers shall enforce
            this requirement upon creation and retrieval of the XML content. [M1.21]
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.RelationshipTargetsOtherRelationship">
            <summary>
            The Relationships part shall not have relationships to any other part. IPackage
            implementers shall enforce this requirement upon the attempt to create such a
            relationship and shall treat any such relationship as invalid. [M1.25]
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.RelationshipIdInvalid">
            <summary>
            The package implementer shall require that every Relationship element
            has an Id attribute, the value of which is unique within the Relationships
            part, and that the Id type is xsd:ID, the value of which conforms to the naming
            restrictions for xsd:IDas described in the W3C Recommendation “XML Schema Part 2:
            Datatypes.” [M1.26]
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.RelationshipTypeInvalid">
            <summary>
            The package implementer shall require the Type attribute to be a URI
            that defines the role of the relationship and the format designer shall
            specify such a Type. [M1.27]
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.RelationshipTargetInvalid">
            <summary>
            The package implementer shall require the Target attribute to be a URI
            reference pointing to a target resource. The URI reference shall be a URI
            or a relative reference. [M1.28]
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.RelationshipTargetNotRelativeReference">
            <summary>
            When set to Internal, the Target attribute shall be a relative reference and
            that reference is interpreted relative to the “parent” part. For package
            relationships, the package implementer shallresolve relative references in
            the Target attribute against the pack URI that identifies the entire package
            resource. [M1.29]
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.RelationshipNameInvalid">
            <summary>
            The package implementer shall name relationship parts according to the special
            relationships part naming convention and require that parts with names that
            conform to this naming convention have the content type for a Relationships
            part. [M1.30]
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceExceptionReason">
            <summary>
            Constants which define the reason that a <see cref="T:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceException">OpenPackagingNonConformanceException</see> was thrown.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceException">OpenPackagingNonConformanceException class</seealso>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceExceptionReason.None">
            <summary>
            Undefined; used for variable initialization.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceExceptionReason.CorePropertiesRelationshipAlreadyProcessed">
            <summary>
            The IPackagePart in a IPackage is determined to be the core properties relationship
            for the package, after one has already been processed.
            </summary>
            <remarks>
            <p class="body">
            As stipulated in Annex H, Part 4 of
            'Office Open XML Part 2 - Open Packaging Conventions':<br></br>
            
            "The format designer shall specify and the format producer shall create at most
            <b>one</b> core properties relationship for a package. A format consumer shall
            consider more than one core properties relationship for a package to be an error."
            </p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceExceptionReason.UsesMarkupCompatibilityNamespace">
            <summary>
            The IPackagePart in a IPackage is determined to be the core properties 
            relationship for the package, and that IPackagePart is found to contain
            references to the Markup Compatibility namespace.
            </summary>
            <remarks>
            <p class="body">
            As stipulated in Annex H, Part 4 of
            'Office Open XML Part 2 - Open Packaging Conventions':<br></br>
            
            "The format designer shall not specify and the format producer shall not
            create Core Properties that use the Markup Compatibility namespace as defined
            in Annex F, “Standard Namespaces and Content Types”. A format consumer shall
            consider the use of the Markup Compatibility namespace to be an error."
            </p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceExceptionReason.ContainsDublinCoreRefinements">
            <summary>
            The IPackagePart in a IPackage is determined to be  the core properties
            relationship for the package, and that IPackagePart is found to contain
            refinements to Dublin Core elements other than the 'dcterms:created' and
            'dcterms:modified' elements.
            </summary>
            <remarks>
            <p class="body">
            As stipulated in Annex H, Part 4 of
            'Office Open XML Part 2 - Open Packaging Conventions':<br></br>
            
            "Producers shall not create a document element that contains refinements to
            the Dublin Core elements, except for the two specified in the schema: dcterms:created
            and dcterms:modified. Consumers shall consider a document element that violates this
            constraint to be an error."
            </p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceExceptionReason.ContainsXmlLanguageAttribute">
            <summary>
            The IPackagePart in a IPackage is determined to be  the core properties
            relationship for the package, and that IPackagePart is found to contain
            an element which contains the xml:lang attribute.
            </summary>
            <remarks>
            <p class="body">
            As stipulated in Annex H, Part 4 of
            'Office Open XML Part 2 - Open Packaging Conventions':<br></br>
            
            "Producers shall not create a document element that contains the xml:lang
            attribute. Consumers shall consider a document element that violates this
            constraint to be an error."
            </p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceExceptionReason.XsiTypeAttributeInvalid">
            <summary>
            The IPackagePart in a IPackage is determined to be  the core properties
            relationship for the package, and that IPackagePart is found to contain
            an element which contains the xsi:type attribute, with the exception
            of the 'dcterms:created' and 'dcterms:modified' elements, for which the
            attribute is required, and is expected to hold the value 'dcterms:W3CDTF'.
            </summary>
            <remarks>
            <p class="body">
            As stipulated in Annex H, Part 4 of
            'Office Open XML Part 2 - Open Packaging Conventions':<br></br>
            
            "Producers shall not create a document element that contains the xsi:type
            attribute, except for a 'dcterms:created' or 'dcterms:modified' element where
            the xsi:type attribute shall be present and shall hold the value dcterms:W3CDTF,
            where dcterms is the namespace prefix of the Dublin Core namespace. Consumers
            shall consider a document element that violates this constraint to be an error."
            </p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceExceptionReason.XmlContainsDocumentTypeDefinition">
            <summary>
            A loaded IPackagePart is found to contain a DTD (Document Type Definition) declaration.
            </summary>
            <remarks>
            <p class="body">
            As stipulated in section 8.1.4, paragraph 2 of
            'Office Open XML Part 2 - Open Packaging Conventions':<br></br>
            
            "The XML 1.0 specification allows for the usage of Document Type Definitions (DTDs),
            which enable Denial of Service attacks, typically through the use of an internal entity
            expansion technique. As mitigation for this potential threat, DTD declarations shall not
            be used in the XML markup defined in this Open Packaging specification. IPackage implementers
            shall enforce this requirement upon creation and retrieval of the XML content and shall treat
            the presence of DTD declarations as an error."
            </p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceExceptionReason.DuplicatePartName">
            <summary>
            A loaded IPackagePart has the same name as an existing one.
            </summary>
            <remarks>
            <p class="body">
            As stipulated in section 8.1.1.2 of
            'Office Open XML Part 2 - Open Packaging Conventions':<br></br>
            
            "Part name equivalence is determined by comparing part names as case-insensitive
            ASCII strings. Packages shall not contain equivalent part names and package
            implementers shall neither create nor recognize packages with equivalent part
            names."
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceException">
            <summary>
            Thrown when a SpreadsheetMLpackage is found to be non-conformant.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceException.IPackagePart">
            <summary>
            Returns the <a href="http://msdn.microsoft.com/en-us/library/system.io.packaging.packagepart.aspx">IPackagePart</a>
            instance which caused the exception to be thrown, or null (Nothing in VB) if the exception was not caused by
            a IPackagePart.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceException.Reason">
            <summary>
            Returns the <see cref="T:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceExceptionReason">reason</see> the exception was thrown.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.Excel2007.FillInfo">
            <summary>
            Class used to represent the Fill element
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.RegisterElementCallbacks(Infragistics.Documents.Excel.Serialization.Excel2007.XLSX.PartManagers.ObjectModelThemePartManager)">
            <summary>Registers element load callbacks for &lt;fmtScheme&gt; and all descendants.</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadFmtScheme(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fmtScheme
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_StyleMatrix
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadBgFillStyleLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bgFillStyleLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_BackgroundFillStyleList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadEffectStyleLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/effectStyleLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectStyleList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadFillStyleLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fillStyleLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_FillStyleList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadLnStyleLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lnStyleLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineStyleList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadBlipFill(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blipFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_BlipFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadGradFill(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gradFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GradientFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadGrpFill(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/grpFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GroupFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadNoFill(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/noFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_NoFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadPattFill(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/pattFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PatternFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadSolidFill(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/solidFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SolidColorFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadBlip(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blip
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Blip
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadSrcRect(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/srcRect
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_RelativeRect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadStretch(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/stretch
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_StretchInfoProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadTile(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/tile
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TileInfoProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadAlphaBiLevel(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaBiLevel
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaBiLevelEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadAlphaCeiling(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaCeiling
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaCeilingEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadAlphaFloor(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaFloor
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaFloorEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadAlphaInv(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaInv
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaInverseEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadAlphaMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaModulateEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadAlphaModFix(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaModFix
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaModulateFixedEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadAlphaRepl(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaRepl
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaReplaceEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadBiLevel(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/biLevel
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_BiLevelEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadBlur(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blur
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_BlurEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadClrChange(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/clrChange
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ColorChangeEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadClrRepl(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/clrRepl
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ColorReplaceEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadDuotone(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/duotone
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_DuotoneEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadExtLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/extLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_OfficeArtExtensionList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadFillOverlay(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fillOverlay
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_FillOverlayEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadGrayscl(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/grayscl
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GrayscaleEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadHsl(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hsl
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_HSLEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadLum(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lum
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LuminanceEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadTint(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/tint
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TintEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadHslClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hslClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_HslColor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadPrstClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/prstClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetColor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadSchemeClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/schemeClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SchemeColor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadScrgbClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/scrgbClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ScRgbColor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadSrgbClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            Note: Called directly, not registered
            http://schemas.openxmlformats.org/drawingml/2006/main/srgbClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SRgbColor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadSysClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            Note: called directly, not registered
            http://schemas.openxmlformats.org/drawingml/2006/main/sysClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SystemColor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadAlpha(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alpha
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositiveFixedPercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadAlphaOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_FixedPercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadBlue(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blue
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadBlueMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blueMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadBlueOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blueOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadComp(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/comp
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ComplementTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadGamma(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gamma
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GammaTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadGray(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gray
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GrayscaleTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadGreen(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/green
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadGreenMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/greenMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadGreenOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/greenOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadHue(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hue
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositiveFixedAngle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadHueMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hueMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositivePercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadHueOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hueOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Angle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadInv(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/inv
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_InverseTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadInvGamma(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/invGamma
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_InverseGammaTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadLumMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lumMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadLumOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lumOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadRed(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/red
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadRedMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/redMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadRedOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/redOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadSat(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/sat
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadSatMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/satMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadSatOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/satOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadShade(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/shade
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositiveFixedPercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadCont(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/cont
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectContainer
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadClrFrom(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/clrFrom
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadClrTo(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/clrTo
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadExt(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ext
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_OfficeArtExtension
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadFillRect(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fillRect
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_RelativeRect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadGsLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gsLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GradientStopList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadLin(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lin
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LinearShadeProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadPath(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/path
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PathShadeProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadTileRect(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/tileRect
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_RelativeRect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadGs(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gs
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GradientStop
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadFillToRect(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fillToRect
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_RelativeRect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadBgClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bgClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadFgClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fgClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadEffectStyle(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/effectStyle
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectStyleItem
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadEffectDag(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/effectDag
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectContainer
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadEffectLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/effectLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadScene3d(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/scene3d
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Scene3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadSp3d(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/sp3d
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Shape3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadGlow(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/glow
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GlowEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadInnerShdw(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/innerShdw
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_InnerShadowEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadOuterShdw(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/outerShdw
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_OuterShadowEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadPrstShdw(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/prstShdw
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetShadowEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadReflection(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/reflection
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ReflectionEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadSoftEdge(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/softEdge
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SoftEdgesEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadBackdrop(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/backdrop
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Backdrop
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadCamera(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/camera
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Camera
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadLightRig(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lightRig
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LightRig
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadAnchor(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/anchor
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Point3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadNorm(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/norm
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Vector3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadUp(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/up
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Vector3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadRot(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/rot
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SphereCoords
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadBevelB(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bevelB
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Bevel
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadBevelT(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bevelT
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Bevel
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadContourClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/contourClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadExtrusionClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/extrusionClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadLn(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ln
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadBevel(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bevel
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineJoinBevel
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadCustDash(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/custDash
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_DashStopList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadHeadEnd(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/headEnd
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineEndProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadMiter(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/miter
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineJoinMiterProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadPrstDash(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/prstDash
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetLineDashProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadRound(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/round
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineJoinRound
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadTailEnd(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/tailEnd
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineEndProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.FormatSchemeDeserializer.LoadDs(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ds
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_DashStop
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.Excel2007.SparklinesDeserializer.IsDeserializingSparklines">
            <summary>
            Returns true when between calls to LoadSparklines and LoadSparklinesEnd
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.SparklinesDeserializer.RegisterElementCallbacks(Infragistics.Documents.Excel.Serialization.Excel2007.XLSX.PartManagers.ObjectModelWorksheetPartManager)">
            <summary>Registers element load callbacks for &lt;sparklineGroups&gt; and all descendants.</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.SparklinesDeserializer.LoadSparklineGroups(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>http://schemas.microsoft.com/office/spreadsheetml/2009/9/main/sparklineGroups</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.SparklinesDeserializer.LoadSparklineGroupsEnd(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>http://schemas.microsoft.com/office/spreadsheetml/2009/9/main/sparklineGroups</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.SparklinesDeserializer.LoadSparklineGroup(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>http://schemas.microsoft.com/office/spreadsheetml/2009/9/main/sparklineGroup</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.SparklinesDeserializer.LoadColorAxis(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>http://schemas.microsoft.com/office/spreadsheetml/2009/9/main/colorAxis</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.SparklinesDeserializer.LoadColorFirst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>http://schemas.microsoft.com/office/spreadsheetml/2009/9/main/colorFirst</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.SparklinesDeserializer.LoadColorHigh(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>http://schemas.microsoft.com/office/spreadsheetml/2009/9/main/colorHigh</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.SparklinesDeserializer.LoadColorLast(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>http://schemas.microsoft.com/office/spreadsheetml/2009/9/main/colorLast</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.SparklinesDeserializer.LoadColorLow(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>http://schemas.microsoft.com/office/spreadsheetml/2009/9/main/colorLow</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.SparklinesDeserializer.LoadColorMarkers(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>http://schemas.microsoft.com/office/spreadsheetml/2009/9/main/colorMarkers</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.SparklinesDeserializer.LoadColorNegative(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>http://schemas.microsoft.com/office/spreadsheetml/2009/9/main/colorNegative</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.SparklinesDeserializer.LoadColorSeries(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>http://schemas.microsoft.com/office/spreadsheetml/2009/9/main/colorSeries</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.SparklinesDeserializer.LoadSparklines(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>http://schemas.microsoft.com/office/spreadsheetml/2009/9/main/sparklines</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.SparklinesDeserializer.LoadSparklinesEnd(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>http://schemas.microsoft.com/office/spreadsheetml/2009/9/main/sparklines</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.SparklinesDeserializer.LoadSparkline(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>http://schemas.microsoft.com/office/spreadsheetml/2009/9/main/sparkline</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.SparklinesDeserializer.LoadF(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            NOTE: This method is not the actual handler; it gets called
            from the already existing handler for this element.
            http://schemas.microsoft.com/office/excel/2006/main/f
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.SparklinesDeserializer.LoadSqref(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            NOTE: This method is not the actual handler; it gets called
            from the already existing handler for this element.
            http://schemas.microsoft.com/office/excel/2006/main/sqref
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.Excel2007.SparklinesDeserializer.Commit(Infragistics.Documents.Excel.Worksheet,Infragistics.Documents.Excel.Serialization.WorkbookLoadManagerExcel2007)">
            <summary>
            Creates our Sparkline/SparklineGroup objects from the
            derialized data.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.WorkbookSaveManager.InitializeConditionalFormatting(Infragistics.Documents.Excel.Worksheet)">
            <summary>
            Initializes collections needed for conditional formatting.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.WorkbookSaveManager.InitializeSparklineGroups(Infragistics.Documents.Excel.Worksheet)">
            <summary>
            Initializes collections needed for sparkline groups.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.CT_StyleReference">
             <summary>
            
             CT_StyleReference
            
            	CHILD ELEMENTS (7):
            		scrgbClr
            		srgbClr
            		hslClr
            		sysClr
            		schemeClr
            		prstClr
            		styleClr
            
            	ATTRIBUTES (2):
            		idx
            		mods
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.CT_StyleReference.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_ColorChoice
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.CT_FontReference_ChartStyle">
             <summary>
            
             CT_FontReference
            
            	CHILD ELEMENTS (7):
            		scrgbClr
            		srgbClr
            		hslClr
            		sysClr
            		schemeClr
            		prstClr
            		styleClr
            
            	ATTRIBUTES (2):
            		idx
            		mods
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.CT_FontReference_ChartStyle.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_ColorChoice
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.CT_MarkerLayout">
             <summary>
            
             CT_MarkerLayout
            
            	ATTRIBUTES (2):
            		symbol
            		size
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.CT_StyleEntry">
             <summary>
            
             CT_StyleEntry
            
             *** INVALID TYPE ***
             The associated XML type was not properly parsed.
             The properties of this class were generated manually
             from schema metadata, and may not be valid.
            
            
            	CHILD ELEMENTS (9):
            		lnRef
            		lineWidthScale
            		fillRef
            		effectRef
            		fontRef
            		spPr
            		defRPr
            		bodyPr
            		extLst
            
            	ATTRIBUTES (1):
            		mods
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.CT_ChartStyle">
             <summary>
            
             CT_ChartStyle
            
             *** INVALID TYPE ***
             The associated XML type was not properly parsed.
             The properties of this class were generated manually
             from schema metadata, and may not be valid.
            
            
            	CHILD ELEMENTS (32):
            		axisTitle
            		categoryAxis
            		chartArea
            		dataLabel
            		dataLabelCallout
            		dataPoint
            		dataPoint3D
            		dataPointLine
            		dataPointMarker
            		dataPointMarkerLayout
            		dataPointWireframe
            		dataTable
            		downBar
            		dropLine
            		errorBar
            		floor
            		gridlineMajor
            		gridlineMinor
            		hiLoLine
            		leaderLine
            		legend
            		plotArea
            		plotArea3D
            		seriesAxis
            		seriesLine
            		title
            		trendline
            		trendlineLabel
            		upBar
            		valueAxis
            		wall
            		extLst
            
            	ATTRIBUTES (1):
            		id
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.CT_ChartStyle.CreateDefault">
            <summary>
            Creates a CT_ChartStyle with default property settings,
            as seen in the chart style parts generated by Excel.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ST_ColorStyleMethod">
              <summary>
             This class wraps the union type ST_ColorStyleMethod.
             The 'Parse' and 'ToXLSX' methods must be implemented manually.
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ST_StyleReferenceModifier">
              <summary>
             This class wraps the union type ST_StyleReferenceModifier.
             The 'Parse' and 'ToXLSX' methods must be implemented manually.
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ST_StyleColorVal">
              <summary>
             This class wraps the union type ST_StyleColorVal.
             The 'Parse' and 'ToXLSX' methods must be implemented manually.
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ST_StyleEntryModifier">
              <summary>
             This class wraps the union type ST_StyleEntryModifier.
             The 'Parse' and 'ToXLSX' methods must be implemented manually.
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ST_StyleReferenceModifierList">
              <summary>
             This class wraps the list type ST_StyleReferenceModifierList.
             The 'Parse' and 'ToXLSX' methods must be implemented manually.
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ST_StyleEntryModifierList">
              <summary>
             This class wraps the list type ST_StyleEntryModifierList.
             The 'Parse' and 'ToXLSX' methods must be implemented manually.
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleAttributes">
            <summary>
            Exposes a constant for each XML attribute in the
            'http://schemas.microsoft.com/office/drawing/2012/chartStyle' namespace.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements">
            <summary>
            Exposes a constant for each XML element in the
            'http://schemas.microsoft.com/office/drawing/2012/chartStyle' namespace.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.axisTitle">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:axisTitle</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.bodyPr">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:bodyPr</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.categoryAxis">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:categoryAxis</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.chartArea">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:chartArea</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.chartStyle">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:chartStyle</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.colorStyle">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:colorStyle</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.dataLabel">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:dataLabel</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.dataLabelCallout">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:dataLabelCallout</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.dataPoint">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:dataPoint</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.dataPoint3D">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:dataPoint3D</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.dataPointLine">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:dataPointLine</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.dataPointMarker">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:dataPointMarker</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.dataPointMarkerLayout">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:dataPointMarkerLayout</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.dataPointWireframe">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:dataPointWireframe</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.dataTable">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:dataTable</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.defRPr">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:defRPr</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.downBar">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:downBar</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.dropLine">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:dropLine</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.effectRef">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:effectRef</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.errorBar">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:errorBar</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.extLst">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:extLst</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.fillRef">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:fillRef</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.floor">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:floor</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.fontRef">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:fontRef</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.gridlineMajor">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:gridlineMajor</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.gridlineMinor">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:gridlineMinor</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.hiLoLine">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:hiLoLine</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.leaderLine">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:leaderLine</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.legend">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:legend</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.lineWidthScale">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:lineWidthScale</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.lnRef">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:lnRef</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.plotArea">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:plotArea</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.plotArea3D">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:plotArea3D</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.seriesAxis">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:seriesAxis</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.seriesLine">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:seriesLine</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.spPr">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:spPr</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.styleClr">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:styleClr</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.title">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:title</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.trendline">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:trendline</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.trendlineLabel">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:trendlineLabel</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.upBar">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:upBar</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.valueAxis">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:valueAxis</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.variation">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:variation</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleElements.wall">
            <summary>http://schemas.microsoft.com/office/drawing/2012/chartStyle:wall</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.CT_ColorStyleVariation">
             <summary>
             CT_ColorStyleVariation
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.CT_StyleColor">
             <summary>
             CT_StyleColor
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.CT_ColorStyle">
             <summary>
            
             CT_ColorStyle
            
            	CHILD ELEMENTS (8):
            		scrgbClr
            		srgbClr
            		hslClr
            		sysClr
            		schemeClr
            		prstClr
            		variation
            		extLst
            
            	ATTRIBUTES (2):
            		meth
            		id
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.CT_ColorStyle,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2012/chartStyle/colorStyle
            http://schemas.microsoft.com/office/drawing/2012/chartStyle:CT_ColorStyle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.CT_ColorStyleVariation,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2012/chartStyle/variation
            http://schemas.microsoft.com/office/drawing/2012/chartStyle:CT_ColorStyleVariation
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.CT_ChartStyle,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2012/chartStyle/chartStyle
            http://schemas.microsoft.com/office/drawing/2012/chartStyle:CT_ChartStyle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.CT_StyleEntry,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2012/chartStyle/axisTitle
            http://schemas.microsoft.com/office/drawing/2012/chartStyle:CT_StyleEntry
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.CT_MarkerLayout,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2012/chartStyle/dataPointMarkerLayout
            http://schemas.microsoft.com/office/drawing/2012/chartStyle:CT_MarkerLayout
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.CT_StyleReference,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2012/chartStyle/effectRef
            http://schemas.microsoft.com/office/drawing/2012/chartStyle:CT_StyleReference
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.ChartStyleExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.ChartStyle.CT_FontReference_ChartStyle,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2012/chartStyle/fontRef
            http://schemas.microsoft.com/office/drawing/2012/chartStyle:CT_FontReference
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.CT_Extension">
             <summary>
             Replaces:
                 http://schemas.openxmlformats.org/drawingml/2006/chart/CT_Extension
                 http://schemas.openxmlformats.org/spreadsheetml/2006/main/CT_Extension
                 http://schemas.microsoft.com/office/drawing/2014/chartex/CT_Extension
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.CT_Extension.Save(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.Type)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/ext
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Extension
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.CT_ExtensionList">
             <summary>
             Replaces:
                 http://schemas.openxmlformats.org/drawingml/2006/chart/CT_ExtensionList
                 http://schemas.openxmlformats.org/spreadsheetml/2006/main/CT_ExtensionList
                 http://schemas.microsoft.com/office/drawing/2014/chartex/CT_ExtensionList
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.CT_X">
             <summary>
             Referenced by CT_Boolean
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.CT_Boolean">
             <summary>
            
            
            	CHILD ELEMENTS (1):
            		x
            
            	ATTRIBUTES (5):
            		v
            		u
            		f
            		c
            		cp
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.CT_UnsignedInt">
             <summary>
            
             CT_UnsignedInt
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.CT_Double">
             <summary>
            
             CT_Double
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.ElementNamespaceContext">
            <summary>
            Exposes constants which identify the XSD namespace of
            an OpenXML element. This is used so that we can define
            one class for multi-purpose use. For example, both SML
            and Chart define a type named 'CT_Boolean', and the one
            defined by SML has several additional properties besides
            'Val'. If we are writing out the one defined in Chart, we
            can't be writing out those additional properties, so we
            need to know under which context the element is being written.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AudioFile">
             <summary>
            
             CT_AudioFile
            
            	CHILD ELEMENTS (1):
            		extLst
            
            	ATTRIBUTES (1):
            		
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_VideoFile">
             <summary>
            
             CT_VideoFile
            
            	CHILD ELEMENTS (1):
            		extLst
            
            	ATTRIBUTES (1):
            		
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_QuickTimeFile">
             <summary>
            
             CT_QuickTimeFile
            
            	CHILD ELEMENTS (1):
            		extLst
            
            	ATTRIBUTES (1):
            		
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AudioCDTime">
             <summary>
            
             CT_AudioCDTime
            
            	ATTRIBUTES (2):
            		track
            		time
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AudioCD">
             <summary>
            
             CT_AudioCD
            
            	CHILD ELEMENTS (3):
            		st
            		end
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_ColorScheme">
             <summary>
            
             CT_ColorScheme
            
            	CHILD ELEMENTS (13):
            		dk1
            		lt1
            		dk2
            		lt2
            		accent1
            		accent2
            		accent3
            		accent4
            		accent5
            		accent6
            		hlink
            		folHlink
            		extLst
            
            	ATTRIBUTES (1):
            		name
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_CustomColor">
             <summary>
            
             CT_CustomColor
            
            	CHILD ELEMENTS (6):
            		scrgbClr
            		srgbClr
            		hslClr
            		sysClr
            		schemeClr
            		prstClr
            
            	ATTRIBUTES (1):
            		name
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_CustomColor.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_ColorChoice
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_SupplementalFont">
             <summary>
            
             CT_SupplementalFont
            
            	ATTRIBUTES (2):
            		script
            		typeface
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_CustomColorList">
             <summary>
            
             CT_CustomColorList
            
            	CHILD ELEMENTS (1):
            		custClr
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_FontCollection">
             <summary>
            
             CT_FontCollection
            
            	CHILD ELEMENTS (5):
            		latin
            		ea
            		cs
            		font
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_EffectStyleItem">
             <summary>
            
             CT_EffectStyleItem
            
            	CHILD ELEMENTS (4):
            		effectLst
            		effectDag
            		scene3d
            		sp3d
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_EffectStyleItem.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_EffectProperties
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_FontScheme">
             <summary>
            
             CT_FontScheme
            
            	CHILD ELEMENTS (3):
            		majorFont
            		minorFont
            		extLst
            
            	ATTRIBUTES (1):
            		name
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_EffectStyleList">
             <summary>
            
             CT_EffectStyleList
            
            	CHILD ELEMENTS (1):
            		effectStyle
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_BaseStyles">
             <summary>
            
             CT_BaseStyles
            
            	CHILD ELEMENTS (4):
            		clrScheme
            		fontScheme
            		fmtScheme
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_OfficeArtExtension">
             <summary>
            
             CT_OfficeArtExtension
            
            	ATTRIBUTES (1):
            		uri
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Ratio">
             <summary>
            
             CT_Ratio
            
            	ATTRIBUTES (2):
            		n
            		d
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GammaTransform">
             <summary>
            
             CT_GammaTransform
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_InverseGammaTransform">
             <summary>
            
             CT_InverseGammaTransform
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_OfficeArtExtensionList">
             <summary>
            
             CT_OfficeArtExtensionList
            
            	CHILD ELEMENTS (1):
            		ext
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_OfficeArtExtensionList.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_OfficeArtExtensionList
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Scale2D">
             <summary>
            
             CT_Scale2D
            
            	CHILD ELEMENTS (2):
            		sx
            		sy
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Point3D">
             <summary>
            
             CT_Point3D
            
            	ATTRIBUTES (3):
            		x
            		y
            		z
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Vector3D">
             <summary>
            
             CT_Vector3D
            
            	ATTRIBUTES (3):
            		dx
            		dy
            		dz
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_SphereCoords">
             <summary>
            
             CT_SphereCoords
            
            	ATTRIBUTES (3):
            		lat
            		lon
            		rev
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Color_DML">
             <summary>
            
             CT_Color
            
            	CHILD ELEMENTS (6):
            		scrgbClr
            		srgbClr
            		hslClr
            		sysClr
            		schemeClr
            		prstClr
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Color_DML.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_ColorChoice
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_ColorMRU">
             <summary>
            
             CT_ColorMRU
            
            	CHILD ELEMENTS (6):
            		scrgbClr
            		srgbClr
            		hslClr
            		sysClr
            		schemeClr
            		prstClr
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_ColorMRU.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_ColorChoice
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AnimationDgmElement">
             <summary>
            
             CT_AnimationDgmElement
            
            	ATTRIBUTES (2):
            		id
            		bldStep
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AnimationChartElement">
             <summary>
            
             CT_AnimationChartElement
            
            	ATTRIBUTES (3):
            		seriesIdx
            		categoryIdx
            		bldStep
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AnimationElementChoice">
             <summary>
            
             CT_AnimationElementChoice
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AnimationDgmBuildProperties">
             <summary>
            
             CT_AnimationDgmBuildProperties
            
            	ATTRIBUTES (2):
            		bld
            		rev
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AnimationChartBuildProperties">
             <summary>
            
             CT_AnimationChartBuildProperties
            
            	ATTRIBUTES (2):
            		bld
            		animBg
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AnimationGraphicalObjectBuildProperties">
             <summary>
            
             CT_AnimationGraphicalObjectBuildProperties
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ST_AnimationDgmBuildType">
              <summary>
             This class wraps the union type ST_AnimationDgmBuildType.
             The 'Parse' and 'ToXLSX' methods must be implemented manually.
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ST_AnimationChartBuildType">
              <summary>
             This class wraps the union type ST_AnimationChartBuildType.
             The 'Parse' and 'ToXLSX' methods must be implemented manually.
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_BackgroundFormatting">
             <summary>
            
             CT_BackgroundFormatting
            
            	CHILD ELEMENTS (8):
            		noFill
            		solidFill
            		gradFill
            		blipFill
            		pattFill
            		grpFill
            		effectLst
            		effectDag
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_BackgroundFormatting.Group1">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_FillProperties
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_BackgroundFormatting.Group2">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_EffectProperties
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_WholeE2oFormatting">
             <summary>
            
             CT_WholeE2oFormatting
            
            	CHILD ELEMENTS (3):
            		ln
            		effectLst
            		effectDag
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_WholeE2oFormatting.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_EffectProperties
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GvmlUseShapeRectangle">
             <summary>
            
             CT_GvmlUseShapeRectangle
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GvmlTextShape">
             <summary>
            
             CT_GvmlTextShape
            
            	CHILD ELEMENTS (4):
            		txBody
            		useSpRect
            		xfrm
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GvmlShapeNonVisual">
             <summary>
            
             CT_GvmlShapeNonVisual
            
            	CHILD ELEMENTS (2):
            		cNvPr
            		cNvSpPr
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GvmlShape">
             <summary>
            
             CT_GvmlShape
            
            	CHILD ELEMENTS (5):
            		nvSpPr
            		spPr
            		txSp
            		style
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GvmlConnectorNonVisual">
             <summary>
            
             CT_GvmlConnectorNonVisual
            
            	CHILD ELEMENTS (2):
            		cNvPr
            		cNvCxnSpPr
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GvmlConnector">
             <summary>
            
             CT_GvmlConnector
            
            	CHILD ELEMENTS (4):
            		nvCxnSpPr
            		spPr
            		style
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GvmlPictureNonVisual">
             <summary>
            
             CT_GvmlPictureNonVisual
            
            	CHILD ELEMENTS (2):
            		cNvPr
            		cNvPicPr
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GvmlPicture">
             <summary>
            
             CT_GvmlPicture
            
            	CHILD ELEMENTS (5):
            		nvPicPr
            		blipFill
            		spPr
            		style
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GvmlGraphicFrameNonVisual">
             <summary>
            
             CT_GvmlGraphicFrameNonVisual
            
            	CHILD ELEMENTS (2):
            		cNvPr
            		cNvGraphicFramePr
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GvmlGraphicalObjectFrame">
             <summary>
            
             CT_GvmlGraphicalObjectFrame
            
            	CHILD ELEMENTS (4):
            		nvGraphicFramePr
            		
            		xfrm
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GvmlGroupShapeNonVisual">
             <summary>
            
             CT_GvmlGroupShapeNonVisual
            
            	CHILD ELEMENTS (2):
            		cNvPr
            		cNvGrpSpPr
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GvmlGroupShape">
             <summary>
            
             CT_GvmlGroupShape
            
            	CHILD ELEMENTS (9):
            		nvGrpSpPr
            		grpSpPr
            		txSp
            		sp
            		cxnSp
            		pic
            		graphicFrame
            		grpSp
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Camera">
             <summary>
            
             CT_Camera
            
            	CHILD ELEMENTS (1):
            		rot
            
            	ATTRIBUTES (3):
            		prst
            		fov
            		zoom
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_LightRig">
             <summary>
            
             CT_LightRig
            
            	CHILD ELEMENTS (1):
            		rot
            
            	ATTRIBUTES (2):
            		rig
            		dir
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Scene3D">
             <summary>
            
             CT_Scene3D
            
            	CHILD ELEMENTS (4):
            		camera
            		lightRig
            		backdrop
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Backdrop">
             <summary>
            
             CT_Backdrop
            
            	CHILD ELEMENTS (4):
            		anchor
            		norm
            		up
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Bevel">
             <summary>
            
             CT_Bevel
            
            	ATTRIBUTES (3):
            		w
            		h
            		prst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Shape3D">
             <summary>
            
             CT_Shape3D
            
            	CHILD ELEMENTS (5):
            		bevelT
            		bevelB
            		extrusionClr
            		contourClr
            		extLst
            
            	ATTRIBUTES (4):
            		z
            		extrusionH
            		contourW
            		prstMaterial
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_FlatText">
             <summary>
            
             CT_FlatText
            
            	ATTRIBUTES (1):
            		z
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AlphaBiLevelEffect">
             <summary>
            
             CT_AlphaBiLevelEffect
            
            	ATTRIBUTES (1):
            		thresh
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TransformEffect">
             <summary>
            
             CT_TransformEffect
            
            	ATTRIBUTES (6):
            		sx
            		sy
            		kx
            		ky
            		tx
            		ty
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TintEffect">
             <summary>
            
             CT_TintEffect
            
            	ATTRIBUTES (2):
            		hue
            		amt
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_SoftEdgesEffect">
             <summary>
            
             CT_SoftEdgesEffect
            
            	ATTRIBUTES (1):
            		rad
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_RelativeOffsetEffect">
             <summary>
            
             CT_RelativeOffsetEffect
            
            	ATTRIBUTES (2):
            		tx
            		ty
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_ReflectionEffect">
             <summary>
            
             CT_ReflectionEffect
            
            	ATTRIBUTES (14):
            		blurRad
            		stA
            		stPos
            		endA
            		endPos
            		dist
            		dir
            		fadeDir
            		sx
            		sy
            		kx
            		ky
            		algn
            		rotWithShape
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_LuminanceEffect">
             <summary>
            
             CT_LuminanceEffect
            
            	ATTRIBUTES (2):
            		bright
            		contrast
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_HSLEffect">
             <summary>
            
             CT_HSLEffect
            
            	ATTRIBUTES (3):
            		hue
            		sat
            		lum
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GrayscaleEffect">
             <summary>
            
             CT_GrayscaleEffect
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_FillOverlayEffect">
             <summary>
            
             CT_FillOverlayEffect
            
            	CHILD ELEMENTS (6):
            		noFill
            		solidFill
            		gradFill
            		blipFill
            		pattFill
            		grpFill
            
            	ATTRIBUTES (1):
            		blend
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_FillOverlayEffect.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_FillProperties
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_SolidColorFillProperties">
             <summary>
            
             CT_SolidColorFillProperties
            
            	CHILD ELEMENTS (6):
            		scrgbClr
            		srgbClr
            		hslClr
            		sysClr
            		schemeClr
            		prstClr
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_SolidColorFillProperties.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_ColorChoice
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GradientFillProperties">
             <summary>
            
             CT_GradientFillProperties
            
            	CHILD ELEMENTS (4):
            		gsLst
            		lin
            		path
            		tileRect
            
            	ATTRIBUTES (2):
            		flip
            		rotWithShape
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GradientFillProperties.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_ShadeProperties
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_LinearShadeProperties">
             <summary>
            
             CT_LinearShadeProperties
            
            	ATTRIBUTES (2):
            		ang
            		scaled
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_PathShadeProperties">
             <summary>
            
             CT_PathShadeProperties
            
            	CHILD ELEMENTS (1):
            		fillToRect
            
            	ATTRIBUTES (1):
            		path
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_PatternFillProperties">
             <summary>
            
             CT_PatternFillProperties
            
            	CHILD ELEMENTS (2):
            		fgClr
            		bgClr
            
            	ATTRIBUTES (1):
            		prst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_FillEffect">
             <summary>
            
             CT_FillEffect
            
            	CHILD ELEMENTS (6):
            		noFill
            		solidFill
            		gradFill
            		blipFill
            		pattFill
            		grpFill
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_FillEffect.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_FillProperties
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_ColorChangeEffect">
             <summary>
            
             CT_ColorChangeEffect
            
            	CHILD ELEMENTS (2):
            		clrFrom
            		clrTo
            
            	ATTRIBUTES (1):
            		useA
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_BlurEffect">
             <summary>
            
             CT_BlurEffect
            
            	ATTRIBUTES (2):
            		rad
            		grow
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_BlendEffect">
             <summary>
            
             CT_BlendEffect
            
            	CHILD ELEMENTS (1):
            		cont
            
            	ATTRIBUTES (1):
            		blend
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_EffectContainer">
             <summary>
            
             CT_EffectContainer
            
            	CHILD ELEMENTS (30):
            		cont
            		effect
            		alphaBiLevel
            		alphaCeiling
            		alphaFloor
            		alphaInv
            		alphaMod
            		alphaModFix
            		alphaOutset
            		alphaRepl
            		biLevel
            		blend
            		blur
            		clrChange
            		clrRepl
            		duotone
            		fill
            		fillOverlay
            		glow
            		grayscl
            		hsl
            		innerShdw
            		lum
            		outerShdw
            		prstShdw
            		reflection
            		relOff
            		softEdge
            		tint
            		xfrm
            
            	ATTRIBUTES (2):
            		type
            		name
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_EffectContainer.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_Effect
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AlphaCeilingEffect">
             <summary>
            
             CT_AlphaCeilingEffect
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AlphaFloorEffect">
             <summary>
            
             CT_AlphaFloorEffect
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AlphaModulateEffect">
             <summary>
            
             CT_AlphaModulateEffect
            
            	CHILD ELEMENTS (1):
            		cont
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AlphaModulateFixedEffect">
             <summary>
            
             CT_AlphaModulateFixedEffect
            
            	ATTRIBUTES (1):
            		amt
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AlphaOutsetEffect">
             <summary>
            
             CT_AlphaOutsetEffect
            
            	ATTRIBUTES (1):
            		rad
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AlphaReplaceEffect">
             <summary>
            
             CT_AlphaReplaceEffect
            
            	ATTRIBUTES (1):
            		a
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_BiLevelEffect">
             <summary>
            
             CT_BiLevelEffect
            
            	ATTRIBUTES (1):
            		thresh
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_EffectReference">
             <summary>
            
             CT_EffectReference
            
            	ATTRIBUTES (1):
            		ref
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GradientStopList">
             <summary>
            
             CT_GradientStopList
            
            	CHILD ELEMENTS (1):
            		gs
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_FillProperties">
             <summary>
            
             CT_FillProperties
            
            	CHILD ELEMENTS (6):
            		noFill
            		solidFill
            		gradFill
            		blipFill
            		pattFill
            		grpFill
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_FillProperties.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_FillProperties
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_EffectList">
             <summary>
            
             CT_EffectList
            
            	CHILD ELEMENTS (8):
            		blur
            		fillOverlay
            		glow
            		innerShdw
            		outerShdw
            		prstShdw
            		reflection
            		softEdge
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_EffectProperties">
             <summary>
            
             CT_EffectProperties
            
            	CHILD ELEMENTS (2):
            		effectLst
            		effectDag
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_EffectProperties.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_EffectProperties
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_PresetTextShape">
             <summary>
            
             CT_PresetTextShape
            
            	CHILD ELEMENTS (1):
            		avLst
            
            	ATTRIBUTES (1):
            		prst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_ShapeProperties_DML">
             <summary>
            
             CT_ShapeProperties
            
            	CHILD ELEMENTS (15):
            		xfrm
            		custGeom
            		prstGeom
            		noFill
            		solidFill
            		gradFill
            		blipFill
            		pattFill
            		grpFill
            		ln
            		effectLst
            		effectDag
            		scene3d
            		sp3d
            		extLst
            
            	ATTRIBUTES (1):
            		bwMode
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_ShapeProperties_DML.Group1">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_Geometry
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_ShapeProperties_DML.Group2">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_FillProperties
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_ShapeProperties_DML.Group3">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_EffectProperties
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_StyleMatrixReference_DML">
             <summary>
            
             CT_StyleMatrixReference
            
            	CHILD ELEMENTS (6):
            		scrgbClr
            		srgbClr
            		hslClr
            		sysClr
            		schemeClr
            		prstClr
            
            	ATTRIBUTES (1):
            		idx
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_StyleMatrixReference_DML.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_ColorChoice
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_DefaultShapeDefinition">
             <summary>
            
             CT_DefaultShapeDefinition
            
            	CHILD ELEMENTS (5):
            		spPr
            		bodyPr
            		lstStyle
            		style
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_ObjectStyleDefaults">
             <summary>
            
             CT_ObjectStyleDefaults
            
            	CHILD ELEMENTS (4):
            		spDef
            		lnDef
            		txDef
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_OfficeStyleSheet">
             <summary>
            
             CT_OfficeStyleSheet
            
            	CHILD ELEMENTS (5):
            		themeElements
            		objectDefaults
            		extraClrSchemeLst
            		custClrLst
            		extLst
            
            	ATTRIBUTES (1):
            		name
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_ColorSchemeAndMapping">
             <summary>
            
             CT_ColorSchemeAndMapping
            
            	CHILD ELEMENTS (2):
            		clrScheme
            		clrMap
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_ColorMapping">
             <summary>
            
             CT_ColorMapping
            
            	CHILD ELEMENTS (1):
            		extLst
            
            	ATTRIBUTES (12):
            		bg1
            		tx1
            		bg2
            		tx2
            		accent1
            		accent2
            		accent3
            		accent4
            		accent5
            		accent6
            		hlink
            		folHlink
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_BaseStylesOverride">
             <summary>
            
             CT_BaseStylesOverride
            
            	CHILD ELEMENTS (3):
            		clrScheme
            		fontScheme
            		fmtScheme
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_EmptyElement">
             <summary>
            
             CT_EmptyElement
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_ColorMappingOverride">
             <summary>
            
             CT_ColorMappingOverride
            
            	CHILD ELEMENTS (2):
            		masterClrMapping
            		overrideClrMapping
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_ColorSchemeList">
             <summary>
            
             CT_ColorSchemeList
            
            	CHILD ELEMENTS (1):
            		extraClrScheme
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_ClipboardStyleSheet">
             <summary>
            
             CT_ClipboardStyleSheet
            
            	CHILD ELEMENTS (2):
            		themeElements
            		clrMap
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Table">
             <summary>
            
             CT_Table
            
            	CHILD ELEMENTS (3):
            		tblPr
            		tblGrid
            		tr
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TableProperties">
             <summary>
            
             CT_TableProperties
            
            	CHILD ELEMENTS (11):
            		noFill
            		solidFill
            		gradFill
            		blipFill
            		pattFill
            		grpFill
            		effectLst
            		effectDag
            		tableStyle
            		tableStyleId
            		extLst
            
            	ATTRIBUTES (7):
            		rtl
            		firstRow
            		firstCol
            		lastRow
            		lastCol
            		bandRow
            		bandCol
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TableProperties.Group1">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_FillProperties
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TableProperties.Group2">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_EffectProperties
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TableCol">
             <summary>
            
             CT_TableCol
            
            	CHILD ELEMENTS (1):
            		extLst
            
            	ATTRIBUTES (1):
            		w
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TableRow">
             <summary>
            
             CT_TableRow
            
            	CHILD ELEMENTS (2):
            		tc
            		extLst
            
            	ATTRIBUTES (1):
            		h
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TableCell">
             <summary>
            
             CT_TableCell
            
            	CHILD ELEMENTS (3):
            		txBody
            		tcPr
            		extLst
            
            	ATTRIBUTES (4):
            		rowSpan
            		gridSpan
            		hMerge
            		vMerge
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TableCellProperties">
             <summary>
            
             CT_TableCellProperties
            
            	CHILD ELEMENTS (14):
            		lnL
            		lnR
            		lnT
            		lnB
            		lnTlToBr
            		lnBlToTr
            		cell3D
            		noFill
            		solidFill
            		gradFill
            		blipFill
            		pattFill
            		grpFill
            		extLst
            
            	ATTRIBUTES (8):
            		marL
            		marR
            		marT
            		marB
            		vert
            		anchor
            		anchorCtr
            		horzOverflow
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TableCellProperties.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_FillProperties
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TableGrid">
             <summary>
            
             CT_TableGrid
            
            	CHILD ELEMENTS (1):
            		gridCol
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TableStyleList">
             <summary>
            
             CT_TableStyleList
            
            	CHILD ELEMENTS (1):
            		tblStyle
            
            	ATTRIBUTES (1):
            		def
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TableStyle">
             <summary>
            
             CT_TableStyle
            
            	CHILD ELEMENTS (15):
            		tblBg
            		wholeTbl
            		band1H
            		band2H
            		band1V
            		band2V
            		lastCol
            		firstCol
            		lastRow
            		seCell
            		swCell
            		firstRow
            		neCell
            		nwCell
            		extLst
            
            	ATTRIBUTES (2):
            		styleId
            		styleName
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TableBackgroundStyle">
             <summary>
            
             CT_TableBackgroundStyle
            
            	CHILD ELEMENTS (4):
            		fill
            		fillRef
            		effect
            		effectRef
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TableBackgroundStyle.Group1">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_ThemeableFillStyle
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TableBackgroundStyle.Group2">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_ThemeableEffectStyle
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TablePartStyle">
             <summary>
            
             CT_TablePartStyle
            
            	CHILD ELEMENTS (2):
            		tcTxStyle
            		tcStyle
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TableStyleTextStyle">
             <summary>
            
             CT_TableStyleTextStyle
            
            	CHILD ELEMENTS (9):
            		font
            		fontRef
            		scrgbClr
            		srgbClr
            		hslClr
            		sysClr
            		schemeClr
            		prstClr
            		extLst
            
            	ATTRIBUTES (2):
            		b
            		i
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TableStyleTextStyle.Group1">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_ThemeableFontStyles
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TableStyleTextStyle.Group2">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_ColorChoice
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TableStyleCellStyle">
             <summary>
            
             CT_TableStyleCellStyle
            
            	CHILD ELEMENTS (4):
            		tcBdr
            		fill
            		fillRef
            		cell3D
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TableStyleCellStyle.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_ThemeableFillStyle
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TableCellBorderStyle">
             <summary>
            
             CT_TableCellBorderStyle
            
            	CHILD ELEMENTS (9):
            		left
            		right
            		top
            		bottom
            		insideH
            		insideV
            		tl2br
            		tr2bl
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_ThemeableLineStyle">
             <summary>
            
             CT_ThemeableLineStyle
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Cell3D">
             <summary>
            
             CT_Cell3D
            
            	CHILD ELEMENTS (3):
            		bevel
            		lightRig
            		extLst
            
            	ATTRIBUTES (1):
            		prstMaterial
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextListStyle_DML">
             <summary>
            
             CT_TextListStyle
            
            	CHILD ELEMENTS (11):
            		defPPr
            		lvl1pPr
            		lvl2pPr
            		lvl3pPr
            		lvl4pPr
            		lvl5pPr
            		lvl6pPr
            		lvl7pPr
            		lvl8pPr
            		lvl9pPr
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextNormalAutofit">
             <summary>
            
             CT_TextNormalAutofit
            
            	ATTRIBUTES (2):
            		fontScale
            		lnSpcReduction
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextShapeAutofit">
             <summary>
            
             CT_TextShapeAutofit
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextNoAutofit">
             <summary>
            
             CT_TextNoAutofit
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBodyProperties_DML">
             <summary>
            
             CT_TextBodyProperties
            
            	CHILD ELEMENTS (8):
            		prstTxWarp
            		noAutofit
            		normAutofit
            		spAutoFit
            		scene3d
            		sp3d
            		flatTx
            		extLst
            
            	ATTRIBUTES (19):
            		rot
            		spcFirstLastPara
            		vertOverflow
            		horzOverflow
            		vert
            		wrap
            		lIns
            		tIns
            		rIns
            		bIns
            		numCol
            		spcCol
            		rtlCol
            		fromWordArt
            		anchor
            		anchorCtr
            		forceAA
            		upright
            		compatLnSpc
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBodyProperties_DML.Group1">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_TextAutofit
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBodyProperties_DML.Group2">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_Text3D
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBulletColorFollowText">
             <summary>
            
             CT_TextBulletColorFollowText
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBulletSizeFollowText">
             <summary>
            
             CT_TextBulletSizeFollowText
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBulletSizePercent">
             <summary>
            
             CT_TextBulletSizePercent
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBulletSizePoint">
             <summary>
            
             CT_TextBulletSizePoint
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBulletTypefaceFollowText">
             <summary>
            
             CT_TextBulletTypefaceFollowText
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextAutonumberBullet">
             <summary>
            
             CT_TextAutonumberBullet
            
            	ATTRIBUTES (2):
            		type
            		startAt
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextCharBullet">
             <summary>
            
             CT_TextCharBullet
            
            	ATTRIBUTES (1):
            		char
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBlipBullet">
             <summary>
            
             CT_TextBlipBullet
            
            	CHILD ELEMENTS (1):
            		blip
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextNoBullet">
             <summary>
            
             CT_TextNoBullet
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextUnderlineLineFollowText">
             <summary>
            
             CT_TextUnderlineLineFollowText
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextUnderlineFillFollowText">
             <summary>
            
             CT_TextUnderlineFillFollowText
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextUnderlineFillGroupWrapper">
             <summary>
            
             CT_TextUnderlineFillGroupWrapper
            
            	CHILD ELEMENTS (6):
            		noFill
            		solidFill
            		gradFill
            		blipFill
            		pattFill
            		grpFill
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextUnderlineFillGroupWrapper.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_FillProperties
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextSpacingPercent">
             <summary>
            
             CT_TextSpacingPercent
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextSpacingPoint">
             <summary>
            
             CT_TextSpacingPoint
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextTabStop">
             <summary>
            
             CT_TextTabStop
            
            	ATTRIBUTES (2):
            		pos
            		algn
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextTabStopList">
             <summary>
            
             CT_TextTabStopList
            
            	CHILD ELEMENTS (1):
            		tab
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextLineBreak">
             <summary>
            
             CT_TextLineBreak
            
            	CHILD ELEMENTS (1):
            		rPr
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextSpacing">
             <summary>
            
             CT_TextSpacing
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextField">
             <summary>
            
             CT_TextField
            
            	CHILD ELEMENTS (3):
            		rPr
            		pPr
            		t
            
            	ATTRIBUTES (2):
            		id
            		type
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_RegularTextRun_DML">
             <summary>
            
             CT_RegularTextRun
            
            	CHILD ELEMENTS (2):
            		rPr
            		t
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLAttributes">
            <summary>
            Exposes a constant for each XML attribute in the
            'http://schemas.openxmlformats.org/drawingml/2006/main' namespace.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingAttributes">
            <summary>
            Exposes a constant for each XML attribute in the
            'http://schemas.openxmlformats.org/drawingml/2006/chartDrawing' namespace.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements">
            <summary>
            Exposes a constant for each XML element in the
            'http://schemas.openxmlformats.org/drawingml/2006/chartDrawing' namespace.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.absSizeAnchor">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:absSizeAnchor</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.blipFill">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:blipFill</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.cNvCxnSpPr">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:cNvCxnSpPr</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.cNvGraphicFramePr">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:cNvGraphicFramePr</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.cNvGrpSpPr">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:cNvGrpSpPr</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.cNvPicPr">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:cNvPicPr</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.cNvPr">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:cNvPr</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.cNvSpPr">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:cNvSpPr</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.cxnSp">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:cxnSp</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.ext">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:ext</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.from">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:from</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.graphicFrame">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:graphicFrame</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.grpSp">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:grpSp</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.grpSpPr">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:grpSpPr</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.nvCxnSpPr">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:nvCxnSpPr</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.nvGraphicFramePr">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:nvGraphicFramePr</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.nvGrpSpPr">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:nvGrpSpPr</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.nvPicPr">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:nvPicPr</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.nvSpPr">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:nvSpPr</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.pic">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:pic</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.relSizeAnchor">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:relSizeAnchor</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.sp">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:sp</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.spPr">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:spPr</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.style">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:style</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.to">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:to</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.txBody">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:txBody</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.x">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:x</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.xfrm">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:xfrm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.ChartDrawingElements.y">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:y</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.CT_GraphicFrameNonVisual">
             <summary>
            
             CT_GraphicFrameNonVisual
            
            	CHILD ELEMENTS (2):
            		cNvPr
            		cNvGraphicFramePr
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.CT_GraphicFrame">
             <summary>
            
             CT_GraphicFrame
            
            	CHILD ELEMENTS (3):
            		nvGraphicFramePr
            		xfrm
            		
            
            	ATTRIBUTES (2):
            		macro
            		fPublished
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.CT_Shape_ChartDrawing">
             <summary>
            
             CT_Shape
            
             *** INVALID TYPE ***
             The associated XML type was not properly parsed.
             The properties of this class were generated manually
             from schema metadata, and may not be valid.
            
            
            	CHILD ELEMENTS (4):
            		nvSpPr
            		spPr
            		style
            		txBody
            
            	ATTRIBUTES (4):
            		macro
            		textlink
            		fLocksText
            		fPublished
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.EG_ObjectChoices.Sp">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:CT_Shape </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.EG_ObjectChoices.GrpSp">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:CT_GroupShape </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.EG_ObjectChoices.GraphicFrame">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:CT_GraphicFrame </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.EG_ObjectChoices.CxnSp">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:CT_Connector </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.EG_ObjectChoices.Pic">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:CT_Picture </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.EG_Anchor_ChartDrawing.RelSizeAnchor">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:CT_RelSizeAnchor </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.EG_Anchor_ChartDrawing.AbsSizeAnchor">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:CT_AbsSizeAnchor </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.CT_ChartDrawingAnchorBase.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:EG_ObjectChoices
             MinOccurs = 1
             MaxOccurs = 1
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.CT_RelSizeAnchor">
             <summary>
            
             CT_RelSizeAnchor
            
             *** INVALID TYPE ***
             The associated XML type was not properly parsed.
             The properties of this class were generated manually
             from schema metadata, and may not be valid.
            
            
            	CHILD ELEMENTS (7):
            		from
            		to
            		sp
            		grpSp
            		graphicFrame
            		cxnSp
            		pic
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.CT_AbsSizeAnchor">
             <summary>
            
             CT_AbsSizeAnchor
            
             *** INVALID TYPE ***
             The associated XML type was not properly parsed.
             The properties of this class were generated manually
             from schema metadata, and may not be valid.
            
            
            	CHILD ELEMENTS (7):
            		from
            		ext
            		sp
            		grpSp
            		graphicFrame
            		cxnSp
            		pic
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.CT_AbsSizeAnchor.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chartDrawing:EG_ObjectChoices
             MinOccurs = 1
             MaxOccurs = 1
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartDrawing.CT_Drawing_ChartDrawing">
             <summary>
            
             CT_Drawing
            
            	CHILD ELEMENTS (2):
            		relSizeAnchor
            		absSizeAnchor
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExAttributes">
            <summary>
            Exposes a constant for each XML attribute in the
            'http://schemas.microsoft.com/office/drawing/2014/chartex' namespace.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements">
            <summary>
            Exposes a constant for each XML element in the
            'http://schemas.microsoft.com/office/drawing/2014/chartex' namespace.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.address">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:address</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.aggregation">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:aggregation</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.autoUpdate">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:autoUpdate</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.axis">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:axis</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.axisId">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:axisId</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.binary">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:binary</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.binCount">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:binCount</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.binning">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:binning</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.binSize">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:binSize</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.catScaling">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:catScaling</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.chart">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:chart</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.chartData">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:chartData</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.chartSpace">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:chartSpace</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.clear">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:clear</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.clrMapOvr">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:clrMapOvr</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.copyright">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:copyright</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.copyrights">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:copyrights</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.data">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:data</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.dataId">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:dataId</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.dataLabel">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:dataLabel</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.dataLabelHidden">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:dataLabelHidden</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.dataLabels">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:dataLabels</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.dataPt">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:dataPt</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.entityType">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:entityType</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.evenFooter">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:evenFooter</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.evenHeader">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:evenHeader</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.ext">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:ext</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.externalData">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:externalData</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.extLst">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:extLst</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.extremeValue">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:extremeValue</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.f">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:f</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.firstFooter">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:firstFooter</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.firstHeader">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:firstHeader</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.fmtOvr">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:fmtOvr</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.fmtOvrs">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:fmtOvrs</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.geoCache">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:geoCache</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.geoChildEntities">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:geoChildEntities</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.geoChildEntitiesQuery">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:geoChildEntitiesQuery</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.geoChildEntitiesQueryResult">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:geoChildEntitiesQueryResult</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.geoChildEntitiesQueryResults">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:geoChildEntitiesQueryResults</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.geoChildTypes">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:geoChildTypes</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.geoData">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:geoData</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.geoDataEntityQuery">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:geoDataEntityQuery</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.geoDataEntityQueryResult">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:geoDataEntityQueryResult</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.geoDataEntityQueryResults">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:geoDataEntityQueryResults</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.geoDataPointQuery">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:geoDataPointQuery</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.geoDataPointToEntityQuery">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:geoDataPointToEntityQuery</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.geoDataPointToEntityQueryResult">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:geoDataPointToEntityQueryResult</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.geoDataPointToEntityQueryResults">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:geoDataPointToEntityQueryResults</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.geography">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:geography</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.geoHierarchyEntity">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:geoHierarchyEntity</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.geoLocation">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:geoLocation</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.geoLocationQuery">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:geoLocationQuery</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.geoLocationQueryResult">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:geoLocationQueryResult</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.geoLocationQueryResults">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:geoLocationQueryResults</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.geoLocations">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:geoLocations</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.geoPolygon">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:geoPolygon</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.geoPolygons">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:geoPolygons</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.headerFooter">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:headerFooter</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.idx">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:idx</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.layoutPr">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:layoutPr</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.legend">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:legend</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.lvl">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:lvl</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.majorGridlines">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:majorGridlines</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.majorTickMarks">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:majorTickMarks</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.max">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:max</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.maxColor">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:maxColor</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.mid">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:mid</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.midColor">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:midColor</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.min">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:min</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.minColor">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:minColor</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.minorGridlines">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:minorGridlines</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.minorTickMarks">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:minorTickMarks</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.number">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:number</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.nf">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:nf</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.numDim">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:numDim</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.numFmt">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:numFmt</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.oddFooter">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:oddFooter</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.oddHeader">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:oddHeader</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.pageMargins">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:pageMargins</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.pageSetup">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:pageSetup</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.parentLabelLayout">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:parentLabelLayout</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.percent">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:percent</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.plotArea">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:plotArea</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.plotAreaRegion">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:plotAreaRegion</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.plotSurface">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:plotSurface</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.printSettings">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:printSettings</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.pt">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:pt</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.regionLabelLayout">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:regionLabelLayout</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.rich">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:rich</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.separator">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:separator</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.series">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:series</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.spPr">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:spPr</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.statistics">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:statistics</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.strDim">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:strDim</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.subtotals">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:subtotals</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.tickLabels">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:tickLabels</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.title">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:title</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.tx">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:tx</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.txData">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:txData</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.txPr">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:txPr</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.units">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:units</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.unitsLabel">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:unitsLabel</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.valScaling">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:valScaling</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.v">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:v</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.valueColorPositions">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:valueColorPositions</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.valueColors">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:valueColors</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExElements.visibility">
            <summary>http://schemas.microsoft.com/office/drawing/2014/chartex:visibility</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ChartSpaceEx">
             <summary>
            
             CT_ChartSpace
            
            	CHILD ELEMENTS (8):
            		chartData
            		chart
            		spPr
            		txPr
            		clrMapOvr
            		fmtOvrs
            		printSettings
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ChartData">
             <summary>
            
             CT_ChartData
            
            	CHILD ELEMENTS (3):
            		externalData
            		data
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ChartData.DataBySeries">
            <summary>
            Added for serialization, no associated XLSX element.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ExternalDataEx">
             <summary>
            
             CT_ExternalData
            
            	ATTRIBUTES (2):
            		
            		autoUpdate
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_PageSetup">
             <summary>
            
             CT_PageSetup
            
            	ATTRIBUTES (9):
            		paperSize
            		firstPageNumber
            		orientation
            		blackAndWhite
            		draft
            		useFirstPageNumber
            		horizontalDpi
            		verticalDpi
            		copies
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_PageMargins">
             <summary>
            
             CT_PageMargins
            
            	ATTRIBUTES (6):
            		l
            		r
            		t
            		b
            		header
            		footer
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_HeaderFooter">
             <summary>
            
             CT_HeaderFooter
            
            	CHILD ELEMENTS (6):
            		oddHeader
            		oddFooter
            		evenHeader
            		evenFooter
            		firstHeader
            		firstFooter
            
            	ATTRIBUTES (3):
            		alignWithMargins
            		differentOddEven
            		differentFirst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_PrintSettingsEx">
             <summary>
            
             CT_PrintSettings
            
            	CHILD ELEMENTS (3):
            		headerFooter
            		pageMargins
            		pageSetup
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_FormatOverride">
             <summary>
            
             CT_FormatOverride
            
            	CHILD ELEMENTS (2):
            		spPr
            		extLst
            
            	ATTRIBUTES (1):
            		idx
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_LegendEx">
             <summary>
            
             CT_Legend
            
            	CHILD ELEMENTS (3):
            		spPr
            		txPr
            		extLst
            
            	ATTRIBUTES (3):
            		pos
            		align
            		overlay
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_TickLabels">
             <summary>
            
             CT_TickLabels
            
            	CHILD ELEMENTS (1):
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_TickMarks">
             <summary>
            
             CT_TickMarks
            
            	CHILD ELEMENTS (1):
            		extLst
            
            	ATTRIBUTES (1):
            		type
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Gridlines">
             <summary>
            
             CT_Gridlines
            
            	CHILD ELEMENTS (2):
            		spPr
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_AxisUnitsLabel">
             <summary>
            
             CT_AxisUnitsLabel
            
            	CHILD ELEMENTS (4):
            		tx
            		spPr
            		txPr
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Text">
             <summary>
            
             CT_Text
            
            	CHILD ELEMENTS (2):
            		txData
            		rich
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_TextData">
             <summary>
            
             CT_TextData
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Formula">
             <summary>
            
             CT_Formula
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_AxisUnits">
             <summary>
            
             CT_AxisUnits
            
            	CHILD ELEMENTS (2):
            		unitsLabel
            		extLst
            
            	ATTRIBUTES (1):
            		unit
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_AxisTitle">
             <summary>
            
             CT_AxisTitle
            
            	CHILD ELEMENTS (4):
            		tx
            		spPr
            		txPr
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ValueAxisScaling">
             <summary>
            
             CT_ValueAxisScaling
            
            	ATTRIBUTES (4):
            		max
            		min
            		majorUnit
            		minorUnit
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_CategoryAxisScaling">
             <summary>
            
             CT_CategoryAxisScaling
            
            	ATTRIBUTES (1):
            		gapWidth
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Axis">
             <summary>
            
             CT_Axis
            
            	CHILD ELEMENTS (13):
            		catScaling
            		valScaling
            		title
            		units
            		majorGridlines
            		minorGridlines
            		majorTickMarks
            		minorTickMarks
            		tickLabels
            		numFmt
            		spPr
            		txPr
            		extLst
            
            	ATTRIBUTES (2):
            		id
            		hidden
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_NumberFormat">
             <summary>
            
             CT_NumberFormat
            
            	ATTRIBUTES (2):
            		formatCode
            		sourceLinked
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Statistics">
             <summary>
            
             CT_Statistics
            
            	ATTRIBUTES (1):
            		quartileMethod
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoHierarchyEntity">
             <summary>
            
             CT_GeoHierarchyEntity
            
            	ATTRIBUTES (3):
            		entityName
            		entityId
            		entityType
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoChildEntitiesQuery">
             <summary>
            
             CT_GeoChildEntitiesQuery
            
            	CHILD ELEMENTS (1):
            		geoChildTypes
            
            	ATTRIBUTES (1):
            		entityId
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoChildEntitiesQueryResult">
             <summary>
            
             CT_GeoChildEntitiesQueryResult
            
            	CHILD ELEMENTS (2):
            		geoChildEntitiesQuery
            		geoChildEntities
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoDataPointToEntityQuery">
             <summary>
            
             CT_GeoDataPointToEntityQuery
            
            	ATTRIBUTES (2):
            		entityType
            		entityId
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoDataPointQuery">
             <summary>
            
             CT_GeoDataPointQuery
            
            	ATTRIBUTES (3):
            		entityType
            		latitude
            		longitude
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoDataPointToEntityQueryResult">
             <summary>
            
             CT_GeoDataPointToEntityQueryResult
            
            	CHILD ELEMENTS (2):
            		geoDataPointQuery
            		geoDataPointToEntityQuery
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoPolygon">
             <summary>
            
             CT_GeoPolygon
            
            	ATTRIBUTES (3):
            		polygonId
            		numPoints
            		pcaRings
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoData">
             <summary>
            
             CT_GeoData
            
            	CHILD ELEMENTS (2):
            		geoPolygons
            		copyrights
            
            	ATTRIBUTES (6):
            		entityName
            		entityId
            		east
            		west
            		north
            		south
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoDataEntityQuery">
             <summary>
            
             CT_GeoDataEntityQuery
            
            	ATTRIBUTES (2):
            		entityType
            		entityId
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoDataEntityQueryResult">
             <summary>
            
             CT_GeoDataEntityQueryResult
            
            	CHILD ELEMENTS (2):
            		geoDataEntityQuery
            		geoData
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Address">
             <summary>
            
             CT_Address
            
            	ATTRIBUTES (7):
            		address1
            		countryRegion
            		adminDistrict1
            		adminDistrict2
            		postalCode
            		locality
            		isoCountryCode
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoLocation">
             <summary>
            
             CT_GeoLocation
            
            	CHILD ELEMENTS (1):
            		address
            
            	ATTRIBUTES (4):
            		latitude
            		longitude
            		entityName
            		entityType
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoLocations">
             <summary>
            
             CT_GeoLocations
            
            	CHILD ELEMENTS (1):
            		geoLocation
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoLocationQuery">
             <summary>
            
             CT_GeoLocationQuery
            
            	ATTRIBUTES (5):
            		countryRegion
            		adminDistrict1
            		adminDistrict2
            		postalCode
            		entityType
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoLocationQueryResult">
             <summary>
            
             CT_GeoLocationQueryResult
            
            	CHILD ELEMENTS (2):
            		geoLocationQuery
            		geoLocations
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Clear">
             <summary>
            
             CT_Clear
            
            	CHILD ELEMENTS (4):
            		geoLocationQueryResults
            		geoDataEntityQueryResults
            		geoDataPointToEntityQueryResults
            		geoChildEntitiesQueryResults
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoCache">
             <summary>
            
             CT_GeoCache
            
            	ATTRIBUTES (1):
            		provider
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Geography">
             <summary>
            
             CT_Geography
            
            	CHILD ELEMENTS (1):
            		geoCache
            
            	ATTRIBUTES (5):
            		projectionType
            		viewedRegionType
            		cultureLanguage
            		cultureRegion
            		attribution
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Binning">
             <summary>
            
             CT_Binning
            
            	ATTRIBUTES (3):
            		intervalClosed
            		underflow
            		overflow
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Aggregation">
             <summary>
            
             CT_Aggregation
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_SeriesElementVisibilities">
             <summary>
            
             CT_SeriesElementVisibilities
            
            	ATTRIBUTES (5):
            		connectorLines
            		meanLine
            		meanMarker
            		nonoutliers
            		outliers
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_RegionLabelLayout">
             <summary>
            
             CT_RegionLabelLayout
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ParentLabelLayout">
             <summary>
            
             CT_ParentLabelLayout
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_SeriesLayoutProperties">
             <summary>
            
             CT_SeriesLayoutProperties
            
            	CHILD ELEMENTS (9):
            		parentLabelLayout
            		regionLabelLayout
            		visibility
            		aggregation
            		binning
            		geography
            		statistics
            		subtotals
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_DataId">
             <summary>
            
             CT_DataId
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_DataLabelHidden">
             <summary>
            
             CT_DataLabelHidden
            
            	ATTRIBUTES (1):
            		idx
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_DataLabels">
             <summary>
            
             CT_DataLabels
            
            	CHILD ELEMENTS (8):
            		numFmt
            		spPr
            		txPr
            		visibility
            		separator
            		dataLabel
            		dataLabelHidden
            		extLst
            
            	ATTRIBUTES (1):
            		pos
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_DataLabel">
             <summary>
            
             CT_DataLabel
            
            	CHILD ELEMENTS (6):
            		numFmt
            		spPr
            		txPr
            		visibility
            		separator
            		extLst
            
            	ATTRIBUTES (2):
            		idx
            		pos
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_DataLabelVisibilities">
             <summary>
            
             CT_DataLabelVisibilities
            
            	ATTRIBUTES (3):
            		seriesName
            		categoryName
            		value
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_DataPoint">
             <summary>
            
             CT_DataPoint
            
            	CHILD ELEMENTS (2):
            		spPr
            		extLst
            
            	ATTRIBUTES (1):
            		idx
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ValueColorMiddlePosition">
             <summary>
            
             CT_ValueColorMiddlePosition
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_NumberColorPosition">
             <summary>
            
             CT_NumberColorPosition
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_PercentageColorPosition">
             <summary>
            
             CT_PercentageColorPosition
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ExtremeValueColorPosition">
             <summary>
            
             CT_ExtremeValueColorPosition
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ValueColorEndPosition">
             <summary>
            
             CT_ValueColorEndPosition
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ValueColorPositions">
             <summary>
            
             CT_ValueColorPositions
            
            	CHILD ELEMENTS (3):
            		min
            		mid
            		max
            
            	ATTRIBUTES (1):
            		count
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ValueColors">
             <summary>
            
             CT_ValueColors
            
            	CHILD ELEMENTS (3):
            		minColor
            		midColor
            		maxColor
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Series">
             <summary>
            
             CT_Series
             https://docs.microsoft.com/en-us/openspecs/office_standards/ms-odrawxml/86df19ea-8e94-49fc-9160-377c1b40b985
            	CHILD ELEMENTS (10):
            		tx
            		spPr
            		valueColors
            		valueColorPositions
            		dataPt
            		dataLabels
            		dataId
            		layoutPr
            		axisId
            		extLst
            
            	ATTRIBUTES (5):
            		layoutId
            		hidden
            		ownerIdx
            		uniqueId
            		formatIdx
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Series.SerializationIndex">
            <summary>
            Used for deserialization (no associated XLSX element)
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_PlotSurface">
             <summary>
            
             CT_PlotSurface
            
            	CHILD ELEMENTS (2):
            		spPr
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_PlotAreaRegion">
             <summary>
            
             CT_PlotAreaRegion
            
            	CHILD ELEMENTS (3):
            		plotSurface
            		series
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_PlotAreaEx">
             <summary>
            
             CT_PlotArea
            
            	CHILD ELEMENTS (4):
            		plotAreaRegion
            		axis
            		spPr
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ChartTitle">
             <summary>
            
             CT_ChartTitle
            
            	CHILD ELEMENTS (4):
            		tx
            		spPr
            		txPr
            		extLst
            
            	ATTRIBUTES (3):
            		pos
            		align
            		overlay
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ChartEx">
             <summary>
            
             CT_Chart
            
            	CHILD ELEMENTS (4):
            		title
            		plotArea
            		legend
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_StringValue">
             <summary>
            
             CT_StringValue
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_StringLevel">
             <summary>
            
             CT_StringLevel
            
            	CHILD ELEMENTS (1):
            		pt
            
            	ATTRIBUTES (2):
            		ptCount
            		name
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_StringDimension">
             <summary>
            
             CT_StringDimension
            
            	ATTRIBUTES (1):
            		type
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_NumericValue">
             <summary>
            
             CT_NumericValue
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_NumericLevel">
             <summary>
            
             CT_NumericLevel
            
            	CHILD ELEMENTS (1):
            		pt
            
            	ATTRIBUTES (3):
            		ptCount
            		formatCode
            		name
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_NumericDimension">
             <summary>
            
             CT_NumericDimension
            
            	ATTRIBUTES (1):
            		type
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Data">
             <summary>
            
             CT_Data
            
            	CHILD ELEMENTS (3):
            		numDim
            		strDim
            		extLst
            
            	ATTRIBUTES (1):
            		id
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoLocationQueryResults">
             <summary>
            
             CT_GeoLocationQueryResults
            
            	CHILD ELEMENTS (1):
            		geoLocationQueryResult
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoPolygons">
             <summary>
            
             CT_GeoPolygons
            
            	CHILD ELEMENTS (1):
            		geoPolygon
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Copyrights">
             <summary>
            
             CT_Copyrights
            
            	CHILD ELEMENTS (1):
            		copyright
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoDataEntityQueryResults">
             <summary>
            
             CT_GeoDataEntityQueryResults
            
            	CHILD ELEMENTS (1):
            		geoDataEntityQueryResult
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoDataPointToEntityQueryResults">
             <summary>
            
             CT_GeoDataPointToEntityQueryResults
            
            	CHILD ELEMENTS (1):
            		geoDataPointToEntityQueryResult
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoChildTypes">
             <summary>
            
             CT_GeoChildTypes
            
            	CHILD ELEMENTS (1):
            		entityType
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoChildEntities">
             <summary>
            
             CT_GeoChildEntities
            
            	CHILD ELEMENTS (1):
            		geoHierarchyEntity
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoChildEntitiesQueryResults">
             <summary>
            
             CT_GeoChildEntitiesQueryResults
            
            	CHILD ELEMENTS (1):
            		geoChildEntitiesQueryResult
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Subtotals">
             <summary>
            
             CT_Subtotals
            
            	CHILD ELEMENTS (1):
            		idx
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_FormatOverrides">
             <summary>
            
             CT_FormatOverrides
            
            	CHILD ELEMENTS (1):
            		fmtOvr
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ST_DoubleOrAutomatic">
              <summary>
             This class wraps the union type ST_DoubleOrAutomatic.
             The 'Parse' and 'ToXLSX' methods must be implemented manually.
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ST_GapWidthRatio">
              <summary>
             This class wraps the union type ST_GapWidthRatio.
             The 'Parse' and 'ToXLSX' methods must be implemented manually.
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ST_ValueAxisUnit">
              <summary>
             This class wraps the union type ST_ValueAxisUnit.
             The 'Parse' and 'ToXLSX' methods must be implemented manually.
             </summary>
            
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ChartSpaceEx,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/chartSpace
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ChartSpace
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ChartData,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/chartData
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ChartData
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ChartEx,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/chart
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Chart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_FormatOverrides,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/fmtOvrs
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_FormatOverrides
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_PrintSettingsEx,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/printSettings
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_PrintSettings
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ExternalDataEx,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/externalData
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ExternalData
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Data,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/data
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Data
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_NumericDimension,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/numDim
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_NumericDimension
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_StringDimension,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/strDim
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_StringDimension
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Formula,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/f
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Formula
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_StringValue,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_StringValue
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_NumericValue,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_NumericValue
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_NumericLevel,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/lvl
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_NumericLevel
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ChartTitle,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/title
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ChartTitle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_PlotAreaEx,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/plotArea
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_PlotArea
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_LegendEx,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/legend
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Legend
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Text,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/tx
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Text
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_TextData,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/txData
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_TextData
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_PlotAreaRegion,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/plotAreaRegion
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_PlotAreaRegion
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Axis,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/axis
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Axis
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_AxisTitle,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/title
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_AxisTitle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_PlotSurface,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/plotSurface
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_PlotSurface
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Series,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/series
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Series
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ValueColors,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/valueColors
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ValueColors
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ValueColorPositions,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/valueColorPositions
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ValueColorPositions
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_DataPoint,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/dataPt
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_DataPoint
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_DataLabels,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/dataLabels
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_DataLabels
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_DataId,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/dataId
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_DataId
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_SeriesLayoutProperties,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/layoutPr
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_SeriesLayoutProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_SeriesElementVisibilities,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/visibility
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_SeriesElementVisibilities
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ValueColorEndPosition,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/min
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ValueColorEndPosition
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ValueColorMiddlePosition,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/mid
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ValueColorMiddlePosition
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ExtremeValueColorPosition,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/extremeValue
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ExtremeValueColorPosition
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_NumberColorPosition,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/number
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_NumberColorPosition
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_PercentageColorPosition,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/percent
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_PercentageColorPosition
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_NumberFormat,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/numFmt
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_NumberFormat
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_DataLabelVisibilities,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/visibility
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_DataLabelVisibilities
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(System.String,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/separator
            http://www.w3.org/2001/XMLSchema:String
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_DataLabel,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/dataLabel
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_DataLabel
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_DataLabelHidden,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/dataLabelHidden
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_DataLabelHidden
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ParentLabelLayout,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/parentLabelLayout
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ParentLabelLayout
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_RegionLabelLayout,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/regionLabelLayout
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_RegionLabelLayout
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Aggregation,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/aggregation
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Aggregation
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Binning,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/binning
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Binning
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Geography,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geography
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Geography
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Statistics,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/statistics
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Statistics
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Subtotals,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/subtotals
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Subtotals
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoCache,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoCache
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoCache
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Clear,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/clear
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Clear
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoLocationQueryResults,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoLocationQueryResults
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoLocationQueryResults
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoDataEntityQueryResults,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoDataEntityQueryResults
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoDataEntityQueryResults
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoDataPointToEntityQueryResults,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoDataPointToEntityQueryResults
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoDataPointToEntityQueryResults
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoChildEntitiesQueryResults,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoChildEntitiesQueryResults
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoChildEntitiesQueryResults
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoLocationQueryResult,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoLocationQueryResult
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoLocationQueryResult
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoLocationQuery,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoLocationQuery
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoLocationQuery
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoLocations,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoLocations
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoLocations
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoLocation,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoLocation
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoLocation
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Address,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/address
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Address
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoDataEntityQueryResult,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoDataEntityQueryResult
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoDataEntityQueryResult
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoDataEntityQuery,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoDataEntityQuery
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoDataEntityQuery
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoData,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoData
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoData
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoPolygons,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoPolygons
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoPolygons
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Copyrights,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/copyrights
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Copyrights
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoPolygon,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoPolygon
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoPolygon
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoDataPointToEntityQueryResult,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoDataPointToEntityQueryResult
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoDataPointToEntityQueryResult
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoDataPointQuery,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoDataPointQuery
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoDataPointQuery
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoDataPointToEntityQuery,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoDataPointToEntityQuery
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoDataPointToEntityQuery
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoChildEntitiesQueryResult,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoChildEntitiesQueryResult
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoChildEntitiesQueryResult
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoChildEntitiesQuery,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoChildEntitiesQuery
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoChildEntitiesQuery
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoChildEntities,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoChildEntities
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoChildEntities
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoChildTypes,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoChildTypes
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoChildTypes
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ST_EntityType,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/entityType
            http://schemas.microsoft.com/office/drawing/2014/chartex:ST_EntityType
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_GeoHierarchyEntity,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/geoHierarchyEntity
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_GeoHierarchyEntity
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_CategoryAxisScaling,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/catScaling
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_CategoryAxisScaling
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_ValueAxisScaling,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/valScaling
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_ValueAxisScaling
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_AxisUnits,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/units
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_AxisUnits
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_Gridlines,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/majorGridlines
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Gridlines
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_TickMarks,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/majorTickMarks
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_TickMarks
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_TickLabels,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/tickLabels
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_TickLabels
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_AxisUnitsLabel,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/unitsLabel
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_AxisUnitsLabel
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_FormatOverride,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/fmtOvr
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_FormatOverride
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_HeaderFooter,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/headerFooter
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_HeaderFooter
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_PageMargins,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/pageMargins
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_PageMargins
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_PageSetup,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/pageSetup
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_PageSetup
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.CT_Extension,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex/ext
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_Extension
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.ChartExExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.ChartEx.CT_StringLevel,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2014/chartex:CT_StringLevel
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.ChartAttributes">
            <summary>
            Exposes a constant for each XML attribute in the
            'http://schemas.openxmlformats.org/drawingml/2006/chart' namespace.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_BarChartShared.BarDir">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_BarDir </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_BarChartShared.Grouping">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_BarGrouping </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_BarChartShared.VaryColors">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_BarChartShared.Ser">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_BarSer </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_BarChartShared.DLbls">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DLbls </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_PieChartShared.VaryColors">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_PieChartShared.Ser">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_PieSer </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_PieChartShared.DLbls">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DLbls </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_DLblShared.NumFmt">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_NumFmt </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_DLblShared.SpPr">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_ShapeProperties </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_DLblShared.TxPr">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBody_DML </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_DLblShared.DLblPos">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DLblPos </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_DLblShared.ShowLegendKey">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_DLblShared.ShowVal">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_DLblShared.ShowCatName">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_DLblShared.ShowSerName">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_DLblShared.ShowPercent">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_DLblShared.ShowBubbleSize">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_DLblShared.Separator">
            <summary> http://www.w3.org/2001/XMLSchema:String </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.Group_DLbl.Layout">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Layout </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.Group_DLbl.Tx">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Tx </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.Group_DLbls.ShowLeaderLines">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.Group_DLbls.LeaderLines">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ChartLines </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_LegendEntryData.TxPr">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBody_DML </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_AxShared.AxId">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_UnsignedInt </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_AxShared.Scaling">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Scaling </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_AxShared.Delete">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_AxShared.AxPos">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_AxPos </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_AxShared.MajorGridlines">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ChartLines </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_AxShared.MinorGridlines">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ChartLines </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_AxShared.Title">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Title </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_AxShared.NumFmt">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_NumFmt </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_AxShared.MajorTickMark">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_TickMark </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_AxShared.MinorTickMark">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_TickMark </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_AxShared.TickLblPos">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_TickLblPos </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_AxShared.SpPr">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_ShapeProperties </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_AxShared.TxPr">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBody_DML </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_AxShared.CrossAx">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_UnsignedInt </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_AxShared.Crosses">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Crosses </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_AxShared.CrossesAt">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Double </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_SerShared.Idx">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_UnsignedInt </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_SerShared.Order">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_UnsignedInt </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_SerShared.Tx">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_SerTx </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_SerShared.SpPr">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_ShapeProperties </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_AreaChartShared.Grouping">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Grouping </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_AreaChartShared.VaryColors">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_AreaChartShared.Ser">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_AreaSer </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_AreaChartShared.DLbls">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DLbls </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_AreaChartShared.DropLines">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ChartLines </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_SurfaceChartShared.Wireframe">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_SurfaceChartShared.Ser">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_SurfaceSer </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_SurfaceChartShared.BandFmts">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_BandFmts </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_LineChartShared.Grouping">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Grouping </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_LineChartShared.VaryColors">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Boolean </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_LineChartShared.Ser">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LineSer </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_LineChartShared.DLbls">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DLbls </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.EG_LineChartShared.DropLines">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ChartLines </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ChartSpace">
             <summary>
            
             CT_ChartSpace
            
            	CHILD ELEMENTS (14):
            		date1904
            		lang
            		roundedCorners
            		style
            		clrMapOvr
            		pivotSource
            		protection
            		chart
            		spPr
            		txPr
            		externalData
            		printSettings
            		userShapes
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PageSetup_Chart">
             <summary>
            
             CT_PageSetup
            
            	ATTRIBUTES (9):
            		paperSize
            		firstPageNumber
            		orientation
            		blackAndWhite
            		draft
            		useFirstPageNumber
            		horizontalDpi
            		verticalDpi
            		copies
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PageMargins_Chart">
             <summary>
            
             CT_PageMargins
            
            	ATTRIBUTES (6):
            		l
            		r
            		t
            		b
            		header
            		footer
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_HeaderFooter_Chart">
             <summary>
            
             CT_HeaderFooter
            
            	CHILD ELEMENTS (6):
            		oddHeader
            		oddFooter
            		evenHeader
            		evenFooter
            		firstHeader
            		firstFooter
            
            	ATTRIBUTES (3):
            		alignWithMargins
            		differentOddEven
            		differentFirst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PrintSettings">
             <summary>
            
             CT_PrintSettings
            
            	CHILD ELEMENTS (4):
            		headerFooter
            		pageMargins
            		pageSetup
            		legacyDrawingHF
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ExternalData">
             <summary>
            
             CT_ExternalData
            
            	CHILD ELEMENTS (1):
            		autoUpdate
            
            	ATTRIBUTES (1):
            		
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_DispBlanksAs">
             <summary>
            
             CT_DispBlanksAs
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_LegendEntry">
             <summary>
            
             CT_LegendEntry
            
            	CHILD ELEMENTS (4):
            		idx
            		delete
            		txPr
            		extLst
            </summary>
             <summary>
            
             CT_LegendEntry
            
            	CHILD ELEMENTS (4):
            		idx
            		delete
            		txPr
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_LegendEntry.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_LegendEntryData
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_LegendPos">
             <summary>
            
             CT_LegendPos
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Legend">
             <summary>
            
             CT_Legend
            
            	CHILD ELEMENTS (7):
            		legendPos
            		legendEntry
            		layout
            		overlay
            		spPr
            		txPr
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Layout">
             <summary>
            
             CT_Layout
            
            	CHILD ELEMENTS (2):
            		manualLayout
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ManualLayout">
             <summary>
            
             CT_ManualLayout
            
            	CHILD ELEMENTS (10):
            		layoutTarget
            		xMode
            		yMode
            		wMode
            		hMode
            		x
            		y
            		w
            		h
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_LayoutTarget">
             <summary>
            
             CT_LayoutTarget
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_LayoutMode">
             <summary>
            
             CT_LayoutMode
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_DTable">
             <summary>
            
             CT_DTable
            
            	CHILD ELEMENTS (7):
            		showHorzBorder
            		showVertBorder
            		showOutline
            		showKeys
            		spPr
            		txPr
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_SerAx">
             <summary>
            
             CT_SerAx
            
            	CHILD ELEMENTS (19):
            		axId
            		scaling
            		delete
            		axPos
            		majorGridlines
            		minorGridlines
            		title
            		numFmt
            		majorTickMark
            		minorTickMark
            		tickLblPos
            		spPr
            		txPr
            		crossAx
            		crosses
            		crossesAt
            		tickLblSkip
            		tickMarkSkip
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_SerAx.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_AxShared
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Scaling">
             <summary>
            
             CT_Scaling
            
            	CHILD ELEMENTS (5):
            		logBase
            		orientation
            		max
            		min
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_LogBase">
             <summary>
            
             CT_LogBase
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Orientation">
             <summary>
            
             CT_Orientation
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_AxPos">
             <summary>
            
             CT_AxPos
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ChartLines">
             <summary>
            
             CT_ChartLines
            
            	CHILD ELEMENTS (1):
            		spPr
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Title">
             <summary>
            
             CT_Title
            
            	CHILD ELEMENTS (6):
            		tx
            		layout
            		overlay
            		spPr
            		txPr
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Tx">
             <summary>
            
             CT_Tx
            
            	CHILD ELEMENTS (2):
            		strRef
            		rich
            </summary>
             <summary>
            
             CT_Tx
            
            	CHILD ELEMENTS (2):
            		strRef
            		rich
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_StrRef">
             <summary>
            
             CT_StrRef
            
            	CHILD ELEMENTS (3):
            		f
            		strCache
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_StrData">
             <summary>
            
             CT_StrData
            
            	CHILD ELEMENTS (3):
            		ptCount
            		pt
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_StrVal">
             <summary>
            
             CT_StrVal
            
            	CHILD ELEMENTS (1):
            		v
            
            	ATTRIBUTES (1):
            		idx
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_NumFmt_Chart">
             <summary>
            
             CT_NumFmt
            
            	ATTRIBUTES (2):
            		formatCode
            		sourceLinked
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_TickMark">
             <summary>
            
             CT_TickMark
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_TickLblPos">
             <summary>
            
             CT_TickLblPos
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Crosses">
             <summary>
            
             CT_Crosses
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Skip">
             <summary>
            
             CT_Skip
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_TimeUnit">
             <summary>
            
             CT_TimeUnit
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_DateAx">
             <summary>
            
             CT_DateAx
            
            	CHILD ELEMENTS (24):
            		axId
            		scaling
            		delete
            		axPos
            		majorGridlines
            		minorGridlines
            		title
            		numFmt
            		majorTickMark
            		minorTickMark
            		tickLblPos
            		spPr
            		txPr
            		crossAx
            		crosses
            		crossesAt
            		auto
            		lblOffset
            		baseTimeUnit
            		majorUnit
            		majorTimeUnit
            		minorUnit
            		minorTimeUnit
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_DateAx.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_AxShared
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_LblOffset">
             <summary>
            
             CT_LblOffset
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_AxisUnit">
             <summary>
            
             CT_AxisUnit
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_LblAlgn">
             <summary>
            
             CT_LblAlgn
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_CatAx">
             <summary>
            
             CT_CatAx
            
            	CHILD ELEMENTS (23):
            		axId
            		scaling
            		delete
            		axPos
            		majorGridlines
            		minorGridlines
            		title
            		numFmt
            		majorTickMark
            		minorTickMark
            		tickLblPos
            		spPr
            		txPr
            		crossAx
            		crosses
            		crossesAt
            		auto
            		lblAlgn
            		lblOffset
            		tickLblSkip
            		tickMarkSkip
            		noMultiLvlLbl
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_CatAx.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_AxShared
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_DispUnitsLbl">
             <summary>
            
             CT_DispUnitsLbl
            
            	CHILD ELEMENTS (4):
            		layout
            		tx
            		spPr
            		txPr
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_BuiltInUnit">
             <summary>
            
             CT_BuiltInUnit
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_DispUnits">
             <summary>
            
             CT_DispUnits
            
            	CHILD ELEMENTS (4):
            		custUnit
            		builtInUnit
            		dispUnitsLbl
            		extLst
            </summary>
             <summary>
            
             CT_DispUnits
            
            	CHILD ELEMENTS (4):
            		custUnit
            		builtInUnit
            		dispUnitsLbl
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_CrossBetween">
             <summary>
            
             CT_CrossBetween
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ValAx">
             <summary>
            
             CT_ValAx
            
            	CHILD ELEMENTS (21):
            		axId
            		scaling
            		delete
            		axPos
            		majorGridlines
            		minorGridlines
            		title
            		numFmt
            		majorTickMark
            		minorTickMark
            		tickLblPos
            		spPr
            		txPr
            		crossAx
            		crosses
            		crossesAt
            		crossBetween
            		majorUnit
            		minorUnit
            		dispUnits
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ValAx.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_AxShared
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_SizeRepresents">
             <summary>
            
             CT_SizeRepresents
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_BubbleScale">
             <summary>
            
             CT_BubbleScale
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_BubbleSer">
             <summary>
            
             CT_BubbleSer
            
            	CHILD ELEMENTS (14):
            		idx
            		order
            		tx
            		spPr
            		invertIfNegative
            		dPt
            		dLbls
            		trendline
            		errBars
            		xVal
            		yVal
            		bubbleSize
            		bubble3D
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_BubbleSer.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_SerShared
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_SerTx">
             <summary>
            
             CT_SerTx
            
            	CHILD ELEMENTS (2):
            		strRef
            		v
            </summary>
             <summary>
            
             CT_SerTx
            
            	CHILD ELEMENTS (2):
            		strRef
            		v
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_DPt">
             <summary>
            
             CT_DPt
            
            	CHILD ELEMENTS (8):
            		idx
            		invertIfNegative
            		marker
            		bubble3D
            		explosion
            		spPr
            		pictureOptions
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Marker_Chart">
             <summary>
            
             CT_Marker
            
            	CHILD ELEMENTS (4):
            		symbol
            		size
            		spPr
            		extLst
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Marker_Chart.ReadBoolean(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean@)">
            <summary>
            Attempts to read an attribute name 'val'; returns true
            if it succeeds in doing that, otherwise returns false,
            indicating that it is really a CT_Marker.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_MarkerStyle">
             <summary>
            
             CT_MarkerStyle
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_MarkerSize">
             <summary>
            
             CT_MarkerSize
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PictureOptions">
             <summary>
            
             CT_PictureOptions
            
            	CHILD ELEMENTS (5):
            		applyToFront
            		applyToSides
            		applyToEnd
            		pictureFormat
            		pictureStackUnit
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PictureFormat">
             <summary>
            
             CT_PictureFormat
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PictureStackUnit">
             <summary>
            
             CT_PictureStackUnit
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_DLblPos">
             <summary>
            
             CT_DLblPos
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Trendline">
             <summary>
            
             CT_Trendline
            
            	CHILD ELEMENTS (12):
            		name
            		spPr
            		trendlineType
            		order
            		period
            		forward
            		backward
            		intercept
            		dispRSqr
            		dispEq
            		trendlineLbl
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_TrendlineType">
             <summary>
            
             CT_TrendlineType
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Order">
             <summary>
            
             CT_Order
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Period">
             <summary>
            
             CT_Period
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_TrendlineLbl">
             <summary>
            
             CT_TrendlineLbl
            
            	CHILD ELEMENTS (6):
            		layout
            		tx
            		numFmt
            		spPr
            		txPr
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ErrBars">
             <summary>
            
             CT_ErrBars
            
            	CHILD ELEMENTS (9):
            		errDir
            		errBarType
            		errValType
            		noEndCap
            		plus
            		minus
            		val
            		spPr
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ErrDir">
             <summary>
            
             CT_ErrDir
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ErrBarType">
             <summary>
            
             CT_ErrBarType
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ErrValType">
             <summary>
            
             CT_ErrValType
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_NumDataSource">
             <summary>
            
             CT_NumDataSource
            
            	CHILD ELEMENTS (2):
            		numRef
            		numLit
            </summary>
             <summary>
            
             CT_NumDataSource
            
            	CHILD ELEMENTS (2):
            		numRef
            		numLit
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_NumData">
             <summary>
            
             CT_NumData
            
            	CHILD ELEMENTS (4):
            		formatCode
            		ptCount
            		pt
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_NumVal">
             <summary>
            
             CT_NumVal
            
            	CHILD ELEMENTS (1):
            		v
            
            	ATTRIBUTES (2):
            		idx
            		formatCode
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_NumRef">
             <summary>
            
             CT_NumRef
            
            	CHILD ELEMENTS (3):
            		f
            		numCache
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_AxDataSource">
             <summary>
            
             CT_AxDataSource
            
            	CHILD ELEMENTS (5):
            		multiLvlStrRef
            		numRef
            		numLit
            		strRef
            		strLit
            </summary>
             <summary>
            
             CT_AxDataSource
            
            	CHILD ELEMENTS (5):
            		multiLvlStrRef
            		numRef
            		numLit
            		strRef
            		strLit
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_MultiLvlStrRef">
             <summary>
            
             CT_MultiLvlStrRef
            
            	CHILD ELEMENTS (3):
            		f
            		multiLvlStrCache
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_BubbleChart">
             <summary>
            
             CT_BubbleChart
            
            	CHILD ELEMENTS (9):
            		varyColors
            		ser
            		dLbls
            		bubble3D
            		bubbleScale
            		showNegBubbles
            		sizeRepresents
            		axId
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Surface3DChart">
             <summary>
            
             CT_Surface3DChart
            
            	CHILD ELEMENTS (5):
            		wireframe
            		ser
            		bandFmts
            		axId
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Surface3DChart.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_SurfaceChartShared
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_SurfaceSer">
             <summary>
            
             CT_SurfaceSer
            
            	CHILD ELEMENTS (7):
            		idx
            		order
            		tx
            		spPr
            		cat
            		val
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_SurfaceSer.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_SerShared
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_BandFmt">
             <summary>
            
             CT_BandFmt
            
            	CHILD ELEMENTS (2):
            		idx
            		spPr
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_SurfaceChart">
             <summary>
            
             CT_SurfaceChart
            
            	CHILD ELEMENTS (5):
            		wireframe
            		ser
            		bandFmts
            		axId
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_SurfaceChart.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_SurfaceChartShared
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_SecondPieSize">
             <summary>
            
             CT_SecondPieSize
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_SplitType">
             <summary>
            
             CT_SplitType
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_OfPieType">
             <summary>
            
             CT_OfPieType
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_OfPieChart">
             <summary>
            
             CT_OfPieChart
            
            	CHILD ELEMENTS (11):
            		ofPieType
            		varyColors
            		ser
            		dLbls
            		gapWidth
            		splitType
            		splitPos
            		custSplit
            		secondPieSize
            		serLines
            		extLst
            </summary>
             <summary>
            
             CT_OfPieChart
            
            	CHILD ELEMENTS (11):
            		ofPieType
            		varyColors
            		ser
            		dLbls
            		gapWidth
            		splitType
            		splitPos
            		custSplit
            		secondPieSize
            		serLines
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_OfPieChart.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_PieChartShared
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PieSer">
             <summary>
            
             CT_PieSer
            
            	CHILD ELEMENTS (10):
            		idx
            		order
            		tx
            		spPr
            		explosion
            		dPt
            		dLbls
            		cat
            		val
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PieSer.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_SerShared
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_GapAmount">
             <summary>
            
             CT_GapAmount
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Bar3DChart">
             <summary>
            
             CT_Bar3DChart
            
            	CHILD ELEMENTS (10):
            		barDir
            		grouping
            		varyColors
            		ser
            		dLbls
            		gapWidth
            		gapDepth
            		shape
            		axId
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Bar3DChart.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_BarChartShared
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_BarDir">
             <summary>
            
             CT_BarDir
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_BarGrouping">
             <summary>
            
             CT_BarGrouping
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_BarSer">
             <summary>
            
             CT_BarSer
            
            	CHILD ELEMENTS (14):
            		idx
            		order
            		tx
            		spPr
            		invertIfNegative
            		pictureOptions
            		dPt
            		dLbls
            		trendline
            		errBars
            		cat
            		val
            		shape
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_BarSer.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_SerShared
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Shape_Chart">
             <summary>
            
             CT_Shape
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Overlap">
             <summary>
            
             CT_Overlap
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_BarChart">
             <summary>
            
             CT_BarChart
            
            	CHILD ELEMENTS (10):
            		barDir
            		grouping
            		varyColors
            		ser
            		dLbls
            		gapWidth
            		overlap
            		serLines
            		axId
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_BarChart.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_BarChartShared
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_HoleSize">
             <summary>
            
             CT_HoleSize
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_DoughnutChart">
             <summary>
            
             CT_DoughnutChart
            
            	CHILD ELEMENTS (6):
            		varyColors
            		ser
            		dLbls
            		firstSliceAng
            		holeSize
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_DoughnutChart.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_PieChartShared
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_FirstSliceAng">
             <summary>
            
             CT_FirstSliceAng
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Pie3DChart">
             <summary>
            
             CT_Pie3DChart
            
            	CHILD ELEMENTS (4):
            		varyColors
            		ser
            		dLbls
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Pie3DChart.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_PieChartShared
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PieChart">
             <summary>
            
             CT_PieChart
            
            	CHILD ELEMENTS (5):
            		varyColors
            		ser
            		dLbls
            		firstSliceAng
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PieChart.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_PieChartShared
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ScatterSer">
             <summary>
            
             CT_ScatterSer
            
            	CHILD ELEMENTS (13):
            		idx
            		order
            		tx
            		spPr
            		marker
            		dPt
            		dLbls
            		trendline
            		errBars
            		xVal
            		yVal
            		smooth
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ScatterSer.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_SerShared
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ScatterStyle">
             <summary>
            
             CT_ScatterStyle
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ScatterChart">
             <summary>
            
             CT_ScatterChart
            
            	CHILD ELEMENTS (6):
            		scatterStyle
            		varyColors
            		ser
            		dLbls
            		axId
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_RadarSer">
             <summary>
            
             CT_RadarSer
            
            	CHILD ELEMENTS (10):
            		idx
            		order
            		tx
            		spPr
            		marker
            		dPt
            		dLbls
            		cat
            		val
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_RadarSer.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_SerShared
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_RadarStyle">
             <summary>
            
             CT_RadarStyle
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_RadarChart">
             <summary>
            
             CT_RadarChart
            
            	CHILD ELEMENTS (6):
            		radarStyle
            		varyColors
            		ser
            		dLbls
            		axId
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_StockChart">
             <summary>
            
             CT_StockChart
            
            	CHILD ELEMENTS (7):
            		ser
            		dLbls
            		dropLines
            		hiLowLines
            		upDownBars
            		axId
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_LineSer">
             <summary>
            
             CT_LineSer
            
            	CHILD ELEMENTS (13):
            		idx
            		order
            		tx
            		spPr
            		marker
            		dPt
            		dLbls
            		trendline
            		errBars
            		cat
            		val
            		smooth
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_LineSer.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_SerShared
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_UpDownBars">
             <summary>
            
             CT_UpDownBars
            
            	CHILD ELEMENTS (4):
            		gapWidth
            		upBars
            		downBars
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_UpDownBar">
             <summary>
            
             CT_UpDownBar
            
            	CHILD ELEMENTS (1):
            		spPr
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Line3DChart">
             <summary>
            
             CT_Line3DChart
            
            	CHILD ELEMENTS (8):
            		grouping
            		varyColors
            		ser
            		dLbls
            		dropLines
            		gapDepth
            		axId
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Line3DChart.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_LineChartShared
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Grouping">
             <summary>
            
             CT_Grouping
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_LineChart">
             <summary>
            
             CT_LineChart
            
            	CHILD ELEMENTS (11):
            		grouping
            		varyColors
            		ser
            		dLbls
            		dropLines
            		hiLowLines
            		upDownBars
            		marker
            		smooth
            		axId
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_LineChart.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_LineChartShared
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Area3DChart">
             <summary>
            
             CT_Area3DChart
            
            	CHILD ELEMENTS (8):
            		grouping
            		varyColors
            		ser
            		dLbls
            		dropLines
            		gapDepth
            		axId
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Area3DChart.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_AreaChartShared
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_AreaSer">
             <summary>
            
             CT_AreaSer
            
            	CHILD ELEMENTS (12):
            		idx
            		order
            		tx
            		spPr
            		pictureOptions
            		dPt
            		dLbls
            		trendline
            		errBars
            		cat
            		val
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_AreaSer.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_SerShared
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_AreaChart">
             <summary>
            
             CT_AreaChart
            
            	CHILD ELEMENTS (7):
            		grouping
            		varyColors
            		ser
            		dLbls
            		dropLines
            		axId
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_AreaChart.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:EG_AreaChartShared
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Surface">
             <summary>
            
             CT_Surface
            
            	CHILD ELEMENTS (4):
            		thickness
            		spPr
            		pictureOptions
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Perspective">
             <summary>
            
             CT_Perspective
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_DepthPercent">
             <summary>
            
             CT_DepthPercent
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_RotY">
             <summary>
            
             CT_RotY
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_HPercent">
             <summary>
            
             CT_HPercent
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_RotX">
             <summary>
            
             CT_RotX
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_View3D">
             <summary>
            
             CT_View3D
            
            	CHILD ELEMENTS (7):
            		rotX
            		hPercent
            		rotY
            		depthPercent
            		rAngAx
            		perspective
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PivotFmt">
             <summary>
            
             CT_PivotFmt
            
            	CHILD ELEMENTS (6):
            		idx
            		spPr
            		txPr
            		marker
            		dLbl
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Chart">
             <summary>
            
             CT_Chart
            
            	CHILD ELEMENTS (13):
            		title
            		autoTitleDeleted
            		pivotFmts
            		view3D
            		floor
            		sideWall
            		backWall
            		plotArea
            		legend
            		plotVisOnly
            		dispBlanksAs
            		showDLblsOverMax
            		extLst
            </summary>
             <summary>
            
             CT_Chart
            
            	CHILD ELEMENTS (13):
            		title
            		autoTitleDeleted
            		pivotFmts
            		view3D
            		floor
            		sideWall
            		backWall
            		plotArea
            		legend
            		plotVisOnly
            		dispBlanksAs
            		showDLblsOverMax
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Protection">
             <summary>
            
             CT_Protection
            
            	CHILD ELEMENTS (5):
            		chartObject
            		data
            		formatting
            		selection
            		userInterface
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PivotSource">
             <summary>
            
             CT_PivotSource
            
            	CHILD ELEMENTS (3):
            		name
            		fmtId
            		extLst
            </summary>
             <summary>
            
             CT_PivotSource
            
            	CHILD ELEMENTS (3):
            		name
            		fmtId
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Style">
             <summary>
            
             CT_Style
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_TextLanguageID">
             <summary>
            
             CT_TextLanguageID
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Lvl">
             <summary>
            
             CT_Lvl
            
            	CHILD ELEMENTS (1):
            		pt
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_CustSplit">
             <summary>
            
             CT_CustSplit
            
            	CHILD ELEMENTS (1):
            		secondPiePt
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_BandFmts">
             <summary>
            
             CT_BandFmts
            
            	CHILD ELEMENTS (1):
            		bandFmt
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PivotFmts">
             <summary>
            
             CT_PivotFmts
            
            	CHILD ELEMENTS (1):
            		pivotFmt
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_DLbls">
             <summary>
            
             CT_DLbls
            
            	CHILD ELEMENTS (16):
            		dLbl
            		delete
            		numFmt
            		spPr
            		txPr
            		dLblPos
            		showLegendKey
            		showVal
            		showCatName
            		showSerName
            		showPercent
            		showBubbleSize
            		separator
            		showLeaderLines
            		leaderLines
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_DLbls.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:Group_DLbls
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_DLbl">
             <summary>
            
             CT_DLbl
            
            	CHILD ELEMENTS (16):
            		idx
            		delete
            		layout
            		tx
            		numFmt
            		spPr
            		txPr
            		dLblPos
            		showLegendKey
            		showVal
            		showCatName
            		showSerName
            		showPercent
            		showBubbleSize
            		separator
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_DLbl.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/chart:Group_DLbl
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea">
             <summary>
            
             CT_PlotArea
            
            	CHILD ELEMENTS (24):
            		layout
            		areaChart
            		area3DChart
            		lineChart
            		line3DChart
            		stockChart
            		radarChart
            		scatterChart
            		pieChart
            		pie3DChart
            		doughnutChart
            		barChart
            		bar3DChart
            		ofPieChart
            		surfaceChart
            		surface3DChart
            		bubbleChart
            		valAx
            		catAx
            		dateAx
            		serAx
            		dTable
            		spPr
            		extLst
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.Layout">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Layout </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.AreaChart">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_AreaChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.Area3DChart">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Area3DChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.LineChart">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LineChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.Line3DChart">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Line3DChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.StockChart">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_StockChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.RadarChart">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_RadarChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.ScatterChart">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ScatterChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.PieChart">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_PieChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.Pie3DChart">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Pie3DChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.DoughnutChart">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DoughnutChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.BarChart">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_BarChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.Bar3DChart">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Bar3DChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.OfPieChart">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_OfPieChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.SurfaceChart">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_SurfaceChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.Surface3DChart">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Surface3DChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.BubbleChart">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_BubbleChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.AreaChart2">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_AreaChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.LineChart2">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LineChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.RadarChart2">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_RadarChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.RadarChart3">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_RadarChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.RadarChart4">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_RadarChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.ScatterChart2">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ScatterChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.ScatterChart3">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ScatterChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.ScatterChart4">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ScatterChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.BarChart2">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_BarChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.PieChart2">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_PieChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.DoughnutChart2">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DoughnutChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.OfPieChart2">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_OfPieChart </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.Axes">
            <summary>
            CT_ValAx
            CT_CatAx
            CT_DateAx
            CT_SerAx
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.DTable">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DTable </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.SpPr">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_ShapeProperties </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PlotArea.ExtLst">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ExtensionList </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_MultiLvlStrData">
             <summary>
            
             CT_MultiLvlStrData
            
            	CHILD ELEMENTS (3):
            		ptCount
            		lvl
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.IAxis">
            <summary>
            Implemented by:
                CT_CatAx
                CT_ValAx
                CT_SerAx
                CT_DateAx
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.IAxis.TickMarkSkipValue">
            <summary>
            Renamed from TickMarkSkip because there is a
            public property of that same name on one of the
            classes that implement this interface and the JS
            translator can't handle that.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartUtils.ToFormattedString(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Tx,Infragistics.Documents.Excel.IFormattedStringOwner)">
            <summary>
            CT_Tx -> FormattedString
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartUtils.ToFormattedString(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBody_DML,Infragistics.Documents.Excel.IFormattedStringOwner)">
            <summary>
            CT_Tx -> FormattedString
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartUtils.GetTypeface(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextCharacterProperties_DML)">
            <summary>
            Returns the typeface of ONLY ONE of the following:
            Latin, EastAsia, ComplexScript, Symbol, evaluated in that
            order. This is because we only support one typeface on our
            FormattedStringFont class.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartUtils.AllSeriesHaveMarkers(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.IChart)">
            <summary>
            Returns true if all series have an explicit setting for
            a marker and that setting is not 'none'.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartUtils.AllSeriesHaveNoMarkers(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.IChart)">
            <summary>
            Returns true if all series have an explicit setting for
            a marker and that setting is 'none'.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.ToBoolean(Infragistics.Documents.Excel.Charts.ReadingOrder)">
            <summary>
            Returns the boolean value of the specified ReadingOrder:
                ReadingOrder.Context -> null
                ReadingOrder.RightToLeft -> true
                ReadingOrder.LeftToRight -> false
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_LblAlgn,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/lblAlgn
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LblAlgn
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_LblOffset,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/lblOffset
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LblOffset
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Skip,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/tickLblSkip
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Skip
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_DispUnits,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/dispUnits
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DispUnits
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_CrossBetween,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/crossBetween
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_CrossBetween
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_AxisUnit,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/majorUnit
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_AxisUnit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_BuiltInUnit,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/builtInUnit
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_BuiltInUnit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_BarSer,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/ser
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_BarSer
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_LineSer,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/ser
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LineSer
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PieSer,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/ser
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_PieSer
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_AreaSer,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/ser
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_AreaSer
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_SurfaceSer,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/ser
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_SurfaceSer
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ScatterSer,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/ser
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ScatterSer
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_DPt,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/dPt
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DPt
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PictureOptions,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/pictureOptions
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_PictureOptions
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Layout,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/layout
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Layout
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ManualLayout,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/manualLayout
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ManualLayout
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_LayoutTarget,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/layoutTarget
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LayoutTarget
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_LayoutMode,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/xMode
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LayoutMode
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Tx,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/tx
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Tx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_StrRef,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/strRef
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_StrRef
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_StrData,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/strCache
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_StrData
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_StrVal,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/pt
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_StrVal
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_DispUnitsLbl,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/dispUnitsLbl
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DispUnitsLbl
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ScatterChart,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/scatterChart
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ScatterChart
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ScatterStyle,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/scatterStyle
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ScatterStyle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_SerTx,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/tx
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_SerTx
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_DLbls,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/dLbls
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DLbls
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Trendline,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/trendline
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Trendline
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Order,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Order
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ErrBars,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/errBars
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ErrBars
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_AxDataSource,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/cat
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_AxDataSource
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_NumDataSource,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/val
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_NumDataSource
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Shape_Chart,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/shape
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Shape
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_CustomGeometry2D,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/custGeom
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_CustomGeometry2D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_BlipFillProperties_DML,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blipFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_BlipFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_PatternFillProperties,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/pattFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PatternFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_EffectList,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/effectLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_EffectContainer,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/effectDag
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectContainer
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Scene3D,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/scene3d
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Scene3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Shape3D,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/sp3d
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Shape3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_OfficeArtExtensionList,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/extLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_OfficeArtExtensionList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_GeomGuideList,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/avLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GeomGuideList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_ComplementTransform,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/comp
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ComplementTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_InverseTransform,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/inv
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_InverseTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_GrayscaleTransform,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gray
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GrayscaleTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GammaTransform,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gamma
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GammaTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_InverseGammaTransform,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/invGamma
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_InverseGammaTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Blip_DML,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blip
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Blip
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AlphaBiLevelEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaBiLevel
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaBiLevelEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AlphaCeilingEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaCeiling
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaCeilingEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AlphaFloorEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaFloor
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaFloorEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AlphaInverseEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaInv
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaInverseEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AlphaModulateFixedEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaModFix
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaModulateFixedEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AlphaReplaceEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaRepl
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaReplaceEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_BiLevelEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/biLevel
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_BiLevelEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_BlurEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blur
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_BlurEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_ColorChangeEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/clrChange
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ColorChangeEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_ColorReplaceEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/clrRepl
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ColorReplaceEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_DuotoneEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/duotone
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_DuotoneEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_FillOverlayEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fillOverlay
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_FillOverlayEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GrayscaleEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/grayscl
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GrayscaleEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_HSLEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hsl
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_HSLEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_EffectReference,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/effect
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectReference
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AlphaOutsetEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaOutset
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaOutsetEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_BlendEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blend
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_BlendEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_FillEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_FillEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GlowEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/glow
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GlowEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_InnerShadowEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/innerShdw
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_InnerShadowEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_OuterShadowEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/outerShdw
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_OuterShadowEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_PresetShadowEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/prstShdw
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetShadowEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_ReflectionEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/reflection
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ReflectionEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_RelativeOffsetEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/relOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_RelativeOffsetEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_SoftEdgesEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/softEdge
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SoftEdgesEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_DashStopList,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/custDash
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_DashStopList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_LineJoinRound,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/round
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineJoinRound
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_LineJoinBevel,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bevel
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineJoinBevel
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Camera,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/camera
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Camera
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_LightRig,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lightRig
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LightRig
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Backdrop,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/backdrop
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Backdrop
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_SphereCoords,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/rot
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SphereCoords
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Point3D,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/anchor
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Point3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Vector3D,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/norm
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Vector3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Bevel,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bevelT
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Bevel
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Color_DML,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/extrusionClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PictureFormat,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/pictureFormat
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_PictureFormat
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_PictureStackUnit,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/pictureStackUnit
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_PictureStackUnit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Marker_Chart,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/marker
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Marker
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_MarkerStyle,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/symbol
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_MarkerStyle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_MarkerSize,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/size
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_MarkerSize
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_DLbl,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/dLbl
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DLbl
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_NumFmt_Chart,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/numFmt
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_NumFmt
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBody_DML,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/txPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBody
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_DLblPos,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/dLblPos
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_DLblPos
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ChartLines,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/leaderLines
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ChartLines
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextListStyle_DML,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lstStyle
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextListStyle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextParagraph_DML,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/p
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraph
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_PresetTextShape,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/prstTxWarp
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetTextShape
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextNoAutofit,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/noAutofit
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextNoAutofit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextNormalAutofit,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/normAutofit
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextNormalAutofit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextShapeAutofit,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/spAutoFit
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextShapeAutofit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_FlatText,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/flatTx
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_FlatText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextSpacing,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lnSpc
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextSpacing
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBulletColorFollowText,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buClrTx
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletColorFollowText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBulletSizeFollowText,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buSzTx
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletSizeFollowText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBulletSizePercent,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buSzPct
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletSizePercent
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBulletSizePoint,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buSzPts
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletSizePoint
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBulletTypefaceFollowText,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buFontTx
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletTypefaceFollowText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextNoBullet,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buNone
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextNoBullet
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextAutonumberBullet,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buAutoNum
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextAutonumberBullet
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextCharBullet,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buChar
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextCharBullet
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBlipBullet,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buBlip
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBlipBullet
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextTabStopList,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/tabLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextTabStopList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextSpacingPercent,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/spcPct
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextSpacingPercent
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextSpacingPoint,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/spcPts
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextSpacingPoint
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextTabStop,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/tab
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextTabStop
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextUnderlineLineFollowText,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/uLnTx
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextUnderlineLineFollowText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextUnderlineFillFollowText,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/uFillTx
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextUnderlineFillFollowText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextUnderlineFillGroupWrapper,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/uFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextUnderlineFillGroupWrapper
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextParagraphProperties_DML,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/pPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraphProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextLineBreak,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/br
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextLineBreak
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextField,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fld
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextField
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_TrendlineType,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/trendlineType
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_TrendlineType
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Period,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/period
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Period
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_TrendlineLbl,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/trendlineLbl
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_TrendlineLbl
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ErrDir,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/errDir
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ErrDir
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ErrBarType,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/errBarType
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ErrBarType
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_ErrValType,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/errValType
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ErrValType
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_NumRef,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/numRef
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_NumRef
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_NumVal,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_NumVal
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_NumData,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/numLit
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_NumData
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_MultiLvlStrRef,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/multiLvlStrRef
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_MultiLvlStrRef
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_MultiLvlStrData,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/multiLvlStrCache
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_MultiLvlStrData
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Lvl,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/lvl
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Lvl
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Scaling,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/scaling
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Scaling
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_LogBase,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/logBase
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_LogBase
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Orientation,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/orientation
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Orientation
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_AxPos,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/axPos
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_AxPos
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Title,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/title
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Title
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_TickMark,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/majorTickMark
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_TickMark
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_TickLblPos,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/tickLblPos
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_TickLblPos
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Crosses,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/crosses
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Crosses
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_Grouping,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/grouping
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Grouping
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_BandFmts,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/bandFmts
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_BandFmts
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_BandFmt,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/bandFmt
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_BandFmt
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.CT_TimeUnit,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart/majorTimeUnit
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_TimeUnit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.CT_ExtensionList,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_ExtensionList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.DMLChartExtensions.Save(System.Collections.Generic.List{Infragistics.Documents.Excel.Serialization.XLSX.CT_Extension},Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/chart:CT_Extension
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart.IChart">
            <summary>
            Implemented by:
                CT_AreaChart
                CT_Area3DChart
                CT_LineChart
                CT_Line3DChart
                CT_StockChart
                CT_RadarChart
                CT_ScatterChart
                CT_PieChart
                CT_Pie3DChart
                CT_DoughnutChart
                CT_BarChart
                CT_Bar3DChart
                CT_OfPieChart
                CT_SurfaceChart
                CT_Surface3DChart
                CT_BubbleChart
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart2012.CT_FullRef">
             <summary>
            
             CT_FullRef
            
            	CHILD ELEMENTS (1):
            		sqref
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart2012.CT_LevelRef">
             <summary>
            
             CT_LevelRef
            
            	CHILD ELEMENTS (1):
            		sqref
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart2012.CT_FormulaRef">
             <summary>
            
             CT_FormulaRef
            
            	CHILD ELEMENTS (1):
            		sqref
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart2012.CT_FilteredCategoryTitle">
             <summary>
            
             CT_FilteredCategoryTitle
            
            	CHILD ELEMENTS (1):
            		cat
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart2012.CT_FilteredAreaSer">
             <summary>
            
             CT_FilteredAreaSer
            
             *** INVALID TYPE ***
             The associated XML type was not properly parsed.
             The properties of this class were generated manually
             from schema metadata, and may not be valid.
            
            
            	CHILD ELEMENTS (1):
            		ser
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart2012.CT_FilteredBarSer">
             <summary>
            
             CT_FilteredBarSer
            
             *** INVALID TYPE ***
             The associated XML type was not properly parsed.
             The properties of this class were generated manually
             from schema metadata, and may not be valid.
            
            
            	CHILD ELEMENTS (1):
            		ser
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart2012.CT_FilteredBubbleSer">
             <summary>
            
             CT_FilteredBubbleSer
            
             *** INVALID TYPE ***
             The associated XML type was not properly parsed.
             The properties of this class were generated manually
             from schema metadata, and may not be valid.
            
            
            	CHILD ELEMENTS (1):
            		ser
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart2012.CT_FilteredLineSer">
             <summary>
            
             CT_FilteredLineSer
            
            	CHILD ELEMENTS (1):
            		ser
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart2012.CT_FilteredPieSer">
             <summary>
            
             CT_FilteredPieSer
            
            	CHILD ELEMENTS (1):
            		ser
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart2012.CT_FilteredRadarSer">
             <summary>
            
             CT_FilteredRadarSer
            
            	CHILD ELEMENTS (1):
            		ser
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart2012.CT_FilteredScatterSer">
             <summary>
            
             CT_FilteredScatterSer
            
            	CHILD ELEMENTS (1):
            		ser
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart2012.CT_FilteredSurfaceSer">
             <summary>
            
             CT_FilteredSurfaceSer
            
            	CHILD ELEMENTS (1):
            		ser
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart2012.CT_SeriesDataLabelsRange">
             <summary>
            
             CT_SeriesDataLabelsRange
            
            	CHILD ELEMENTS (2):
            		f
            		dlblRangeCache
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart2012.CT_CategoryFilterExceptions">
             <summary>
            
             CT_CategoryFilterExceptions
            
            	CHILD ELEMENTS (1):
            		categoryFilterException
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart2012.CT_CategoryFilterException">
             <summary>
            
             CT_CategoryFilterException
            
            	CHILD ELEMENTS (7):
            		sqref
            		spPr
            		explosion
            		invertIfNegative
            		bubble3D
            		marker
            		dLbl
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart2012.CT_DataLabelFieldTable">
             <summary>
            
             CT_DataLabelFieldTable
            
            	CHILD ELEMENTS (1):
            		dlblFTEntry
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart2012.CT_DataLabelFieldTableEntry">
             <summary>
            
             CT_DataLabelFieldTableEntry
            
            	CHILD ELEMENTS (3):
            		txfldGUID
            		f
            		dlblFieldTableCache
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.Chart2012.CT_FilteredSeriesTitle">
             <summary>
            
             CT_FilteredSeriesTitle
            
             *** INVALID TYPE ***
             The associated XML type was not properly parsed.
             The properties of this class were generated manually
             from schema metadata, and may not be valid.
            
            
            	CHILD ELEMENTS (1):
            		tx
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.SpreadsheetDrawing.CT_Drawing_SpreadsheetDrawing">
             <summary>
            
             CT_Drawing
            
            	CHILD ELEMENTS (3):
            		twoCellAnchor
            		oneCellAnchor
            		absoluteAnchor
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.SpreadsheetDrawing.CT_Drawing_SpreadsheetDrawing.Group">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing:EG_Anchor
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.SpreadsheetDrawing.SpreadsheetDrawingAttributes">
            <summary>
            Exposes a constant for each XML attribute in the
            'http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing' namespace.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.SpreadsheetDrawing.EG_Anchor_SpreadsheetDrawing.TwoCellAnchor">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing:CT_TwoCellAnchor </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.SpreadsheetDrawing.EG_Anchor_SpreadsheetDrawing.OneCellAnchor">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing:CT_OneCellAnchor </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.SpreadsheetDrawing.EG_Anchor_SpreadsheetDrawing.AbsoluteAnchor">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing:CT_AbsoluteAnchor </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_EffectProperties.EffectDag">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectContainer </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_EffectProperties.EffectLst">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectList </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_OfficeArtExtensionList.Ext">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_OfficeArtExtension </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_FillPropertiesBase.GradFill">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_GradientFillProperties </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_FillPropertiesBase.NoFill">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_NoFillProperties </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_FillPropertiesBase.PattFill">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_PatternFillProperties </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_FillPropertiesBase.SolidFill">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_SolidColorFillProperties </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_FillProperties.BlipFill">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_BlipFillProperties </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_FillProperties.GrpFill">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_GroupFillProperties </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ShadeProperties.Lin">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_LinearShadeProperties </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ShadeProperties.Path">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_PathShadeProperties </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.AlphaBiLevel">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaBiLevelEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.AlphaCeiling">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaCeilingEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.AlphaFloor">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaFloorEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.AlphaInv">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaInverseEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.AlphaMod">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaModulateEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.AlphaModFix">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaModulateFixedEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.AlphaOutset">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaOutsetEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.AlphaRepl">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaReplaceEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.BiLevel">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_BiLevelEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.Blend">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_BlendEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.Blur">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_BlurEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.ClrChange">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_ColorChangeEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.ClrRepl">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_ColorReplaceEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.Cont">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectContainer </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.Duotone">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_DuotoneEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.Effect">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectReference </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.Fill">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_FillEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.FillOverlay">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_FillOverlayEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.Glow">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_GlowEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.Grayscl">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_GrayscaleEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.Hsl">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_HSLEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.InnerShdw">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_InnerShadowEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.Lum">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_LuminanceEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.OuterShdw">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_OuterShadowEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.PrstShdw">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetShadowEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.Reflection">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_ReflectionEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.RelOff">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_RelativeOffsetEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.SoftEdge">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_SoftEdgesEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.Tint">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TintEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Effect.Xfrm">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TransformEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Geometry.CustGeom">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_CustomGeometry2D </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Geometry.PrstGeom">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetGeometry2D </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ThemeableFillStyle.Fill">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_FillProperties </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ThemeableFillStyle.FillRef">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_StyleMatrixReference </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ThemeableEffectStyle.Effect">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectProperties </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ThemeableEffectStyle.EffectRef">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_StyleMatrixReference </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ThemeableFontStyles.Font">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_FontCollection </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ThemeableFontStyles.FontRef">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_FontReference </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorChoice_DML.HslClr">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_HslColor </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorChoice_DML.PrstClr">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetColor </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorChoice_DML.SchemeClr">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_SchemeColor </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorChoice_DML.ScrgbClr">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_ScRgbColor </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorChoice_DML.SrgbClr">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_SRgbColor </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorChoice_DML.SysClr">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_SystemColor </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_TextAutofit.NoAutofit">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextNoAutofit </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_TextAutofit.NormAutofit">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextNormalAutofit </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_TextAutofit.SpAutoFit">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextShapeAutofit </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Text3D.FlatTx">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_FlatText </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_Text3D.Sp3d">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_Shape3D </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_FillModeProperties.Stretch">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_StretchInfoProperties </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_FillModeProperties.Tile">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TileInfoProperties </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.Alpha">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositiveFixedPercentage </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.AlphaMod">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositivePercentage </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.AlphaOff">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_FixedPercentage </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.Blue">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.BlueMod">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.BlueOff">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.Comp">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_ComplementTransform </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.Gamma">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_GammaTransform </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.Gray">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_GrayscaleTransform </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.Green">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.GreenMod">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.GreenOff">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.Hue">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositiveFixedAngle </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.HueMod">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositivePercentage </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.HueOff">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_Angle </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.Inv">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_InverseTransform </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.InvGamma">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_InverseGammaTransform </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.Lum">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.LumMod">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.LumOff">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.Red">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.RedMod">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.RedOff">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.Sat">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.SatMod">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.SatOff">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.Shade">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositiveFixedPercentage </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_ColorTransform.Tint">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositiveFixedPercentage </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_LineDashProperties.CustDash">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_DashStopList </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_LineDashProperties.PrstDash">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetLineDashProperties </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_LineJoinProperties.Bevel">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineJoinBevel </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_LineJoinProperties.Miter">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineJoinMiterProperties </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_LineJoinProperties.Round">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineJoinRound </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_TextUnderlineLine.ULn">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineProperties </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_TextUnderlineLine.ULnTx">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextUnderlineLineFollowText </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_TextUnderlineFill.UFill">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextUnderlineFillGroupWrapper </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_TextUnderlineFill.UFillTx">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextUnderlineFillFollowText </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_TextBulletColor.BuClrTx">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletColorFollowText </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_TextBulletColor.BuClr">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_TextBulletSize.BuSzTx">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletSizeFollowText </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_TextBulletSize.BuSzPct">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletSizePercent </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_TextBulletSize.BuSzPts">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletSizePoint </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_TextBulletTypeface.BuFontTx">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletTypefaceFollowText </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_TextBulletTypeface.BuFont">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextFont </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_TextBullet.BuNone">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextNoBullet </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_TextBullet.BuAutoNum">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextAutonumberBullet </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_TextBullet.BuChar">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextCharBullet </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_TextBullet.BuBlip">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBlipBullet </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_TextRun.R">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_RegularTextRun </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_TextRun.Br">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextLineBreak </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.EG_TextRun.Fld">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextField </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.ItemsChoiceType">
            <summary>
            This is weird and needs to be changed :-/
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextCharacterProperties_DML">
             <summary>
            
             CT_TextCharacterProperties
            
            	CHILD ELEMENTS (21):
            		ln
            		noFill
            		solidFill
            		gradFill
            		blipFill
            		pattFill
            		grpFill
            		effectLst
            		effectDag
            		highlight
            		uLnTx
            		uLn
            		uFillTx
            		uFill
            		latin
            		ea
            		cs
            		sym
            		hlinkClick
            		hlinkMouseOver
            		extLst
            
            	ATTRIBUTES (19):
            		kumimoji
            		lang
            		altLang
            		sz
            		b
            		i
            		u
            		strike
            		kern
            		cap
            		spc
            		normalizeH
            		baseline
            		noProof
            		dirty
            		err
            		smtClean
            		smtId
            		bmk
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Blip_DML">
             <summary>
            
             CT_Blip
            
            	CHILD ELEMENTS (18):
            		alphaBiLevel
            		alphaCeiling
            		alphaFloor
            		alphaInv
            		alphaMod
            		alphaModFix
            		alphaRepl
            		biLevel
            		blur
            		clrChange
            		clrRepl
            		duotone
            		fillOverlay
            		grayscl
            		hsl
            		lum
            		tint
            		extLst
            
            	ATTRIBUTES (1):
            		cstate
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Blip_DML.AlphaBiLevel">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaBiLevelEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Blip_DML.AlphaCeiling">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaCeilingEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Blip_DML.AlphaFloor">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaFloorEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Blip_DML.AlphaInv">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaInverseEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Blip_DML.AlphaMod">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaModulateEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Blip_DML.AlphaModFix">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaModulateFixedEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Blip_DML.AlphaRepl">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaReplaceEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Blip_DML.BiLevel">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_BiLevelEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Blip_DML.Blur">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_BlurEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Blip_DML.ClrChange">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_ColorChangeEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Blip_DML.ClrRepl">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_ColorReplaceEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Blip_DML.Duotone">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_DuotoneEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Blip_DML.ExtLst">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_OfficeArtExtensionList </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Blip_DML.FillOverlay">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_FillOverlayEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Blip_DML.Grayscl">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_GrayscaleEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Blip_DML.Hsl">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_HSLEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Blip_DML.Lum">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_LuminanceEffect </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Blip_DML.Tint">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TintEffect </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_LineStyleList">
             <summary>
            
             CT_LineStyleList
            
            	CHILD ELEMENTS (1):
            		ln
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_DMLColorBase">
             <summary>
             Base class for CT_SrgbColor_DML, CT_ScRgbColor, CT_HslColor, CT_SchemeColor_DML, 
             CT_SystemColor, CT_PresetColor
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_StyleMatrix">
             <summary>
            
             CT_StyleMatrix
            
            	CHILD ELEMENTS (4):
            		fillStyleLst
            		lnStyleLst
            		effectStyleLst
            		bgFillStyleLst
            
            	ATTRIBUTES (1):
            		name
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_FillStyleList">
             <summary>
            
             CT_FillStyleList
            
            	CHILD ELEMENTS (6):
            		noFill
            		solidFill
            		gradFill
            		blipFill
            		pattFill
            		grpFill
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_FillStyleList.List">
            <summary>
            Contains each fill properties object in the order in
            which they were deserialized.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_BackgroundFillStyleList">
             <summary>
            
             CT_BackgroundFillStyleList
            
            	CHILD ELEMENTS (6):
            		noFill
            		solidFill
            		gradFill
            		blipFill
            		pattFill
            		grpFill
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_PresetShadowEffect">
             <summary>
            
             CT_PresetShadowEffect
            
            	CHILD ELEMENTS (6):
            		scrgbClr
            		srgbClr
            		hslClr
            		sysClr
            		schemeClr
            		prstClr
            
            	ATTRIBUTES (3):
            		prst
            		dist
            		dir
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_OuterShadowEffect">
             <summary>
            
             CT_OuterShadowEffect
            
            	CHILD ELEMENTS (6):
            		scrgbClr
            		srgbClr
            		hslClr
            		sysClr
            		schemeClr
            		prstClr
            
            	ATTRIBUTES (9):
            		blurRad
            		dist
            		dir
            		sx
            		sy
            		kx
            		ky
            		algn
            		rotWithShape
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_InnerShadowEffect">
             <summary>
            
             CT_InnerShadowEffect
            
            	CHILD ELEMENTS (6):
            		scrgbClr
            		srgbClr
            		hslClr
            		sysClr
            		schemeClr
            		prstClr
            
            	ATTRIBUTES (3):
            		blurRad
            		dist
            		dir
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GlowEffect">
             <summary>
            
             CT_GlowEffect
            
            	CHILD ELEMENTS (6):
            		scrgbClr
            		srgbClr
            		hslClr
            		sysClr
            		schemeClr
            		prstClr
            
            	ATTRIBUTES (1):
            		rad
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GradientStop">
             <summary>
            
             CT_GradientStop
            
            	CHILD ELEMENTS (6):
            		scrgbClr
            		srgbClr
            		hslClr
            		sysClr
            		schemeClr
            		prstClr
            
            	ATTRIBUTES (1):
            		pos
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_DuotoneEffect">
             <summary>
            
             CT_DuotoneEffect
            
            	CHILD ELEMENTS (6):
            		scrgbClr
            		srgbClr
            		hslClr
            		sysClr
            		schemeClr
            		prstClr
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_ColorReplaceEffect">
             <summary>
            
             CT_ColorReplaceEffect
            
            	CHILD ELEMENTS (6):
            		scrgbClr
            		srgbClr
            		hslClr
            		sysClr
            		schemeClr
            		prstClr
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AlphaInverseEffect">
             <summary>
            
             CT_AlphaInverseEffect
            
            	CHILD ELEMENTS (6):
            		scrgbClr
            		srgbClr
            		hslClr
            		sysClr
            		schemeClr
            		prstClr
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextParagraphProperties_DML">
             <summary>
            
             CT_TextParagraphProperties
            
            	CHILD ELEMENTS (17):
            		lnSpc
            		spcBef
            		spcAft
            		buClrTx
            		buClr
            		buSzTx
            		buSzPct
            		buSzPts
            		buFontTx
            		buFont
            		buNone
            		buAutoNum
            		buChar
            		buBlip
            		tabLst
            		defRPr
            		extLst
            
            	ATTRIBUTES (11):
            		marL
            		marR
            		lvl
            		indent
            		algn
            		defTabSz
            		rtl
            		eaLnBrk
            		fontAlgn
            		latinLnBrk
            		hangingPunct
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextParagraphProperties_DML.Group1">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_TextBulletColor
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextParagraphProperties_DML.Group2">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_TextBulletSize
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextParagraphProperties_DML.Group3">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_TextBulletTypeface
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextParagraphProperties_DML.Group4">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_TextBullet
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextParagraph_DML">
             <summary>
            
             CT_TextParagraph
            
            	CHILD ELEMENTS (5):
            		pPr
            		r
            		br
            		fld
            		endParaRPr
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextParagraph_DML.Runs">
              <summary>
             http://schemas.openxmlformats.org/drawingml/2006/main:EG_TextRun
             MinOccurs = ?
             MaxOccurs = ?
             </summary>
            
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBody_DML.BodyPr">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBodyProperties </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBody_DML.LstStyle">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextListStyle </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBody_DML.P">
            <summary> http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraph </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_StyleMatrix,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fmtScheme
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_StyleMatrix
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_BackgroundFillStyleList,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bgFillStyleLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_BackgroundFillStyleList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_EffectStyleList,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/effectStyleLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectStyleList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_FillStyleList,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fillStyleLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_FillStyleList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_LineStyleList,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lnStyleLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineStyleList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_BlipFillProperties_DML,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blipFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_BlipFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_GroupFillProperties,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/grpFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GroupFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_NoFillProperties,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/noFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_NoFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_PatternFillProperties,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/pattFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PatternFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_SolidColorFillProperties,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/solidFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SolidColorFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AlphaFloorEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaFloor
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaFloorEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_ColorReplaceEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/clrRepl
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ColorReplaceEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_DuotoneEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/duotone
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_DuotoneEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_OfficeArtExtensionList,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/extLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_OfficeArtExtensionList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_FillOverlayEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fillOverlay
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_FillOverlayEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GrayscaleEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/grayscl
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GrayscaleEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_HSLEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hsl
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_HSLEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_LuminanceEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lum
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LuminanceEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TintEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/tint
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TintEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_PositiveFixedPercentage,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alpha
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositiveFixedPercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_FixedPercentage,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_FixedPercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_Percentage,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blue
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_ComplementTransform,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/comp
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ComplementTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GammaTransform,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gamma
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GammaTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_GrayscaleTransform,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gray
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GrayscaleTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_PositiveFixedAngle,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hue
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositiveFixedAngle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_PositivePercentage,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hueMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositivePercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_Angle,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hueOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Angle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_InverseTransform,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/inv
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_InverseTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_InverseGammaTransform,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/invGamma
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_InverseGammaTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_EffectContainer,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/cont
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectContainer
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_AlphaOutsetEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaOutset
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaOutsetEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_BlendEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blend
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_BlendEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_EffectReference,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/effect
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectReference
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_FillEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_FillEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GlowEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/glow
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GlowEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_InnerShadowEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/innerShdw
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_InnerShadowEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_OuterShadowEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/outerShdw
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_OuterShadowEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_PresetShadowEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/prstShdw
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetShadowEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_ReflectionEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/reflection
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ReflectionEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_RelativeOffsetEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/relOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_RelativeOffsetEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_SoftEdgesEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/softEdge
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SoftEdgesEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TransformEffect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/xfrm
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TransformEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Color_DML,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/clrFrom
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_OfficeArtExtension,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ext
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_OfficeArtExtension
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GradientStopList,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gsLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GradientStopList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_LinearShadeProperties,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lin
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LinearShadeProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_PathShadeProperties,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/path
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PathShadeProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_GradientStop,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gs
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GradientStop
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_EffectStyleItem,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/effectStyle
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectStyleItem
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_EffectList,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/effectLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Scene3D,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/scene3d
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Scene3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Shape3D,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/sp3d
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Shape3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Backdrop,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/backdrop
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Backdrop
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Camera,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/camera
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Camera
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_LightRig,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lightRig
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LightRig
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Point3D,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/anchor
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Point3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Vector3D,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/norm
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Vector3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_SphereCoords,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/rot
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SphereCoords
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_Bevel,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bevelB
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Bevel
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_LineJoinBevel,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bevel
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineJoinBevel
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_DashStopList,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/custDash
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_DashStopList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_LineEndProperties,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/headEnd
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineEndProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_LineJoinMiterProperties,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/miter
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineJoinMiterProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_PresetLineDashProperties,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/prstDash
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetLineDashProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_LineJoinRound,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/round
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineJoinRound
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_DashStop,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ds
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_DashStop
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextUnderlineFillFollowText,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ds
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextUnderlineFillFollowText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextUnderlineLineFollowText,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ds
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextUnderlineLineFollowText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextUnderlineFillGroupWrapper,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ds
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextUnderlineFillGroupWrapper
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_TextFont,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ds
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextFont
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_Hyperlink,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ds
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Hyperlink
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_EmbeddedWAVAudioFile,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ds
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EmbeddedWAVAudioFile
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_FillProperties,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_FillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_StyleMatrixReference_DML,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/effectRef
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_StyleMatrixReference
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_EffectProperties,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/effect
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBulletColorFollowText,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletColorFollowText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBulletSizeFollowText,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletSizeFollowText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBulletSizePercent,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buSzPct
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletSizePercent
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBulletSizePoint,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buSzPts
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletSizePoint
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBulletTypefaceFollowText,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buFontTx
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletTypefaceFollowText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextNoBullet,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buFontTx
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBulletTypefaceFollowText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextAutonumberBullet,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buAutoNum
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextAutonumberBullet
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextCharBullet,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buChar
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextCharBullet
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBlipBullet,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/buBlip
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBlipBullet
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextListStyle_DML,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lstStyle
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextListStyle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextBodyProperties_DML,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bodyPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBodyProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextTabStop,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/tab
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextTabStop
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextParagraph_DML,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/p
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextParagraph
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_Transform2D,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2012/chartStyle/bodyPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextBodyProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_ShapeProperties_DML,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.microsoft.com/office/drawing/2012/chartStyle/spPr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ShapeProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_FlatText,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/flatTx
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_FlatText
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextNoAutofit,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/noAutofit
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextNoAutofit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextNormalAutofit,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/normAutofit
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextNormalAutofit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_PresetTextShape,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/prstTxWarp
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetTextShape
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_TextShapeAutofit,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/spAutoFit
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_TextShapeAutofit
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_GeomGuideList,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/avLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GeomGuideList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_GeomGuide,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gd
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GeomGuide
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_CustomGeometry2D,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/custGeom
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_CustomGeometry2D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_PresetGeometry2D,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/prstGeom
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetGeometry2D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_AdjustHandleList,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ahLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AdjustHandleList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_ConnectionSiteList,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/cxnLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ConnectionSiteList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_Path2DList,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/pathLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Path2DList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_Path2D,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/pathLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Path2D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_GeomRect,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/rect
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GeomRect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_PolarAdjustHandle,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ahPolar
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PolarAdjustHandle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_XYAdjustHandle,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ahXY
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_XYAdjustHandle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_ConnectionSite,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/cxn
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ConnectionSite
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.OfficeOpenXml.Core.CT_Point2D,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/off
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Point2D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.DML.DMLExtensions.Save(Infragistics.Documents.Excel.Serialization.XLSX.DML.CT_RegularTextRun_DML,Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007,Infragistics.Documents.OfficeOpenXml.Core.XmlWriteManager,System.String)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/r
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_RegularTextRun
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_CustomFilter">
             <summary>
            
             CT_CustomFilter
            
            	ATTRIBUTES (2):
            		operator
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_IgnoredError">
             <summary>
            
             CT_IgnoredError
            
            	ATTRIBUTES (10):
            		sqref
            		evalError
            		twoDigitTextYear
            		numberStoredAsText
            		formula
            		formulaRange
            		unlockedFormula
            		emptyCellReference
            		listDataValidation
            		calculatedColumn
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.ST_Sqref">
              <summary>
             This class wraps the list type ST_Sqref.
             The 'Parse' and 'ToXLSX' methods must be implemented manually.
             </summary>
            
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_OleItem">
             <summary>
            
             CT_OleItem
            
            	ATTRIBUTES (4):
            		name
            		icon
            		advise
            		preferPic
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_DdeValues">
             <summary>
            
             CT_DdeValues
            
            	CHILD ELEMENTS (1):
            		value
            
            	ATTRIBUTES (2):
            		rows
            		cols
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_DdeValue">
             <summary>
            
             CT_DdeValue
            
            	CHILD ELEMENTS (1):
            		val
            
            	ATTRIBUTES (1):
            		t
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_PivotArea">
             <summary>
            
             CT_PivotArea
            
            	CHILD ELEMENTS (2):
            		references
            		extLst
            
            	ATTRIBUTES (12):
            		field
            		type
            		dataOnly
            		labelOnly
            		grandRow
            		grandCol
            		cacheIndex
            		outline
            		offset
            		collapsedLevelsAreSubtotals
            		axis
            		fieldPosition
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_PivotAreas">
             <summary>
            
             CT_PivotAreas
            
            	CHILD ELEMENTS (1):
            		pivotArea
            
            	ATTRIBUTES (1):
            		count
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_PivotAreaReference">
             <summary>
            
             CT_PivotAreaReference
            
            	CHILD ELEMENTS (2):
            		x
            		extLst
            
            	ATTRIBUTES (17):
            		field
            		count
            		selected
            		byPosition
            		relative
            		defaultSubtotal
            		sumSubtotal
            		countASubtotal
            		avgSubtotal
            		maxSubtotal
            		minSubtotal
            		productSubtotal
            		countSubtotal
            		stdDevSubtotal
            		stdDevPSubtotal
            		varSubtotal
            		varPSubtotal
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_PivotAreaReferences">
             <summary>
            
             CT_PivotAreaReferences
            
            	CHILD ELEMENTS (1):
            		reference
            
            	ATTRIBUTES (1):
            		count
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_Index">
             <summary>
            
             CT_Index
            
            	ATTRIBUTES (1):
            		v
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_ConditionalFormats">
             <summary>
            
             CT_ConditionalFormats
            
            	CHILD ELEMENTS (1):
            		conditionalFormat
            
            	ATTRIBUTES (1):
            		count
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_ConditionalFormat">
             <summary>
            
             CT_ConditionalFormat
            
            	CHILD ELEMENTS (2):
            		pivotAreas
            		extLst
            
            	ATTRIBUTES (3):
            		scope
            		type
            		priority
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_DataValidation">
             <summary>
            
             CT_DataValidation
            
            	CHILD ELEMENTS (2):
            		formula1
            		formula2
            
            	ATTRIBUTES (13):
            		type
            		errorStyle
            		imeMode
            		operator
            		allowBlank
            		showDropDown
            		showInputMessage
            		showErrorMessage
            		errorTitle
            		error
            		promptTitle
            		prompt
            		sqref
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_ColorScale">
             <summary>
            
             CT_ColorScale
            
            	CHILD ELEMENTS (2):
            		cfvo
            		color
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_CfRule">
             <summary>
            
             CT_CfRule
            
            	CHILD ELEMENTS (5):
            		formula
            		colorScale
            		dataBar
            		iconSet
            		extLst
            
            	ATTRIBUTES (13):
            		type
            		dxfId
            		priority
            		stopIfTrue
            		aboveAverage
            		percent
            		bottom
            		operator
            		text
            		timePeriod
            		rank
            		stdDev
            		equalAverage
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_Cfvo">
             <summary>
            
             CT_Cfvo
            
            	CHILD ELEMENTS (1):
            		extLst
            
            	ATTRIBUTES (3):
            		type
            		val
            		gte
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_DataBar">
             <summary>
            
             CT_DataBar
            
            	CHILD ELEMENTS (2):
            		cfvo
            		color
            
            	ATTRIBUTES (3):
            		minLength
            		maxLength
            		showValue
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_IconSet">
             <summary>
            
             CT_IconSet
            
            	CHILD ELEMENTS (1):
            		cfvo
            
            	ATTRIBUTES (4):
            		iconSet
            		showValue
            		percent
            		reverse
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_Font">
             <summary>
            
             CT_Font
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_Font.Name">
            <summary> http://schemas.openxmlformats.org/spreadsheetml/2006/main:CT_FontName </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_Font.Charset">
            <summary> http://schemas.openxmlformats.org/spreadsheetml/2006/main:CT_IntProperty </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_Font.Family">
            <summary> http://schemas.openxmlformats.org/spreadsheetml/2006/main:CT_IntProperty </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_Font.B">
            <summary> http://schemas.openxmlformats.org/spreadsheetml/2006/main:CT_BooleanProperty </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_Font.I">
            <summary> http://schemas.openxmlformats.org/spreadsheetml/2006/main:CT_BooleanProperty </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_Font.Strike">
            <summary> http://schemas.openxmlformats.org/spreadsheetml/2006/main:CT_BooleanProperty </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_Font.Outline">
            <summary> http://schemas.openxmlformats.org/spreadsheetml/2006/main:CT_BooleanProperty </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_Font.Shadow">
            <summary> http://schemas.openxmlformats.org/spreadsheetml/2006/main:CT_BooleanProperty </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_Font.Condense">
            <summary> http://schemas.openxmlformats.org/spreadsheetml/2006/main:CT_BooleanProperty </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_Font.Extend">
            <summary> http://schemas.openxmlformats.org/spreadsheetml/2006/main:CT_BooleanProperty </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_Font.Color">
            <summary> http://schemas.openxmlformats.org/spreadsheetml/2006/main:CT_Color </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_Font.Sz">
            <summary> http://schemas.openxmlformats.org/spreadsheetml/2006/main:CT_FontSize </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_Font.U">
            <summary> http://schemas.openxmlformats.org/spreadsheetml/2006/main:CT_UnderlineProperty </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_Font.VertAlign">
            <summary> http://schemas.openxmlformats.org/spreadsheetml/2006/main:CT_VerticalAlignFontProperty </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_Font.Scheme">
            <summary> http://schemas.openxmlformats.org/spreadsheetml/2006/main:CT_FontScheme </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_Dxf">
             <summary>
            
             CT_Dxf
            
            	CHILD ELEMENTS (7):
            		font
            		numFmt
            		fill
            		alignment
            		border
            		protection
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_BooleanProperty">
             <summary>
            
             CT_BooleanProperty
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_IntProperty">
             <summary>
            
             CT_IntProperty
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_FontName">
             <summary>
            
             CT_FontName
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_FontScheme_SML">
             <summary>
            
             CT_FontScheme
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_FontSize">
             <summary>
            
             CT_FontSize
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_UnderlineProperty">
             <summary>
            
             CT_UnderlineProperty
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_VerticalAlignFontProperty">
             <summary>
            
             CT_VerticalAlignFontProperty
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_ConditionalFormatting">
             <summary>
            
             CT_ConditionalFormatting
            
            	CHILD ELEMENTS (2):
            		cfRule
            		extLst
            
            	ATTRIBUTES (2):
            		pivot
            		sqref
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_ProtectedRange">
             <summary>
            
             CT_ProtectedRange
            
            	ATTRIBUTES (4):
            		password
            		sqref
            		name
            		securityDescriptor
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_NumFmt">
             <summary>
            
             CT_NumFmt
            
            	ATTRIBUTES (2):
            		numFmtId
            		formatCode
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_Fill">
             <summary>
            
             CT_Fill
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_Fill.PatternFill">
            <summary> http://schemas.openxmlformats.org/spreadsheetml/2006/main:CT_PatternFill </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_Fill.GradientFill">
            <summary> http://schemas.openxmlformats.org/spreadsheetml/2006/main:CT_GradientFill </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_GradientFill">
             <summary>
            
             CT_GradientFill
            
            	CHILD ELEMENTS (1):
            		stop
            
            	ATTRIBUTES (6):
            		type
            		degree
            		left
            		right
            		top
            		bottom
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_PatternFill">
             <summary>
            
             CT_PatternFill
            
            	CHILD ELEMENTS (2):
            		fgColor
            		bgColor
            
            	ATTRIBUTES (1):
            		patternType
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_CellAlignment">
             <summary>
            
             CT_CellAlignment
            
            	ATTRIBUTES (9):
            		horizontal
            		vertical
            		textRotation
            		wrapText
            		indent
            		relativeIndent
            		justifyLastLine
            		shrinkToFit
            		readingOrder
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_Border">
             <summary>
            
             CT_Border
            
            	CHILD ELEMENTS (7):
            		left
            		right
            		top
            		bottom
            		diagonal
            		vertical
            		horizontal
            
            	ATTRIBUTES (3):
            		diagonalUp
            		diagonalDown
            		outline
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_BorderPr">
             <summary>
            
             CT_BorderPr
            
            	CHILD ELEMENTS (1):
            		color
            
            	ATTRIBUTES (1):
            		style
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.CT_CellProtection">
             <summary>
            
             CT_CellProtection
            
            	ATTRIBUTES (2):
            		locked
            		hidden
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML.SMLAttributes">
            <summary>
            Exposes a constant for each XML attribute in the
            'http://schemas.openxmlformats.org/spreadsheetml/2006/main' namespace.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.Excel2006.Excel2006Elements">
            <summary>
            Exposes a constant for each XML element in the
            'http://schemas.microsoft.com/office/excel/2006/main' namespace.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.Excel2006.Excel2006Elements.f">
            <summary>http://schemas.microsoft.com/office/excel/2006/main:f</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.Excel2006.Excel2006Elements.ref">
            <summary>http://schemas.microsoft.com/office/excel/2006/main:ref</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.XLSX.Excel2006.Excel2006Elements.sqref">
            <summary>http://schemas.microsoft.com/office/excel/2006/main:sqref</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.Excel2006.CT_Ref">
             <summary>
            
             CT_Ref
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.Excel2006.CT_Sqref">
             <summary>
            
             CT_Sqref
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadAlpha(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alpha
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositiveFixedPercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadAlphaMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositivePercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadAlphaOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_FixedPercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadBlue(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blue
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadBlueMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blueMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadBlueOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blueOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadComp(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/comp
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ComplementTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadGamma(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gamma
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GammaTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadGray(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gray
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GrayscaleTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadGreen(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/green
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadGreenMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/greenMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadGreenOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/greenOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadHue(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hue
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositiveFixedAngle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadHueMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hueMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositivePercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadHueOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hueOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Angle
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadInv(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/inv
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_InverseTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadInvGamma(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/invGamma
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_InverseGammaTransform
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadLum(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lum
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadLumMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lumMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadLumOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lumOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadRed(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/red
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadRedMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/redMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadRedOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/redOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadSat(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/sat
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadSatMod(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/satMod
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadSatOff(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/satOff
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Percentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadShade(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/shade
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositiveFixedPercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadTint(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Boolean)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/tint
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PositiveFixedPercentage
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadClrFrom(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/clrFrom
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadClrTo(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/clrTo
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadFillRect(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fillRect
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_RelativeRect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadLin(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lin
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LinearShadeProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadPath(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/path
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PathShadeProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadTileRect(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/tileRect
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_RelativeRect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadGs(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gs
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GradientStop
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadFillToRect(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fillToRect
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_RelativeRect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadBgClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bgClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadFgClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fgClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadEffectDag(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/effectDag
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_EffectContainer
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadGradFill(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gradFill
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GradientFillProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadScene3d(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/main/scene3d</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadSp3d(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>http://schemas.openxmlformats.org/drawingml/2006/main/sp3d</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadGlow(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/glow
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GlowEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadAlphaBiLevel(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Type[])">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaBiLevel
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaBiLevelEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadAlphaCeiling(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Type[])">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaCeiling
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaCeilingEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadAlphaFloor(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Type[])">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaFloor
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaFloorEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadAlphaInv(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Type[])">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaInv
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaInverseEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadAlphaModFix(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Type[])">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaModFix
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaModulateFixedEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadAlphaRepl(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Type[])">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/alphaRepl
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_AlphaReplaceEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadBiLevel(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Type[])">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/biLevel
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_BiLevelEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadBlur(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Type[])">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/blur
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_BlurEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadClrChange(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Type[])">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/clrChange
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ColorChangeEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadClrRepl(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Type[])">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/clrRepl
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ColorReplaceEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadDuotone(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Type[])">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/duotone
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_DuotoneEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadFillOverlay(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Type[])">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/fillOverlay
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_FillOverlayEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadGrayscl(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Type[])">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/grayscl
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GrayscaleEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadHsl(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase,System.Type[])">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hsl
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_HSLEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadInnerShdw(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/innerShdw
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_InnerShadowEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadOuterShdw(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/outerShdw
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_OuterShadowEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadPrstShdw(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/prstShdw
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetShadowEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadReflection(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/reflection
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ReflectionEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadSoftEdge(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/softEdge
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SoftEdgesEffect
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadCamera(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/camera
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Camera
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadLightRig(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/lightRig
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LightRig
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadAnchor(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/anchor
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Point3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadNorm(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/norm
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Vector3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadUp(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/up
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Vector3D
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadRot(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/rot
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SphereCoords
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadBevelB(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bevelB
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Bevel
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadBevelT(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bevelT
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Bevel
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadContourClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/contourClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadExtrusionClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/extrusionClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_Color
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadHslClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/hslClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_HslColor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadPrstClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/prstClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetColor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadSchemeClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/schemeClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SchemeColor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadScrgbClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/scrgbClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_ScRgbColor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadSrgbClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/srgbClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SRgbColor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadSysClr(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/sysClr
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_SystemColor
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadBevel(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/bevel
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineJoinBevel
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadCustDash(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/custDash
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_DashStopList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadHeadEnd(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/headEnd
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineEndProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadMiter(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/miter
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineJoinMiterProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadPrstDash(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/prstDash
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_PresetLineDashProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadRound(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/round
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineJoinRound
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadTailEnd(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/tailEnd
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_LineEndProperties
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadDs(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/ds
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_DashStop
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.LoadGsLst(Infragistics.Documents.OfficeOpenXml.Core.PartManagers.XmlPartManagerBase)">
            <summary>
            http://schemas.openxmlformats.org/drawingml/2006/main/gsLst
            http://schemas.openxmlformats.org/drawingml/2006/main:CT_GradientStopList
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.GetShortPartName(System.Uri)">
            <summary>
            Returns the short name of the specified part Uri.
            For example, /xl/charts/chart1.xml -> chart1.xml.
            We use this as a unique identifier for a chart/style/
            colorStyle part since relationship IDs are not available.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.EscapeXml(System.String)">
            <summary>
            Returns the specified string, with XML code characters escaped.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.UnescapeXml(System.String)">
            <summary>
            Returns the specified string, with XML code characters unescaped.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.XLSX.SerializationUtils.ToTwips(System.Int32)">
            <summary>
            Converts the specified value, assumed to be expressed
            in hundredths of a point, to the equaivalent value in
            twips (twentieths of a point)
            </summary>
            <param name="hundredthPoints">The value in hundredths of a point. For example, a value of 1420 equates to 14.2 points.</param>
            <returns>The value expressed in twips.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.LosesFidelityAttribute">
            <summary>
            Indicates that the decorated member is known to be
            incomplete insofar as the existing IG type does not
            fully describe the corresponding XLSX entity.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_SlicerCacheDefinition">
             <summary>
            
             CT_SlicerCacheDefinition
            
            	CHILD ELEMENTS (3):
            		pivotTables
            		data
            		extLst
            
            	ATTRIBUTES (2):
            		name
            		sourceName
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_SlicerCachePivotTable">
             <summary>
            
             CT_SlicerCachePivotTable
            
            	ATTRIBUTES (2):
            		tabId
            		name
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_FormControlPr">
             <summary>
            
             CT_FormControlPr
            
            	CHILD ELEMENTS (2):
            		itemLst
            		extLst
            
            	ATTRIBUTES (31):
            		objectType
            		checked
            		colored
            		dropLines
            		dropStyle
            		dx
            		firstButton
            		fmlaGroup
            		fmlaLink
            		fmlaRange
            		fmlaTxbx
            		horiz
            		inc
            		justLastX
            		lockText
            		max
            		min
            		multiSel
            		noThreeD
            		noThreeD2
            		page
            		sel
            		seltype
            		textHAlign
            		textVAlign
            		val
            		widthMin
            		editVal
            		multiLine
            		verticalBar
            		passwordEdit
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_ListItems">
             <summary>
            
             CT_ListItems
            
            	CHILD ELEMENTS (2):
            		item
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_ListItem">
             <summary>
            
             CT_ListItem
            
            	ATTRIBUTES (1):
            		val
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_DatastoreItem">
             <summary>
            
             CT_DatastoreItem
            
            	CHILD ELEMENTS (1):
            		extLst
            
            	ATTRIBUTES (1):
            		id
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_SourceConnection">
             <summary>
            
             CT_SourceConnection
            
            	ATTRIBUTES (1):
            		name
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_CacheSourceExt">
             <summary>
            
             CT_CacheSourceExt
            
            	CHILD ELEMENTS (1):
            		
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_CustomFilters_SML2009">
             <summary>
            
             CT_CustomFilters
            
            	CHILD ELEMENTS (1):
            		customFilter
            
            	ATTRIBUTES (1):
            		and
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_ProtectedRange_SML2009">
             <summary>
            
             CT_ProtectedRange
            
            	CHILD ELEMENTS (1):
            		
            
            	ATTRIBUTES (7):
            		password
            		algorithmName
            		hashValue
            		saltValue
            		spinCount
            		name
            		securityDescriptor
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_IgnoredError_SML2009">
             <summary>
            
             CT_IgnoredError
            
            	CHILD ELEMENTS (1):
            		
            
            	ATTRIBUTES (9):
            		evalError
            		twoDigitTextYear
            		numberStoredAsText
            		formula
            		formulaRange
            		unlockedFormula
            		emptyCellReference
            		listDataValidation
            		calculatedColumn
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_IgnoredErrors_SML2009">
             <summary>
            
             CT_IgnoredErrors
            
            	CHILD ELEMENTS (2):
            		ignoredError
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_SlicerStyles">
             <summary>
            
             CT_SlicerStyles
            
            	CHILD ELEMENTS (1):
            		slicerStyle
            
            	ATTRIBUTES (1):
            		defaultSlicerStyle
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_SlicerStyle">
             <summary>
            
             CT_SlicerStyle
            
            	CHILD ELEMENTS (1):
            		slicerStyleElements
            
            	ATTRIBUTES (1):
            		name
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_SlicerStyleElement">
             <summary>
            
             CT_SlicerStyleElement
            
            	ATTRIBUTES (2):
            		type
            		dxfId
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_CacheField_SML2009">
             <summary>
            
             CT_CacheField
            
            	ATTRIBUTES (1):
            		ignore
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_PivotHierarchy_SML2009">
             <summary>
            
             CT_PivotHierarchy
            
            	ATTRIBUTES (1):
            		ignore
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_OleItem_SML2009">
             <summary>
            
             CT_OleItem
            
            	CHILD ELEMENTS (1):
            		values
            
            	ATTRIBUTES (4):
            		name
            		icon
            		advise
            		preferPic
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_Table_SML2009">
             <summary>
            
             CT_Table
            
            	ATTRIBUTES (2):
            		altText
            		altTextSummary
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_PivotCacheDefinition_SML2009">
             <summary>
            
             CT_PivotCacheDefinition
            
            	ATTRIBUTES (5):
            		slicerData
            		pivotCacheId
            		supportSubqueryNonVisual
            		supportSubqueryCalcMem
            		supportAddCalcMems
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_ConditionalFormat_SML2009">
             <summary>
            
             CT_ConditionalFormat
            
            	CHILD ELEMENTS (2):
            		pivotAreas
            		extLst
            
            	ATTRIBUTES (4):
            		scope
            		type
            		priority
            		id
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_ConditionalFormats_SML2009">
             <summary>
            
             CT_ConditionalFormats
            
            	CHILD ELEMENTS (1):
            		conditionalFormat
            
            	ATTRIBUTES (1):
            		count
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_PivotChange">
             <summary>
            
             CT_PivotChange
            
            	CHILD ELEMENTS (3):
            		editValue
            		tupleItems
            		extLst
            
            	ATTRIBUTES (2):
            		allocationMethod
            		weightExpression
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_PivotEditValue">
             <summary>
            
             CT_PivotEditValue
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_PivotUserEdit">
             <summary>
            
             CT_PivotUserEdit
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_PivotEdit">
             <summary>
            
             CT_PivotEdit
            
            	CHILD ELEMENTS (4):
            		userEdit
            		tupleItems
            		pivotArea
            		extLst
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_PivotTableDefinition">
             <summary>
            
             CT_PivotTableDefinition
            
            	CHILD ELEMENTS (3):
            		pivotEdits
            		pivotChanges
            		conditionalFormats
            
            	ATTRIBUTES (10):
            		fillDownLabelsDefault
            		visualTotalsForSets
            		calculatedMembersInFilters
            		altText
            		altTextSummary
            		enableEdit
            		autoApply
            		allocationMethod
            		weightExpression
            		hideValuesRow
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_PivotField_SML2009">
             <summary>
            
             CT_PivotField
            
            	ATTRIBUTES (2):
            		fillDownLabels
            		ignore
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_DataField_SML2009">
             <summary>
            
             CT_DataField
            
            	ATTRIBUTES (3):
            		pivotShowAs
            		sourceField
            		uniqueName
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_CacheHierarchy_SML2009">
             <summary>
            
             CT_CacheHierarchy
            
            	CHILD ELEMENTS (1):
            		setLevels
            
            	ATTRIBUTES (4):
            		flattenHierarchies
            		measuresSet
            		hierarchizeDistinct
            		ignore
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_SetLevels">
             <summary>
            
             CT_SetLevels
            
            	CHILD ELEMENTS (1):
            		setLevel
            
            	ATTRIBUTES (1):
            		count
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_SetLevel">
             <summary>
            
             CT_SetLevel
            
            	ATTRIBUTES (1):
            		hierarchy
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_TupleSetRowItem">
             <summary>
            
             CT_TupleSetRowItem
            
            	ATTRIBUTES (2):
            		u
            		d
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_TupleSetHeader">
             <summary>
            
             CT_TupleSetHeader
            
            	ATTRIBUTES (2):
            		uniqueName
            		hierarchyName
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_TupleSet">
             <summary>
            
             CT_TupleSet
            
            	CHILD ELEMENTS (2):
            		headers
            		rows
            
            	ATTRIBUTES (2):
            		rowCount
            		columnCount
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_CalculatedMember_SML2009">
             <summary>
            
             CT_CalculatedMember
            
            	CHILD ELEMENTS (1):
            		tupleSet
            
            	ATTRIBUTES (5):
            		displayFolder
            		flattenHierarchies
            		dynamicSet
            		hierarchizeDistinct
            		mdxLong
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_SlicerCache">
             <summary>
            
             CT_SlicerCache
            
            	ATTRIBUTES (1):
            		
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_SlicerRef">
             <summary>
            
             CT_SlicerRef
            
            	ATTRIBUTES (1):
            		
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_WorkbookPr_SML2009">
             <summary>
            
             CT_WorkbookPr
            
            	ATTRIBUTES (3):
            		defaultImageDpi
            		discardImageEditData
            		accuracyVersion
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_Sparkline">
             <summary>
            
             CT_Sparkline
            
            	CHILD ELEMENTS (2):
            		
            		
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_SparklineGroup">
             <summary>
            
             CT_SparklineGroup
            
            	CHILD ELEMENTS (10):
            		colorSeries
            		colorNegative
            		colorAxis
            		colorMarkers
            		colorFirst
            		colorLast
            		colorHigh
            		colorLow
            		
            		sparklines
            
            	ATTRIBUTES (17):
            		manualMax
            		manualMin
            		lineWeight
            		type
            		dateAxis
            		displayEmptyCellsAs
            		markers
            		high
            		low
            		first
            		last
            		negative
            		displayXAxis
            		displayHidden
            		minAxisType
            		maxAxisType
            		rightToLeft
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_DataValidationFormula">
             <summary>
            
             CT_DataValidationFormula
            
            	CHILD ELEMENTS (1):
            		
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_DataValidation_SML2009">
             <summary>
            
             CT_DataValidation
            
            	CHILD ELEMENTS (3):
            		formula1
            		formula2
            		
            
            	ATTRIBUTES (12):
            		type
            		errorStyle
            		imeMode
            		operator
            		allowBlank
            		showDropDown
            		showInputMessage
            		showErrorMessage
            		errorTitle
            		error
            		promptTitle
            		prompt
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_DataValidations_SML2009">
             <summary>
            
             CT_DataValidations
            
            	CHILD ELEMENTS (1):
            		dataValidation
            
            	ATTRIBUTES (4):
            		disablePrompts
            		xWindow
            		yWindow
            		count
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_CfIcon">
             <summary>
            
             CT_CfIcon
            
            	ATTRIBUTES (2):
            		iconSet
            		iconId
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_IconSet_SML2009">
             <summary>
            
             CT_IconSet
            
            	CHILD ELEMENTS (2):
            		cfvo
            		cfIcon
            
            	ATTRIBUTES (5):
            		iconSet
            		showValue
            		percent
            		reverse
            		custom
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_Cfvo_SML2009">
             <summary>
            
             CT_Cfvo
            
            	CHILD ELEMENTS (2):
            		
            		extLst
            
            	ATTRIBUTES (2):
            		type
            		gte
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_DataBar_SML2009">
             <summary>
            
             CT_DataBar
            
            	CHILD ELEMENTS (6):
            		cfvo
            		fillColor
            		borderColor
            		negativeFillColor
            		negativeBorderColor
            		axisColor
            
            	ATTRIBUTES (9):
            		minLength
            		maxLength
            		showValue
            		border
            		gradient
            		direction
            		negativeBarColorSameAsPositive
            		negativeBarBorderColorSameAsPositive
            		axisPosition
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_ColorScale_SML2009">
             <summary>
            
             CT_ColorScale
            
            	CHILD ELEMENTS (2):
            		cfvo
            		color
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_CfRule_SML2009">
             <summary>
            
             CT_CfRule
            
            	CHILD ELEMENTS (6):
            		
            		colorScale
            		dataBar
            		iconSet
            		dxf
            		extLst
            
            	ATTRIBUTES (14):
            		type
            		priority
            		stopIfTrue
            		aboveAverage
            		percent
            		bottom
            		operator
            		text
            		timePeriod
            		rank
            		stdDev
            		equalAverage
            		activePresent
            		id
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_ConditionalFormatting_SML2009">
             <summary>
            
             CT_ConditionalFormatting
            
            	CHILD ELEMENTS (3):
            		cfRule
            		
            		extLst
            
            	ATTRIBUTES (1):
            		pivot
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_TabularSlicerCacheItem">
             <summary>
            
             CT_TabularSlicerCacheItem
            
            	ATTRIBUTES (3):
            		x
            		s
            		nd
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_TabularSlicerCacheItems">
             <summary>
            
             CT_TabularSlicerCacheItems
            
            	CHILD ELEMENTS (1):
            		i
            
            	ATTRIBUTES (1):
            		count
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_TabularSlicerCache">
             <summary>
            
             CT_TabularSlicerCache
            
            	CHILD ELEMENTS (2):
            		items
            		extLst
            
            	ATTRIBUTES (5):
            		pivotCacheId
            		sortOrder
            		customListSort
            		showMissing
            		crossFilter
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_OlapSlicerCacheSelection">
             <summary>
            
             CT_OlapSlicerCacheSelection
            
            	CHILD ELEMENTS (1):
            		p
            
            	ATTRIBUTES (1):
            		n
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_OlapSlicerCacheItemParent">
             <summary>
            
             CT_OlapSlicerCacheItemParent
            
            	ATTRIBUTES (1):
            		n
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_OlapSlicerCacheSelections">
             <summary>
            
             CT_OlapSlicerCacheSelections
            
            	CHILD ELEMENTS (1):
            		selection
            
            	ATTRIBUTES (1):
            		count
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_OlapSlicerCacheItem">
             <summary>
            
             CT_OlapSlicerCacheItem
            
            	CHILD ELEMENTS (1):
            		p
            
            	ATTRIBUTES (3):
            		n
            		c
            		nd
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_OlapSlicerCacheRange">
             <summary>
            
             CT_OlapSlicerCacheRange
            
            	CHILD ELEMENTS (1):
            		i
            
            	ATTRIBUTES (1):
            		startItem
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_OlapSlicerCacheLevelData">
             <summary>
            
             CT_OlapSlicerCacheLevelData
            
            	CHILD ELEMENTS (1):
            		ranges
            
            	ATTRIBUTES (5):
            		uniqueName
            		sourceCaption
            		count
            		sortOrder
            		crossFilter
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_OlapSlicerCacheLevelsData">
             <summary>
            
             CT_OlapSlicerCacheLevelsData
            
            	CHILD ELEMENTS (1):
            		level
            
            	ATTRIBUTES (1):
            		count
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_OlapSlicerCache">
             <summary>
            
             CT_OlapSlicerCache
            
            	CHILD ELEMENTS (3):
            		levels
            		selections
            		extLst
            
            	ATTRIBUTES (1):
            		pivotCacheId
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_SlicerCacheData">
             <summary>
            
             CT_SlicerCacheData
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_ConditionalFormattings">
             <summary>
            
             CT_ConditionalFormattings
            
            	CHILD ELEMENTS (1):
            		conditionalFormatting
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_SparklineGroups">
             <summary>
            
             CT_SparklineGroups
            
            	CHILD ELEMENTS (1):
            		sparklineGroup
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_SlicerRefs">
             <summary>
            
             CT_SlicerRefs
            
            	CHILD ELEMENTS (1):
            		slicer
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_ProtectedRanges_SML2009">
             <summary>
            
             CT_ProtectedRanges
            
            	CHILD ELEMENTS (1):
            		protectedRange
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_SlicerCaches">
             <summary>
            
             CT_SlicerCaches
            
            	CHILD ELEMENTS (1):
            		slicerCache
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_Slicers">
             <summary>
            
             CT_Slicers
            
            	CHILD ELEMENTS (1):
            		slicer
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_SlicerCachePivotTables">
             <summary>
            
             CT_SlicerCachePivotTables
            
            	CHILD ELEMENTS (1):
            		pivotTable
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_OlapSlicerCacheRanges">
             <summary>
            
             CT_OlapSlicerCacheRanges
            
            	CHILD ELEMENTS (1):
            		range
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_Sparklines">
             <summary>
            
             CT_Sparklines
            
            	CHILD ELEMENTS (1):
            		sparkline
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_TupleSetHeaders">
             <summary>
            
             CT_TupleSetHeaders
            
            	CHILD ELEMENTS (1):
            		header
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_TupleSetRows">
             <summary>
            
             CT_TupleSetRows
            
            	CHILD ELEMENTS (1):
            		row
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_TupleSetRow">
             <summary>
            
             CT_TupleSetRow
            
            	CHILD ELEMENTS (1):
            		rowItem
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_PivotEdits">
             <summary>
            
             CT_PivotEdits
            
            	CHILD ELEMENTS (1):
            		pivotEdit
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_PivotChanges">
             <summary>
            
             CT_PivotChanges
            
            	CHILD ELEMENTS (1):
            		pivotChange
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_TupleItems">
             <summary>
            
             CT_TupleItems
            
            	CHILD ELEMENTS (1):
            		tupleItem
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.CT_SlicerStyleElements">
             <summary>
            
             CT_SlicerStyleElements
            
            	CHILD ELEMENTS (1):
            		slicerStyleElement
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.XLSX.SML2009.SML2009Attributes">
            <summary>
            Exposes a constant for each XML attribute in the
            'http://schemas.microsoft.com/office/spreadsheetml/2009/9/main' namespace.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007.InitializeConditionalFormatting(Infragistics.Documents.Excel.Worksheet)">
            <summary>
            Initializes collections needed for conditional formatting.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Serialization.WorkbookSaveManagerExcel2007.InitializeSparklineGroups(Infragistics.Documents.Excel.Worksheet)">
            <summary>
            Initializes collections needed for sparkline groups.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Utilities.ColorEmpty">
            <summary>
            Replace Color.Empty
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Utilities.IsEnumerable(System.Object)">
            <summary>
            Returns true if the type of the specified object implements
            IEnumerable but is not a string.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Utilities.IsRotatedShapeAngle(System.Single)">
            <summary>
            Used to determine if the anchor cells for a shape are adjusted based on the specified angle
            </summary>
            <param name="angle">The angle to evaluate</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Utilities.MakeAnglePositiveCoterminal(System.Double)">
            <summary>
            Ensures that the specified angle is positive, i.e., an angle
            of for example -90 degrees is converted to +270 degrees. Also
            ensures that the coterminal is returned for an angle greater
            than 360 degrees.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Utilities.MergeWorkbookFont(Infragistics.Documents.Excel.IWorkbookFont[],Infragistics.Documents.Excel.Workbook)">
            <summary>
            Merges the specified IWorkbookFonts into one instance, giving
            precedence in the order in which they appear in the array.
            </summary>
            <param name="fonts">An array of IWorkbookFonts, with the highest precedence appearing in the first slot, and each subsequent slot representing lower precedence than the previous.</param>
            <param name="wb">The owning workbook</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Utilities.ToSeriesType(Infragistics.Documents.Excel.Charts.ChartType)">
            <summary>
            Returns the SeriesType constant for the specified ChartType.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookLoadOptions">
            <summary>
            Contains the options related to loading a workbook from a file or stream.
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Load(System.String,Infragistics.Documents.Excel.WorkbookLoadOptions)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Load(System.IO.Stream,Infragistics.Documents.Excel.WorkbookLoadOptions)"/> 
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookLoadOptions.#ctor(System.String,Infragistics.Documents.Core.Packaging.IPackageFactory)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.WorkbookLoadOptions"/> instance.
            </summary>
            <param name="openPassword">The password to use to decrypt the document if it is encrypted.</param>
            <param name="packageFactory">An IPackageFactory which can be used to open an IPackage from a stream.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookLoadOptions.#ctor(System.Security.SecureString,Infragistics.Documents.Core.Packaging.IPackageFactory,System.Boolean)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.WorkbookLoadOptions"/> instance.
            </summary>
            <param name="openPasswordSecure">The password to use to decrypt the document if it is encrypted.</param>
            <param name="packageFactory">An IPackageFactory which can be used to open an IPackage from a stream.</param>
            <param name="verifyExcel2007Xml">
            A boolean specifying whether or not to verify the contents of the markup against the rules defined in Part 2 of the 
            'Office Open XML - Open Packaging Conventions' document (see final draft, <a href="http://www.ecma-international.org">ECMA</a> document TC45).
            </param>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPassword">
            <summary>
            Gets or sets the password used to decrypt the document if it is encrypted.
            </summary>
            <remarks>
            <p class="body">
            If the document is not encrypted, the open password will be ignored.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.IsWorkbookEncrypted(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.IsWorkbookEncrypted(System.IO.Stream)"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasOpenPassword"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.Security.SecureString)"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPasswordSecure"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPasswordSecure">
            <summary>
            Gets or sets the password used to decrypt the document if it is encrypted.
            </summary>
            <remarks>
            <p class="body">
            If the document is not encrypted, the open password will be ignored.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.IsWorkbookEncrypted(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.IsWorkbookEncrypted(System.IO.Stream)"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasOpenPassword"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.Security.SecureString)"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPassword"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookLoadOptions.#ctor(Infragistics.Documents.Core.Packaging.IPackageFactory)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.WorkbookLoadOptions"/> instance.
            </summary>
            <param name="packageFactory">An IPackageFactory which can be used to open an IPackage from a stream.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookLoadOptions.AutoResumeCalculations">
            <summary>
            Returns or sets a boolean indicating whether the Workbook will automatically call its <see cref="M:Infragistics.Documents.Excel.Workbook.ResumeCalculations"/> methods before the Load method returns.
            </summary>
            <remarks>
            When the Load method starts the <see cref="M:Infragistics.Documents.Excel.Workbook.SuspendCalculations"/> is invoked so that no 
            calculations occurs as the load is in progress. When the Load operation is complete and the Workbook 
            is about to be returned from the Load method, it will call the <see cref="M:Infragistics.Documents.Excel.Workbook.ResumeCalculations"/> 
            method to ensure that the loaded formulas have been added to the calculation network and the formulas 
            can be calculated. However if one wanted to delay calling that method, perhaps to add additional formulas 
            to the workbook being loaded, one can set this property to false and then the Workbook will not call 
            ResumeCalculations. Instead it will be the responsibility of the caller to invoke this method.
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SuspendCalculations"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.ResumeCalculations"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookLoadOptions.Culture">
            <summary>
            Returns or sets the value for the <see cref="P:Infragistics.Documents.Excel.Workbook.Culture"/> property.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.Culture"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookLoadOptions.IsDuplicateFormulaParsingOptimized">
            <summary>
            Returns or sets a boolean indicating whether duplicate formulas parsed during the load will be optimized for faster loading of the workbook.
            </summary>
            <remarks>
            <p class="body">
            By default when an exact duplicate of a formula string is encountered during the load, the previously parsed formula 
            will be cloned rather than reparsing the string to create an entirely new formula.
            </p>
            <p class="note"><b>Note:</b> This property does not apply to the loading of the xls formats.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookLoadOptions.UserDefinedFunctionLibraries">
            <summary>
            Returns a list of user defined function assemblies that should be registered before the workbook is loaded.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookLoadOptions.UserDefinedFunctions">
            <summary>
            Returns a list of user defined functions that should be registered before the workbook is loaded.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Sheet">
            <summary>
            Base class for a sheet in a Microsoft Excel workbook.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.String)">
            <summary>
            Attempts to use the specified password to remove the WorkSheet protection currently in place.
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> If the Sheet is not currently protected (i.e. <see cref="P:Infragistics.Documents.Excel.Sheet.IsProtected"/> returns 
            false) the method will not do anything. Also, if the Sheet was not protected with a password (i.e. <see cref="P:Infragistics.Documents.Excel.Sheet.HasProtectionPassword"/> 
            returns false) the specified password will not be used and the protection will removed as if the <see cref="M:Infragistics.Documents.Excel.Sheet.Unprotect"/> 
            method had been invoked.</p>
            </remarks>
            <param name="password">The password to validate against the current Sheet protection password</param>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.IsProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.HasProtectionPassword"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.Security.SecureString)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.Protect(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.Security.SecureString)">
            <summary>
            Attempts to use the specified password to remove the Sheet protection currently in place.
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> If the Sheet is not currently protected (i.e. <see cref="P:Infragistics.Documents.Excel.Sheet.IsProtected"/> returns 
            false) the method will not do anything. Also, if the Sheet was not protected with a password (i.e. <see cref="P:Infragistics.Documents.Excel.Sheet.HasProtectionPassword"/> 
            returns false) the specified password will not be used and the protection will removed as if the <see cref="M:Infragistics.Documents.Excel.Sheet.Unprotect"/> 
            method had been invoked.</p>
            </remarks>
            <param name="password">The password to validate against the current Sheet protection password</param>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.IsProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.HasProtectionPassword"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.Protect(System.Security.SecureString,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sheet.HasProtectionPassword">
            <summary>
            Returns a boolean indicating if the Sheet has been protected with a password.
            </summary>
            <remarks>
            <p class="body">When protecting a Sheet, a password is optional. The HasProtectionPassword will return true if the 
            Sheet is currently protected (see <see cref="P:Infragistics.Documents.Excel.Sheet.IsProtected"/>) and a password was specified when it was protected. To protect 
            a sheet without a password, one may use the <see cref="M:Infragistics.Documents.Excel.Worksheet.Protect(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/> 
            method that doesn't take a password. To require a specific password to be entered in order to unprotect the Sheet one 
            could use one of the other overloads that take a pasword (e.g.<see cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.String)"/>).</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.IsProtected"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetProtection"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.Protect(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.Protect(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.Protect(System.Security.SecureString,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.Security.SecureString)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sheet.IsProtected">
            <summary>
            Returns a boolean indicating if the Worksheet has been protected.
            </summary>
            <remarks>
            <p class="body">The IsProtected property will return true if the Sheet is currently protected.</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.HasProtectionPassword"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.SheetProtection"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetProtection"/>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartsheetProtection"/>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Protection"/>
            <seealso cref="P:Infragistics.Documents.Excel.Chartsheet.Protection"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.Security.SecureString)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sheet.Name">
            <summary>
            Gets or sets the sheet name.
            </summary>
            <remarks>
            <p class="body">The sheet name is case-insensitively unique in the workbook.</p>
            <p class="body">
            The sheet name is shown in the tab for the worksheet. In addition, the worksheet name can be used by formulas 
            from other worksheets to refer to cells in this worksheet.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            The value assigned is null or empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value assigned contains the invalid characters: ':', '\', '/', '?', '*', '[', or ']'.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value assigned exceeds 31 characters in length.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value assigned is being used as the name of another sheet (sheet names are case-insensitively compared).
            </exception>
            <value>The sheet name.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sheet.Selected">
            <summary>
            Gets the value which indicates whether this worksheet is selected.
            </summary>
            <remarks>
            <p class="body">
            If the worksheet has been removed from its parent <see cref="P:Infragistics.Documents.Excel.Workbook.Worksheets"/> collection, this will always return False.
            </p>
            </remarks>
            <value>The value which indicates whether this worksheet is selected.</value>
            <seealso cref="T:Infragistics.Documents.Excel.WindowOptions"/>
            <seealso cref="T:WindowOptions.SelectedWorksheet"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sheet.SheetIndex">
            <summary>
            Gets the zero-based index of this sheet in its parent <see cref="P:Infragistics.Documents.Excel.Workbook.Sheets"/> collection.
            </summary>
            <remarks>
            <p class="body">
            Negative one indicates the sheet has been removed from its parent collection.
            </p>
            </remarks>
            <value>The zero-based index of this sheet in its parent Sheets collection.</value>
            <seealso cref="M:Infragistics.Documents.Excel.SheetCollection.IndexOf(Infragistics.Documents.Excel.Sheet)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.MoveToSheetIndex(System.Int32)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sheet.TabColorInfo">
            <summary>
            Gets or sets the <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> to use for the associated sheet's tab in the tab bar of Microsoft Excel.
            </summary>
            <remarks>
            <p class="body">
            If the tab bar is not visible, this color will not be seen.
            </p>
            </remarks>
            <value>The WorkbookColorInfo to use for the associated sheet's tab in the tab bar of Microsoft Excel.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WindowOptions.TabBarVisible"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sheet.Type">
            <summary>
            Returns a value indicating the type of sheet
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sheet.Workbook">
            <summary>
            Gets the <see cref="P:Infragistics.Documents.Excel.Sheet.Workbook"/> that owns the worksheet.
            </summary>
            <value>The Workbook that owns the worksheet.</value>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sheet.MoveToSheetIndex(System.Int32)">
            <summary>
            Moves the sheet to a new position in the owning workbook's collections of sheets.
            </summary>
            <param name="index">The new 0-based index to where the sheet should be moved.</param>
            <exception cref="T:System.InvalidOperationException">
            The sheet has previously been removed from its workbook.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than or equal to the number of sheets in the owning workbook.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.Sheets"/>
            <seealso cref="M:Infragistics.Documents.Excel.SheetCollection.IndexOf(Infragistics.Documents.Excel.Sheet)"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.SheetIndex"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sheet.Unprotect">
            <summary>
            Removes the Sheet protection.
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> If the <see cref="P:Infragistics.Documents.Excel.Sheet.HasProtectionPassword"/> returns true and you only want to 
            remove the protection if the correct password was provided then the <see cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.String)"/> 
            should be used instead.</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.IsProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.HasProtectionPassword"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.Protect(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.Security.SecureString)"/>
        </member>
        <member name="E:Infragistics.Documents.Excel.Sheet.PropertyChanged">
            <summary>
            Occurs after a property value has changed
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Chartsheet">
            <summary>
            A sheet in a Mirosoft Excel workbook that displays a single chart.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Chartsheet.Protect(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Protects the Chartsheet with the specified password.
            </summary>
            <param name="password">The password used to protect the Worksheet.</param>
            <param name="allowEditObjects">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.Charts.ChartsheetProtection.AllowEditObjects" />.</param>
            <param name="allowEditContents">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.Charts.ChartsheetProtection.AllowEditContents" />.</param>
            <remarks>
            <p class="body">When a Chartsheet is protected without a password, the end user may unprotect the Chartsheet in Excel without 
            having to supply a password. To programatically unprotect a Chartsheet, one may use the <see cref="M:Infragistics.Documents.Excel.Sheet.Unprotect"/> method.</p>
            <p class="body">The optional parameters are used to update the property values of the <see cref="T:Infragistics.Documents.Excel.Charts.ChartsheetProtection"/> instance from 
            this Chartsheet's <see cref="P:Infragistics.Documents.Excel.Chartsheet.Protection"/> property. If the parameter is null, the current value of the associated property will 
            be retained; otherwise the property will be updated with the specified value. For example, if the <see cref="P:Infragistics.Documents.Excel.Charts.ChartsheetProtection.AllowEditObjects"/> 
            is currently true and the <paramref name="allowEditObjects"/> is null, then the property will continue to be true but if the 
            <paramref name="allowEditObjects"/> is false the <see cref="P:Infragistics.Documents.Excel.Charts.ChartsheetProtection.AllowEditObjects"/> will be changed to false.</p>
            <p class="note"><b>Note:</b> If <see cref="P:Infragistics.Documents.Excel.Sheet.IsProtected"/> is already true, the method will be ignored.</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.HasProtectionPassword"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.IsProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.Chartsheet.Protection"/>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartsheetProtection"/>
            <seealso cref="M:Infragistics.Documents.Excel.Chartsheet.Protect(System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Chartsheet.Protect(System.Security.SecureString,System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.String)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Chartsheet.Protect(System.Security.SecureString,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Protects the Chartsheet with the specified password.
            </summary>
            <param name="password">The password used to protect the Worksheet.</param>
            <param name="allowEditObjects">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.Charts.ChartsheetProtection.AllowEditObjects" />.</param>
            <param name="allowEditContents">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.Charts.ChartsheetProtection.AllowEditContents" />.</param>
            <remarks>
            <p class="body">When a Chartsheet is protected without a password, the end user may unprotect the Chartsheet in Excel without 
            having to supply a password. To programatically unprotect a Chartsheet, one may use the <see cref="M:Infragistics.Documents.Excel.Sheet.Unprotect"/> method.</p>
            <p class="body">The optional parameters are used to update the property values of the <see cref="T:Infragistics.Documents.Excel.Charts.ChartsheetProtection"/> instance from 
            this Chartsheet's <see cref="P:Infragistics.Documents.Excel.Chartsheet.Protection"/> property. If the parameter is null, the current value of the associated property will 
            be retained; otherwise the property will be updated with the specified value. For example, if the <see cref="P:Infragistics.Documents.Excel.Charts.ChartsheetProtection.AllowEditObjects"/> 
            is currently true and the <paramref name="allowEditObjects"/> is null, then the property will continue to be true but if the 
            <paramref name="allowEditObjects"/> is false the <see cref="P:Infragistics.Documents.Excel.Charts.ChartsheetProtection.AllowEditObjects"/> will be changed to false.</p>
            <p class="note"><b>Note:</b> If <see cref="P:Infragistics.Documents.Excel.Sheet.IsProtected"/> is already true, the method will be ignored.</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.HasProtectionPassword"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.IsProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.Chartsheet.Protection"/>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartsheetProtection"/>
            <seealso cref="M:Infragistics.Documents.Excel.Chartsheet.Protect(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Chartsheet.Protect(System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.Security.SecureString)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Chartsheet.Type">
            <summary>
            Returns Chartsheet
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Chartsheet.Chart">
            <summary>
            Returns the <see cref="T:Infragistics.Documents.Excel.WorksheetChart"/> displayed in this chartsheet.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Chartsheet.DisplayOptions">
            <summary>
            Gets the object which controls the display of the chartsheet.
            </summary>
            <remarks>
            <p class="body">
            The display options include any settings which affect the display of the chartsheet when viewed in Microsoft Excel.
            These settings will not affect the printed chartsheet or the data stored in the chartsheet.
            </p>
            </remarks>
            <value>The object which controls the display of the chartsheet.</value>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetSheetDisplayOptions(Infragistics.Documents.Excel.Sheet,System.Boolean)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Chartsheet.ImageBackground">
            <summary>
            Gets or sets the background image for the worksheet.
            </summary>
            <remarks>
            <p class="body">
            This image is tiled across the background of the worksheet.  If null, the worksheet will have no background.
            </p>
            </remarks>
            <value>The background image for the worksheet.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Chartsheet.PrintOptions">
            <summary>
            Gets the object which controls how the chartsheet prints.
            </summary>
            <value>The object which controls how the chartsheet prints.</value>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetSheetPrintOptions(Infragistics.Documents.Excel.Sheet,System.Boolean)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Chartsheet.Protection">
            <summary>
            Returns an object that provides information used when the Chartsheet has been protected.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.HasProtectionPassword"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.IsProtected"/>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartsheetProtection"/>
            <seealso cref="M:Infragistics.Documents.Excel.Chartsheet.Protect(System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Chartsheet.Protect(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Chartsheet.Protect(System.Security.SecureString,System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.Security.SecureString)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Chartsheet.Protect(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Protects the chartsheet without a password.
            </summary>
            <param name="allowEditObjects">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.Charts.ChartsheetProtection.AllowEditObjects" />.</param>
            <param name="allowEditContents">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.Charts.ChartsheetProtection.AllowEditContents" />.</param>
            <remarks>
            <p class="body">When a Worksheet is protected without a password, the end user may unprotect the Chartsheet in Excel without 
            having to supply a password. To programatically unprotect a Chartsheet, one may use the <see cref="M:Infragistics.Documents.Excel.Sheet.Unprotect"/> method.</p>
            <p class="body">The optional parameters are used to update the property values of the <see cref="T:Infragistics.Documents.Excel.Charts.ChartsheetProtection"/> instance from 
            this Chartsheet's <see cref="P:Infragistics.Documents.Excel.Chartsheet.Protection"/> property. If the parameter is null, the current value of the associated property will 
            be retained; otherwise the property will be updated with the specified value. For example, if the <see cref="P:Infragistics.Documents.Excel.Charts.ChartsheetProtection.AllowEditObjects"/> 
            is currently true and the <paramref name="allowEditObjects"/> is null, then the property will continue to be true but if the 
            <paramref name="allowEditObjects"/> is false the <see cref="P:Infragistics.Documents.Excel.Charts.ChartsheetProtection.AllowEditObjects"/> will be changed to false.</p>
            <p class="note"><b>Note:</b> If <see cref="P:Infragistics.Documents.Excel.Sheet.IsProtected"/> is already true, the method will be ignored.</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.HasProtectionPassword"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.IsProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.Chartsheet.Protection"/>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartsheetProtection"/>
            <seealso cref="M:Infragistics.Documents.Excel.Chartsheet.Protect(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Chartsheet.Protect(System.Security.SecureString,System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.Security.SecureString)"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Worksheet">
            <summary>
            Represents one worksheet in a Microsoft Excel workbook.
            </summary>
            <remarks>
            <p class="body">
            An Excel worksheet is essentially a table with a limited number of rows and columns. To create new worksheet, use 
            <see cref="M:Infragistics.Documents.Excel.WorksheetCollection.Add(System.String)"/> method of the <see cref="P:Infragistics.Documents.Excel.Workbook.Worksheets"/> 
            collection on a <see cref="T:Infragistics.Documents.Excel.Workbook"/> instance.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.Protect(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Protects the worksheet with the specified password.
            </summary>
            <param name="password">The password used to protect the Worksheet.</param>
            <param name="allowDeletingColumns">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowDeletingColumns" />.</param>
            <param name="allowDeletingRows">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowDeletingRows" />.</param>
            <param name="allowEditObjects">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowEditObjects" />.</param>
            <param name="allowEditScenarios">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowEditScenarios" />.</param>
            <param name="allowFiltering">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowFiltering" />.</param>
            <param name="allowFormattingCells">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowFormattingCells" />.</param>
            <param name="allowFormattingColumns">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowFormattingColumns" />.</param>
            <param name="allowFormattingRows">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowFormattingRows" />.</param>
            <param name="allowInsertingColumns">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowInsertingColumns" />.</param>
            <param name="allowInsertingHyperlinks">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowInsertingHyperlinks" />.</param>
            <param name="allowInsertingRows">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowInsertingRows" />.</param>
            <param name="allowSorting">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowSorting" />.</param>
            <param name="allowUsingPivotTables">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowUsingPivotTables" />.</param>
            <remarks>
            <p class="body">When a Worksheet is protected without a password, the end user may unprotect the Worksheet in Excel without 
            having to supply a password. To programatically unprotect a Worksheet, one may use the <see cref="M:Infragistics.Documents.Excel.Sheet.Unprotect"/> method.</p>
            <p class="body">The optional parameters are used to update the property values of the <see cref="T:Infragistics.Documents.Excel.WorksheetProtection"/> instance from 
            this Worksheet's <see cref="P:Infragistics.Documents.Excel.Worksheet.Protection"/> property. If the parameter is null, the current value of the associated property will 
            be retained; otherwise the property will be updated with the specified value. For example, if the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowDeletingColumns"/> 
            is currently true and the <paramref name="allowDeletingColumns"/> is null, then the property will continue to be true but if the 
            <paramref name="allowDeletingColumns"/> is false the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowDeletingColumns"/> will be changed to false.</p>
            <p class="body">When one protects a Worksheet in Excel, the UI allows one to choose which cells may be selected. To affect this state one would 
            change the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.SelectionMode"/> property before or after protecting the Worksheet.</p>
            <p class="note"><b>Note:</b> If <see cref="P:Infragistics.Documents.Excel.Sheet.IsProtected"/> is already true, the method will be ignored.</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.HasProtectionPassword"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.IsProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Protection"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetProtection"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.Protect(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.Protect(System.Security.SecureString,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.String)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.Protect(System.Security.SecureString,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Protects the worksheet with the specified password.
            </summary>
            <param name="password">The password used to protect the Worksheet.</param>
            <param name="allowDeletingColumns">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowDeletingColumns" />.</param>
            <param name="allowDeletingRows">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowDeletingRows" />.</param>
            <param name="allowEditObjects">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowEditObjects" />.</param>
            <param name="allowEditScenarios">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowEditScenarios" />.</param>
            <param name="allowFiltering">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowFiltering" />.</param>
            <param name="allowFormattingCells">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowFormattingCells" />.</param>
            <param name="allowFormattingColumns">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowFormattingColumns" />.</param>
            <param name="allowFormattingRows">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowFormattingRows" />.</param>
            <param name="allowInsertingColumns">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowInsertingColumns" />.</param>
            <param name="allowInsertingHyperlinks">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowInsertingHyperlinks" />.</param>
            <param name="allowInsertingRows">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowInsertingRows" />.</param>
            <param name="allowSorting">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowSorting" />.</param>
            <param name="allowUsingPivotTables">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowUsingPivotTables" />.</param>
            <remarks>
            <p class="body">When a Worksheet is protected without a password, the end user may unprotect the Worksheet in Excel without 
            having to supply a password. To programatically unprotect a Worksheet, one may use the <see cref="M:Infragistics.Documents.Excel.Sheet.Unprotect"/> method.</p>
            <p class="body">The optional parameters are used to update the property values of the <see cref="T:Infragistics.Documents.Excel.WorksheetProtection"/> instance from 
            this Worksheet's <see cref="P:Infragistics.Documents.Excel.Worksheet.Protection"/> property. If the parameter is null, the current value of the associated property will 
            be retained; otherwise the property will be updated with the specified value. For example, if the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowDeletingColumns"/> 
            is currently true and the <paramref name="allowDeletingColumns"/> is null, then the property will continue to be true but if the 
            <paramref name="allowDeletingColumns"/> is false the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowDeletingColumns"/> will be changed to false.</p>
            <p class="body">When one protects a Worksheet in Excel, the UI allows one to choose which cells may be selected. To affect this state one would 
            change the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.SelectionMode"/> property before or after protecting the Worksheet.</p>
            <p class="note"><b>Note:</b> If <see cref="P:Infragistics.Documents.Excel.Sheet.IsProtected"/> is already true, the method will be ignored.</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.HasProtectionPassword"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.IsProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Protection"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetProtection"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.Protect(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.Protect(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.Security.SecureString)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.ClearConditionalFormattingData">
            <summary>
            Clears all conditional formatting rules from the <see cref="T:Infragistics.Documents.Excel.Worksheet"/> so they do not get saved.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> this method is obsolete. Use the Worksheet.ConditionalFormats.Clear() method instead.</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.DeleteCells(Infragistics.Documents.Excel.WorksheetRegion,System.Boolean)">
            <summary>
            Deletes a region of cells.
            </summary>
            <param name="region">The region to delete</param>
            <param name="shiftCellsLeft">If true will shift cells left from the right of the region to occupy the deleted region, otherwise will shift cells up from below the region.</param>
            <exception cref="T:System.InvalidOperationException">If the operation is not allowed, e.g. if it the range intersects with a protected region.</exception>
            <exception cref="T:System.ArgumentNullException">If region is null.</exception>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.DeleteCells(System.String,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.InsertCells(Infragistics.Documents.Excel.WorksheetRegion,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.InsertCells(System.String,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.DeleteCells(System.String,System.Boolean)">
            <summary>
            Deletes a region of cells.
            </summary>
            <param name="address">The address of the region to delete</param>
            <param name="shiftCellsLeft">If true will shift cells left from the right of the region to occupy the deleted region, otherwise will shift cells up from below the region.</param>
            <exception cref="T:System.InvalidOperationException">If the operation is not allowed, e.g. if it the range intersects with a protected region.</exception>
            <exception cref="T:System.ArgumentException">If address is not valid.</exception>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.DeleteCells(Infragistics.Documents.Excel.WorksheetRegion,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.InsertCells(Infragistics.Documents.Excel.WorksheetRegion,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.InsertCells(System.String,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetCell(System.String)">
            <summary>
            Gets the cell at the specified address or name.
            </summary>
            <remarks>
            <p class="body">
            The <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> of the workbook will be used to parse the cell address.
            </p>
            <p class="body">
            If one or more region references are specified instead of a cell reference, the top-left cell of the first region will be returned.
            </p>
            <p class="body">
            If a name is specified, it must refer to a cell or region in the <see cref="T:Infragistics.Documents.Excel.Worksheet"/> and it must be scoped to the <see cref="T:Infragistics.Documents.Excel.Workbook"/> 
            or the Worksheet or null will be returned.
            </p>
            </remarks>
            <param name="address">The address or name of the cell.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="address"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address"/> is not a valid name or a valid cell or region address in the workbook's cell reference mode.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="address"/> is a relative R1C1 address. The overload taking an origin cell must be used to resolve relative R1C1 references.
            </exception>
            <returns>A cell represented by the specified address or name.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetCell(System.String,Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>
            Gets the cell at the specified address or name.
            </summary>
            <remarks>
            <p class="body">
            If one or more region references are specified instead of a cell reference, the top-left cell of the first region will be returned.
            </p>
            <p class="body">
            If a name is specified, it must refer to a cell or region in the <see cref="T:Infragistics.Documents.Excel.Worksheet"/> and it must be scoped to the <see cref="T:Infragistics.Documents.Excel.Workbook"/> 
            or the Worksheet or null will be returned.
            </p>
            </remarks>
            <param name="address">The address or name of the cell.</param>
            <param name="cellReferenceMode">The cell reference mode to use to parse the cell address.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="address"/> is null.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address"/> is not a valid name or a valid cell or region address in the specified cell reference mode.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="address"/> is a relative R1C1 address. The overload taking an origin cell must be used to resolve relative R1C1 references.
            </exception>
            <returns>A cell represented by the specified address or name.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetCell(System.String,Infragistics.Documents.Excel.WorksheetCell)">
            <summary>
            Gets the cell at the specified address or name.
            </summary>
            <remarks>
            <p class="body">
            The <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> of the workbook will be used to parse the cell address.
            </p>
            <p class="body">
            If one or more region references are specified instead of a cell reference, the top-left cell of the first region will be returned.
            </p>
            <p class="body">
            The origin cell specified will not be used if a name is specified, if the workbook has an A1 cell reference mode, or if an absolute R1C1 
            address is specified.
            </p>
            <p class="body">
            If a name is specified, it must refer to a cell or region in the <see cref="T:Infragistics.Documents.Excel.Worksheet"/> and it must be scoped to the <see cref="T:Infragistics.Documents.Excel.Workbook"/> 
            or the Worksheet or null will be returned.
            </p>
            </remarks>
            <param name="address">The address or name of the cell.</param>
            <param name="originCell">The origin for resolving relative R1C1 references.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="address"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address"/> is not a valid name or a valid cell or region address in the workbook's cell reference mode.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="address"/> is a relative R1C1 address and <paramref name="originCell"/> is null. An origin cell must be specified to resolve relative 
            R1C1 references.
            </exception>
            <returns>A cell represented by the specified address or name.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetCell(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorksheetCell)">
            <summary>
            Gets the cell at the specified address or name.
            </summary>
            <remarks>
            <p class="body">
            If one or more region references are specified instead of a cell reference, the top-left cell of the first region will be returned.
            </p>
            <p class="body">
            The origin cell specified will not be used if a name is specified, if the workbook has an A1 cell reference mode, or if an absolute R1C1 
            address is specified.
            </p>
            <p class="body">
            If a name is specified, it must refer to a cell or region in the <see cref="T:Infragistics.Documents.Excel.Worksheet"/> and it must be scoped to the <see cref="T:Infragistics.Documents.Excel.Workbook"/> 
            or the Worksheet or null will be returned.
            </p>
            </remarks>
            <param name="address">The address or name of the cell.</param>
            <param name="cellReferenceMode">The cell reference mode to use to parse the cell address.</param>
            <param name="originCell">The origin for resolving relative R1C1 references.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="address"/> is null.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address"/> is not a valid name or a valid cell or region address in the specified cell reference mode.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="address"/> is a relative R1C1 address and <paramref name="originCell"/> is null. An origin cell must be specified to resolve relative 
            R1C1 references.
            </exception>
            <returns>A cell represented by the specified address or name.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetCellConditionalFormat(System.Int32,System.Int32)">
            <summary>
            Gets the cell conditional format for the cell at the specified row and column index.
            </summary>
            <param name="rowIndex">The 0-based index of the WorksheetRow within the <see cref="P:Infragistics.Documents.Excel.Worksheet.Rows"/> collection.</param>
            <param name="columnIndex">The 0-based index of the cell within the <see cref="T:Infragistics.Documents.Excel.WorksheetRow"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="rowIndex"/> is less than zero or greater than or equal to the number of rows in the worksheet.
            <paramref name="columnIndex"/> is less than zero or greater than or equal to the number of columns in the worksheet.
            </exception>
            <returns>The aggregated condition format for the cell at the specified column index or null if the cell is not contained in any conditional format region.</returns>
            <remarks>
            <para class="note"><b>Note:</b> if the cell is contained in one or more conditional format regions but doesn't match any of thse criteria an instance of <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.CellConditionalFormat"/>
            will still be returned but its <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CellConditionalFormat.HasConditionFormatting"/> property will return null. However, if the sell is not contained in any
            conditional format region then this method will return null.</para>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellConditionalFormat(System.Int32)">WorksheetRow.GetCellConditionalFormat</seealso>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.ConditionalFormats"/>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.CellConditionalFormat"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetDefaultColumnWidth(Infragistics.Documents.Excel.WorksheetColumnWidthUnit)">
            <summary>
            Gets the default column width in the specified units.
            </summary>
            <remarks>
            <p class="body">
            If <paramref name="units"/> is Character256th, the value returned will be the same as the value of the 
            <see cref="P:Infragistics.Documents.Excel.Worksheet.DefaultColumnWidth"/> property.
            </p>
            </remarks>
            <param name="units">The units in which the width should be returned.</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="units"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorksheetColumnWidthUnit"/> enumeration.
            </exception>
            <returns>The default column width in the specified units.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DefaultColumnWidth"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.SetDefaultColumnWidth(System.Double,Infragistics.Documents.Excel.WorksheetColumnWidthUnit)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetColumn.GetWidth(Infragistics.Documents.Excel.WorksheetColumnWidthUnit)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetRegion(System.String)">
            <summary>
            Gets the region at the specified address or name.
            </summary>
            <remarks>
            <p class="body">
            The <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> of the workbook will be used to parse the region address.
            </p>
            <p class="body">
            If a cell reference is specified instead of a region reference, a 1x1 region containing the cell at the address will be returned.
            </p>
            <p class="body">
            If a list of references is specified, the region specified by the first reference will be returned.
            </p>
            <p class="body">
            If a name is specified, it must refer to a cell or region in the <see cref="T:Infragistics.Documents.Excel.Worksheet"/> and it must be scoped to the <see cref="T:Infragistics.Documents.Excel.Workbook"/> 
            or the Worksheet or null will be returned.
            </p>
            </remarks>
            <param name="address">The address or name of the region.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="address"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address"/> is not a valid name or a valid cell or region address in the workbook's cell reference mode.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="address"/> is a relative R1C1 address. The overload taking an origin cell must be used to resolve relative R1C1 references.
            </exception>
            <returns>A region represented by the specified address or name.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetRegion(System.String,Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>
            Gets the region at the specified address or name.
            </summary>
            <remarks>
            <p class="body">
            If a cell reference is specified instead of a region reference, a 1x1 region containing the cell at the address will be returned.
            </p>
            <p class="body">
            If a list of references is specified, the region specified by the first reference will be returned.
            </p>
            <p class="body">
            If a name is specified, it must refer to a cell or region in the <see cref="T:Infragistics.Documents.Excel.Worksheet"/> and it must be scoped to the <see cref="T:Infragistics.Documents.Excel.Workbook"/> 
            or the Worksheet or null will be returned.
            </p>
            </remarks>
            <param name="address">The address or name of the region.</param>
            <param name="cellReferenceMode">The cell reference mode to use to parse the region address.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="address"/> is null.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address"/> is not a valid name or a valid cell or region address in the specified cell reference mode.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="address"/> is a relative R1C1 address. The overload taking an origin cell must be used to resolve relative R1C1 references.
            </exception>
            <returns>A region represented by the specified address or name.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetRegion(System.String,Infragistics.Documents.Excel.WorksheetCell)">
            <summary>
            Gets the region at the specified address or name.
            </summary>
            <remarks>
            <p class="body">
            The <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> of the workbook will be used to parse the region address.
            </p>
            <p class="body">
            If a cell reference is specified instead of a region reference, a 1x1 region containing the cell at the address will be returned.
            </p>
            <p class="body">
            If a list of references is specified, the region specified by the first reference will be returned.
            </p>
            <p class="body">
            The origin cell specified will not be used if a name is specified, if the workbook has an A1 cell reference mode, or if an absolute R1C1 
            address is specified.
            </p>
            <p class="body">
            If a name is specified, it must refer to a cell or region in the <see cref="T:Infragistics.Documents.Excel.Worksheet"/> and it must be scoped to the <see cref="T:Infragistics.Documents.Excel.Workbook"/> 
            or the Worksheet or null will be returned.
            </p>
            </remarks>
            <param name="address">The address or name of the region.</param>
            <param name="originCell">The origin for resolving relative R1C1 references.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="address"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address"/> is not a valid name or a valid cell or region address in the workbook's cell reference mode.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="address"/> is a relative R1C1 address and <paramref name="originCell"/> is null. An origin cell must be specified to resolve relative 
            R1C1 references.
            </exception>
            <returns>A region represented by the specified address or name.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetRegion(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorksheetCell)">
            <summary>
            Gets the region at the specified address or name.
            </summary>
            <remarks>
            <p class="body">
            If a cell reference is specified instead of a region reference, a 1x1 region containing the cell at the address will be returned.
            </p>
            <p class="body">
            If a list of references is specified, the region specified by the first reference will be returned.
            </p>
            <p class="body">
            The origin cell specified will not be used if a name is specified, if the workbook has an A1 cell reference mode, or if an absolute R1C1 
            address is specified.
            </p>
            <p class="body">
            If a name is specified, it must refer to a cell or region in the <see cref="T:Infragistics.Documents.Excel.Worksheet"/> and it must be scoped to the <see cref="T:Infragistics.Documents.Excel.Workbook"/> 
            or the Worksheet or null will be returned.
            </p>
            </remarks>
            <param name="address">The address or name of the region.</param>
            <param name="cellReferenceMode">The cell reference mode to use to parse the region address.</param>
            <param name="originCell">The origin for resolving relative R1C1 references.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="address"/> is null.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address"/> is not a valid name or a valid cell or region address in the specified cell reference mode.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="address"/> is a relative R1C1 address and <paramref name="originCell"/> is null. An origin cell must be specified to resolve relative 
            R1C1 references.
            </exception>
            <returns>A region represented by the specified address or name.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetRegions(System.String)">
            <summary>
            Gets the regions at the specified address or name.
            </summary>
            <remarks>
            <p class="body">
            The <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> of the workbook will be used to parse the region address.
            </p>
            <p class="body">
            The address can be a list of references, each one referring to a separate region on the Worksheet.
            </p>
            <p class="body">
            If a cell or single region reference is specified instead, an array of one region at the address will be returned.
            </p>
            <p class="body">
            If a name is specified, it must refer to cells or regions in the <see cref="T:Infragistics.Documents.Excel.Worksheet"/> and it must be scoped to the <see cref="T:Infragistics.Documents.Excel.Workbook"/> 
            or the Worksheet or null will be returned.
            </p>
            </remarks>
            <param name="address">The address or name of the region.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="address"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address"/> is not a valid name or a valid cell or region address in the workbook's cell reference mode.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="address"/> is a relative R1C1 address. The overload taking an origin cell must be used to resolve relative R1C1 references.
            </exception>
            <returns>An array of regions represented by the specified address or name.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetRegions(System.String,Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>
            Gets the regions at the specified address or name.
            </summary>
            <remarks>
            <p class="body">
            The address can be a list of references, each one referring to a separate region on the Worksheet.
            </p>
            <p class="body">
            If a cell or single region reference is specified instead, an array of one region at the address will be returned.
            </p>
            <p class="body">
            If a name is specified, it must refer to cells or regions in the <see cref="T:Infragistics.Documents.Excel.Worksheet"/> and it must be scoped to the <see cref="T:Infragistics.Documents.Excel.Workbook"/> 
            or the Worksheet or null will be returned.
            </p>
            </remarks>
            <param name="address">The address or name of the region.</param>
            <param name="cellReferenceMode">The cell reference mode to use to parse the region address.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="address"/> is null.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address"/> is not a valid name or a valid cell or region address in the specified cell reference mode.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="address"/> is a relative R1C1 address. The overload taking an origin cell must be used to resolve relative R1C1 references.
            </exception>
            <returns>An array of regions represented by the specified address or name.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetRegions(System.String,Infragistics.Documents.Excel.WorksheetCell)">
            <summary>
            Gets the regions at the specified address or name.
            </summary>
            <remarks>
            <p class="body">
            The <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> of the workbook will be used to parse the region address.
            </p>
            <p class="body">
            The address can be a list of references, each one referring to a separate region on the Worksheet.
            </p>
            <p class="body">
            If a cell or single region reference is specified instead, an array of one region at the address will be returned.
            </p>
            <p class="body">
            The origin cell specified will not be used if a name is specified, if the workbook has an A1 cell reference mode, or if an absolute R1C1 
            address is specified.
            </p>
            <p class="body">
            If a name is specified, it must refer to cells or regions in the <see cref="T:Infragistics.Documents.Excel.Worksheet"/> and it must be scoped to the <see cref="T:Infragistics.Documents.Excel.Workbook"/> 
            or the Worksheet or null will be returned.
            </p>
            </remarks>
            <param name="address">The address or name of the region.</param>
            <param name="originCell">The origin for resolving relative R1C1 references.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="address"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address"/> is not a valid name or a valid cell or region address in the workbook's cell reference mode.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="address"/> is a relative R1C1 address and <paramref name="originCell"/> is null. An origin cell must be specified to resolve relative 
            R1C1 references.
            </exception>
            <returns>An array of regions represented by the specified address or name.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetRegions(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorksheetCell)">
            <summary>
            Gets the regions at the specified address or name.
            </summary>
            <remarks>
            <p class="body">
            The address can be a list of references, each one referring to a separate region on the Worksheet.
            </p>
            <p class="body">
            If a cell or single region reference is specified instead, an array of one region at the address will be returned.
            </p>
            <p class="body">
            The origin cell specified will not be used if a name is specified, if the workbook has an A1 cell reference mode, or if an absolute R1C1 
            address is specified.
            </p>
            <p class="body">
            If a name is specified, it must refer to cells or regions in the <see cref="T:Infragistics.Documents.Excel.Worksheet"/> and it must be scoped to the <see cref="T:Infragistics.Documents.Excel.Workbook"/> 
            or the Worksheet or null will be returned.
            </p>
            </remarks>
            <param name="address">The address or name of the region.</param>
            <param name="cellReferenceMode">The cell reference mode to use to parse the region address.</param>
            <param name="originCell">The origin for resolving relative R1C1 references.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="address"/> is null.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address"/> is not a valid name or a valid cell or region address in the specified cell reference mode.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="address"/> is a relative R1C1 address and <paramref name="originCell"/> is null. An origin cell must be specified to resolve relative 
            R1C1 references.
            </exception>
            <returns>An array of regions represented by the specified address or name.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion"/>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.InsertCells(Infragistics.Documents.Excel.WorksheetRegion,System.Boolean)">
            <summary>
            Inserts a region of cells.
            </summary>
            <param name="region">The region to insert</param>
            <param name="shiftCellsRight">If true will shift existing cells right to make room for the newly inserted cells, otherwise will shift existing cells down below the region.</param>
            <exception cref="T:System.InvalidOperationException">If the operation is not allowed, e.g. if it would cause data to be shifted off the worksheet.</exception>
            <exception cref="T:System.ArgumentNullException">If region is null.</exception>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.InsertCells(System.String,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.DeleteCells(Infragistics.Documents.Excel.WorksheetRegion,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.DeleteCells(System.String,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.InsertCells(System.String,System.Boolean)">
            <summary>
            Inserts a region of cells.
            </summary>
            <param name="address">The region to insert</param>
            <param name="shiftCellsRight">If true will shift existing cells right to make room for the newly inserted cells, otherwise will shift existing cells down below the region.</param>
            <exception cref="T:System.InvalidOperationException">If the operation is not allowed, e.g. if it would cause data to be shifted off the worksheet.</exception>
            <exception cref="T:System.ArgumentException">If address is not valid.</exception>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.InsertCells(Infragistics.Documents.Excel.WorksheetRegion,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.DeleteCells(Infragistics.Documents.Excel.WorksheetRegion,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.DeleteCells(System.String,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.HideColumns(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Hides the columns in the specified range.
            </summary>
            <param name="startIndex">The index of the first column to hide, or null to start hiding at the first column.</param>
            <param name="count">
            The number of columns to hide. If null, a single column will be hidden when <paramref name="startIndex"/> is specified and 
            otherwise, all columns will be hidden.
            </param>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="startIndex"/> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="count"/> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="startIndex"/> plus <paramref name="count"/> is greater than the number of columns in the worksheet.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.HideRows(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Hides the rows in the specified range.
            </summary>
            <param name="startIndex">The index of the first row to hide, or null to start hiding at the first row.</param>
            <param name="count">
            The number of rows to hide. If null, a single row will be hidden when <paramref name="startIndex"/> is specified and 
            otherwise, all rows will be hidden.
            </param>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="startIndex"/> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="count"/> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="startIndex"/> plus <paramref name="count"/> is greater than the number of rows in the worksheet.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.MoveToIndex(System.Int32)">
            <summary>
            Moves the worksheet to a new position in the owning workbook's collections of worksheets.
            </summary>
            <param name="index">The new 0-based index to where the worksheet should be moved.</param>
            <exception cref="T:System.InvalidOperationException">
            The worksheet has previously been removed from its workbook.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than or equal to the number of worksheets in the owning workbook.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.Worksheets"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCollection.IndexOf(Infragistics.Documents.Excel.Worksheet)"/>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Index"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.Protect(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Protects the worksheet without a password.
            </summary>
            <param name="allowDeletingColumns">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowDeletingColumns" />.</param>
            <param name="allowDeletingRows">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowDeletingRows" />.</param>
            <param name="allowEditObjects">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowEditObjects" />.</param>
            <param name="allowEditScenarios">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowEditScenarios" />.</param>
            <param name="allowFiltering">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowFiltering" />.</param>
            <param name="allowFormattingCells">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowFormattingCells" />.</param>
            <param name="allowFormattingColumns">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowFormattingColumns" />.</param>
            <param name="allowFormattingRows">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowFormattingRows" />.</param>
            <param name="allowInsertingColumns">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowInsertingColumns" />.</param>
            <param name="allowInsertingHyperlinks">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowInsertingHyperlinks" />.</param>
            <param name="allowInsertingRows">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowInsertingRows" />.</param>
            <param name="allowSorting">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowSorting" />.</param>
            <param name="allowUsingPivotTables">Optional boolean indicating the new value for the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowUsingPivotTables" />.</param>
            <remarks>
            <p class="body">When a Worksheet is protected without a password, the end user may unprotect the Worksheet in Excel without 
            having to supply a password. To programatically unprotect a Worksheet, one may use the <see cref="M:Infragistics.Documents.Excel.Sheet.Unprotect"/> method.</p>
            <p class="body">The optional parameters are used to update the property values of the <see cref="T:Infragistics.Documents.Excel.WorksheetProtection"/> instance from 
            this Worksheet's <see cref="P:Infragistics.Documents.Excel.Worksheet.Protection"/> property. If the parameter is null, the current value of the associated property will 
            be retained; otherwise the property will be updated with the specified value. For example, if the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowDeletingColumns"/> 
            is currently true and the <paramref name="allowDeletingColumns"/> is null, then the property will continue to be true but if the 
            <paramref name="allowDeletingColumns"/> is false the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowDeletingColumns"/> will be changed to false.</p>
            <p class="body">When one protects a Worksheet in Excel, the UI allows one to choose which cells may be selected. To affect this state one would 
            change the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.SelectionMode"/> property before or after protecting the Worksheet.</p>
            <p class="note"><b>Note:</b> If <see cref="P:Infragistics.Documents.Excel.Sheet.IsProtected"/> is already true, the method will be ignored.</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.HasProtectionPassword"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.IsProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Protection"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetProtection"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.Protect(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.Protect(System.Security.SecureString,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.Security.SecureString)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.SetDefaultColumnWidth(System.Double,Infragistics.Documents.Excel.WorksheetColumnWidthUnit)">
            <summary>
            Sets the default column width in the specified units.
            </summary>
            <param name="value">The default column width to set on the worksheet, expressed in the specified <paramref name="units"/>.</param>
            <param name="units">The units in which the <paramref name="value"/> is expressed.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="value"/> is infinity or NaN.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="units"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorksheetColumnWidthUnit"/> enumeration.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DefaultColumnWidth"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.GetDefaultColumnWidth(Infragistics.Documents.Excel.WorksheetColumnWidthUnit)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetColumn.SetWidth(System.Double,Infragistics.Documents.Excel.WorksheetColumnWidthUnit)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.UnhideColumns(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Unhides the columns in the specified range.
            </summary>
            <param name="startIndex">The index of the first column to unhide, or null to start unhiding at the first column.</param>
            <param name="count">
            The number of columns to unhide. If null, a single column will be unhidden when <paramref name="startIndex"/> is specified and 
            otherwise, all columns will be unhidden.
            </param>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="startIndex"/> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="count"/> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="startIndex"/> plus <paramref name="count"/> is greater than the number of columns in the worksheet.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.UnhideRows(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Unhides the rows in the specified range.
            </summary>
            <param name="startIndex">The index of the first row to unhide, or null to start unhiding at the first row.</param>
            <param name="count">
            The number of rows to unhide. If null, a single row will be unhidden when <paramref name="startIndex"/> is specified and 
            otherwise, all rows will be unhidden.
            </param>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="startIndex"/> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="count"/> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="startIndex"/> plus <paramref name="count"/> is greater than the number of rows in the worksheet.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.ValidateCellValue(System.Int32,System.Int32)">
            <summary>
            Returns a boolean indicating if the value of the cell is valid considering its associated <see cref="P:Infragistics.Documents.Excel.WorksheetCell.DataValidationRule"/>
            </summary>
            <param name="rowIndex">Row whose cell is to be validated</param>
            <param name="columnIndex">The 0-based index of the cell within the <see cref="T:Infragistics.Documents.Excel.WorksheetRow"/>.</param>
            <returns>Returns the rule that failed validation or null if the validation was successful.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.Columns">
            <summary>
            Gets the collection of columns in the worksheet.
            </summary>
            <remarks>
            <p class="body">
            The collection of columns is a fixed length collection, with the maximum number of columns in the collection being 
            <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelColumnCount"/> or <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007ColumnCount"/>,
            depending on the <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat">Workbook.CurrentFormat</see>. Internally, the columns 
            are only created and added to the collection when they are requested.
            </p>
            <p class="note">
            <b>Note:</b> Iterating the collection will not create all columns. It will only iterate the columns which have already 
            been used.  To create and iterate all columns in the worksheet use a For loop, iterating from 0 to one less than 
            the maximum column count, and pass in each index to the collection's indexer.
            </p>
            </remarks>
            <value>The collection of columns in the worksheet.</value>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetColumn"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.ConditionalFormats">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection">collection</see>
            to which <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase">conditions</see> can be added to
            control the visual attributes of a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/> based on user-defined criteria.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddAverageCondition(System.String,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionAboveBelow)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddBlanksCondition(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddColorScaleCondition(System.String,Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleType)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddDataBarCondition(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddDateTimeCondition(System.String,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTimePeriod)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddDuplicateCondition(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddErrorsCondition(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddFormulaCondition(System.String,System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddIconSetCondition(System.String,Infragistics.Documents.Excel.FormatConditionIconSet)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddNoBlanksCondition(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddNoErrorsCondition(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddOperatorCondition(System.String,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionOperator)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddRankCondition(System.String,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTopBottom,System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddTextCondition(System.String,System.String,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTextOperator)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddUniqueCondition(System.String)"/>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.DataTables">
            <summary>
            Gets the collection of data tables in the worksheet.
            </summary>
            <value>The collection of data tables in the worksheet.</value>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetDataTable"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.DataValidationRules">
            <summary>
            Gets the collection of data validation rules applied to cells in the Worksheet.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.DataValidationRule"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.DataValidationRule"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.DefaultColumnWidth">
            <summary>
            Gets or sets the default column width including padding, in 256ths of the '0' digit character width in the workbook's default font.
            </summary>
            <remarks>
            <p class="body">
            The default column width is the width of all columns which do not have their width set.
            </p>
            <p class="body">
            The value assigned must be between 0 and 65535. Invalid values will be automatically adjusted to valid values.
            </p>
            <p class="body">
            Setting or getting this property is equivalent to calling <see cref="M:Infragistics.Documents.Excel.Worksheet.SetDefaultColumnWidth(System.Double,Infragistics.Documents.Excel.WorksheetColumnWidthUnit)"/> 
            or <see cref="M:Infragistics.Documents.Excel.Worksheet.GetDefaultColumnWidth(Infragistics.Documents.Excel.WorksheetColumnWidthUnit)"/> using the <see cref="T:Infragistics.Documents.Excel.WorksheetColumnWidthUnit"/> value of Character256th.
            </p>
            </remarks>
            <value>
            The default column width including padding, in 256ths of the '0' digit character width in the workbook's default font.
            </value>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.GetDefaultColumnWidth(Infragistics.Documents.Excel.WorksheetColumnWidthUnit)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.SetDefaultColumnWidth(System.Double,Infragistics.Documents.Excel.WorksheetColumnWidthUnit)"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetColumn.Width"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.CharacterWidth256thsToPixels(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.PixelsToCharacterWidth256ths(System.Double)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.DefaultRowHeight">
            <summary>
            Gets or sets the default row height in twips (1/20th of a point).
            </summary>
            <remarks>
            <p class="body">
            The default row height is the height of all rows which do not have their height explicitly set 
            to a positive number.
            </p>
            <p class="body">
            If the assigned value is -1, the default row height will then be calculated based on the default font 
            for the workbook, and subsequently getting this property will return the font-based default row height.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value assigned is outside the value range of -1 and 8192.
            </exception>
            <value>The default row height in twips (1/20th of a point).</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.DisplayOptions">
            <summary>
            Gets the object which controls the display of the worksheet.
            </summary>
            <remarks>
            <p class="body">
            The display options include any settings which affect the display of the worksheet when viewed in Microsoft Excel.
            These settings will not affect the printed worksheet or the data stored in the worksheet.
            </p>
            </remarks>
            <value>The object which controls the display of the worksheet.</value>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetDisplayOptions(Infragistics.Documents.Excel.Worksheet,System.Boolean)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.FilterSettings">
            <summary>
            Exposes methods to identify a region in the worksheet and to apply filters and optionally sort criteria to that region.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.Hyperlinks">
            <summary>
            Gets the collection of hyperlinks applied to cells and regions in the Worksheet.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetHyperlink"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetHyperlink"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellHyperlink(System.Int32)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.ImageBackground">
            <summary>
            Gets or sets the background image for the worksheet.
            </summary>
            <remarks>
            <p class="body">
            This image is tiled across the background of the worksheet.  If null, the worksheet will have no background.
            </p>
            </remarks>
            <value>The background image for the worksheet.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.Index">
            <summary>
            Gets the zero-based index of this worksheet in its parent <see cref="P:Infragistics.Documents.Excel.Workbook.Worksheets"/> collection.
            </summary>
            <remarks>
            <p class="body">
            Negative one indicates the worksheet has been removed from its parent collection.
            </p>
            </remarks>
            <value>The zero-based index of this worksheet in its parent Worksheets collection.</value>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCollection.IndexOf(Infragistics.Documents.Excel.Worksheet)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.MoveToIndex(System.Int32)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.MergedCellsRegions">
            <summary>
            Gets the collection of merged cell ranges in this worksheet.
            </summary>
            <remarks>
            <p class="body">Use <see cref="M:Infragistics.Documents.Excel.WorksheetMergedCellsRegionCollection.Add(System.Int32,System.Int32,System.Int32,System.Int32)"/> method to add new merged cell ranges to the worksheet.</p>
            </remarks>
            <value>The collection of merged cell ranges in this worksheet.</value>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetMergedCellsRegion"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.PrintOptions">
            <summary>
            Gets the object which controls how the worksheet prints.
            </summary>
            <remarks>
            <p class="body">
            The print options include any settings which affect the printed appearance of the worksheet.  These settings will
            not affect the data in the worksheet.  Although these are not display settings, some worksheet display styles will
            display all or some of the print options, so these settings may affect the display of the worksheet when viewed in 
            Microsoft Excel.
            </p>
            </remarks>
            <value>The object which controls how the worksheet prints.</value>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetPrintOptions(Infragistics.Documents.Excel.Worksheet,System.Boolean)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.Protected">
            <summary>
            Gets or sets the protection state of Excel worksheet.
            </summary>
            <remarks>
            <p class="body">In protected worksheet cells which are locked can not be modified.</p>
            </remarks>
            <value>The protection state of Excel worksheet.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.Protection">
            <summary>
            Returns an object that provides information used when the Worksheet has been protected.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.HasProtectionPassword"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.IsProtected"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetProtection"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.Protect(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.Protect(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.Protect(System.Security.SecureString,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.Security.SecureString)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.Rows">
            <summary>
            Gets the collection of rows in the worksheet.
            </summary>
            <remarks>
            <p class="body">
            The collection of rows is a fixed length collection, with the maximum number of rows in the collection being 
            <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelRowCount"/> or <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007RowCount"/>,
            depending on the <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat">Workbook.CurrentFormat</see>.  Internally, the rows are only created and added to the collection
            when they are requested.
            </p>
            <p class="note">
            <b>Note:</b> Iterating the collection will not create all rows. It will only iterate the rows which have already 
            been used.  To create and iterate all rows in the worksheet use a For loop, iterating from 0 to one less than 
            the maximum row count, and pass in each index to the collection's indexer.
            </p>
            </remarks>
            <value>The collection of rows in the worksheet.</value>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetRow"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.SortSettings">
            <summary>
            Exposes methods to identify a region in the worksheet and to apply sort criteria to that region.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.Shapes">
            <summary>
            Gets the collection of shapes on the worksheet.
            </summary>
            <value>The collection of shapes on the worksheet.</value>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetShape"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.SparklineGroups">
            <summary>
            Returns a collection of <see cref="T:Infragistics.Documents.Excel.Sparklines.SparklineGroup"/>s (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.Tables">
            <summary>
            Gets the collection of <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> instances, or regions formatted as tables, in the worksheet.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTable"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.Type">
            <summary>
            Returns a value indicating the type of sheet
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetProtectedRange">
            <summary>
            Represents a range of cells in a worksheet that may be edited by the end user.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetProtectedRange.#ctor(System.String,System.String)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Documents.Excel.WorksheetProtectedRange"/>
            </summary>
            <param name="name">The name of the range</param>
            <param name="password">The password for the range or null to have no password.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetProtectedRange.#ctor(System.String,System.Security.SecureString)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Documents.Excel.WorksheetProtectedRange"/>
            </summary>
            <param name="name">The name of the range</param>
            <param name="password">The password for the range or null to have no password.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtectedRange.SecurityDescriptor">
            <summary>
            Returns or sets the security descriptor used to define permissions for accounts that may edit the associated range without a password.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetProtectedRange.GetPermissions">
            <summary>
            Returns a collection of the permissions for the range.
            </summary>
            <returns>An array of 0 or more WorksheetProtectedRangeUserPermission instances based on the value of the <see cref="P:Infragistics.Documents.Excel.WorksheetProtectedRange.SecurityDescriptor"/></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetProtectedRange.SetSecurityDescriptor(Infragistics.Documents.Excel.WorksheetProtectedRangeUserPermission[])">
            <summary>
            Sets the <see cref="P:Infragistics.Documents.Excel.WorksheetProtectedRange.SecurityDescriptor"/> property from the specified user accounts
            </summary>
            <param name="permissions">One or more user permissions used to generate a security descriptor for a WorksheetProtectedRange</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetProtectedRange.SetPassword(System.String)">
            <summary>
            Sets the password required to unlock the associated range of cells.
            </summary>
            <param name="password">The password that must be entered to unlock the associated range of cells.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetProtectedRange.SetPassword(System.Security.SecureString)">
            <summary>
            Sets the password required to unlock the associated range of cells.
            </summary>
            <param name="password">The password that must be entered to unlock the associated range of cells.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetProtectedRange.Unprotect(System.String)">
            <summary>
            Attempts to use the specified password to unlock the range.
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> If the range is not currently protected (i.e. <see cref="P:Infragistics.Documents.Excel.WorksheetProtectedRange.IsProtected"/> returns 
            false) the method will not do anything.</p>
            </remarks>
            <param name="password">The password to validate against the current Worksheet protection password</param>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetProtectedRange.IsProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetProtectedRange.HasPassword"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetProtectedRange.Unprotect(System.Security.SecureString)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetProtectedRange.Unprotect(System.Security.SecureString)">
            <summary>
            Attempts to use the specified password to unlock the range.
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> If the range is not currently protected (i.e. <see cref="P:Infragistics.Documents.Excel.WorksheetProtectedRange.IsProtected"/> returns 
            false) the method will not do anything.</p>
            </remarks>
            <param name="password">The password to validate against the current Worksheet protection password</param>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetProtectedRange.IsProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetProtectedRange.HasPassword"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetProtectedRange.Unprotect(System.Security.SecureString)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetProtectedRange.#ctor(System.String)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Documents.Excel.WorksheetProtectedRange"/>
            </summary>
            <param name="title">The name of the range</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtectedRange.HasPassword">
            <summary>
            Returns true if the range has a password associated with it.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtectedRange.IsProtected">
            <summary>
            Returns a boolean indicating if the range is currently locked.
            </summary>
            <remarks>
            <p class="body">When the associated Worksheet is protected, the ranges with a password 
            will be marked as protected until they are unprotected.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtectedRange.Ranges">
            <summary>
            Returns a collection of ranges that may be edited when the worksheet is protected.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtectedRange.Title">
            <summary>
            Returns or sets the name of the range.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtectedRange.Worksheet">
            <summary>
            Returns the worksheet with which the edit range is associated.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetProtectedRange.Unprotect">
            <summary>
            Removes the password from the range.
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> If the range is not currently protected (i.e. <see cref="P:Infragistics.Documents.Excel.WorksheetProtectedRange.IsProtected"/> returns 
            false) the method will not do anything.</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetProtectedRange.IsProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetProtectedRange.HasPassword"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookPasswordInfo.Unprotect(System.Object)">
            <summary>
            Removes the protection if the object does not have a password or if the password matches.
            </summary>
            <param name="password"></param>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookPasswordInfo.IsProtected">
            <summary>
            Returns a boolean indicating if the object is locked.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookPasswordInfo.InitializeIsProtected(System.Boolean)">
            <summary>
            Used to set the IsProtected state during load.
            </summary>
            <param name="isProtected">The new IsProtected state that will be set without sending a change notification</param>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetProtectedRangeUserPermission">
            <summary>
            Object used to define a permission to allow or deny editing for a <see cref="T:Infragistics.Documents.Excel.WorksheetProtectedRange"/>
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetProtectedRangeUserPermission.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Documents.Excel.WorksheetProtectedRangeUserPermission"/>
            </summary>
            <param name="accountName">The name of the NT account for which the permission is being created</param>
            <param name="denyEdit">False to allow editing the associated range without a password; true to disable editing of the range without a password for the specified account.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtectedRangeUserPermission.DenyEdit">
            <summary>
            Returns a boolean indicating whether the specified user account should be allowed to edit the specified range.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtectedRangeUserPermission.AccountName">
            <summary>
            Returns the name of the account for which editing is being allowed or denied.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.BIFF8Writer">
            <summary>
            BIFF8Writer provides static methods for exporting abstract workbook object to concrete Excel file.
            </summary>
            <remarks>
            <p class="note">
            <b>Note:</b> The BIFF8Writer class is no longer needed.  Use one of the Save overloads on <see cref="T:Infragistics.Documents.Excel.Workbook"/> instead.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.BIFF8Writer.WriteWorkbookToFile(Infragistics.Documents.Excel.Workbook,System.String)">
            <summary>
            Writes existing workbook object to a file in BIFF8 format.
            </summary>
            <remarks>
            <p class="note">
            <b>Note:</b> The <see cref="M:Infragistics.Documents.Excel.Workbook.Save(System.String,Infragistics.Documents.Excel.WorkbookSaveOptions)"/> method should be used instead to write the workbook to a file.
            </p>
            </remarks>
            <param name="workbook">Workbook to export.</param>
            <param name="fileName">Filename of resulting excel file. If path is not included, file is created in default program folder.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.BIFF8Writer.WriteWorkbookToStream(Infragistics.Documents.Excel.Workbook,System.IO.Stream)">
            <summary>
            Writes existing workbook object to a stream.
            </summary>
            <remarks>
            <p class="note">
            <b>Note:</b> The <see cref="M:Infragistics.Documents.Excel.Workbook.Save(System.IO.Stream,Infragistics.Documents.Excel.WorkbookSaveOptions)"/> method should be used instead to write the workbook to a stream.
            </p>
            </remarks>
            <param name="workbook">Workbook to export.</param>
            <param name="outStream">Output file stream.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.BIFF8Writer.WriteWorkbookToStreamEx(Infragistics.Documents.Excel.Workbook,System.IO.Stream)">
            <summary>
            Writes existing workbook object to a stream in BIFF8 format.
            </summary>
            <remarks>
            <p class="note">
            <b>Note:</b> The <see cref="M:Infragistics.Documents.Excel.Workbook.Save(System.IO.Stream,Infragistics.Documents.Excel.WorkbookSaveOptions)"/> method should be used instead to write the workbook to a stream.
            </p>
            </remarks>
            <param name="workbook">Workbook to export.</param>
            <param name="outStream">An output stream to generate the BIFF8 content into.</param>
        </member>
        <member name="T:Infragistics.Documents.Excel.Resources">
            <summary>
            Exposes a <see cref="T:Infragistics.Documents.Excel.ExcelResourceCustomizer"/> instance for this assembly. 
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Resources.Customizer"/> 
            <seealso cref="T:Infragistics.Documents.Excel.ExcelResourceCustomizer"/> 
        </member>
        <member name="P:Infragistics.Documents.Excel.Resources.Customizer">
            <summary>
            Returns the <see cref="T:Infragistics.Documents.Excel.ExcelResourceCustomizer"/> for this assembly.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.ExcelResourceCustomizer"/> 
        </member>
        <member name="M:Infragistics.Documents.Excel.Resources.GetString(System.String,System.Object[])">
            <summary>
            Returns the resource string using the specified name and default culture.
            </summary>
            <param name="name">Name of the string resource to return.</param>
            <param name="args">Arguments supplied to the string.Format method when formatting the string.</param>
            <returns>The resource string using the specified resource name and default culture.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Resources.GetString(System.String)">
            <summary>
            Returns the resource string using the specified resource name and default culture. The string is then formatted using the arguments specified.
            </summary>
            <param name="name">Name of the string resource to return.</param>
            <returns>The resource string using the specified resource name and default culture.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Resources.GetObject(System.String)">
            <summary>
            Returns the resource object using the specified name.
            </summary>
            <param name="name">Name of the resource item.</param>
            <returns>An object containing the specified resource.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.CellFill">
            <summary>
            Abstract base class for the fill of a cell.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill"/>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillPattern"/>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillGradient"/>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillLinearGradient"/>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFill.CreateLinearGradientFill(System.Double,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Creates a linear gradient that can be applied to a cell's fill.
            </summary>
            <param name="angle">
            The angle, in degrees, of the direction of the linear gradient, going clockwise from the left-to-right direction.
            </param>
            <param name="color1">The color at the start of the gradient.</param>
            <param name="color2">The color at the end of the gradient.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="color1"/> or <paramref name="color2"/> are the empty or system colors or have a non-opaque alpha channel.
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillLinearGradient"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFill.CreateLinearGradientFill(System.Double,Infragistics.Documents.Excel.WorkbookColorInfo,Infragistics.Documents.Excel.WorkbookColorInfo)">
            <summary>
            Creates a linear gradient that can be applied to a cell's fill.
            </summary>
            <param name="angle">
            The angle, in degrees, of the direction of the linear gradient, going clockwise from the left-to-right direction.
            </param>
            <param name="colorInfo1">A <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> which describes the color at the start of the gradient.</param>
            <param name="colorInfo2">A <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> which describes the color at the end of the gradient.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="colorInfo1"/> or <paramref name="colorInfo2"/> is an automatic or a system color.
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillLinearGradient"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFill.CreateLinearGradientFill(System.Double,Infragistics.Documents.Excel.CellFillGradientStop[])">
            <summary>
            Creates a linear gradient that can be applied to a cell's fill.
            </summary>
            <param name="angle">
            The angle, in degrees, of the direction of the linear gradient, going clockwise from the left-to-right direction.
            </param>
            <param name="stops">
            Two or more gradient stops which describe the color transitions and their positions within the gradient.
            </param>
            <exception cref="T:System.ArgumentException">
            <paramref name="stops"/> contains less than two gradient stops. There must be at least two stops to define the gradient.
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillLinearGradient"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFill.CreatePatternFill(System.Drawing.Color,System.Drawing.Color,Infragistics.Documents.Excel.FillPatternStyle)">
            <summary>
            Creates a solid color or pattern fill that can be applied to a cell.
            </summary>
            <param name="backgroundColor">
            The background color of the cell, which will only be seen if the <paramref name="patternStyle"/> is not None.
            </param>
            <param name="patternColor">
            The pattern color of the cell, which will only be seen if the <paramref name="patternStyle"/> is not None or Solid.
            </param>
            <param name="patternStyle">The fill pattern for the cell.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="backgroundColor"/> or <paramref name="patternColor"/> are the empty color or have a non-opaque alpha channel.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="patternStyle"/> is Default or not defined in the <see cref="T:Infragistics.Documents.Excel.FillPatternStyle"/> enumeration.
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillPattern"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFill.CreatePatternFill(Infragistics.Documents.Excel.WorkbookColorInfo,Infragistics.Documents.Excel.WorkbookColorInfo,Infragistics.Documents.Excel.FillPatternStyle)">
            <summary>
            Creates a solid color or pattern fill that can be applied to a cell.
            </summary>
            <remarks>
            <p class="body">
            <paramref name="backgroundColorInfo"/> and <paramref name="patternColorInfo"/> can be specified as null to use the default colors.
            </p>
            </remarks>
            <param name="backgroundColorInfo">
            A <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> which describes the background color of the cell, which will only be seen if the 
            <paramref name="patternStyle"/> is not None.
            </param>
            <param name="patternColorInfo">
            A <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> which describes the pattern color of the cell, which will only be seen if the 
            <paramref name="patternStyle"/> is not None or Solid.
            </param>
            <param name="patternStyle">The fill pattern for the cell.</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="patternStyle"/> is Default or not defined in the <see cref="T:Infragistics.Documents.Excel.FillPatternStyle"/> enumeration.
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillPattern"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFill.CreateRectangularGradientFill(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Creates a rectangular gradient that can be applied to a cell's fill.
            </summary>
            <param name="color1">The color at the inner rectangle (cell center) of the gradient.</param>
            <param name="color2">The color at the outer rectangle (cell edges) of the gradient.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="color1"/> or <paramref name="color2"/> are empty or system colors or have a non-opaque alpha channel.
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFill.CreateRectangularGradientFill(System.Double,System.Double,System.Double,System.Double,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Creates a rectangular gradient that can be applied to a cell's fill.
            </summary>
            <remarks>
            <p class="body">
            The rectangular gradient is defined by specifying an inner rectangle and a set of gradient stops. The gradient goes from the 
            edges of the inner rectangle to the edges of the cell. If the inner rectangle does not have a height or width of 0, the color
            of the first gradient stop will be filled in the center of the inner rectangle.
            </p>
            <p class="body">
            The inner rectangle is defined by the <paramref name="left"/>, <paramref name="top"/>, <paramref name="right"/>, and 
            <paramref name="bottom"/> parameters. They are relative values ranging from 0.0 to 1.0 and they go from the top/left to the
            bottom/right. So, for example, to specify a gradient that goes out from the center, all values would be 0.5. Or to specify a
            gradient which goes out from the bottom-left corner of the cell, the following values would be used: left = 0.0, top = 1.0, 
            right = 0.0, bottom = 1.0.
            </p>
            </remarks>
            <param name="left">
            The left edge of the inner rectangle of the gradient, ranging from 0.0 (the left of the cell) to 1.0 (the right of the cell).
            </param>
            <param name="top">
            The top edge of the inner rectangle of the gradient, ranging from 0.0 (the top of the cell) to 1.0 (the bottom of the cell).
            </param>
            <param name="right">
            The right edge of the inner rectangle of the gradient, ranging from 0.0 (the left of the cell) to 1.0 (the right of the cell).
            </param>
            <param name="bottom">
            The bottom edge of the inner rectangle of the gradient, ranging from 0.0 (the top of the cell) to 1.0 (the bottom of the cell).
            </param>
            <param name="color1">The color at the inner rectangle of the gradient.</param>
            <param name="color2">The color at the outer rectangle (cell edges) of the gradient.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="left"/>, <paramref name="top"/>, <paramref name="right"/>, or <paramref name="bottom"/> are less than 0.0 or 
            greater than 1.0.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="color1"/> or <paramref name="color2"/> are empty or system colors or have a non-opaque alpha channel.
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFill.CreateRectangularGradientFill(Infragistics.Documents.Excel.WorkbookColorInfo,Infragistics.Documents.Excel.WorkbookColorInfo)">
            <summary>
            Creates a rectangular gradient that can be applied to a cell's fill.
            </summary>
            <param name="colorInfo1">
            A <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> which describes the color at the inner rectangle (cell center) of the gradient.
            </param>
            <param name="colorInfo2">
            A <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> which describes the color at the outer rectangle (cell edges) of the gradient.
            </param>
            <exception cref="T:System.ArgumentException">
            <paramref name="colorInfo1"/> or <paramref name="colorInfo2"/> is an automatic or a system color.
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFill.CreateRectangularGradientFill(System.Double,System.Double,System.Double,System.Double,Infragistics.Documents.Excel.WorkbookColorInfo,Infragistics.Documents.Excel.WorkbookColorInfo)">
            <summary>
            Creates a rectangular gradient that can be applied to a cell's fill.
            </summary>
            <remarks>
            <p class="body">
            The rectangular gradient is defined by specifying an inner rectangle and a set of gradient stops. The gradient goes from the 
            edges of the inner rectangle to the edges of the cell. If the inner rectangle does not have a height or width of 0, the color
            of the first gradient stop will be filled in the center of the inner rectangle.
            </p>
            <p class="body">
            The inner rectangle is defined by the <paramref name="left"/>, <paramref name="top"/>, <paramref name="right"/>, and 
            <paramref name="bottom"/> parameters. They are relative values ranging from 0.0 to 1.0 and they go from the top/left to the
            bottom/right. So, for example, to specify a gradient that goes out from the center, all values would be 0.5. Or to specify a
            gradient which goes out from the bottom-left corner of the cell, the following values would be used: left = 0.0, top = 1.0, 
            right = 0.0, bottom = 1.0.
            </p>
            </remarks>
            <param name="left">
            The left edge of the inner rectangle of the gradient, ranging from 0.0 (the left of the cell) to 1.0 (the right of the cell).
            </param>
            <param name="top">
            The top edge of the inner rectangle of the gradient, ranging from 0.0 (the top of the cell) to 1.0 (the bottom of the cell).
            </param>
            <param name="right">
            The right edge of the inner rectangle of the gradient, ranging from 0.0 (the left of the cell) to 1.0 (the right of the cell).
            </param>
            <param name="bottom">
            The bottom edge of the inner rectangle of the gradient, ranging from 0.0 (the top of the cell) to 1.0 (the bottom of the cell).
            </param>
            <param name="colorInfo1">
            A <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> which describes the color at the inner rectangle of the gradient.
            </param>
            <param name="colorInfo2">
            A <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> which describes the color at the outer rectangle (cell edges) of the gradient.
            </param>
            <exception cref="T:System.ArgumentException">
            <paramref name="colorInfo1"/> or <paramref name="colorInfo2"/> is an automatic or a system color.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="left"/>, <paramref name="top"/>, <paramref name="right"/>, or <paramref name="bottom"/> are less than 0.0 or 
            greater than 1.0.
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFill.CreateRectangularGradientFill(System.Double,System.Double,System.Double,System.Double,Infragistics.Documents.Excel.CellFillGradientStop[])">
            <summary>
            Creates a rectangular gradient that can be applied to a cell's fill.
            </summary>
            <remarks>
            <p class="body">
            The rectangular gradient is defined by specifying an inner rectangle and a set of gradient stops. The gradient goes from the 
            edges of the inner rectangle to the edges of the cell. If the inner rectangle does not have a height or width of 0, the color
            of the first gradient stop will be filled in the center of the inner rectangle.
            </p>
            <p class="body">
            The inner rectangle is defined by the <paramref name="left"/>, <paramref name="top"/>, <paramref name="right"/>, and 
            <paramref name="bottom"/> parameters. They are relative values ranging from 0.0 to 1.0 and they go from the top/left to the
            bottom/right. So, for example, to specify a gradient that goes out from the center, all values would be 0.5. Or to specify a
            gradient which goes out from the bottom-left corner of the cell, the following values would be used: left = 0.0, top = 1.0, 
            right = 0.0, bottom = 1.0.
            </p>
            </remarks>
            <param name="left">
            The left edge of the inner rectangle of the gradient, ranging from 0.0 (the left of the cell) to 1.0 (the right of the cell).
            </param>
            <param name="top">
            The top edge of the inner rectangle of the gradient, ranging from 0.0 (the top of the cell) to 1.0 (the bottom of the cell).
            </param>
            <param name="right">
            The right edge of the inner rectangle of the gradient, ranging from 0.0 (the left of the cell) to 1.0 (the right of the cell).
            </param>
            <param name="bottom">
            The bottom edge of the inner rectangle of the gradient, ranging from 0.0 (the top of the cell) to 1.0 (the bottom of the cell).
            </param>
            <param name="stops">
            Two or more gradient stops which describe the color transitions and their positions within the gradient.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="left"/>, <paramref name="top"/>, <paramref name="right"/>, or <paramref name="bottom"/> are less than 0.0 or 
            greater than 1.0.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="stops"/> contains less than two gradient stops. There must be at least two stops to define the gradient.
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFill.CreateSolidFill(System.Drawing.Color)">
            <summary>
            Creates a solid color fill that can be applied to a cell.
            </summary>
            <param name="solidColor">The solid color of the fill.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="solidColor"/> is the empty color or has a non-opaque alpha channel.
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillPattern"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFill.CreateSolidFill(Infragistics.Documents.Excel.WorkbookColorInfo)">
            <summary>
            Creates a solid color fill that can be applied to a cell.
            </summary>
            <param name="solidColorInfo">A <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> which describes the solid color of the fill.</param>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillPattern"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.CellFill.NoColor">
            <summary>
            Gets the default cell fill, which is no background color.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CellFillPattern">
            <summary>
            An immutable object which represents a solid or pattern fill for a cell.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillPattern.#ctor(Infragistics.Documents.Excel.WorkbookColorInfo,Infragistics.Documents.Excel.WorkbookColorInfo,Infragistics.Documents.Excel.FillPatternStyle)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.CellFillPattern"/> instance.
            </summary>
            <remarks>
            <p class="body">
            <paramref name="backgroundColorInfo"/> and <paramref name="patternColorInfo"/> can be specified as null to use the default colors.
            </p>
            </remarks>
            <param name="backgroundColorInfo">
            A <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> which describes the background color of the cell, which will only be seen if the 
            <paramref name="patternStyle"/> is not None.
            </param>
            <param name="patternColorInfo">
            A <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> which describes the pattern color of the cell, which will only be seen if the 
            <paramref name="patternStyle"/> is not None or Solid.
            </param>
            <param name="patternStyle">The fill pattern for the cell.</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="patternStyle"/> is Default or not defined in the <see cref="T:Infragistics.Documents.Excel.FillPatternStyle"/> enumeration.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillPattern.Equals(System.Object)">
            <summary>
            Determines whether the <see cref="T:Infragistics.Documents.Excel.CellFillPattern"/> is equal to the specified object.
            </summary>
            <param name="obj">The object to test for equality.</param>
            <returns>True if the object is equal to this instance; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillPattern.GetHashCode">
            <summary>
            Gets the hash code for the <see cref="T:Infragistics.Documents.Excel.CellFillPattern"/>.
            </summary>
            <returns>A number which can be used to hash this instance.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CellFillPattern.BackgroundColorInfo">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> which describes the background color of the cell, which will only be seen if the 
            <see cref="P:Infragistics.Documents.Excel.CellFillPattern.PatternStyle"/> is not None.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CellFillPattern.PatternStyle">
            <summary>
            Gets the fill pattern for the cell.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CellFillPattern.PatternColorInfo">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> which describes the pattern color of the cell, which will only be seen if the 
            <see cref="P:Infragistics.Documents.Excel.CellFillPattern.PatternStyle"/> is not None or Solid.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CellFillGradient">
            <summary>
            Abstract base class for a gradient fill of a cell.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill"/>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillLinearGradient"/>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillGradient.Equals(System.Object)">
            <summary>
            Determines whether the <see cref="T:Infragistics.Documents.Excel.CellFillGradient"/> is equal to the specified object.
            </summary>
            <param name="obj">The object to test for equality.</param>
            <returns>True if the object is equal to this instance; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillGradient.GetHashCode">
            <summary>
            Gets the hash code for the <see cref="T:Infragistics.Documents.Excel.CellFillGradient"/>.
            </summary>
            <returns>A number which can be used to hash this instance.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CellFillGradient.Stops">
            <summary>
            Gets the read-only collection of gradient stops which describe the color transitions and their positions within the gradient.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CellFillLinearGradient">
            <summary>
            An immutable object which represents a linear gradient fill for a cell.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillLinearGradient.#ctor(System.Double,Infragistics.Documents.Excel.CellFillGradientStop[])">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.CellFillLinearGradient"/> instance.
            </summary>
            <param name="angle">
            The angle, in degrees, of the direction of the linear gradient, going clockwise from the left-to-right direction.
            </param>
            <param name="stops">
            Two or more gradient stops which describe the color transitions and their positions within the gradient.
            </param>
            <exception cref="T:System.ArgumentException">
            <paramref name="stops"/> contains less than two gradient stops. There must be at least two stops to define the gradient.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillLinearGradient.Equals(System.Object)">
            <summary>
            Determines whether the <see cref="T:Infragistics.Documents.Excel.CellFillLinearGradient"/> is equal to the specified object.
            </summary>
            <param name="obj">The object to test for equality.</param>
            <returns>True if the object is equal to this instance; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillLinearGradient.GetHashCode">
            <summary>
            Gets the hash code for the <see cref="T:Infragistics.Documents.Excel.CellFillLinearGradient"/>.
            </summary>
            <returns>A number which can be used to hash this instance.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CellFillLinearGradient.Angle">
            <summary>
            Gets the angle, in degrees, of the direction of the linear gradient, going clockwise from the left-to-right direction.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CellFillRectangularGradient">
            <summary>
            An immutable object which represents a rectangular gradient fill for a cell.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillRectangularGradient.#ctor(System.Double,System.Double,System.Double,System.Double,Infragistics.Documents.Excel.CellFillGradientStop[])">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient"/> instance.
            </summary>
            <remarks>
            <p class="body">
            The rectangular gradient is defined by specifying an inner rectangle and a set of gradient stops. The gradient goes from the 
            edges of the inner rectangle to the edges of the cell. If the inner rectangle does not have a height or width of 0, the color
            of the first gradient stop will be filled in the center of the inner rectangle.
            </p>
            <p class="body">
            The inner rectangle is defined by the <paramref name="left"/>, <paramref name="top"/>, <paramref name="right"/>, and 
            <paramref name="bottom"/> parameters. They are relative values ranging from 0.0 to 1.0 and they go from the top/left to the
            bottom/right. So, for example, to specify a gradient that goes out from the center, all values would be 0.5. Or to specify a
            gradient which goes out from the bottom-left corner of the cell, the following values would be used: left = 0.0, top = 1.0, 
            right = 0.0, bottom = 1.0.
            </p>
            </remarks>
            <param name="left">
            The left edge of the inner rectangle of the gradient, ranging from 0.0 (the left of the cell) to 1.0 (the right of the cell).
            </param>
            <param name="top">
            The top edge of the inner rectangle of the gradient, ranging from 0.0 (the top of the cell) to 1.0 (the bottom of the cell).
            </param>
            <param name="right">
            The right edge of the inner rectangle of the gradient, ranging from 0.0 (the left of the cell) to 1.0 (the right of the cell).
            </param>
            <param name="bottom">
            The bottom edge of the inner rectangle of the gradient, ranging from 0.0 (the top of the cell) to 1.0 (the bottom of the cell).
            </param>
            <param name="stops">
            Two or more gradient stops which describe the color transitions and their positions within the gradient.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="left"/>, <paramref name="top"/>, <paramref name="right"/>, or <paramref name="bottom"/> are less than 0.0 or 
            greater than 1.0.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="stops"/> contains less than two gradient stops. There must be at least two stops to define the gradient.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillRectangularGradient.Equals(System.Object)">
            <summary>
            Determines whether the <see cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient"/> is equal to the specified object.
            </summary>
            <param name="obj">The object to test for equality.</param>
            <returns>True if the object is equal to this instance; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillRectangularGradient.GetHashCode">
            <summary>
            Gets the hash code for the <see cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient"/>.
            </summary>
            <returns>A number which can be used to hash this instance.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CellFillRectangularGradient.Bottom">
            <summary>
            Gets the bottom edge of the inner rectangle of the gradient, ranging from 0.0 (the top of the cell) to 1.0 (the bottom of the cell).
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CellFillRectangularGradient.Left">
            <summary>
            Gets the left edge of the inner rectangle of the gradient, ranging from 0.0 (the left of the cell) to 1.0 (the right of the cell).
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CellFillRectangularGradient.Right">
            <summary>
            Gets the right edge of the inner rectangle of the gradient, ranging from 0.0 (the left of the cell) to 1.0 (the right of the cell).
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CellFillRectangularGradient.Top">
            <summary>
            Gets the top edge of the inner rectangle of the gradient, ranging from 0.0 (the top of the cell) to 1.0 (the bottom of the cell).
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CellFillGradientStop">
            <summary>
            Immutable class which describes a color transition in a cell fill gradient.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillLinearGradient"/>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillGradientStop.#ctor(System.Drawing.Color,System.Double)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.CellFillGradientStop"/> instance.
            </summary>
            <remarks>
            <p class="body">
            When used in a <see cref="T:Infragistics.Documents.Excel.CellFillLinearGradient"/>, an <paramref name="offset"/> of 0.0 is at the beginning of the gradient and
            1.0 is at the end of the gradient. When used in a <see cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient"/>, an offset of 0.0 is at the inner 
            rectangle and 1.0 is at the outer edges of the cell.
            </p>
            </remarks>
            <param name="color">The color transition for the gradient stop.</param>
            <param name="offset">
            The position in the gradient of the color transition for the gradient stop, ranging from 0.0 to 1.0.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="offset"/> is less than 0.0 or greater than 1.0.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="color"/> is the empty or system color or has a non-opaque alpha channel.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillGradientStop.#ctor(Infragistics.Documents.Excel.WorkbookColorInfo,System.Double)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.CellFillGradientStop"/> instance.
            </summary>
            <remarks>
            <p class="body">
            When used in a <see cref="T:Infragistics.Documents.Excel.CellFillLinearGradient"/>, an <paramref name="offset"/> of 0.0 is at the beginning of the gradient and
            1.0 is at the end of the gradient. When used in a <see cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient"/>, an offset of 0.0 is at the inner 
            rectangle and 1.0 is at the outer edges of the cell.
            </p>
            </remarks>
            <param name="colorInfo">
            The <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> describing the color transition for the gradient stop.
            </param>
            <param name="offset">
            The position in the gradient of the color transition for the gradient stop, ranging from 0.0 to 1.0.
            </param>
            <exception cref="T:System.ArgumentException">
            <paramref name="colorInfo"/> is automatic or a system color.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="offset"/> is less than 0.0 or greater than 1.0.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillGradientStop.Equals(System.Object)">
            <summary>
            Determines whether the <see cref="T:Infragistics.Documents.Excel.CellFillGradientStop"/> is equal to the specified object.
            </summary>
            <param name="obj">The object to test for equality.</param>
            <returns>True if the object is equal to this instance; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillGradientStop.GetHashCode">
            <summary>
            Gets the hash code for the <see cref="T:Infragistics.Documents.Excel.CellFillGradientStop"/>.
            </summary>
            <returns>A number which can be used to hash this instance.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CellFillGradientStop.ColorInfo">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> describing the color transition for the gradient stop.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.CellFillGradientStop.Offset"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.CellFillGradientStop.Offset">
            <summary>
            Gets the position in the gradient of the color transition for the gradient stop, ranging from 0.0 to 1.0.
            </summary>
            <remarks>
            <p class="body">
            When used in a <see cref="T:Infragistics.Documents.Excel.CellFillLinearGradient"/>, a value of 0.0 is at the beginning of the gradient and 1.0 is at the end of the 
            gradient. When used in a <see cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient"/>, a value of 0.0 is at the inner rectangle and 1.0 is at the outer 
            edges of the cell.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.CellFillGradientStop.ColorInfo"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookColorInfo">
            <summary>
            An immutable object which represents a color in a Microsoft Excel workbook.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorkbookFont.ColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.CellFillPattern.BackgroundColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.CellFillPattern.PatternColorInfo"/>
            <seealso cref="P:Infragistics.Documents.Excel.CellFillGradientStop.ColorInfo"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.#ctor(System.Drawing.Color)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> with the specified Color.
            </summary>
            <param name="color">The color which should be displayed when the WorkbookColorInfo is used.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="color"/> is the empty Color or has a non-opaque alpha channel.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.#ctor(System.Drawing.Color,System.Double)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> with the specified Color and tint.
            </summary>
            <param name="color">The base color which should be displayed when the WorkbookColorInfo is used.</param>
            <param name="tint">The tint to apply to the base color, from -1.0 (100% darken) to 1.0 (100% lighten).</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="color"/> is the empty Color or has a non-opaque alpha channel.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="tint"/> is outside the range of -1.0 to 1.0, inclusive.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.#ctor(System.Drawing.Color,Infragistics.Documents.Excel.WorkbookColorTransform)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> with the specified Color and <see cref="T:Infragistics.Documents.Excel.WorkbookColorTransform">transform</see>.
            </summary>
            <param name="color">The base color which should be displayed when the WorkbookColorInfo is used.</param>
            <param name="transform">A <see cref="T:Infragistics.Documents.Excel.WorkbookColorTransform"/> instance which defines the color transforms to be applied.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="color"/> is the empty Color or has a non-opaque alpha channel.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.#ctor(Infragistics.Documents.Excel.WorkbookThemeColorType)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> with the specified theme color.
            </summary>
            <param name="themeColorType">The type of theme color which should be displayed when the WorkbookColorInfo is used.</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="themeColorType"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookThemeColorType"/> enumeration.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.#ctor(Infragistics.Documents.Excel.WorkbookThemeColorType,System.Double)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> with the specified theme color and tint.
            </summary>
            <param name="themeColorType">The type of theme color which should be the base color when the WorkbookColorInfo is used.</param>
            <param name="tint">The tint to apply to the base color, from -1.0 (100% darken) to 1.0 (100% lighten).</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="themeColorType"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookThemeColorType"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="tint"/> is outside the range of -1.0 to 1.0, inclusive.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.#ctor(Infragistics.Documents.Excel.WorkbookThemeColorType,Infragistics.Documents.Excel.WorkbookColorTransform)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> with the specified
            theme color and <see cref="T:Infragistics.Documents.Excel.WorkbookColorTransform">transform</see>.
            </summary>
            <param name="themeColorType">The type of theme color which should be the base color when the WorkbookColorInfo is used.</param>
            <param name="transform">A <see cref="T:Infragistics.Documents.Excel.WorkbookColorTransform"/> instance which defines the color transforms to be applied.</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="themeColorType"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookThemeColorType"/> enumeration.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.Equals(System.Object)">
            <summary>
            Determines whether the <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> is equal to the specified object.
            </summary>
            <param name="obj">The object to test for equality.</param>
            <returns>True if the object is equal to this instance; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.GetHashCode">
            <summary>
            Gets the hash code for the <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/>.
            </summary>
            <returns>A number which can be used to hash this instance.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.ToString">
            <summary>
            Gets the string representation of the <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.op_Equality(Infragistics.Documents.Excel.WorkbookColorInfo,Infragistics.Documents.Excel.WorkbookColorInfo)">
            <summary>
            Determines whether two <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> instances are equal.
            </summary>
            <param name="a">The first WorkbookColorInfo instance.</param>
            <param name="b">The second WorkbookColorInfo instance.</param>
            <returns>True if the WorkbookColorInfo instances are equal; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.op_Inequality(Infragistics.Documents.Excel.WorkbookColorInfo,Infragistics.Documents.Excel.WorkbookColorInfo)">
            <summary>
            Determines whether two <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> instances are unequal.
            </summary>
            <param name="a">The first WorkbookColorInfo instance.</param>
            <param name="b">The second WorkbookColorInfo instance.</param>
            <returns>True if the WorkbookColorInfo instances are unequal; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.op_Implicit(System.Drawing.Color)~Infragistics.Documents.Excel.WorkbookColorInfo">
            <summary>
            Converts from a Color to a <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/>.
            </summary>
            <param name="color">The color to use in the WorkbookColorInfo.</param>
            <returns>The WorkbookColorInfo containing the specified color.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.op_Implicit(Infragistics.Documents.Excel.WorkbookThemeColorType)~Infragistics.Documents.Excel.WorkbookColorInfo">
            <summary>
            Converts from a <see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.ThemeColorType"/> to a <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/>.
            </summary>
            <param name="themeColorType">The theme color type to use in the WorkbookColorInfo.</param>
            <returns>The WorkbookColorInfo containing the specified theme color type.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.GetResolvedColor">
            <summary>
            Gets the actual color which will be seen in Microsoft Excel if the <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> is used.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            The <see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.ThemeColorType"/> is not null. When the ThemeColorType is set, the <see cref="M:Infragistics.Documents.Excel.WorkbookColorInfo.GetResolvedColor(Infragistics.Documents.Excel.Workbook)"/> method must be called with 
            a non-null <see cref="T:Infragistics.Documents.Excel.Workbook"/>.
            </exception>
            <returns>
            A Color which combines the <see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Color"/> and <see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Tint"/> if it is set.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.GetResolvedColor(Infragistics.Documents.Excel.Workbook)">
            <summary>
            Gets the actual color which will be seen in Microsoft Excel if the <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> is used.
            </summary>
            <param name="workbook">The workbook in which the WorkbookColorInfo is used.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="workbook"/> is null and <see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.ThemeColorType"/> is not null. When the ThemeColorType is set, the method must be called with a 
            non-null <see cref="T:Infragistics.Documents.Excel.Workbook"/>.
            </exception>
            <returns>
            A Color which combines the <see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Color"/>, <see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.ThemeColorType"/>, and/or <see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Tint"/>, depending on what is set.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookColorInfo.Automatic">
            <summary>
            Gets the automatic color, which is the window text system color.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.IsAutomatic"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookColorInfo.Color">
            <summary>
            Gets the base color associated of the <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Tint"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookColorInfo.IsAutomatic">
            <summary>
            Gets the value which indicates whether the <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> is automatic, or the window text system color.
            </summary>
            <see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Automatic"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookColorInfo.ThemeColorType">
            <summary>
            Gets the base theme color associated of the <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Tint"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookColorInfo.Tint">
            <summary>
            Gets the to apply to the base color, from -1.0 (100% darken) to 1.0 (100% lighten).
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Color"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.ThemeColorType"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookColorInfo.Transform">
            <summary>
            Returns the associated <see cref="T:Infragistics.Documents.Excel.WorkbookColorTransform"/>, or null
            if this instance is not associated with a transform.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookColorTransform">
            <summary>
            Defines color transforms for a <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> instance.
            </summary>
            <remarks>
            <p class="body">
            This class is immutable.
            </p>
            <p class="body">
            Color transforms are not applicable to all contexts within which a WorkbookColorInfo is used;
            currently they are only used by <see cref="T:Infragistics.Documents.Excel.WorksheetChart">charts</see>.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartSolidFill"/>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.GradientStop"/>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartGradientFill"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorTransform.#ctor(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.WorkbookColorTransform"/> instance with the specified
            color transform values.
            </summary>
            <param name="alpha">The value of the <see cref="P:Infragistics.Documents.Excel.WorkbookColorTransform.Alpha"/> property or null.</param>
            <param name="luminanceModulation">The value of the <see cref="P:Infragistics.Documents.Excel.WorkbookColorTransform.LuminanceModulation"/> property or null.</param>
            <param name="luminanceOffset">The value of the <see cref="P:Infragistics.Documents.Excel.WorkbookColorTransform.LuminanceOffset"/> property or null.</param>
            <param name="shade">The value of the <see cref="P:Infragistics.Documents.Excel.WorkbookColorTransform.Shade"/> property or null.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="alpha"/> is outside the range of 0 to 1.0, inclusive.
            </exception>
            <remarks>
            <p class="body">
            This class is immutable; as such, all properties are read-only.
            </p> 
            <p class="body">
            Property values can only be specified at the time of instance creation.
            </p> 
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookColorTransform.Alpha">
            <summary>
            Defines the value of the alpha channel for the associated
            <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> instance, expressed
            as a number between 0 and 1.
            </summary>
            <remarks>
            <p class="body">
            Use this property to control the transparency of the associated color.
            </p> 
            <p class="body">
            For example, to make the associated color 50% transparent, assign a value of <b>.5</b> to this property.
            </p> 
            <p class="body">
            Assigning a value of null to this property implies that the associated
            color has no specific alpha channel setting, i.e., the associated color
            is fully opaque.
            </p> 
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookColorTransform.LuminanceModulation">
            <summary>
            Defines the luminance modulation for the associated
            <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> instance, expressed
            as a fractional number.
            </summary>
            <remarks>
            <p class="body">
            Luminance is also referred to as brightness.
            </p> 
            <p class="body">
            This property specifies the amount by which the luminance of the associated
            base color is increased. For example, a value of .5 yields a 50% reduction
            in luminance. A value of 1.0 implies no change in luminance. A value greater
            than 1.0 implies an increase in luminance; for example, a value of 2.0 doubles
            the luminance.
            </p> 
            <p class="body">
            Assigning a value of null to this property implies that the associated color has no specific luminance modulation.
            </p> 
            <p class="body">
            Luminance modulation is applied by converting the base color from RGB to HSL, then
            multiplying the luminance channel by the value of this property, then converting
            back to RGB.
            </p> 
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookColorTransform.LuminanceOffset"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookColorTransform.LuminanceOffset">
            <summary>
            Defines the luminance offset for the associated
            <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> instance, expressed
            as a fractional number.
            </summary>
            <remarks>
            <p class="body">
            Luminance is also referred to as brightness.
            </p> 
            <p class="body">
            The luminance offset is applied by converting the base color from RGB to HSL, then
            the value of this property to the luminance channel, then converting back to RGB.
            </p> 
            <p class="body">
            Assigning a value of null to this property implies that the associated color has no specific luminance offset.
            </p> 
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookColorTransform.LuminanceModulation"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookColorTransform.Shade">
            <summary>
            Defines the shading for the associated
            <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> instance, expressed
            as a fractional number.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookColorTransform.Alpha"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.Axis">
            <summary>
            Represents a single axis in a chart.
            </summary>
            <remarks>
            <p class="body">
            To change the color of the ticklines, use the <see cref="P:Infragistics.Documents.Excel.Charts.ChartLineBase.Fill"/> property.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.AxisCollection">WorksheetChart.AxisCollection</seealso>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.AxisCollection">AxisCollection</seealso>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.AxisBetweenCategories">
            <summary>
            True if the value axis crosses the category axis between categories.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.AxisGroup">
            <summary>
            Returns the group for the specified axis. Read-only
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.AxisTitle">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.Charts.ChartTitle"/> object that represents the title of the axis.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.BaseUnit">
            <summary>
            Returns or sets the base unit for the axis.
            </summary>
            <remarks>
            <para class="note">
            Setting this property has no visible effect if the <see cref="P:Infragistics.Documents.Excel.Charts.Axis.CategoryType"/>  property for the specified axis is set to 'CategoryScale'. 
            The set value is retained, however, and takes effect when the <b>CategoryType</b> property is set to 'TimeScale'.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.BaseUnitIsAuto">
            <summary>
            True if Excel chooses appropriate base units for the specified category axis. The default value is True.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.CategoryType">
            <summary>
            Returns or sets the category axis type. 
            </summary>
            <remarks>
            <p class="body">
            This property applies only to <see cref="T:Infragistics.Documents.Excel.Charts.AxisType">category</see> axes.
            </p>
            <p class="body">
            When set to <i>Automatic</i>, the axis will resolve the
            category type to either <i>CategoryScale</i> or <i>TimeScale</i>,
            based on the type of the selected data.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.Crosses">
            <summary>
            Returns or sets the point on the specified axis where the other axis crosses.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable to a category axis.
            </p>
            <p class="body">
            Set this property to <i>Custom</i> to specify a data value as a crossing point,
            using the <see cref="P:Infragistics.Documents.Excel.Charts.Axis.CrossesAt"/> property to specify that value.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Axis.CrossesAt"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.CrossesAt">
            <summary>
            Returns or sets the point on the <see cref="T:Infragistics.Documents.Excel.Charts.Axis"/> at which the
            perpendicular axis intersects it.
            </summary>
            <remarks>
            <p class="body">
            For a category axis, this value is interpreted as the value of a data point.
            For example, on a category axis with a minimum data value of 0 and a maximum
            of 500, setting this property to 250 causes this axis to appear near the center
            of the plot area.
            </p>
            <p class="body">
            For a value axis, this value is interpreted as the one-based number of the
            category with which this axis should intersect.
            </p>
            <p class="body">
            Setting this property causes the <see cref="P:Infragistics.Documents.Excel.Charts.Axis.Crosses"/> property to change to 'Custom'.
            </p>
            <p class="body">
            This property cannot be used on radar charts.
            </p>
            <p class="body">
            For 3-D charts, this property indicates where the plane defined
            by the category axes crosses the value axis.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.CrossAxis">
            <summary>
            Returns or sets the <see cref="T:Infragistics.Documents.Excel.Charts.Axis"/> with which this axis intersects.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.DisplayUnit">
            <summary>
            Returns or sets the unit label for the value axis.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.DisplayUnitCustom">
            <summary>
            If the value of the DisplayUnit property 'Custom' , the DisplayUnitCustom property returns or sets the value of the displayed units. The value must be from 0 through 10E307
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.DisplayUnitLabel">
            <summary>
            Returns or sets an <see cref="P:Infragistics.Documents.Excel.Charts.Axis.DisplayUnitLabel"/> object.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.GapWidth">
            <summary>
            Returns or sets a value indicating the width of the gaps between data points
            or series, expressed as a percentage.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable for <i>Box and Whisker</i>, <i>Histogram</i>,
            <i>Pareto</i>, and <i>Waterfall</i> charts.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.LogBase">
            <summary>
            Returns or sets the base of the logarithm when you are using log scales.
            </summary>
            <remarks>
            <para class="note">
            Attempting to set this property to a value less than 2 causes an error. The default value is 10.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.MajorGridLines">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Excel.Charts.ChartGridLines"/> object which defines
            the color and weight of the major ticklines.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.MajorTickMark">
            <summary>
            Returns or sets the type of major tick mark for the specified axis.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.MajorUnitIsAuto">
            <summary>
            True if Excel calculates the major units for the value axis. 
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.MajorUnit">
            <summary>
            Returns the major interval unit.
            </summary>
            <remarks>
            <p class="body">
            To set the value of this property, use the <see cref="M:Infragistics.Documents.Excel.Charts.Axis.SetMajorMinorUnit(System.Double,System.Double)"/> method.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.Charts.Axis.SetMajorMinorUnit(System.Double,System.Double)"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Axis.MinorUnit"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.MajorUnitScale">
            <summary>
            Returns or sets the major unit scale value for the category axis when the <see cref="P:Infragistics.Documents.Excel.Charts.Axis.CategoryType"/> property is set to 'TimeScale'. 
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.MaximumScale">
            <summary>
            Returns or sets the maximum value on the value axis. 
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.MaximumScaleIsAuto">
            <summary>
            True if Excel calculates the maximum value for the value axis. 
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.MinimumScale">
            <summary>
            Returns or sets the minimum value on the value axis. 
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.MinimumScaleIsAuto">
            <summary>
            True if Excel calculates the minimum value for the value axis. 
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.MinorGridLines">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Excel.Charts.ChartGridLines"/> object which defines
            the color and weight of the minor ticklines.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.MinorTickMark">
            <summary>
            Returns or sets the type of minor tick mark for the specified axis.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.MinorUnit">
            <summary>
            Returns the minor interval unit.
            </summary>
            <remarks>
            <p class="body">
            To set the value of this property, use the <see cref="M:Infragistics.Documents.Excel.Charts.Axis.SetMajorMinorUnit(System.Double,System.Double)"/> method.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.Charts.Axis.SetMajorMinorUnit(System.Double,System.Double)"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Axis.MajorUnit"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.MinorUnitIsAuto">
            <summary>
            True if Excel calculates the minor units for the value axis. 
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.MinorUnitScale">
            <summary>
            Returns or sets the minor unit scale value for the category axis when the <see cref="P:Infragistics.Documents.Excel.Charts.Axis.CategoryType"/> property is set to 'TimeScale'. 
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.Position">
            <summary>
            Returns or sets an <see cref="T:Infragistics.Documents.Excel.Charts.AxisPosition"/> value which determines
            the placement of the axis as relative to the chart space.
            </summary>
            <remarks>
            <p class="body">
            This property is not applicable for series axes.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.ReversePlotOrder">
            <summary>
            True if Excel plots data points from last to first.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.ScaleType">
            <summary>
            Returns or sets a value indicating whether the axis scale is linear or logarithmic.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable for <see cref="P:Infragistics.Documents.Excel.Charts.Axis.Type">value</see> axes.
            </p>
            <p class="body">
            Logarithmic scaling is not supported for axes which are associated with a series
            that contains negative values.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.TickLabelPosition">
            <summary>
            Describes the position of tick-mark labels on the specified axis.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.TickLabels">
            <summary>
            Returns a TickLabels object that represents the tick-mark labels for the specified axis. Read-only.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.TickLabelSpacing">
            <summary>
            Returns or sets the number of categories or series between tick-mark labels. Applies only to category and series axes. Can be a value from 1 through 31999. 
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.TickLabelSpacingIsAuto">
            <summary>
            Returns or sets whether or not the tick label spacing is automatic. 
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.TickLines">
            <summary>
            Determines the appearance of the tick lines.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Axis.MajorTickMark"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Axis.MinorTickMark"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.TickMarkSpacing">
            <summary>
            Returns or sets the number of categories or series between tick marks. Applies only to category and series axes. Can be a value from 1 through 31999.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.Type">
            <summary>
            Returns the type of the axis (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Axis.Visible">
            <summary>
            Returns or sets whether or not the axis is visible. 
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.Axis.SetMajorMinorUnit(System.Double,System.Double)">
            <summary>
            Sets the values of the <see cref="P:Infragistics.Documents.Excel.Charts.Axis.MajorUnit"/> and <see cref="P:Infragistics.Documents.Excel.Charts.Axis.MinorUnit"/> properties.
            </summary>
            <param name="majorUnit">The new value for the <see cref="P:Infragistics.Documents.Excel.Charts.Axis.MajorUnit"/> property.</param>
            <param name="minorUnit">The new value for the <see cref="P:Infragistics.Documents.Excel.Charts.Axis.MinorUnit"/> property.</param>
            <remarks>
            <p class="body">The value of the <paramref name="majorUnit"/> parameter must exceed the value of the <paramref name="minorUnit"/> parameter or an exception is thrown.</p>
            <p class="body">
            Typically the value of <paramref name="majorUnit"/> is an exact
            multiple of <paramref name="minorUnit"/>; for example, for 5 minor
            units per major unit, set majorUnit to 1 and minorUnit to .2.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Axis.MajorUnit"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Axis.MinorUnit"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.Axis.GetSeries">
            <summary>
            Returns a list containing each series that is associated with this axis.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.Axis.ResolveLabelFormat">
            <summary>
            Returns a ValueFormatter from the TickLabels.Numberformat
            if one was explicitly set, otherwise getting it from the
            cell format of the first cell in the first series associated
            with this axis.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.AxisCollection">
            <summary>
            A collection of <see cref="T:Infragistics.Documents.Excel.Charts.Axis"/> objects for a <see cref="T:Infragistics.Documents.Excel.WorksheetChart"/>
            </summary>
            <see cref="P:Infragistics.Documents.Excel.WorksheetChart.AxisCollection">WorksheetChart.AxisCollection</see>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.AxisCollection.Count">
            <summary>
            Returns the number of items in the collection (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.AxisCollection.Item(Infragistics.Documents.Excel.Charts.AxisType,Infragistics.Documents.Excel.Charts.AxisGroup)">
            <summary>
            Indexer
            </summary>
            <param name="type">The type of the axis.</param>
            <param name="group">The axis group, defaults to primary.</param>
            <returns>The corresponding axis or null if not in the collection.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.AxisCollection.IsReadOnly">
            <summary>
            Determines if the collecion can be modified (read-only)
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.AxisCollection.Add(Infragistics.Documents.Excel.Charts.AxisType,Infragistics.Documents.Excel.Charts.AxisGroup)">
            <summary>
            Adds a new <see cref="T:Infragistics.Documents.Excel.Charts.Axis"/> into the collection with the specified type and groupo.
            </summary>
            <param name="type">The type of the axis.</param>
            <param name="group">The axis group, defaults to primary.</param>
            <returns>The newly added <see cref="T:Infragistics.Documents.Excel.Charts.Axis"/></returns>
            <remarks>
            <para class="note">
            <b>Note:</b> If there is an axis already in the collection of the type and group specified it will be replaced with the newly added one.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.AxisCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.AxisCollection.GetEnumerator">
            <summary>
            Gets an enumerator for the items in the collection
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.AxisCollection.Remove(Infragistics.Documents.Excel.Charts.AxisType,Infragistics.Documents.Excel.Charts.AxisGroup)">
            <summary>
            Removes an axis from the collection.
            </summary>
            <param name="type">The type of the axis.</param>
            <param name="group">The axis group, defaults to primary.</param>
            <returns>True if the axis was removed, otherwise false.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ChartArea">
            <summary>
            Represents the area in which the chart is displayed.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.ChartArea">WorksheetChart.ChartArea</seealso>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartArea.FillResolved">
            <summary>
            Returns the value of the Fill property if it is explicitly
            set, otherwise returns a solid fill using WorkbookThemeColorType.Light1.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ChartAreaBase">
            <summary>
            Base class for chart area elements
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.ChartArea">WorksheetChart.ChartArea</seealso>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.PlotArea">WorksheetChart.PlotArea</seealso>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartAreaBase.Border">
            <summary>
            Determines the appearance of the border drawn around
            the chart element area, as well as whether a border appears.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartAreaBase.Fill">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.Charts.ChartFillBase"/> derived object
            which defines the fill properties for the chart element area.
            </summary>
            <remarks>
            <p class="body">
            This property returns null by default, indicating that no fill is applied.
            </p>
            <p class="body">
            To apply a solid color fill, assign an instance of the
            <see cref="T:Infragistics.Documents.Excel.Charts.ChartSolidFill"/> class to this property.
            </p>
            <p class="body">
            To apply a gradient fill, assign an instance of the
            <see cref="T:Infragistics.Documents.Excel.Charts.ChartGradientFill"/> class to this property.
            </p>
            <p class="body">
            To make the area transparent, assign an instance of the
            <see cref="T:Infragistics.Documents.Excel.Charts.ChartEmptyFill"/> class to this property.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartSolidFill"/>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartGradientFill"/>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartEmptyFill"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartAreaBase.RoundedCorners">
            <summary>
            Detrmines if the chart area is displayed with rounded corners
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ChartBorder">
            <summary>
            Represents the border of a chart element.
            </summary>
            <remarks>
            <p class="body">
            The color of the border is controlled by the <see cref="P:Infragistics.Documents.Excel.Charts.ChartLineBase.Fill"/> property.
            </p>
            <p class="body">
            The width of the border lines are controlled by the <see cref="P:Infragistics.Documents.Excel.Charts.ChartLineBase.WidthInPoints"/> property.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Border">ChartTextAreaBase.Border</seealso>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Legend.Border">Legend.Border</seealso>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.Border">Series.Border</seealso>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.ChartBorder.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.ChartBorder"/> instance.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartBorder.LineStyle">
            <summary>
            Returns or sets the line style for the border, i.e.,
            solid, dashed, dotted, etc.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ChartGridLines">
            <summary>
            Represents the major/minor gridlines for an <see cref="T:Infragistics.Documents.Excel.Charts.Axis"/>.
            </summary>
            <remarks>
            <p class="body">
            The color of the grid lines is controlled by the <see cref="P:Infragistics.Documents.Excel.Charts.ChartLineBase.Fill"/> property.
            </p>
            <p class="body">
            The width of the grid lines is controlled by the <see cref="P:Infragistics.Documents.Excel.Charts.ChartLineBase.WidthInPoints"/> property.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Axis.MajorGridLines">Axis.MajorGridLines</seealso>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Axis.MinorGridLines">Axis.MinorGridLines</seealso>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.ChartGridLines.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.ChartGridLines"/> instance.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartGridLines.GridLineType">
            <summary>
            Returns a value indicating whether this instance
            represents a major or minor gridline.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ChartTickLines">
            <summary>
            Represents the tick lines for an <see cref="T:Infragistics.Documents.Excel.Charts.Axis"/>.
            </summary>
            <remarks>
            <p class="body">
            The color of the tick line is controlled by the <see cref="P:Infragistics.Documents.Excel.Charts.ChartLineBase.Fill"/> property.
            </p>
            <p class="body">
            The width of the tick line is controlled by the <see cref="P:Infragistics.Documents.Excel.Charts.ChartLineBase.WidthInPoints"/> property.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Axis.TickLines"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.ChartTickLines.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.ChartTickLines"/> instance.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ChartLine">
            <summary>
            Exposes properties which control the appearance of a line in a <see cref="T:Infragistics.Documents.Excel.Charts.Series"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.ChartLine.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.ChartLine"/> instance.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartLine.LineStyle">
            <summary>
            Returns or sets the style for the line, i.e., solid, dashed, dotted, etc.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ChartSeriesLines">
            <summary>
            Exposes properties which control the fill and width of the lines
            which connect the first and second plot areas in a 'bar of pie'
            or 'pie of pie' chart.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.SeriesLines"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.ChartSeriesLines.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.ChartSeriesLines"/> instance.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ChartHighLowLines">
            <summary>
            Exposes properties which control the fill and width of the lines
            which depict the high and low values in a stock chart.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.HighLowLines"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.ChartHighLowLines.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.ChartHighLowLines"/> instance.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ChartDropLines">
            <summary>
            Exposes properties which control the fill and width
            of the drop lines in a stock chart.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.DropLines"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.ChartDropLines.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.ChartDropLines"/> instance.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ChartLineBase">
            <summary>
            Represents a <see cref="T:Infragistics.Documents.Excel.Charts.ChartBorder">border</see> or
            <see cref="T:Infragistics.Documents.Excel.Charts.ChartTickLines">tick line</see>.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartLineBase.Fill">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.Charts.ChartFillBase"/> derived object
            which defines the fill color/gradient for the line.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartSolidFill"/>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartGradientFill"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartLineBase.WidthInPoints">
            <summary>
            Determines the width of the line, expressed in points.
            </summary>
            <remarks>
            <p class="body">
            A point is a graphical unit equal to 1/72", i.e., there are 72 points in one inch.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ChartObject">
            <summary>
            Abstract base class for objects that are exposed off a <seealso cref="T:Infragistics.Documents.Excel.WorksheetChart"/>
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.ChartObject.GetWorkbookFont(Infragistics.Documents.Excel.Workbook,System.Boolean)">
            <summary>
            Used during de-serialization; creates and returns a WorkbookFontProxy
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.ChartObject.SetEnumProperty``2(``0,System.Int32,``1@,``1)">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.ChartObject.SetProperty``2(``0,System.Int32,``1@,``1,System.Action{``1})">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartObject.Chart">
            <summary>
            Returns the owning chart (read-only)
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ChartObject.Owner"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartObject.Owner">
            <summary>
            returns this object's owner. (read-only)
            </summary>
            <value>The owner or null if this object is owned directly by the Chart</value>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ChartObject.Chart"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartObject.Sheet">
            <summary>
            The owning sheet (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartObject.Workbook">
            <summary>
            The owning workbook (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartObject.Worksheet">
            <summary>
            The owning worksheet (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ChartsheetDisplayOptionsBase">
            <summary>
            Base class for the display options for a chart sheet that are used for the display as well as its custom view.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.ChartsheetDisplayOptionsBase.ResetCore">
            <summary>
            Resets the display options to their default settings.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartsheetDisplayOptionsBase.Magnification">
            <summary>
            Gets or sets the magnification level of the chartsheet.
            </summary>
            <remarks>
            <p class="body">
            Magnifications are stored as percentages of the normal viewing magnification. A value of 100 indicates normal magnification
            whereas a value of 200 indicates a zoom that is twice the normal viewing magnification.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value is outside the valid range of magnification levels for a chartsheet. The level must be between 10 and 400.
            </exception>
            <value>The magnification level of the chartsheet in the current View.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartsheetDisplayOptionsBase.SizeWithWindow">
            <summary>
            Gets or sets whether the chart should be resized to match the size of the chart sheet window.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ChartsheetDisplayOptions">
            <summary>
            Class which exposes the display options which can only be controlled through the chartsheet.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Chartsheet.DisplayOptions"/>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.CustomViewChartDisplayOptions"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.CustomViewChartDisplayOptions">
            <summary>
            Class which exposes the chartsheet display options which can only be controlled through the custom view.
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetSheetDisplayOptions(Infragistics.Documents.Excel.Sheet,System.Boolean)"/>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartsheetDisplayOptions"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ChartsheetPrintOptions">
            <summary>
            Class which exposes the various print options available for a chartsheet which can be saved with both a 
            chartsheet and a custom view.
            </summary>
            <remarks>
            <p class="body">
            This class provides a way to control how a chartsheet is printed.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Chartsheet.PrintOptions"/>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetSheetPrintOptions(Infragistics.Documents.Excel.Sheet,System.Boolean)"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ChartsheetProtection">
            <summary>
            Provides information about the types of changes that are disabled when the associated Chartsheet is protected.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.HasProtectionPassword"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.IsProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.Chartsheet.Protection"/>
            <seealso cref="M:Infragistics.Documents.Excel.Chartsheet.Protect(System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Chartsheet.Protect(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Chartsheet.Protect(System.Security.SecureString,System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.Security.SecureString)"/> 
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartsheetProtection.AllowEditObjects">
            <summary>
            Returns a boolean indicating if objects such as shapes and controls may be created or changed when the chartsheet is protected.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartsheetProtection.AllowEditContents">
            <summary>
            Returns a boolean indicating if the chart is protected when the chartsheet is protected.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ChartTitle">
            <summary>
            Represents the title of a <see cref="T:Infragistics.Documents.Excel.WorksheetChart"/> or <see cref="T:Infragistics.Documents.Excel.Charts.Axis"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.ChartTitle.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.ChartTitle"/> instance.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartTitle.Overlay">
            <summary>
            Determines whether the chart title is laid over the plot area.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ChartLabelBase">
            <summary>
            Base class for chart elements which behave as a label.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartLabelBase.NumberFormat">
            <summary>
            Returns or sets the format to use for numbers.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ChartLabelBase.NumberFormatLinked"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartLabelBase.NumberFormatLinked">
            <summary>
            True if the number format is linked to the cells (so that the number format changes in the labels when it changes in the cells). 
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ChartLabelBase.NumberFormat"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ChartTextAreaBase">
            <summary>
            Represents the text area of a chart element.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartTitle"/>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.DisplayUnitLabel"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Border">
            <summary>
            Determines the appearance of the border drawn around
            the text area, as well as whether a border appears.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.DefaultFont">
            <summary>
            Defines the font properties for each formatted run in the
            <see cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Text"/> that has no more specific setting. Read-only.
            </summary>
            <remarks>
            <p class="body">
            Use this object to apply font formatting to the entire run of text
            which comprises the chart or axis title.
            </p>
            <p class="body">
            Font formatting can be applied to individual runs of text using the
            <see cref="M:Infragistics.Documents.Excel.FormattedString.GetFont(System.Int32,System.Int32)"/> method of the object
            returned from the <see cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Text"/> property. Any such formatting
            overrides that which is defined by the DefaultFont settings.
            </p>
            <para class="note"><b>Note:</b> this property will return null until the <see cref="T:Infragistics.Documents.Excel.Charts.ChartTitle"/>
            is set on the <see cref="P:Infragistics.Documents.Excel.WorksheetChart.ChartTitle">WorksheetChart.ChartTitle</see> property.</para>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Text"/>
            <seealso cref="T:Infragistics.Documents.Excel.FormattedString"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Fill">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.Charts.ChartFillBase"/> derived object
            which defines the fill properties for the text area.
            </summary>
            <remarks>
            <p class="body">
            This property returns null by default, indicating that no fill is applied.
            </p>
            <p class="body">
            To apply a solid color fill, assign an instance of the
            <see cref="T:Infragistics.Documents.Excel.Charts.ChartSolidFill"/> class to this property.
            </p>
            <p class="body">
            To apply a gradient fill, assign an instance of the
            <see cref="T:Infragistics.Documents.Excel.Charts.ChartGradientFill"/> class to this property.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartSolidFill"/>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartGradientFill"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.FillResolved">
            <summary>
            Returns the value of the Fill property if it is explicitly set,
            otherwise returns a ChartEmptyFill instance, resulting in a
            transparent text area.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Formula">
            <summary>
            The formula used to get the text displayed within the text area. (read-only).
            </summary>
            <remarks>
            <para class="body">
            To set this property call the <seealso cref="M:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})">SetFormula</seealso> method.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.HorizontalAlignment">
            <summary>
            Determines the horizontal alignment of the text.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.HorizontalOverflow">
            <summary>
            Determines whether text is allowed to continue horizontally
            outside the bounds of the containing element.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Left">
            <summary>
            The left position of the text area (ignored unless <see cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Position"/> is set to 'Custom').
            </summary>
            <remarks>
            <p class="body">
            The value of this property is expressed as a fractional value between 0 and 1
            which represents the ratio of the offset to the width of the chart element.
            </p>
            <p class="body">
            For example, a value of 0 positions the text area as close as possible to the
            edge of the chart element; a value of 1 positions it as close as possible to the opposite
            edge. All values in between 0 and 1 represent a scalar which, when applied to the width of
            the entire chart element, yields the offset.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Position"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Position">
            <summary>
            Determines whether the position of the text area is automatic or custom 
            as specified by the <see cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Left"/> and <see cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Top"/> properties.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.ReadingOrder">
            <summary>
            Determines the reading order
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Rotation">
            <summary>
            Determines the rotation of the text area, expressed in degrees.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Text">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.FormattedString"/> object which defines
            the text to be displayed by the associated chart element.
            </summary>
            <remarks>
            <p class="body">
            Because mixed font settings are supported for chart element text,
            a special object is required to customize the text.
            </p>
            <p class="body">
            For the simple case where all the text has the same formatting,
            create an instance of the <see cref="T:Infragistics.Documents.Excel.FormattedString"/> class,
            specifiying the text as the value of the 'unformattedString'
            parameter.
            </p>
            <p class="body">
            To apply font attributes to a given run of text, i.e., a substring
            within the text, use the <see cref="M:Infragistics.Documents.Excel.FormattedString.GetFont(System.Int32,System.Int32)"/>
            method, and set the applicable properties of the <see cref="T:Infragistics.Documents.Excel.FormattedStringFont"/>
            instance returned from the GetFont method.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.FormattedString.#ctor(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.FormattedString.GetFont(System.Int32,System.Int32)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.TextDirection">
            <summary>
            Determines the orientation and direction in which text flows.
            </summary>
            <remarks>
            <p class="body">Note that the <see cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Rotation"/> property is only applicable when this property is set to <i>Horizontal</i>.</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Rotation"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Top">
            <summary>
            The top position of the text area (ignored unless <see cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Position"/> is set to 'Custom').
            </summary>
            <remarks>
            <p class="body">
            The value of this property is expressed as a fractional value between 0 and 1
            which represents the ratio of the offset to the height of the associated chart
            element.
            </p>
            <p class="body">
            For example, a value of 0 positions the title as close as possible to the
            edge of the associated chart element; a value of 1 positions it as close as possible to the opposite
            edge. All values in between 0 and 1 represent a scalar which, when applied to the height of
            the entire chart element, yields the offset.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Position"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.VerticalAlignment">
            <summary>
            Determines the vertical alignment of the text area.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.VerticalOverflow">
            <summary>
            Determines whether text is allowed to continue vertically
            outside the bounds of the containing element.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.WrapText">
            <summary>
            Determines whether text is wrapped when it would exceed
            the bounds of the containing element.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})">
            <summary>
            Assigns a new <see cref="T:Infragistics.Documents.Excel.Formula"/> to this instance.
            </summary>
            <param name="formula">The string representation of the formula used to get the <see cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Text"/>.</param>
            <param name="cellReferenceMode">A <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> value which specifies whether the <paramref name="formula"/> parameter should be interpreted as an <b>A1</b> or <b>R1C1</b> expression. This parameter is optional and defaults to null, in which case the <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> property is used.</param>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Text"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.GetResolvedFont(System.Boolean)">
            <summary>
            Returns the resolved font to use for consumers that do not
            support rich text. If the first run has formatting information
            it is merged with the font returned from this.DefaultFont, otherwise
            this.DefaultFont is returned.
            </summary>
            <param name="includeFirstFormattingRun">True to include the font of the first formatting run. If false is specified only this.DefaultFont is included.</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.DataLabel">
            <summary>
            Represents the label of a specific <see cref="T:Infragistics.Documents.Excel.Charts.DataPoint"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.DataLabel.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.DataPoint"/> instance.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataLabel.Formula">
            <summary>Not supported.</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataLabel.Height">
            <summary>
            Returns or sets a value that represents the height of the
            label, expressed as a ratio, relative to the size of the
            chart area.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataLabel.IsDeleted">
            <summary>
            Returns or sets a boolean value indicating whether this label
            has been deleted.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataLabel.LabelPosition">
            <summary>
            Returns or sets a value which determines the label's position
            as relative to the series bar/line.
            </summary>
            <remarks>
            <p class="body">
            When this property is set to <i>Custom</i>, the position is determined
            by the values of the <see cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Left">Left</see> and
            <see cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Top">Top</see> properties.
            </p>
            <p class="body">
            When a custom label position is assigned, connecting lines appear between
            the label and its respective <see cref="T:Infragistics.Documents.Excel.Charts.DataPoint"/>. These lines are referred
            to as 'leader lines'; use the <see cref="P:Infragistics.Documents.Excel.Charts.Series.LeaderLines"/> property to control
            their appearance.
            </p>
            <p class="body">
            Note that leader lines can be hidden by setting the <see cref="P:Infragistics.Documents.Excel.Charts.SeriesDataLabels.ShowLeaderLines"/>
            property to <i>false</i>.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Left"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Top"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.LeaderLines"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.SeriesDataLabels.ShowLeaderLines"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataLabel.Position">
            <summary>
            This property is not supported. Use the <see cref="P:Infragistics.Documents.Excel.Charts.DataLabel.LabelPosition"/> property instead.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataLabel.Separator">
            <summary>
            Returns or sets the separator used between multiple values in the label. 
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataLabel.ShowBubbleSize">
            <summary>
            Returns or sets if the bubble size is shown.
            Applies only to <see cref="T:Infragistics.Documents.Excel.Charts.Series"/> which are displayed
            within a bubble chart.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataLabel.ShowCategoryName">
            <summary>
            Returns or sets a value indicating whether the category name is shown. 
            </summary>
            <remarks>
            <p class="body">
            The category name is not shown by default; to show the category name in the label, set this property to <i>true</i>.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataLabel.ShowLegendKey">
            <summary>
            Returns or sets if the <see cref="T:Infragistics.Documents.Excel.Charts.Legend"/> key is shown. 
            </summary>
            <remarks>
            <p class="body">
            The legend key is not shown by default; to show the legend key in the label, set this property to <i>true</i>.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataLabel.ShowPercentage">
            <summary>
            Returns or sets a value indicating whether the percentage of the range is shown. 
            </summary>
            <remarks>
            <p class="body">
            The percentage is not shown by default; to show the percentage in the label, set this property to <i>true</i>.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataLabel.ShowSeriesName">
            <summary>
            Returns or sets a value indicating whether the series
            <see cref="P:Infragistics.Documents.Excel.Charts.Series.Name">name</see> is shown in the label.
            </summary>
            <remarks>
            <p class="body">
            The series name  is not shown by default; to show the series name in the label, set this property to <i>true</i>.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataLabel.ShowRange">
            <summary>
            Returns or sets a boolean value indicating whether the data label range is shown. 
            </summary>
            <remarks>
            <p class="body">
            The data label range is defined by the <see cref="P:Infragistics.Documents.Excel.Charts.SeriesDataLabels.DataLabelsRange"/>
            </p>
            <p class="body">
            The data label range is not shown by default; to show the range in the label, set this property to <i>true</i>.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.SeriesDataLabels.DataLabelsRange"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataLabel.ShowValue">
            <summary>
            Returns or sets a value indicating whether the value is shown. 
            </summary>
            <remarks>
            <p class="body">
            The value is shown by default; to prevent the value from displaying in the label, set this property to <i>false</i>.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataLabel.Width">
            <summary>
            Returns or sets a value that represents the width of the
            label, expressed as a ratio, relative to the size of the
            chart area.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.DataLabel.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})">
            <summary>Not supported.</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.SeriesDataLabels">
            <summary>
            Defines the properties for all <see cref="T:Infragistics.Documents.Excel.Charts.DataLabel">data labels</see>
            displayed for this <see cref="T:Infragistics.Documents.Excel.Charts.Series"/>.
            </summary>
            <remarks>
            <p class="body">
            This property provides a way to set properties on multiple <see cref="T:Infragistics.Documents.Excel.Charts.DataLabel">data labels</see>.
            </p>
            <p class="body">
            Use the <see cref="P:Infragistics.Documents.Excel.Charts.DataPoint.DataLabel"/> property to customize an individual data label.
            </p>
            <p class="body">
            The property values of the <see cref="P:Infragistics.Documents.Excel.Charts.DataPoint.DataLabel"/> class take precedence
            over the properties of this class.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.DataLabel"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.DataPoint.DataLabel"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.DataPointCollection"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.SeriesDataLabels.Left">
            <summary>Not supported.</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.SeriesDataLabels.Top">
            <summary>Not supported.</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.SeriesDataLabels.Text">
            <summary>Not supported.</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.SeriesDataLabels.IsDeleted">
            <summary>Not supported.</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.SeriesDataLabels.Height">
            <summary>Not supported.</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.SeriesDataLabels.Width">
            <summary>Not supported.</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.SeriesDataLabels.DataLabelsRange">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Excel.Formula"/> which defines the cell range
            from which part or all of the label text is obtained.
            </summary>
            <remarks>
            <p class="body">
            Use the <see cref="M:Infragistics.Documents.Excel.Charts.SeriesDataLabels.SetDataLabelsRange(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})"/>
            method to assign a new value.
            </p>
            <p class="body">
            The cell values obtained from this property are only displayed when the
            <see cref="P:Infragistics.Documents.Excel.Charts.DataLabel.ShowRange"/> property is set to true.
            </p>
            <p class="body">
            The specified range must contain only one column or one row, or an exception is thrown.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.Charts.SeriesDataLabels.SetDataLabelsRange(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.DataLabel.ShowRange"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.SeriesDataLabels.ParentLabelLayout">
            <summary>
            Returns or sets a value which determines the label positioning
            for a <i>Treemap</i> chart.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable for <i>Treemap</i> charts.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.SeriesDataLabels.ShowLeaderLines">
            <summary>
            Returns or sets a boolean value indicating whether <see cref="P:Infragistics.Documents.Excel.Charts.Series.LeaderLines">leader lines</see>
            are displayed for the data labels associated with this instance.
            </summary>
            <remarks>
            <p class="body">
            Leader lines connect <see cref="T:Infragistics.Documents.Excel.Charts.DataLabel">data labels</see> to their respective
            <see cref="T:Infragistics.Documents.Excel.Charts.DataPoint">data points</see>.
            </p>
            <p class="body">
            The <see cref="T:Infragistics.Documents.Excel.Charts.LeaderLines"/> property provides a way to customize the appearance
            of the connecting lines. These lines are only drawn, however, for data labels whose
            <see cref="P:Infragistics.Documents.Excel.Charts.DataLabel.LabelPosition"/> property is set to <i>Custom</i>.
            </p> 
            <p class="body">
            Use this property to allow leader lines to be shown using the default appearance, i.e.,
            setting this property to true without specifying a custom appearance causes them to
            acquire the default appearance as determined by Excel.
            </p> 
            <p class="body">
            Leader lines can be hidden by setting this property to <i>false</i>.
            </p> 
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.LeaderLines"/>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.DataLabel"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.DataLabel.LabelPosition"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Left"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Top"/>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.DataPoint"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.SeriesDataLabels.SetDataLabelsRange(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})">
            <summary>
            Assigns a <see cref="T:Infragistics.Documents.Excel.Formula"/> to the <see cref="P:Infragistics.Documents.Excel.Charts.SeriesDataLabels.DataLabelsRange"/>
            </summary>
            <param name="formula">The string representation of the formula used to obtain the data label text.</param>
            <param name="cellReferenceMode">A <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> value which specifies whether the <paramref name="formula"/> parameter should be interpreted as an <b>A1</b> or <b>R1C1</b> expression. This parameter is optional and defaults to null, in which case the <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> property is used.</param>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.DataPointCollection">
            <summary>
            A collection of <see cref="T:Infragistics.Documents.Excel.Charts.DataPoint"/>s for a <see cref="P:Infragistics.Documents.Excel.Charts.DataPointCollection.Series"/>
            </summary>
            <see cref="P:Infragistics.Documents.Excel.Charts.Series.DataPointCollection">Series.DataPoints</see>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataPointCollection.Item(System.Int32)">
            <summary>
            Returns the <see cref="T:Infragistics.Documents.Excel.Charts.DataPoint"/> instance at the specified
            ordinal position within this collection.
            </summary>
            <param name="index">A zero based index</param>
            <returns>A <see cref="T:Infragistics.Documents.Excel.Charts.DataPoint"/> instance.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.DataPointCollection.Clear">
            <summary>
            For internal use only by SeriesCollection
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataPointCollection.Count">
            <summary>
            Returns the number of items in the collection (read-only)
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.DataPointCollection.Contains(Infragistics.Documents.Excel.Charts.DataPoint)">
            <summary>
            Determines if the collection contains thhe item
            </summary>
            <param name="item">The item to check</param>
            <returns>True if the item is in the collection, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.DataPointCollection.GetEnumerator">
            <summary>
            Gets an enumerator for the items in the collection
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.DataPointCollection.IndexOf(Infragistics.Documents.Excel.Charts.DataPoint)">
            <summary>
            Returns the index of the item in the collection
            </summary>
            <param name="item">The item to check</param>
            <returns>the zero-based index or -1 if the item isn't in the collection.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.GeographicMapSettings">
            <summary>
            Exposes properties which control the appearance and behavior
            of a geographic map chart.
            </summary>
            <remarks>
            <p class="body">
            This class is immutable.
            </p>
            <p class="body">
            This class is only used by <i>RegionMap</i> charts.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.GeographicMapSettings.#ctor(System.String,System.String,System.String,System.Nullable{Infragistics.Documents.Excel.Charts.GeographicMapProjection},System.Nullable{Infragistics.Documents.Excel.Charts.GeographicMappingArea},Infragistics.Documents.Excel.Charts.GeographicMapLabels,Infragistics.Documents.Excel.Charts.GeographicMapColors)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.GeographicMapSettings"/> instance.
            </summary>
            <param name="cultureLanguage">The value of the <see cref="P:Infragistics.Documents.Excel.Charts.GeographicMapSettings.CultureLanguage"/> property.</param>
            <param name="cultureRegion">The value of the <see cref="P:Infragistics.Documents.Excel.Charts.GeographicMapSettings.CultureRegion"/> property.</param>
            <param name="attribution">The value of the <see cref="P:Infragistics.Documents.Excel.Charts.GeographicMapSettings.Attribution"/> property.</param>
            <param name="projection">The value of the <see cref="P:Infragistics.Documents.Excel.Charts.GeographicMapSettings.Projection"/> property.</param>
            <param name="area">The value of the <see cref="P:Infragistics.Documents.Excel.Charts.GeographicMapSettings.Area"/> property.</param>
            <param name="labels">The value of the <see cref="P:Infragistics.Documents.Excel.Charts.GeographicMapSettings.Labels"/> property.</param>
            <param name="colors">The value of the <see cref="P:Infragistics.Documents.Excel.Charts.GeographicMapSettings.Colors"/> property.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.GeographicMapSettings.CultureLanguage">
            <summary>
            Returns the culture language for this instance.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.GeographicMapSettings.CultureRegion">
            <summary>
            Returns the culture region for this instance.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.GeographicMapSettings.Attribution">
            <summary>
            Returns the attribution for this instance.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.GeographicMapSettings.Projection">
            <summary>
            Returns the map projection for this instance.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.GeographicMapSettings.Area">
            <summary>
            Returns the mapping area for this instance.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.GeographicMapSettings.Labels">
            <summary>
            Returns a value indicating the manner in which map area labels are displayed.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.GeographicMapSettings.Colors">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Excel.Charts.GeographicMapColors"/> instance which defines the minimum,
            midpoint, and maximum colors used for the applicable areas of a geographic map
            chart.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.GeographicMapColors"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.GeographicMapColors">
            <summary>
            Exposes properties related to series coloring for a geographic map chart.
            </summary>
            <remarks>
            <p class="body">
            This class is immutable.
            </p>
            <p class="body">
            Assign an instance of this class to the <see cref="P:Infragistics.Documents.Excel.Charts.GeographicMapSettings.Colors">Colors</see>
            property of the <see cref="T:Infragistics.Documents.Excel.Charts.GeographicMapSettings"/> class to provide custom colors for map areas.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.GeographicMapColors.#ctor(Infragistics.Documents.Excel.Charts.GeographicMapSeriesColor,Infragistics.Documents.Excel.WorkbookColorInfo,Infragistics.Documents.Excel.WorkbookColorInfo,Infragistics.Documents.Excel.WorkbookColorInfo)">
            <summary>
            Createa a new <see cref="T:Infragistics.Documents.Excel.Charts.GeographicMapColors"/> instance.
            </summary>
            <param name="seriesColor">The value of the <see cref="P:Infragistics.Documents.Excel.Charts.GeographicMapColors.SeriesColor"/> property.</param>
            <param name="minimum">The value of the <see cref="P:Infragistics.Documents.Excel.Charts.GeographicMapColors.Minimum"/> property.</param>
            <param name="midpoint">The value of the <see cref="P:Infragistics.Documents.Excel.Charts.GeographicMapColors.Midpoint"/> property. Not applicable when the <paramref name="seriesColor"/> parameter is set to <i>Sequential</i>.</param>
            <param name="maximum">The value of the <see cref="P:Infragistics.Documents.Excel.Charts.GeographicMapColors.Maximum"/> property.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.GeographicMapColors.Minimum">
            <summary>
            Returns the color used for the minimum value.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.GeographicMapColors.Midpoint">
            <summary>
            Returns the color used for the midpoint value.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.GeographicMapColors.Maximum">
            <summary>
            Returns the color used for the maximum value.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.GeographicMapColors.SeriesColor">
            <summary>
            Returns a value indicating whether a sequential (two-color)
            or divergent (three-color) scheme is used to color regions in
            a geographic map chart.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.GeographicMapProjection">
            <summary>
            Constants which define the projection for a geographic map chart.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.GeographicMapProjection.Albers">
            <summary>
            Albers equal-area conic projection.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.GeographicMapProjection.Mercator">
            <summary>
            Mercator cylindrical map projection.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.GeographicMapProjection.Miller">
            <summary>
            Miller cylindrical map projection.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.GeographicMapProjection.Robinson">
            <summary>
            Robinson flat map projection.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.GeographicMappingArea">
            <summary>
            Constants which define the level of granularity for a geographic map chart.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.GeographicMappingArea.DataOnly">
            <summary>
            Only regions for which series data is available are displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.GeographicMappingArea.PostalCode">
            <summary>
            A postal region is displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.GeographicMappingArea.County">
            <summary>
            A county is displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.GeographicMappingArea.State">
            <summary>
            A state is displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.GeographicMappingArea.CountryOrRegion">
            <summary>
            The entire country or region is displayed, with areas for which no
            series data is available appearing in a lighter color.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.GeographicMappingArea.MultipleCountriesOrRegions">
            <summary>
            Multiple countries or regions are displayed, with areas for which no
            series data is available appearing in a lighter color.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.GeographicMappingArea.World">
            <summary>
            The entire world map is displayed, with areas for which no
            series data is available appearing in a lighter color.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.GeographicMapLabels">
            <summary>
            Constants which define the manner in which map labels are displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.GeographicMapLabels.None">
            <summary>
            Map labels are not displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.GeographicMapLabels.BestFit">
            <summary>
            Map labels are displayed only for regions inside which the label can fit.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.GeographicMapLabels.ShowAll">
            <summary>
            Map labels are displayed for all regions.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.GeographicMapSeriesColor">
            <summary>
            Constants which define the manner in which colors are used
            to depict series values in a geographic map chart.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.GeographicMapSeriesColor.Sequential">
            <summary>
            Two colors define the minimum and maximum series values.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.GeographicMapSeriesColor.Diverging">
            <summary>
            Three colors define the minimum, midpoint, and maximum series values.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.LeaderLines">
            <summary>
            Represents leader lines on a chart. Leader lines connect data labels to data points.
            </summary>
            <remarks>
            <para class="note">
            <b>Note:</b> this object is not a collection and there is no object that represents a single leader line.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.LeaderLines">Series.LeaderLines</seealso>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.LeaderLines.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.LeaderLines"/> instance.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.Trendline">
            <summary>
            Represents a <see cref="T:Infragistics.Documents.Excel.Charts.Series"/> trendline.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.TrendlineCollection"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Trendline.Backward">
            <summary>
            Specifies the number of periods or units by which the
            trendline extends backward.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Trendline.Forward">
            <summary>
            Specifies the number of periods or units by which the
            trendline extends forward.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Trendline.Intercept">
            <summary>
            Specifies the value axis intercept for the trendline.
            </summary>
            <remarks>
            <p class="body">
            If this property is left unset, or assigned a value of null,
            the intercept is automatically determined by Excel.
            </p> 
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Trendline.Label">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.Charts.TrendlineLabel"/> instance
            which determines the text and appearance of the trendline label.
            </summary>
            <remarks>
            <p class="body">
            This property is null by default, which prevents a label from appearing.
            </p>
            <p class="body">
            To display a label for the trendline, assign a <see cref="T:Infragistics.Documents.Excel.Charts.TrendlineLabel"/>
            instance to this property.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.TrendlineLabel"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Trendline.LegendEntry">
            <summary>
            Returns a <see cref="P:Infragistics.Documents.Excel.Charts.Trendline.LegendEntry"/> instance which determines the
            appearance of this trendline's appearance in the <see cref="P:Infragistics.Documents.Excel.WorksheetChart.Legend"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.Legend"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Trendline.Line">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.Charts.TrendlineLine"/> instance which controls
            the color and width of the trendline.
            </summary>
            <remarks>
            <p class="body">
            To prevent the trendline from appearing in the chart, set this property to null.
            </p> 
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Trendline.Name">
            <summary>
            Specifies the name of the trendline.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Trendline.Order">
            <summary>
            Specifies the order/degree of the polynomial function
            which defines the trendline. Applicable only when the
            <see cref="P:Infragistics.Documents.Excel.Charts.Trendline.TrendlineType"/> property is set to <i>Polynomial</i>.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable when the <see cref="P:Infragistics.Documents.Excel.Charts.Trendline.TrendlineType"/>
            property is set to <i>Polynomial</i>.
            </p>
            <p class="body">
            Trendlines support second-degree through sixth-degree polynomials.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Trendline.Period">
            <summary>
            Specifies the period for a moving-average trendline.
            Applicable only when the <see cref="P:Infragistics.Documents.Excel.Charts.Trendline.TrendlineType"/>
            property is set to <i>MovingAverage</i>.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Trendline.TrendlineType">
            <summary>
            Specifies the type of trendline, i.e., linear, exponential, polynomial, etc.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.TrendlineLabel">
            <summary>
            Represents a <see cref="T:Infragistics.Documents.Excel.Charts.Trendline"/> label.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.TrendlineLabel.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.TrendlineLabel"/> instance.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.TrendlineLabel.DisplayEquation">
            <summary>
            Returns or sets a boolean value indicating whether the
            default trendline equation is displayed within the label.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Trendline.Label"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.TrendlineLabel.DisplayRSquared">
            <summary>
            Returns or sets a boolean value indicating whether the
            default R-squared function is displayed within the label.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Trendline.Label"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.TrendlineCollection">
            <summary>
            A collection of <see cref="T:Infragistics.Documents.Excel.Charts.Trendline"/> objects belonging to the same <see cref="T:Infragistics.Documents.Excel.Charts.Series"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.TrendlineCollection"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.TrendlineCollection.Item(System.Int32)">
            <summary>
            Returns the <see cref="T:Infragistics.Documents.Excel.Charts.Trendline"/> instance at the specified
            ordinal position within the collection.
            </summary>
            <param name="index">A zero based index</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.TrendlineCollection.Count">
            <summary>
            Returns the number of items in the collection (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.TrendlineCollection.IsReadOnly">
            <summary>
            Determines if the collecion can be modified (read-only)
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.TrendlineCollection.Add">
            <summary>
            Adds a new <see cref="T:Infragistics.Documents.Excel.Charts.Trendline"/> to the collection
            </summary>
            <returns>The newly added <see cref="T:Infragistics.Documents.Excel.Charts.Series"/></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.TrendlineCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.TrendlineCollection.Contains(Infragistics.Documents.Excel.Charts.Trendline)">
            <summary>
            Returns a boolean value indicating whether the specified
            instance is contained within this collection.
            </summary>
            <param name="item">The item to check</param>
            <returns>True if the item is in the collection, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.TrendlineCollection.GetEnumerator">
            <summary>
            Gets an enumerator for the items in the collection
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.TrendlineCollection.IndexOf(Infragistics.Documents.Excel.Charts.Trendline)">
            <summary>
            Returns the index of the item in the collection.
            </summary>
            <param name="item">The item to check</param>
            <returns>the zero-based index or -1 if the item isn't in the collection.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.TrendlineCollection.Insert(System.Int32)">
            <summary>
            Inserts a new <see cref="T:Infragistics.Documents.Excel.Charts.Trendline"/> into the collection at the specified index.
            </summary>
            <param name="index">The index at which to insert the new trendline.</param>
            <returns>The newly inserted <see cref="T:Infragistics.Documents.Excel.Charts.Trendline"/></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.TrendlineCollection.Remove(Infragistics.Documents.Excel.Charts.Trendline)">
            <summary>
            Removes an item from the collection.
            </summary>
            <param name="item">The <see cref="T:Infragistics.Documents.Excel.Charts.Trendline"/> to remove</param>
            <returns>True if the trendline was removed, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.TrendlineCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the series at the specified index
            </summary>
            <param name="index">The zero-based index</param>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.TrendlineLine">
            <summary>
            Represents the title of a <see cref="T:Infragistics.Documents.Excel.WorksheetChart"/> or <see cref="T:Infragistics.Documents.Excel.Charts.Axis"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.TrendlineLine.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.TrendlineLine"/> instance.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.DisplayUnitLabel">
            <summary>
            Represents a unit label on an axis in a chart.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Axis.DisplayUnitLabel">Axis.DisplayUnitLabel</seealso>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.DisplayUnitLabel.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.DisplayUnitLabel"/> instance.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.AxisCrosses">
            <summary>
            Constants which describe the point at which
            <see cref="T:Infragistics.Documents.Excel.Charts.Axis">axes</see> intersect.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.AxisCrosses.Automatic">
            <summary>
            The crossing point is determined automatically.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.AxisCrosses.Custom">
            <summary>
            A custom value is designated as the crossing point, using the
            <see cref="P:Infragistics.Documents.Excel.Charts.Axis.CrossesAt"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.AxisCrosses.Maximum">
            <summary>
            The axes cross at the point coinciding with the axis' maximum value.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.AxisCrosses.Minimum">
            <summary>
            The axes cross at the point coinciding with the axis' minimum value.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.AxisGroup">
            <summary>
            Specifies the group of the axis, i.e., whether it is a primary
            or secondary axis.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Axis.AxisGroup">Axis.AxisGroup</seealso>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.AxisGroup">Series.AxisGroup</seealso>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.AxisGroup.Primary">
            <summary>
            Primary axis group.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.AxisGroup.Secondary">
            <summary>
            Secondary axis group. Invalid for <see cref="F:Infragistics.Documents.Excel.Charts.AxisType.SeriesAxis"/> in 3D charts
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.AxisPosition">
            <summary>
            Constants which determine the placement of an <see cref="T:Infragistics.Documents.Excel.Charts.Axis"/>,
            as relative to the chart space.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.AxisPosition.Automatic">
            <summary>
            The axis is positioned automatically, with the value axes
            appearing on the left/right, and the category axes appearing
            on the top/bottom.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.AxisPosition.Bottom">
            <summary>
            The axis appears alongside the bottom edge of the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.AxisPosition.Left">
            <summary>
            The axis appears alongside the left edge of the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.AxisPosition.Right">
            <summary>
            The axis appears alongside the right edge of the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.AxisPosition.Top">
            <summary>
            The axis appears alongside the top edge of the chart.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.AxisType">
            <summary>
            Specifies the axis type.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Axis.Type">Axis.Type</seealso>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.AxisType.Category">
            <summary>
            Axis displays categories.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.AxisType.Value">
            <summary>
            Axis displays values.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.AxisType.SeriesAxis">
            <summary>
            Axis displays data series along the Z-axis (3D charts only).
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.BarShape">
            <summary>
            Constants which define the shape used by a bar chart series.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.BarShape.Box">
            <summary>
            Square box
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.BarShape.PyramidToPoint">
            <summary>
            Pyramid-shaped bar extending to the series maximum.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.BarShape.PyramidToMax">
            <summary>
            Truncated pyramid-shaped bar.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.BarShape.Cylinder">
            <summary>
            Cylinder shaped bar.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.BarShape.ConeToPoint">
            <summary>
            Cone-shaped bar extending to the series maximum.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.BarShape.ConeToMax">
            <summary>
            Truncated cone-shaped bar.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.IntervalClosedSide">
            <summary>
            Constants which determine the side on which an axis binning interval is closed.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.IntervalClosedSide.Left">
            <summary>
            The interval is closed on the left side of the bin. 
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.IntervalClosedSide.Right">
            <summary>
            The interval is closed on the right side of the bin. 
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.BorderLineStyle">
            <summary>
            Determines the style of a border line, i.e., solid, dashed, dotted, etc.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ChartBorder.LineStyle" />
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.BorderLineStyle.Solid">
            <summary>
            Solid line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.BorderLineStyle.Dash">
            <summary>
            Dashed line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.BorderLineStyle.DashDot">
            <summary>
            Alternating dashes and dots.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.BorderLineStyle.Dot">
            <summary>
            Dotted line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.BorderLineStyle.LargeDash">
            <summary>
            Large dashed line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.BorderLineStyle.LargeDashDot">
            <summary>
            Large alternating dashes and dots.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.BorderLineStyle.LargeDashDotDot">
            <summary>
            Large alternating dashes and pairs of dots.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.BorderLineStyle.None">
            <summary>
            No line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.BorderLineStyle.SysDash">
            <summary>
            System-defined dashed line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.BorderLineStyle.SysDashDot">
            <summary>
            System-defined alternating dashes and dots.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.BorderLineStyle.SysDashDotDot">
            <summary>
            System-defined alternating dashes and pairs of dots.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.BorderLineStyle.SysDot">
            <summary>
            System-defined dotted line.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.CategoryType">
            <summary>
            Constants which define the type of a category axis.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.CategoryType.AutomaticScale">
            <summary>
            Scale is determined automatically.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.CategoryType.CategoryScale">
            <summary>
            A category <see cref="T:Infragistics.Documents.Excel.Charts.Axis"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.CategoryType.TimeScale">
            <summary>
            A date/time <see cref="T:Infragistics.Documents.Excel.Charts.Axis"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ChartType">
            <summary>
            Constants which identify the chart's type, i.e.,
            area chart, bar chart, pie chart, etc.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Unknown">
            <summary>Not an actual value; used for variable initialization.</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Area3D">
            <summary>
            3D Area.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Area3DStacked">
            <summary>
            3D Stacked Area.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Area3DStacked100">
            <summary>
            100% Stacked Area.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Bar3DClustered">
            <summary>
            3D Clustered Bar.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Bar3DStacked">
            <summary>
            3D Stacked Bar.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Bar3DStacked100">
            <summary>
            3D 100% Stacked Bar.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Column3D">
            <summary>
            3D Column.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Column3DClustered">
            <summary>
            3D Clustered Column.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Column3DStacked">
            <summary>
            3D Stacked Column.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Column3DStacked100">
            <summary>
            3D 100% Stacked Column.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Line3D">
            <summary>
            3D Line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Pie3D">
            <summary>
            3D Pie.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Pie3DExploded">
            <summary>
            Exploded 3D Pie.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Area">
            <summary>
            Area
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.AreaStacked">
            <summary>
            Stacked Area.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.AreaStacked100">
            <summary>
            100% Stacked Area.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.BarClustered">
            <summary>
            Clustered Bar.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.BarOfPie">
            <summary>
            Bar of Pie.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.BarStacked">
            <summary>
            Stacked Bar.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.BarStacked100">
            <summary>
            100% Stacked Bar.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Bubble">
            <summary>
            Bubble.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Bubble3DEffect">
            <summary>
            Bubble with 3D effects.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.ColumnClustered">
            <summary>
            Clustered Column.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.ColumnStacked">
            <summary>
            Stacked Column.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.ColumnStacked100">
            <summary>
            100% Stacked Column.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.ConeBarClustered">
            <summary>
            Clustered Cone Bar.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.ConeBarStacked">
            <summary>
            Stacked Cone Bar.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.ConeBarStacked100">
            <summary>
            100% Stacked Cone Bar.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.ConeCol">
            <summary>
            3D Cone Column.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.ConeColClustered">
            <summary>
            Clustered Cone Column.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.ConeColStacked">
            <summary>
            Stacked Cone Column.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.ConeColStacked100">
            <summary>
            100% Stacked Cone Column.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.CylinderBarClustered">
            <summary>
            Clustered Cylinder Bar.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.CylinderBarStacked">
            <summary>
            Stacked Cylinder Bar.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.CylinderBarStacked100">
            <summary>
            100% Stacked Cylinder Bar.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.CylinderCol">
            <summary>
            3D Cylinder Column.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.CylinderColClustered">
            <summary>
            Clustered Cone Column.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.CylinderColStacked">
            <summary>
            Stacked Cone Column.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.CylinderColStacked100">
            <summary>
            100% Stacked Cylinder Column.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Doughnut">
            <summary>
            Doughnut.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.DoughnutExploded">
            <summary>
            Exploded Doughnut.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Line">
            <summary>
            Line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.LineMarkers">
            <summary>
            Line with Markers.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.LineMarkersStacked">
            <summary>
            Stacked Line with Markers.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.LineMarkersStacked100">
            <summary>
            100% Stacked Line with Markers.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.LineStacked">
            <summary>
            Stacked Line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.LineStacked100">
            <summary>
            100% Stacked Line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Pie">
            <summary>
            Pie.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.PieExploded">
            <summary>
            Exploded Pie.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.PieOfPie">
            <summary>
            Pie of Pie.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.PyramidBarClustered">
            <summary>
            Clustered Pyramid Bar.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.PyramidBarStacked">
            <summary>
            Stacked Pyramid Bar.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.PyramidBarStacked100">
            <summary>
            100% Stacked Pyramid Bar.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.PyramidCol">
            <summary>
            3D Pyramid Column.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.PyramidColClustered">
            <summary>
            Clustered Pyramid Column.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.PyramidColStacked">
            <summary>
            Stacked Pyramid Column.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.PyramidColStacked100">
            <summary>
            100% Stacked Pyramid Column.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Radar">
            <summary>
            Radar.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.RadarFilled">
            <summary>
            Filled Radar.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.RadarMarkers">
            <summary>
            Radar with Data Markers.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.StockHLC">
            <summary>
            High-Low-Close.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.StockOHLC">
            <summary>
            Open-High-Low-Close.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.StockVHLC">
            <summary>
            Volume-High-Low-Close.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.StockVOHLC">
            <summary>
            Volume-Open-High-Low-Close.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Surface">
            <summary>
            Surface (a.k.a. Contour).
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.SurfaceTopView">
            <summary>
            3D Surface (Top View).
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.SurfaceTopViewWireframe">
            <summary>
            3D Surface (Top View wireframe).
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.SurfaceWireframe">
            <summary>
            Surface (a.k.a. Contour - wireframe).
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.XYScatter">
            <summary>
            Scatter.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.XYScatterLines">
            <summary>
            Scatter with Lines.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.XYScatterLinesNoMarkers">
            <summary>
            Scatter with Lines and No Data Markers.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.XYScatterSmooth">
            <summary>
            Scatter with Smoothed Lines.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.XYScatterSmoothNoMarkers">
            <summary>
            Scatter with Smoothed Lines and No Data Markers.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Combo">
            <summary>
            Combination of different chart types.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.BoxAndWhisker">
            <summary>
            Box and whisker (Office2016 or later)
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Funnel">
            <summary>
            Funnel (Office365 only)
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Pareto">
            <summary>
            Pareto chart with bars and lines (Office2016 or later)
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Histogram">
            <summary>
            Histogram chart (Office2016 or later)
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Sunburst">
            <summary>
            Sunburst chart (Office2016 or later)
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Treemap">
            <summary>
            Tree map chart (Office2016 or later)
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.Waterfall">
            <summary>
            Waterfall chart (Office2016 or later)
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ChartType.RegionMap">
            <summary>
            Region map (geographic) chart (Office365 only)
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.DataLabelPosition">
            <summary>
            Constants which define the location at which a <see cref="T:Infragistics.Documents.Excel.Charts.DataLabel"/> is positioned.
            </summary>
            <remarks>
            <p class="body">
            Note that which constants in this enumeration are applicable is dependent on the chart type.
            </p>
            <p class="body">
            The following table lists the supported constants for each chart type.
            </p>
            <p class="body">
            <table border="1">
            <tr>
            <th><b>Chart Type</b></th><th><b>Supported Constant(s)</b></th>
            </tr>
            <tr>
            <td>3D charts (except pie/doughnut)</td><td>Custom</td>
            </tr>
            <tr>
            <td>Area, Radar</td><td>Custom</td>
            </tr>
            <tr>
            <td>Surface</td><td>Data labels are not supported</td>
            </tr>
            <tr>
            <td>Bar/Column (stacked)</td><td>Center, InsideEnd, InsideBase</td>
            </tr>
            <tr>
            <td>Bar/Column (clustered)</td><td>Center, InsideEnd, InsideBase, OutsideEnd</td>
            </tr>
            <tr>
            <td>Line/Scatter/Bubble</td><td>Center, Left, Right, Above, Below</td>
            </tr>
            <tr>
            <td>Pie/Doughnut</td><td>Center, InsideEnd, OutsideEnd, BestFit</td>
            </tr>
            </table>
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.DataLabel.LabelPosition"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.DataLabels"/>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.DataLabel"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DataLabelPosition.Default">
            <summary>
            The label position is not specified, and is determined automatically by Excel.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DataLabelPosition.Center">
            <summary>
            The label is centered with respect to the associated data point.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DataLabelPosition.InsideBase">
            <summary>
            The label's left edge coincides with the left edge of the series bar/line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DataLabelPosition.InsideEnd">
            <summary>
            The label's right edge coincides with the right edge of the series bar/line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DataLabelPosition.OutsideEnd">
            <summary>
            The label's left edge coincides with the right edge of the series bar/line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DataLabelPosition.Custom">
            <summary>
            The label's position is explicitly defined via the <see cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Left"/>
            and <see cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Top"/> properties.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DataLabelPosition.Left">
            <summary>
            The label is positioned to the left of the associated data point.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DataLabelPosition.Right">
            <summary>
            The label is positioned to the right of the associated data point.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DataLabelPosition.Above">
            <summary>
            The label is positioned above the associated data point.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DataLabelPosition.Below">
            <summary>
            The label is positioned below the associated data point.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DataLabelPosition.BestFit">
            <summary>
            The label is positioned where it best fits with relation to the associated pie slice.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.DisplayBlanksAs">
            <summary>
            Constants which define how blank cell values are plotted on the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DisplayBlanksAs.NotPlotted">
            <summary>
            Points representing blank cell values are not plotted on the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DisplayBlanksAs.Zero">
            <summary>
            Blank cell values are interpreted as having a value of zero.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DisplayBlanksAs.Interpolated">
            <summary>
            The value is interpolated from adjacent values.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.DisplayUnit">
            <summary>
            Constants which determine the unit of expression for
            <see cref="T:Infragistics.Documents.Excel.Charts.Axis"/> value labels.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DisplayUnit.None">
            <summary>
            The raw value is displayed without special formatting.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DisplayUnit.Custom">
            <summary>
            The <see cref="P:Infragistics.Documents.Excel.Charts.Axis.DisplayUnitCustom"/> property determines the display unit.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DisplayUnit.HundredMillions">
            <summary>
            100,000,000
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DisplayUnit.Hundreds">
            <summary>
            100
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DisplayUnit.HundredThousands">
            <summary>
            100,000
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DisplayUnit.MillionMillions">
            <summary>
            1,000,000,000,000 (trillions)
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DisplayUnit.Millions">
            <summary>
            1,000,000
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DisplayUnit.TenMillions">
            <summary>
            10,000,000
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DisplayUnit.TenThousands">
            <summary>
            10,000
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DisplayUnit.ThousandMillions">
            <summary>
            1,000,000,000 (billions)
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DisplayUnit.Thousands">
            <summary>
            1,000
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.DisplayUnit.Percentage">
            <summary>
            Displays as a percentage. Applicable only to
            Box and Whisker, Histogram, Pareto, Sunburst, Treemap, and Waterfall chart types;
            if used for any other chart type, resolved to <i>Hundreds</i>.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ElementPosition">
            <summary>
            Constants which determine whether a chart element is positioned
            automatically or at a specific location in the chart space.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ElementPosition.Automatic">
            <summary>
            The chart element is positioned automatically as appropriate
            for that element. For example, a <see cref="T:Infragistics.Documents.Excel.Charts.ChartTitle"/> is typically
            positioned at the top of the chart space, centered horizontally.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ElementPosition.Custom">
            <summary>
            Custom.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ElementPosition.Top">
            <summary>
            The chart element is positioned above the plot area, centered horizontally.
            Applicable only for <i>BoxAndWhisker</i>, <i>Histogram</i>, <i>Pareto</i>, <i>Sunburst</i>, <i>Treemap</i>, and <i>Waterfall</i> chart types.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ElementPosition.Left">
            <summary>
            The chart element is positioned to the left of the plot area, centered vertically.
            Applicable only for <i>BoxAndWhisker</i>, <i>Histogram</i>, <i>Pareto</i>, <i>Sunburst</i>, <i>Treemap</i>, and <i>Waterfall</i> chart types.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ElementPosition.Right">
            <summary>
            The chart element is positioned to the right of the plot area, centered vertically.
            Applicable only for <i>BoxAndWhisker</i>, <i>Histogram</i>, <i>Pareto</i>, <i>Sunburst</i>, <i>Treemap</i>, and <i>Waterfall</i> chart types.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ElementPosition.Bottom">
            <summary>
            The chart element is positioned under the plot area, centered horizontally.
            Applicable only for <i>BoxAndWhisker</i>, <i>Histogram</i>, <i>Pareto</i>, <i>Sunburst</i>, <i>Treemap</i>, and <i>Waterfall</i> chart types.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ElementPosition.TopLeft">
            <summary>
            The chart element is positioned above the plot area, horizontally aligned with the left edge.
            Applicable only for <i>BoxAndWhisker</i>, <i>Histogram</i>, <i>Pareto</i>, <i>Sunburst</i>, <i>Treemap</i>, and <i>Waterfall</i> chart types.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ElementPosition.TopRight">
            <summary>
            The chart element is positioned above the plot area, horizontally aligned with the right edge.
            Applicable only for <i>BoxAndWhisker</i>, <i>Histogram</i>, <i>Pareto</i>, <i>Sunburst</i>, <i>Treemap</i>, and <i>Waterfall</i> chart types.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ElementPosition.BottomLeft">
            <summary>
            The chart element is positioned below the plot area, horizontally aligned with the left edge.
            Applicable only for <i>BoxAndWhisker</i>, <i>Histogram</i>, <i>Pareto</i>, <i>Sunburst</i>, <i>Treemap</i>, and <i>Waterfall</i> chart types.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ElementPosition.BottomRight">
            <summary>
            The chart element is positioned below the plot area, horizontally aligned with the right edge.
            Applicable only for <i>BoxAndWhisker</i>, <i>Histogram</i>, <i>Pareto</i>, <i>Sunburst</i>, <i>Treemap</i>, and <i>Waterfall</i> chart types.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ElementPosition.LeftTop">
            <summary>
            The chart element is positioned to the left of the plot area, vertically aligned with the top edge.
            Applicable only for <i>BoxAndWhisker</i>, <i>Histogram</i>, <i>Pareto</i>, <i>Sunburst</i>, <i>Treemap</i>, and <i>Waterfall</i> chart types.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ElementPosition.LeftBottom">
            <summary>
            The chart element is positioned to the left of the plot area, vertically aligned with the bottom edge.
            Applicable only for <i>BoxAndWhisker</i>, <i>Histogram</i>, <i>Pareto</i>, <i>Sunburst</i>, <i>Treemap</i>, and <i>Waterfall</i> chart types.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ElementPosition.RightTop">
            <summary>
            The chart element is positioned to the right of the plot area, vertically aligned with the top edge.
            Applicable only for <i>BoxAndWhisker</i>, <i>Histogram</i>, <i>Pareto</i>, <i>Sunburst</i>, <i>Treemap</i>, and <i>Waterfall</i> chart types.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ElementPosition.RightBottom">
            <summary>
            The chart element is positioned to the right of the plot area, vertically aligned with the bottom edge.
            Applicable only for <i>BoxAndWhisker</i>, <i>Histogram</i>, <i>Pareto</i>, <i>Sunburst</i>, <i>Treemap</i>, and <i>Waterfall</i> chart types.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.EndStyleCap">
            <summary>
            Constants which determine the style of the endpoint
            of a line on a line chart.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.EndStyleCap.Cap">
            <summary>
            The line terminates with a cap.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.EndStyleCap.NoCap">
            <summary>
            No cap is displayed at the end of the line.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ErrorBarDirection">
            <summary>
            Constants which specify the direction in which an
            <see cref="T:Infragistics.Documents.Excel.Charts.ErrorBars">error bar</see> extends.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ErrorBarDirection.Both">
            <summary>
            The error bar extends in both directions.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ErrorBarDirection.Plus">
            <summary>
            The error bar extends only in the positive direction.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ErrorBarDirection.Minus">
            <summary>
            The error bar extends only in the negative direction.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ErrorValueType">
            <summary>
            Constants which specify the units used to depict errors on an
            <see cref="T:Infragistics.Documents.Excel.Charts.ErrorBars">error bar</see>.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ErrorValueType.FixedValue">
            <summary>
            The error range is defined by a fixed numerical value.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ErrorValueType.Percentage">
            <summary>
            The error range is defined by a percentage.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ErrorValueType.StandardDeviation">
            <summary>
            The error range is defined by standard deviation.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ErrorValueType.StandardError">
            <summary>
            The error range is defined by standard error.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.GradientType">
            <summary>
            Constants which determine the type of gradient applied to a
            <see cref="T:Infragistics.Documents.Excel.Charts.ChartGradientFill"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.GradientType.Linear">
            <summary>
            The gradient extends in a linear direction.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.GradientType.Radial">
            <summary>
            The gradient extends along a radial curve.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.GradientType.Rectangular">
            <summary>
            The gradient extends along a rectangular path.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.GradientType.Path">
            <summary>
            The gradient direction is determined by the shape's path.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.GridLineType">
            <summary>
            Constants which define whether a gridline is major or minor.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.GridLineType.Major">
            <summary>
            <see cref="P:Infragistics.Documents.Excel.Charts.Axis.MajorGridLines"/>
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.GridLineType.Minor">
            <summary>
            <see cref="P:Infragistics.Documents.Excel.Charts.Axis.MinorGridLines"/>
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.HorizontalTitleAlignment">
            <summary>
            Determines the horizontal alignment for a title
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.HorizontalAlignment">ChartTextAreaBase.HorizontalAlignment</seealso>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.HorizontalTitleAlignment.Center">
            <summary>
            The title will be centered horizontally
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.HorizontalTitleAlignment.Distributed">
            <summary>
            The title will be distributed
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.HorizontalTitleAlignment.Justify">
            <summary>
            The title will be justified
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.HorizontalTitleAlignment.Left">
            <summary>
            The title will be aligned on the left
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.HorizontalTitleAlignment.Right">
            <summary>
            The title will be aligned on the right
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.LegendPosition">
            <summary>
            Constants which determine the placement of the chart's
            <see cref="T:Infragistics.Documents.Excel.Charts.Legend"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.LegendPosition.Bottom">
            <summary>
            The legend appears at the bottom of the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.LegendPosition.Left">
            <summary>
            The legend appears near the left edge of the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.LegendPosition.Right">
            <summary>
            The legend appears near the right edge of the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.LegendPosition.Top">
            <summary>
            The legend appears at the top of the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.LegendPosition.TopRight">
            <summary>
            The legend appears near the top right corner of the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.LegendPosition.Custom">
            <summary>
            The legend's size and location is determined by the
            <see cref="P:Infragistics.Documents.Excel.Charts.Legend.Left"/>, <see cref="P:Infragistics.Documents.Excel.Charts.Legend.Top"/>,
            <see cref="P:Infragistics.Documents.Excel.Charts.Legend.Width"/>, and <see cref="P:Infragistics.Documents.Excel.Charts.Legend.Height"/>
            properties.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.LegendPosition.Default">
            <summary>
            The legend position is determined automatically by Excel.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.LegendPosition.TopLeft">
            <summary>
            The legend appears near the top left corner of the chart.
            Supported only for Histogram, Pareto, Treemap, Sunburst, Box and Whisker, and Waterfall chart types.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.LegendPosition.BottomLeft">
            <summary>
            The legend appears near the bottom left corner of the chart.
            Supported only for Histogram, Pareto, Treemap, Sunburst, Box and Whisker, and Waterfall chart types.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.LegendPosition.BottomRight">
            <summary>
            The legend appears near the bottom right corner of the chart.
            Supported only for Histogram, Pareto, Treemap, Sunburst, Box and Whisker, and Waterfall chart types.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.LineStyle">
            <summary>
            Determines the style of a line, i.e., solid, dashed, dotted, etc.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ChartLine.LineStyle" />
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.LineStyle.Solid">
            <summary>
            Solid line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.LineStyle.Dash">
            <summary>
            Dashed line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.LineStyle.DashDot">
            <summary>
            Alternating dashes and dots.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.LineStyle.Dot">
            <summary>
            Dotted line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.LineStyle.LargeDash">
            <summary>
            Large dashed line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.LineStyle.LargeDashDot">
            <summary>
            Large alternating dashes and dots.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.LineStyle.LargeDashDotDot">
            <summary>
            Large alternating dashes and pairs of dots.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.LineStyle.None">
            <summary>
            No line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.LineStyle.SysDash">
            <summary>
            System-defined dashed line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.LineStyle.SysDashDot">
            <summary>
            System-defined alternating dashes and dots.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.LineStyle.SysDashDotDot">
            <summary>
            System-defined alternating dashes and pairs of dots.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.LineStyle.SysDot">
            <summary>
            System-defined dotted line.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.MarkerStyle">
            <summary>
            Constants which determine the style of the markers displayed by line charts.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.MarkerStyle.Automatic">
            <summary>
            The marker style is determined automatically.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.MarkerStyle.Circle">
            <summary>
            The marker is circular.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.MarkerStyle.Dash">
            <summary>
            The marker is a dash.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.MarkerStyle.Diamond">
            <summary>
            The marker is diamond-shaped.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.MarkerStyle.Dot">
            <summary>
            The marker is a dot or bullet.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.MarkerStyle.None">
            <summary>
            No marker is displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.MarkerStyle.Picture">
            <summary>
            The marker appears as a picture.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.MarkerStyle.Plus">
            <summary>
            The marker appears as a plus sign (+).
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.MarkerStyle.Square">
            <summary>
            The marker appears as a square.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.MarkerStyle.Star">
            <summary>
            The marker appears as a star.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.MarkerStyle.Triangle">
            <summary>
            The marker appears as a triangle.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.MarkerStyle.X">
            <summary>
            The marker appears as an 'X' 
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ParentLabelLayout">
            <summary>
            Constants which define the label positioning for a <i>Treemap</i> chart.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ParentLabelLayout.None">
            <summary>
            Labels are not displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ParentLabelLayout.Banner">
            <summary>
            Labels are displayed as banners.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ParentLabelLayout.Overlapping">
            <summary>
            Labels are displayed with overlapping.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.PictureType">
            <summary>
            Constants which determine the manner in which a picture is displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.PictureType.Stretch">
            <summary>
            The picture is stretched to fill it's containing element.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.PictureType.Stack">
            <summary>
            The picture is stacked or tiled to fill it's containing element.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.PictureType.Scale">
            <summary>
            The picture is scaled to fill it's containing element.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.QuartileCalculation">
            <summary>
            Constants which determine the method of calculation
            used when determining the median for a box and whisker chart.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.QuartileCalculation.InclusiveMedian">
            <summary>
            The median is included in the calculation if <i>n</i> (the number of values in the data) is odd.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.QuartileCalculation.ExclusiveMedian">
            <summary>
            The median is excluded from the calculation if <i>n</i> (the number of values in the data) is odd.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ReadingOrder">
            <summary>
            Constants which determine the reading order.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.ReadingOrder">ChartTextAreaBase.ReadingOrder</seealso>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.TickLabels.ReadingOrder">TickLabels.ReadingOrder</seealso>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ReadingOrder.Context">
            <summary>
            The direction is based on context.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ReadingOrder.LeftToRight">
            <summary>
            The order is left-to-right.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ReadingOrder.RightToLeft">
            <summary>
            The order is right-to-left.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ScaleType">
            <summary>
            Determines the numerical scale of the axis
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Axis.ScaleType">Axis.ScaleType</seealso>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ScaleType.Linear">
            <summary>
            The scale is linear.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.ScaleType.Logarithmic">
            <summary>
            The scale is logarithmic.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.SeriesType">
            <summary>
            Determines the type of <see cref="T:Infragistics.Documents.Excel.Charts.Series"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.SeriesType.Area">
            <summary>
            Area; used by both area and area 3D charts.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.SeriesType.Bar">
            <summary>
            Bar; used by both bar and bar 3D charts.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.SeriesType.Line">
            <summary>
            Line; used by line, line 3D, and stock charts.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.SeriesType.Pie">
            <summary>
            Pie; used by pie, pie 3D, doughnut, and 'of pie' charts.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.SeriesType.Radar">
            <summary>
            Radar.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.SeriesType.Surface">
            <summary>
            Surface; used by surface and surface 3D charts.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.SeriesType.Scatter">
            <summary>
            Scatter.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.SeriesType.Bubble">
            <summary>
            Bubble.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.SeriesValuesColorBy">
            <summary>
            Constants which determine the manner in which series values
            are used to color regions on a geographic map chart.
            </summary>
            <remarks>
            <p class="body">
            Applicable only when the associated series <see cref="P:Infragistics.Documents.Excel.Charts.Series.ChartType"/> is <i>RegionMap</i>.
            </p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.SeriesValuesColorBy.NumericalValue">
            <summary>
            The coloring of map regions is determined by the numerical value of the associated data point.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.SeriesValuesColorBy.SecondaryCategory">
            <summary>
            The coloring of map regions is determined by the value of the associated data point,
            which is assumed to represent a category.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.TextDirection">
            <summary>
            Determines the direction in which text flows.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TextDirection.Horizontal">
            <summary>
            Text flows along the horizontal plane. Note that under this setting,
            text rotation is also supported, with the angle of rotation being
            relative to the horizontal plane.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TextDirection.Vertical">
            <summary>
            Text flows along the vertical plane. The plane is defined by rotating
            the horizontal axis by 90 degrees in the clockwise direction.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TextDirection.Vertical270">
            <summary>
            Text flows along the vertical plane. The plane is defined by rotating
            the horizontal axis by 270 degrees in the clockwise direction.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TextDirection.EastAsianVertical">
            <summary>
            Text flows along the vertical plane with East Asian vertical orientation.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TextDirection.MongolianVertical">
            <summary>
            Text flows along the vertical plane with Mongolian vertical orientation.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TextDirection.WordArtVertical">
            <summary>
            Text flows along the vertical plane with WordArt vertical orientation.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TextDirection.WordArtVerticalRtl">
            <summary>
            Similar to <i>WordArtVertical</i>, with a right-to-left text reading direction.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.TextHorizontalOverflow">
            <summary>
            Constants which describe whether text is allowed to continue
            horizontally outside the bounds of the containing element.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.HorizontalOverflow">ChartTextAreaBase.HorizontalOverflow</seealso>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TextHorizontalOverflow.Clip">
            <summary>
            The text is clipped by the containing element.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TextHorizontalOverflow.Overflow">
            <summary>
            The text is allowed to continue outside the bounds
            of the containing element.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.TextVerticalOverflow">
            <summary>
            Constants which describe whether text is allowed to continue
            vertically outside the bounds of the containing element.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.VerticalOverflow">ChartTextAreaBase.VerticalOverflow</seealso>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TextVerticalOverflow.Clip">
            <summary>
            The text is clipped by the containing element.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TextVerticalOverflow.Overflow">
            <summary>
            The text is allowed to continue outside the bounds
            of the containing element.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TextVerticalOverflow.Ellipsis">
            <summary>
            Overflowing text is truncated and an ellipsis is displayed.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.TickLabelPosition">
            <summary>
            Constants which determine the placement of an axis' <see cref="P:Infragistics.Documents.Excel.Charts.Axis.TickLabels">tick labels</see>.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TickLabelPosition.High">
            <summary>
            Tick labels appear near the highest data value.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TickLabelPosition.Low">
            <summary>
            Tick labels appear near the lowest data value.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TickLabelPosition.NextToAxis">
            <summary>
            Tick labels appear near the axis.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TickLabelPosition.None">
            <summary>
            Tick labels are not displayed.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.TickLabelAlignment">
            <summary>
            Determines the alignment for axis <see cref="P:Infragistics.Documents.Excel.Charts.Axis.TickLabels"/>
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.TickLabels.Alignment">TickLabels.Alignment</seealso>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TickLabelAlignment.Left">
            <summary>
            The tick labels will be aligned on the left
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TickLabelAlignment.Center">
            <summary>
            The tick labels will be centered
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TickLabelAlignment.Right">
            <summary>
            The tick labels will be aligned on the right
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.TickMark">
            <summary>
            Constants which determine the placement of an axis' <see cref="P:Infragistics.Documents.Excel.Charts.Axis.MajorTickMark">major</see>
            and <see cref="P:Infragistics.Documents.Excel.Charts.Axis.MinorTickMark">minor</see> tick marks.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TickMark.Cross">
            <summary>
            The tick marks cross the axis line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TickMark.Inside">
            <summary>
            The tick marks appear on the side of the axis line
            closest to the inside of the plot area.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TickMark.None">
            <summary>
            Tick marks are not displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TickMark.Outside">
            <summary>
            The tick marks appear on the side of the axis line
            closest to the outside of the plot area.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.TimeUnit">
            <summary>
            Constants which determine the unit of measure for <see cref="T:Infragistics.Documents.Excel.Charts.Axis"/> date/time values.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TimeUnit.Days">
            <summary>
            The Axis interval is expressed in days.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TimeUnit.Months">
            <summary>
            The Axis interval is expressed in months.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TimeUnit.Years">
            <summary>
            The Axis interval is expressed in years.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.TrendlinePolynomialOrder">
            <summary>
            Constants which define the order/degree of the polynomial
            applied to a <see cref="T:Infragistics.Documents.Excel.Charts.Trendline"/> when the trendline
            type is <i>Polynomial</i>.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.TrendlineType"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TrendlinePolynomialOrder.Second">
            <summary>
            A second-order/degree polynomial.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TrendlinePolynomialOrder.Third">
            <summary>
            A third-order/degree polynomial.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TrendlinePolynomialOrder.Fourth">
            <summary>
            A fourth-order/degree polynomial.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TrendlinePolynomialOrder.Fifth">
            <summary>
            A fifth-order/degree polynomial.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TrendlinePolynomialOrder.Sixth">
            <summary>
            A sixth-order/degree polynomial.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.TrendlineType">
            <summary>
            Constants which define the various types of trendlines
            supported by a <see cref="T:Infragistics.Documents.Excel.WorksheetChart"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TrendlineType.Exponential">
            <summary>
            The trendline is exponential.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TrendlineType.Linear">
            <summary>
            The trendline is linear.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TrendlineType.Logarithmic">
            <summary>
            The trendline is logarithmic.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TrendlineType.MovingAverage">
            <summary>
            The trendline depicts a moving average.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TrendlineType.Polynomial">
            <summary>
            The trendline depicts a polynomial of order/degree <i>n</i>,
            when <i>n</i> is specified by the <see cref="!:ChartTrendline.PolynomialOrder"/>
            property.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.TrendlineType.Power">
            <summary>
            The trendline depicts a power curve.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.UpDownBarType">
            <summary>
            Constants which distinguish between an up or down bar in a stock chart.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.UpDownBarType.Up">
            <summary>
            Up bar.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.UpDownBarType.Down">
            <summary>
            Down bar.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.VerticalTitleAlignment">
            <summary>
            Determines the horizontal alignment for a title
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.VerticalAlignment">ChartTextAreaBase.VerticalAlignment</seealso>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.VerticalTitleAlignment.Bottom">
            <summary>
            The title will be aligned on the bottom
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.VerticalTitleAlignment.Center">
            <summary>
            The title will be centered vertically
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.VerticalTitleAlignment.Distributed">
            <summary>
            The title will be distributed
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.VerticalTitleAlignment.Justify">
            <summary>
            The title will be justified
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.VerticalTitleAlignment.Top">
            <summary>
            The title will be aligned on the top
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.WallType">
            <summary>
            Constants which determine the type of a <see cref="T:Infragistics.Documents.Excel.Charts.Wall"/>,
            i.e., back, side, or floor. Applicable only for 3-D charts.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.WallType.Back">
            <summary>
            The back wall, i.e., "behind" the plot area.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.WallType.Side">
            <summary>
            The side wall. Note that only one side is ever visible,
            based on the rotation around the Y-axis.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.WallType.Floor">
            <summary>
            The bottom wall, i.e., the floor of the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.WallType.All">
            <summary>
            Applies to the back and side walls, and the floor.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.XValuesDataType.String">
            <summary>The xVal element contained a CT_StrRef.</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.XValuesDataType.StringArray">
            <summary>The xVal element contained a CT_MultiLvlStrRef.</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Charts.XValuesDataType.Number">
            <summary>The xVal element contained a CT_NumRef.</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ErrorBars">
            <summary>
            Represents the error bars on a chart series.
            </summary>
            <remarks>
            <para>
            Error bars indicate the degree of uncertainty for chart data. Only series in area, bar, column, line, and scatter groups on a 2-D chart can have error bars. Only series in scatter groups can have x and y error bars. This object isn't a collection. There's no object that represents a single error bar; you either have x error bars or y error bars turned on for all points in a series or you have them turned off.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.ErrorBars">Series.ErrorBars</seealso>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.ErrorBars.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.ErrorBars"/> instance.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ErrorBars.Direction">
            <summary>
            Returns or sets a value which determines the direction in which
            the error bars extend from the data points.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ErrorBars.EndStyle">
            <summary>
            Returns or sets the end style for the error bars.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ErrorBars.ErrorValueType">
            <summary>
            Returns or sets a value which determines the units used to
            evaluate the error.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ErrorBars.Fill">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.Charts.ChartFillBase"/> derived object
            which defines the fill color/gradient for the line.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartSolidFill"/>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartGradientFill"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ErrorBars.WidthInPoints">
            <summary>
            Determines the width of the line, expressed in points.
            </summary>
            <remarks>
            <p class="body">
            A point is a graphical unit equal to 1/72", i.e., there are 72 points in one inch.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ErrorBars.Value">
            <summary>
            Returns or sets a value which defines the error range.
            </summary>
            <remarks>
            <p class="body">
            The unit for this property is determined by the <see cref="P:Infragistics.Documents.Excel.Charts.ErrorBars.ErrorValueType"/> property.
            </p> 
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ErrorBars.ErrorValueType"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ChartFillBase">
            <summary>
            Base class for objects which relate to the background fill of a chart element.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ChartLineBase.Fill">ChartLineBase.Fill</seealso>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ChartTextAreaBase.Fill">ChartTextAreaBase.Fill</seealso>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.ChartAreaBase.Fill">ChartAreaBase.Fill</seealso>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Wall.Fill">Wall.Fill</seealso>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ChartSolidFill">
            <summary>
            Represents a solid color fill for a chart element.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.ChartSolidFill.#ctor(Infragistics.Documents.Excel.WorkbookColorInfo)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.ChartSolidFill"/> instance.
            </summary>
            <param name="color"></param>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartSolidFill.Color">
            <summary>
            Returns the color which is applied to the fill.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ChartGradientFill">
            <summary>
            Represents a gradient fill for a chart element.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.GradientStop"/>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.GradientType"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.ChartGradientFill.#ctor(Infragistics.Documents.Excel.Charts.GradientType,System.Collections.Generic.IEnumerable{Infragistics.Documents.Excel.Charts.GradientStop},System.Double)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.ChartGradientFill"/> instance.
            </summary>
            <param name="gradientType">A <see cref="T:Infragistics.Documents.Excel.Charts.GradientType"/> constant which defines the type of gradient, i.e., linear, circular, rectangular, etc.</param>
            <param name="stops">An enumerable list of <see cref="T:Infragistics.Documents.Excel.Charts.GradientStop"/> instances which define the location and color of each transition point in the gradient.</param>
            <param name="angle">
            The angle defining the path along which the gradient extends; applies only to linear gradients.
            This parameter is optional and defaults to <b>0</b>.
            </param>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartGradientFill.Angle">
            <summary>
            Returns the angle defining the path along which the gradient extends;
            applicable only for linear gradients.
            </summary>
            <remarks>
            <p class="body">
            This property only applies to linear gradients.
            </p>
            <p class="body">
            This property defines the angle the gradient path makes with the horizontal plane.
            </p>
            <p class="body">
            For example, a gradient which extends from left to right can be changed to extend from
            bottom to top by setting this property to 90 degrees.
            </p>
            <p class="body">
            A value of 45 degrees yields a gradient which extends from the bottom left corner
            of the containing element to the top right corner.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.ChartGradientFill.GradientType">
            <summary>
            Defines the style for the gradient.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.ChartGradientFill.GetStops">
            <summary>
            Returns an enumerable list containing each <see cref="T:Infragistics.Documents.Excel.Charts.GradientStop"/>
            associated with this gradient, ordered by their <see cref="P:Infragistics.Documents.Excel.Charts.GradientStop.Position"/>.
            </summary>
            <returns>An array of <see cref="T:Infragistics.Documents.Excel.Charts.GradientStop"/> instances.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ChartEmptyFill">
            <summary>
            Placeholder which indicates that no fill should be
            rendered for the associated chart element.
            </summary>
            <remarks>
            <p class="body">
            Some chart elements require an explicit setting to prevent the fill from appearing.
            </p>
            <p class="body">
            Whether a fill is automatically rendered by Excel is dependent on the chart element.
            </p>
            <p class="body">
            Use this class to ensure that no fill is rendered for the associated chart element.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartSolidFill"/>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartGradientFill"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.ChartEmptyFill.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.ChartEmptyFill"/> instance.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.GradientStop">
            <summary>
            Describes the location and color of a transition
            point in a <see cref="T:Infragistics.Documents.Excel.Charts.ChartGradientFill">gradient</see>.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.GradientStop.#ctor(Infragistics.Documents.Excel.WorkbookColorInfo,System.Single)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.GradientStop"/> instance with the specified
            color and position.
            </summary>
            <param name="color">A <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> instance which defines the color for this stop.</param>
            <param name="position">A value between 0 and 1 which defines the relative position within the fill area up to which this stop is applied.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.GradientStop.Color">
            <summary>
            Returns the color for this gradient stop.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.GradientStop.Position">
            <summary>
            Returns the position of this gradient stop, as a number between 0 and 1.
            </summary>
            <remarks>
            <p class="body">
            The value assigned to the Position property represents a fraction
            of the area to which the gradient is applied.
            </p>
            <p class="body">
            For example, to add two stops of equal length, create one GradientStop
            with a position of .5 and another with a position of 1.0.
            </p>
            <p class="body">
            The first stop extends from the origin to the halfway point of the fill area,
            and the second extends from the end of the first to the endpoint of the area
            to be filled. For three uniform stops, use .33. .67, and 1.0 as the respective
            positions; for four, use .25, .5, .75, and 1.0, etc.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.Legend">
            <summary>
            Represents the legend in a chart. Each chart can have only one legend.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.Legend">WorksheetChart.Legend</seealso>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.Legend.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.Legend"/> instance.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Legend.Border">
            <summary>
            Determines the appearance of the border drawn around
            the text area, as well as whether a border appears.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Legend.DefaultFont">
            <summary>
            Defines the font properties for <see cref="P:Infragistics.Documents.Excel.Charts.Legend.LegendEntries">legend entries</see>
            which have no specific font settings. Read-only.
            </summary>
            <remarks>
            <p class="body">
            To apply font settings to a specific legend entry, use the
            <see cref="P:Infragistics.Documents.Excel.Charts.LegendEntry.Font"/> property.
            </p>
            <para class="note"><b>Note:</b> this property will return null until the <see cref="T:Infragistics.Documents.Excel.Charts.Legend"/>
            is set on the <see cref="P:Infragistics.Documents.Excel.WorksheetChart.Legend">WorksheetChart.Legend</see> property.</para>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.LegendEntry.Font"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Legend.DefaultFontFill">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.Charts.ChartFillBase"/> derived object
            which defines the font color(s) for <see cref="T:Infragistics.Documents.Excel.Charts.LegendEntry">legend entries</see>.
            </summary>
            <remarks>
            <p class="body">
            Use this property to apply the same font color(s) to all legend entries.
            </p>
            <p class="body">
            Use the <see cref="P:Infragistics.Documents.Excel.Charts.LegendEntry.FontFill"/> property to apply font color(s) for a particular legend entry.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartSolidFill"/>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartGradientFill"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Legend.Fill">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.Charts.ChartFillBase"/> derived object
            which defines the fill properties for the legend's text area.
            </summary>
            <remarks>
            <p class="body">
            This property returns null by default, indicating that no fill is applied.
            </p>
            <p class="body">
            To apply a solid color fill, assign an instance of the
            <see cref="T:Infragistics.Documents.Excel.Charts.ChartSolidFill"/> class to this property.
            </p>
            <p class="body">
            To apply a gradient fill, assign an instance of the
            <see cref="T:Infragistics.Documents.Excel.Charts.ChartGradientFill"/> class to this property.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartSolidFill"/>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartGradientFill"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Legend.FillResolved">
            <summary>
            Returns this.Fill if explicitly set, otherwise returns
            a ChartEmptyFill instance.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Legend.Height">
            <summary>
            Returns or sets a value that represents the height of the legend area,
            expressed as a fraction of the chart area's height.
            </summary>
            <remarks>
            <p class="body">
            Valid values for this property range between zero and one, with a value of one
            representing the total height of the chart area.
            </p>
            <p class="body">
            A value of .1 (for example) represents a height that is equal to one-tenth the height
            of the chart area.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Legend.Width"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Legend.Left">
            <summary>
            Returns or sets a value that represents the position of the left edge
            of the legend area, expressed as a fraction of the chart area's width.
            </summary>
            <remarks>
            <p class="body">
            Valid values for this property range between zero and one, with a value of one
            representing the total width of the chart area.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Legend.Top"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Legend.LegendEntries">
            <summary>
            Returns a read only collection of <see cref="T:Infragistics.Documents.Excel.Charts.LegendEntry">legend entries</see>.
            </summary>
            <remarks>
            <p class="body">
            This collection contains one entry for each <see cref="T:Infragistics.Documents.Excel.Charts.Series"/> in the associated
            chart's <see cref="P:Infragistics.Documents.Excel.WorksheetChart.SeriesCollection"/>.
            </p>
            <p class="body">
            This collection does <b>not</b> include legend entries for <see cref="T:Infragistics.Documents.Excel.Charts.Trendline">trendlines</see>.
            </p>
            <p class="body">
            Use the <see cref="P:Infragistics.Documents.Excel.Charts.Trendline.LegendEntry"/> property to obtain a reference to the
            legend entry associated with a trendline.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.Legend"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Legend.Overlay">
            <summary>
            Returns or sets a boolean value indicating whether the legend
            can intersect with the chart's plot area.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Legend.Position">
            <summary>
            Returns or sets a value that represents the position of the legend on the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Legend.Rotation">
            <summary>
            Determines the rotation of the legend's text area,
            expressed in degrees.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Legend.TextDirection">
            <summary>
            Determines the orientation and direction in which text flows.
            </summary>
            <remarks>
            <p class="body">Note that the <see cref="P:Infragistics.Documents.Excel.Charts.Legend.Rotation"/> property is only applicable when this property is set to <i>Horizontal</i>.</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Legend.Rotation"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Legend.Top">
            <summary>
            Returns or sets a value that represents the position of the top edge
            of the legend area, expressed as a fraction of the chart area's height.
            </summary>
            <remarks>
            <p class="body">
            Valid values for this property range between zero and one, with a value of one
            representing the total height of the chart area.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Legend.Left"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Legend.Width">
            <summary>
            Returns or sets a value that represents the width of the legend area,
            expressed as a fraction of the chart area's width.
            </summary>
            <remarks>
            <p class="body">
            Valid values for this property range between zero and one, with a value of one
            representing the total width of the chart area.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Legend.Height"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.Legend.GetResolvedLegendEntries">
            <summary>
            Returns a list of ILegendEntry implementations, each representing
            a legend entry (either an actual LegendEntry or a DataPoint).
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.Legend.ShouldSerializeFont">
            <summary>
            Used for serialization to determine whether the XLSX legend
            element requires a txPr element.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.ILegendEntry">
            <summary>
            Abstracts the things that apply to an item shown in the legend,
            which could be either a LegendEntry or DataPoint.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.LegendEntryProxy">
            <summary>
            Concrete implementation of ILegendEntry
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.LegendEntryProxy.Create(Infragistics.Documents.Excel.Charts.LegendEntry)">
            <summary>Creates an instance from a LegendEntry.</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.LegendEntryProxy.Create(Infragistics.Documents.Excel.Charts.DataPoint,System.Int32)">
            <summary>Creates an instance from a DataPoint.</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.LegendEntries">
            <summary>
            A collection of <see cref="T:Infragistics.Documents.Excel.Charts.LegendEntry"/>s for a <see cref="T:Infragistics.Documents.Excel.WorksheetChart"/>
            </summary>
            <see cref="P:Infragistics.Documents.Excel.WorksheetChart.Legend">WorksheetChart.Legend</see>
            <see cref="P:Infragistics.Documents.Excel.Charts.Legend.LegendEntries">Legend.LegendEntries</see>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.LegendEntries.Item(System.Int32)">
            <summary>
            Indexer (read-only)
            </summary>
            <param name="index">A zero based index</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.LegendEntries.Clear">
            <summary>
            For internal use only by SeriesCollection
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.LegendEntries.Count">
            <summary>
            Returns the number of items in the collection (read-only)
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.LegendEntries.Contains(Infragistics.Documents.Excel.Charts.LegendEntry)">
            <summary>
            Determines if the collection contains thhe item
            </summary>
            <param name="item">The item to check</param>
            <returns>True if the item is in the collection, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.LegendEntries.GetEnumerator">
            <summary>
            Gets an enumerator for the items in the collection
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.LegendEntries.IndexOf(Infragistics.Documents.Excel.Charts.LegendEntry)">
            <summary>
            Returns the index of the item in the collection
            </summary>
            <param name="item">The item to check</param>
            <returns>the zero-based index or -1 if the item isn't in the collection.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.LegendEntries.Insert(System.Int32)">
            <summary>
            For internal use only by SeriesCollection
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.LegendEntries.Insert(System.Int32,Infragistics.Documents.Excel.Charts.LegendEntry)">
            <summary>
            For internal use only by SeriesCollection
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.LegendEntries.RemoveAt(System.Int32)">
            <summary>
            For internal use only by SeriesCollection
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.LegendEntry">
            <summary>
            Represents a legend entry in a chart legend.
            </summary>
            <remarks>
            <p class="body">
            <b>NOTE: </b> Legend entries are not supported for the following chart types:
            </p>
            <p>
            <ul>
            <li>Box and Whisker</li>
            <li>Histogram</li>
            <li>Pareto</li>
            <li>Sunburst</li>
            <li>Treemap</li>
            <li>Waterfall</li>
            </ul>
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Legend.LegendEntries">Legend.LegendEntries</seealso>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.LegendEntry.Font">
            <summary>
            Returns or sets the <see cref="T:Infragistics.Documents.Excel.IWorkbookFont">font</see>
            for this legend entry. Read-only.
            </summary>
            <remarks>
            <p class="body">
            This property provides a way to specify font settings
            for a particular legend entry; to apply font settings
            to all legend entries, use the <see cref="P:Infragistics.Documents.Excel.Charts.Legend.DefaultFont"/>
            property.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Legend.DefaultFont"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.LegendEntry.FontResolved">
            <summary>
            Merges the explicitly set font properties from this.Font
            and Legend.DefaultFont into one WorkbookFontProxy and returns
            the result. Does not provide ultimate defaults.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.LegendEntry.FontFill">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.Charts.ChartFillBase"/> derived object
            which defines the font color(s) for this legend entry.
            </summary>
            <remarks>
            <p class="body">
            This property returns null by default, indicating that no fill is applied.
            </p>
            <p class="body">
            To apply a solid color fill, assign an instance of the
            <see cref="T:Infragistics.Documents.Excel.Charts.ChartSolidFill"/> class to this property.
            </p>
            <p class="body">
            To apply a gradient fill, assign an instance of the
            <see cref="T:Infragistics.Documents.Excel.Charts.ChartGradientFill"/> class to this property.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartSolidFill"/>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartGradientFill"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.LegendEntry.FontFillResolved">
            <summary>
            Returns this.FontFill if it is explicitly set, or
            Legend.DefaultFontFill if that is explicitly set.
            Otherwise returns a solid fill using the themed
            WorkbookThemeColorType.Dark1 color.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.LegendEntry.IsDeleted">
            <summary>
            Returns or sets a boolean value indicating whether this entry
            has been removed from the <see cref="P:Infragistics.Documents.Excel.WorksheetChart.Legend"/>
            </summary>
            <remarks>
            <p class="body">
            Deletion does not remove the entry from the <see cref="P:Infragistics.Documents.Excel.Charts.Legend.LegendEntries"/>
            collection, but rather marks it as deleted, so that it does not appear
            in the legend.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.Legend"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.LegendEntry.Legend"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Trendline.LegendEntry"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.LegendEntry.Delete">
            <summary>
            Marks the entry as being deleted. 
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.LegendEntry.GetSeries(System.Int32@)">
            <summary>
            Returns the Series associated with this LegendEntry or
            null if there is no associated chart.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.PlotArea">
            <summary>
            Represents the area in which the chart series is plotted.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.PlotArea">WorksheetChart.PlotArea</seealso>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.PlotArea.Height">
            <summary>
            Returns or sets the height of the area, expressed as a fraction of the
            height of the containing chart element.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.PlotArea.Width"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.PlotArea.Top"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.PlotArea.Height"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.PlotArea.Left">
            <summary>
            Returns or sets a value which represents the left edge of the area,
            expressed as a fraction of the width of the containing chart element.
            </summary>
            <remarks>
            <p class="body">
            This property can be set to a value between zero and one, where one
            represents the total width of the containing element.
            </p>
            <p class="body">
            For example, to situate the area such that it's left edge coincides
            with the center of the containing element, set this property to .5.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.PlotArea.Top"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.PlotArea.Width"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.PlotArea.Height"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.PlotArea.Top">
            <summary>
            Returns or sets a value which represents the top edge of the area,
            expressed as a fraction of the height of the containing chart element.
            </summary>
            <remarks>
            <p class="body">
            This property can be set to a value between zero and one, where one
            represents the total height of the containing element.
            </p>
            <p class="body">
            For example, to situate the area such that it's top edge coincides
            with the center of the containing element, set this property to .5.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.PlotArea.Left"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.PlotArea.Width"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.PlotArea.Height"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.PlotArea.Width">
            <summary>
            Returns or sets the width of the area, expressed as a fraction of the
            width of the containing chart element.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.PlotArea.Height"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.PlotArea.Top"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.PlotArea.Height"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.PlotArea.Position">
            <summary>
            Returns or sets the position of the plot area on the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.PlotArea.FillResolved">
            <summary>
            Returns the value of the Fill property if it is explicitly
            set, otherwise returns a ChartEmptyFill, resulting in a transparent
            plot area.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.DataPoint">
            <summary>
            Represents the a specific data point in a <see cref="P:Infragistics.Documents.Excel.Charts.DataPoint.Series"/>.
            </summary>
            <remarks>
            <p class="body">
            This class encapsulates an individual point of data in a <see cref="P:Infragistics.Documents.Excel.Charts.DataPoint.Series"/>.
            </p>
            <p class="body">
            A data point manifests differently depending on the chart type; for example,
            on a bar chart it represents the bar itself, and for a line chart, it represents
            a point on the line. For pie and doughnut charts, a data point represents a slice
            or wedge in the pie/doughnut.
            </p>
            <p class="body">
            Many of the properties exposed by this class are also found on the
            <see cref="P:Infragistics.Documents.Excel.Charts.DataPoint.Series"/> class; setting the property on the series affects
            all points on the series, whereas setting a property on this class affects
            only one individual point in the series.
            </p>
            <p class="body">
            In cases where <i>most</i> of the data points share the same property values, use
            the property of the Series class, overriding the property values for any individual
            points using this class.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.DataPoint.Series"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.Explosion"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.MarkerStyle"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataPoint.ApplyPicToEnd">
            <summary>
            Returns or sets a value indicating whether a picture is applied to the end
            of the point or all points in the series. 
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataPoint.ApplyPicToFront">
            <summary>
            Returns or sets a value indicating whether a picture is applied to the front
            of the point or all points in the series. 
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataPoint.ApplyPicToSides">
            <summary>
            Returns or sets a value indicating whether a picture is applied to the sides
            of the point or all points in the series. 
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataPoint.Border">
            <summary>
            Determines the appearance of the border drawn around the
            data point's <see cref="P:Infragistics.Documents.Excel.Charts.DataPoint.Fill"/> area.
            </summary>
            <remarks>
            <p class="body">
            For series which support <see cref="P:Infragistics.Documents.Excel.Charts.DataPoint.Fill">fills</see>, this property controls the
            color and size of the line drawn around the data point's fill region.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.DataPoint.Fill"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataPoint.DataLabel">
            <summary>
            Returns or sets a <see cref="P:Infragistics.Documents.Excel.Charts.DataPoint.DataLabel"/> instance which defines
            the properties of the label displayed for this data point.
            </summary>
            <remarks>
            <p class="body">
            In order to display data labels, the <see cref="P:Infragistics.Documents.Excel.Charts.Series.ShowDataLabels"/>
            property must be set to true.
            </p>
            <p class="body">
            Use the <see cref="P:Infragistics.Documents.Excel.Charts.Series.DataLabels"/> property to apply property
            settings to all data labels in the series.
            </p>
            <p class="body">
            Use the <see cref="P:Infragistics.Documents.Excel.Charts.DataLabel.IsDeleted"/> property to hide the label
            for a specific data point.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.ShowDataLabels"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.DataLabels"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataPoint.Explosion">
            <summary>
            Returns or sets the explosion value for a pie-chart or doughnut-chart slice.
            </summary>
            <remarks>
            <p class="body">
            In the context of a pie or doughnut chart, a <see cref="T:Infragistics.Documents.Excel.Charts.DataPoint"/>
            is synonymous with an individual slice of the pie/doughnut. 
            </p> 
            <p class="body">
            <i>Explosion</i> refers to the amount by which a slice in the pie is
            offset from the center point of the circle.
            </p> 
            <p class="body">
            The valid range of values is between 0 and 400, inclusive.
            </p>
            <p class="body">
            Use the <see cref="P:Infragistics.Documents.Excel.Charts.Series.Explosion"/> property to set the explosion
            for all slices in the pie.
            </p> 
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.Explosion"/>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value is outside the range of 0 and 400.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataPoint.Fill">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.Charts.ChartFillBase"/> derived object
            which defines the fill properties for the data point.
            </summary>
            <remarks>
            <p class="body">
            This property returns null by default, indicating that no fill is applied.
            In this case, the default fill color for the associated <see cref="P:Infragistics.Documents.Excel.Charts.DataPoint.Series"/>
            is used.
            </p>
            <p class="body">
            To apply a solid color fill, assign an instance of the
            <see cref="T:Infragistics.Documents.Excel.Charts.ChartSolidFill"/> class to this property.
            </p>
            <p class="body">
            To apply a gradient fill, assign an instance of the
            <see cref="T:Infragistics.Documents.Excel.Charts.ChartGradientFill"/> class to this property.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartSolidFill"/>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.ChartGradientFill"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataPoint.InvertIfNegative">
            <summary>
            Returns or sets a value indicating whether the pattern is inverted
            in the item when it corresponds to a negative number. 
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataPoint.MarkerBorder">
            <summary>
            Determines the appearance of the <see cref="T:Infragistics.Documents.Excel.Charts.ChartBorder">border</see>
            (a.k.a. outline) of the marker for this data point.
            </summary>
            <remarks>
            <p class="body">
            This property provides a way to customize the marker border for
            an individual data point in the series.
            </p>
            <p class="body">
            A value of null implies that the marker border is not explicitly
            set on this data point, and should inherit the value from it's
            associated <see cref="P:Infragistics.Documents.Excel.Charts.DataPoint.Series"/>.
            </p>
            <p class="body">
            Use the <see cref="P:Infragistics.Documents.Excel.Charts.Series.MarkerBorder"/> property to customize the border
            for all markers in the series.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.MarkerBorder"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataPoint.MarkerFill">
            <summary>
            Defines the <see cref="T:Infragistics.Documents.Excel.Charts.ChartFillBase">fill</see> appearance of the marker for this data point.
            </summary>
            <remarks>
            <p class="body">
            This property provides a way to customize the marker fill color for
            an individual data point in the series.
            </p>
            <p class="body">
            A value of null implies that the marker fill color is not explicitly
            set on this data point, and should inherit the value from it's
            associated <see cref="P:Infragistics.Documents.Excel.Charts.DataPoint.Series"/>.
            </p>
            <p class="body">
            Use the <see cref="P:Infragistics.Documents.Excel.Charts.Series.MarkerFill"/> property to customize the fill color
            for all markers in the series.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.MarkerFill"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataPoint.MarkerSize">
            <summary>
            Determines the size of the marker for this data point.
            </summary>
            <remarks>
            <p class="body">
            This property provides a way to customize the marker size for
            an individual data point in the series.
            </p>
            <p class="body">
            A value of null implies that the marker size is not explicitly
            set on this data point, and should inherit the value from it's
            associated <see cref="P:Infragistics.Documents.Excel.Charts.DataPoint.Series"/>.
            </p>
            <p class="body">
            Use the <see cref="P:Infragistics.Documents.Excel.Charts.Series.MarkerSize"/> property to customize the size
            of all markers in the series.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.MarkerSize"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataPoint.MarkerStyle">
            <summary>
            Determines the style of the marker for this data point.
            </summary>
            <remarks>
            <p class="body">
            This property provides a way to customize the marker style for
            an individual data point in the series.
            </p>
            <p class="body">
            A value of null implies that the marker style is not explicitly
            set on this data point, and should inherit the value from it's
            associated <see cref="P:Infragistics.Documents.Excel.Charts.DataPoint.Series"/>.
            </p>
            <p class="body">
            Use the <see cref="P:Infragistics.Documents.Excel.Charts.Series.MarkerStyle"/> property to customize the style
            of all markers in the series.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.MarkerStyle"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.DataPoint.SetAsTotal">
            <summary>
            Returns or sets a boolean value indicating whether this data point represents
            a total or subtotal in a waterfall chart.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable for waterfall charts.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.ShowWaterfallConnectorLines"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.DataPoint.GetResolvedFill(System.Int32)">
            <summary>
            Returns the resolved fill for this DataPoint.
            If this instance's Fill is explicitly set that
            value is returned, otherwise an automatically
            selected contrasting value is returned.
            
            Note that this is used only by pie/doughnut charts
            for the slice colors, and by scatter charts for the
            color of the line segments between the points.
            </summary>
            <param name="index">This instance's index in its respective DataPointCollection.</param>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.Series">
            <summary>
            An object that represents a specific series in a chart
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.ApplyPicToEnd">
            <summary>
            Apply the picture to the end of the series.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.ApplyPicToFront">
            <summary>
            Apply the picture to the front of the series.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.ApplyPicToSides">
            <summary>
            Apply the picture to the sides.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.AxisBinning">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.Charts.CategoryAxisBinning"/> instance which determines
            the binning properties for the category axis on a histogram or pareto chart.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable for histogram and pareto charts.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.AxisGroup">
             <summary>
             Specifies which axis group this series applies to.
             </summary>
             <remarks>
             <p class="body">
             This property is only applicable for combo charts.
             </p>
             <p class="body">
             This property defaults to <i>Primary</i>, causing all series to
             be plotted on the primary axis unless otherwise specified.
             </p>
             <p class="body">
             To plot this series on the secondary value axis, set this property to <i>Secondary</i>.
             </p>
             <p class="body">
             Setting this property to <i>Secondary</i> triggers creation of secondary
             category and value axes.
             </p>
             <p class="body">
             Not all series can be plotted on the same axis; the following table lists
             each ChartType along with the other ChartTypes which can be plotted on the
             same axis:
             </p>
             <p class="body">
             <table border="1">
             <tr><th>ChartType</th><th>Valid on same axis</th></tr>
             <tr><td>ColumnClustered</td><td>Line, LineStacked, LineStacked100, LineMarkers, LineMarkersStacked, LineMarkersStacked100, Area, AreaStacked, AreaStacked100, XYScatter, XYScatterLines, XYScatterLinesNoMarkers, XYScatterSmooth, XYScatterSmoothNoMarkers</td></tr>
             <tr><td>ColumnStacked</td><td>Line, LineStacked, LineStacked100, LineMarkers, LineMarkersStacked, LineMarkersStacked100, Area, AreaStacked, AreaStacked100, XYScatter, XYScatterLines, XYScatterLinesNoMarkers, XYScatterSmooth, XYScatterSmoothNoMarkers</td></tr>
             <tr><td>ColumnStacked100</td><td>Line, LineStacked, LineStacked100, LineMarkers, LineMarkersStacked, LineMarkersStacked100, Area, AreaStacked, AreaStacked100, XYScatter, XYScatterLines, XYScatterLinesNoMarkers, XYScatterSmooth, XYScatterSmoothNoMarkers</td></tr>
             <tr><td>BarClustered</td><td>BarClustered only</td></tr>
             <tr><td>BarStacked</td><td>BarStacked only</td></tr>
             <tr><td>BarStacked100</td><td>BarStacked100 only</td></tr>
             <tr><td>Line</td><td>ColumnClustered, ColumnStacked, ColumnStacked100, LineMarkers, Area, AreaStacked, AreaStacked100, XYScatter, XYScatterLines, XYScatterLinesNoMarkers, XYScatterSmooth, XYScatterSmoothNoMarkers</td></tr>
             <tr><td>LineStacked</td><td>ColumnClustered, ColumnStacked, ColumnStacked100, LineMarkersStacked, Area, AreaStacked, AreaStacked100, XYScatter, XYScatterLines, XYScatterLinesNoMarkers, XYScatterSmooth, XYScatterSmoothNoMarkers</td></tr>
             <tr><td>LineStacked100</td><td>ColumnClustered, ColumnStacked, ColumnStacked100, LineMarkersStacked100, Area, AreaStacked, AreaStacked100, XYScatter, XYScatterLines, XYScatterLinesNoMarkers, XYScatterSmooth, XYScatterSmoothNoMarkers</td></tr>
             <tr><td>LineMarkers</td><td>ColumnClustered, ColumnStacked, ColumnStacked100, Line, Area, AreaStacked, AreaStacked100, XYScatter, XYScatterLines, XYScatterLinesNoMarkers, XYScatterSmooth, XYScatterSmoothNoMarkers</td></tr>
             <tr><td>LineMarkersStacked</td><td>ColumnClustered, ColumnStacked, ColumnStacked100, LineStacked, Area, AreaStacked, AreaStacked100, XYScatter, XYScatterLines, XYScatterLinesNoMarkers, XYScatterSmooth, XYScatterSmoothNoMarkers</td></tr>
             <tr><td>LineMarkersStacked100</td><td>ColumnClustered, ColumnStacked, ColumnStacked100, LineStacked100, Area, AreaStacked, AreaStacked100, XYScatter, XYScatterLines, XYScatterLinesNoMarkers, XYScatterSmooth, XYScatterSmoothNoMarkers</td></tr>
             <tr><td>Area</td><td>ColumnClustered, ColumnStacked, ColumnStacked100, Line, LineStacked, LineStacked100, LineMarkers, LineMarkersStacked, LineMarkersStacked100, XYScatter, XYScatterLines, XYScatterLinesNoMarkers, XYScatterSmooth, XYScatterSmoothNoMarkers</td></tr>
             <tr><td>AreaStacked</td><td>ColumnClustered, ColumnStacked, ColumnStacked100, Line, LineStacked, LineStacked100, LineMarkers, LineMarkersStacked, LineMarkersStacked100, XYScatter, XYScatterLines, XYScatterLinesNoMarkers, XYScatterSmooth, XYScatterSmoothNoMarkers</td></tr>
             <tr><td>AreaStacked100</td><td>ColumnClustered, ColumnStacked, ColumnStacked100, Line, LineStacked, LineStacked100, LineMarkers, LineMarkersStacked, LineMarkersStacked100, XYScatter, XYScatterLines, XYScatterLinesNoMarkers, XYScatterSmooth, XYScatterSmoothNoMarkers</td></tr>
             <tr><td>Pie</td><td>PieExploded, BarOfPie, PieOfPie, Doughnut, DoughnutExploded</td></tr>
             <tr><td>PieExploded</td><td>Pie, BarOfPie, PieOfPie, Doughnut, DoughnutExploded</td></tr>
             <tr><td>BarOfPie</td><td>Pie, PieExploded, PieOfPie, Doughnut, DoughnutExploded</td></tr>
             <tr><td>PieOfPie</td><td>Pie, PieExploded, BarOfPie, Doughnut, DoughnutExploded</td></tr>
             <tr><td>Doughnut</td><td>Pie, PieExploded, BarOfPie, PieOfPie, DoughnutExploded</td></tr>
             <tr><td>DoughnutExploded</td><td>Pie, PieExploded, BarOfPie, PieOfPie, Doughnut</td></tr>
             <tr><td>XYScatter</td><td>ColumnClustered, ColumnStacked, ColumnStacked100, Line, LineStacked, LineStacked100, LineMarkers, LineMarkersStacked, LineMarkersStacked100, Area, AreaStacked, AreaStacked100, XYScatterLines, XYScatterLinesNoMarkers, XYScatterSmooth, XYScatterSmoothNoMarkers</td></tr>
             <tr><td>XYScatterLines</td><td>ColumnClustered, ColumnStacked, ColumnStacked100, Line, LineStacked, LineStacked100, LineMarkers, LineMarkersStacked, LineMarkersStacked100, Area, AreaStacked, AreaStacked100, XYScatter, XYScatterLinesNoMarkers, XYScatterSmooth, XYScatterSmoothNoMarkers</td></tr>
             <tr><td>XYScatterLinesNoMarkers</td><td>ColumnClustered, ColumnStacked, ColumnStacked100, Line, LineStacked, LineStacked100, LineMarkers, LineMarkersStacked, LineMarkersStacked100, Area, AreaStacked, AreaStacked100, XYScatter, XYScatterLines, XYScatterSmooth, XYScatterSmoothNoMarkers</td></tr>
             <tr><td>XYScatterSmooth</td><td>ColumnClustered, ColumnStacked, ColumnStacked100, Line, LineStacked, LineStacked100, LineMarkers, LineMarkersStacked, LineMarkersStacked100, Area, AreaStacked, AreaStacked100, XYScatter, XYScatterLines, XYScatterLinesNoMarkers, XYScatterSmoothNoMarkers</td></tr>
             <tr><td>XYScatterSmoothNoMarkers</td><td>ColumnClustered, ColumnStacked, ColumnStacked100, Line, LineStacked, LineStacked100, LineMarkers, LineMarkersStacked, LineMarkersStacked100, Area, AreaStacked, AreaStacked100, XYScatter, XYScatterLines, XYScatterLinesNoMarkers, XYScatterSmooth</td></tr>
             <tr><td>Radar</td><td>RadarFilled, RadarMarkers</td></tr>
             <tr><td>RadarFilled</td><td>Radar, RadarMarkers</td></tr>
             <tr><td>RadarMarkers</td><td>Radar, RadarFilled</td></tr>
            </table>
             </p>
             <p class="body">
             Attempting to set the series axis to the same value as an incompatible series
             causes an exception to be thrown.
             </p>
             </remarks>
             <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.ChartType"/>
             <seealso cref="T:Infragistics.Documents.Excel.Charts.Axis"/>
             <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.AxisCollection"/>
             <exception cref="T:System.NotSupportedException">
             The target axis already contains a chart type which cannot share axes with this series
             because of the value of the <see cref="P:Infragistics.Documents.Excel.Charts.Series.ChartType"/> property of this series.
             </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.BarShape">
            <summary>
            Determines the shape of the bar for this series.
            Applicable only for 3D bar charts.
            </summary>
            <remarks>
            <p class="body">
            This property controls the shape of the bar displayed for this series only.
            </p>
            <p class="body">
            To set the bar shape for all series in the chart, use the <see cref="P:Infragistics.Documents.Excel.WorksheetChart.BarShape"/> property.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.BarShape"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.BarShapeResolved">
            <summary>
            Returns the resolved value of the <see cref="P:Infragistics.Documents.Excel.Charts.Series.BarShape"/> property.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.BarShape"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.BarShape"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.Border">
            <summary>
            Determines the appearance of the border drawn around the
            <see cref="P:Infragistics.Documents.Excel.Charts.Series.Fill"/> area. Applicable only for chart series
            which support fills, such as bar charts, area charts, and
            pie charts.
            </summary>
            <remarks>
            <p class="body">
            For series which support <see cref="P:Infragistics.Documents.Excel.Charts.Series.Fill">fills</see>, this property controls the
            color and size of the line drawn around the fill region.
            </p>
            <p class="body">
            For line-based series, use the <see cref="P:Infragistics.Documents.Excel.Charts.Series.Line"/> property.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.Fill"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.Line"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.BoxAndWhiskerSettings">
            <summary>
            Returns or sets a <see cref="P:Infragistics.Documents.Excel.Charts.Series.BoxAndWhiskerSettings"/> instance which determines
            the properties for a box and whisker chart.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable for box and whisker charts.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.BubbleSizes">
            <summary>
            Returns or sets a <see cref="P:Infragistics.Documents.Excel.Charts.Series.Values"/> instance that determines the bubble sizes in a bubble chart.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.ChartType">
            <summary>
            Specifies the type of chart for this series. Applicable only
            for combo charts.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable for combo charts. Setting this
            property for any other type of chart causes an exception to be thrown.
            </p>
            <p class="body">
            Not all ChartType values are supported for series which are plotted within
            a combo chart. For a list of the supported values, see documentation for
            the WorksheetChart.<see cref="M:Infragistics.Documents.Excel.WorksheetChart.SetComboChartSourceData(System.String,Infragistics.Documents.Excel.Charts.ChartType[],System.Boolean,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})">SetComboChartSourceData</see>
            method.
            </p>
            <p class="body">
            If the value assigned to this property necessitates plotting this series
            on a different axis than the one referenced by the <see cref="P:Infragistics.Documents.Excel.Charts.Series.AxisGroup"/>
            property, and the other axis can accommodate this series, the AxisGroup
            property is changed accordingly.
            </p>
            <p class="body">
            If the other axis cannot accommodate this series, and other series which are
            of the same series type exist on the same axis, an attempt is made to change
            the ChartType of those other series. For example, if a different series exists
            with a ChartType of <i>BarClustered</i>, and a value of <i>BarStacked</i> is
            assigned to this series, the ChartType of   the other series is changed to
            <i>BarStacked</i> in order to accommodate the setting of the property on this
            series.
            </p>
            <p class="body">
            If no adjustment can be made that would allow the ChartType to be changed to the
            specified value, an exception is thrown.
            </p>
            <p class="body">
            Note that in all cases, the value of the <see cref="P:Infragistics.Documents.Excel.Charts.Series.Type"/> property is
            automatically changed to a value which is appropriate for the assigned ChartType.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.Type"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.AxisGroup"/>
            <exception cref="T:System.NotSupportedException">
            The <see cref="P:Infragistics.Documents.Excel.Charts.Series.AxisGroup"/> on which this series currently resides cannot share an axis
            with a series of this <i>ChartType</i>, and no adjustment could be made to avoid this.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.DataLabels">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Excel.Charts.SeriesDataLabels"/> instance which applies to all <see cref="T:Infragistics.Documents.Excel.Charts.DataLabel"/>
            instances which do not have a specific setting for a given property.
            </summary>
            <remarks>
            <p class="body">
            Use the <see cref="P:Infragistics.Documents.Excel.Charts.DataPoint.DataLabel"/> property to customize an individual data label.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.DataPointCollection">
            <summary>
            Returns a <see cref="P:Infragistics.Documents.Excel.Charts.Series.DataPointCollection">collection</see>
            of <see cref="T:Infragistics.Documents.Excel.Charts.DataPoint"/> instances which represent the
            individual data points in this series.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.ErrorBars">
            <summary>
            Returns or sets an <see cref="T:Infragistics.Documents.Excel.Charts.ErrorBars"/> object.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.Explosion">
            <summary>
            Returns or sets a value which determines the amount by which individual slices
            are offset from the center of the pie or doughnut, expressed as a percentage
            of the radius.
            </summary>
            <remarks>
            <p class="body">
            The valid range of values is between 0 and 400, inclusive.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value is outside the range of 0 and 400.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.Fill">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.Charts.ChartFillBase"/> derived object
            which defines the fill for this series. Not applicable for
            line charts.
            </summary>
            <remarks>
            <p class="body">
            This property is not applicable to charts which depict the data
            series as a line. For these chart types, use the <see cref="P:Infragistics.Documents.Excel.Charts.Series.Line"/>
            property, which controls the color and width of the line.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.Border"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.GeographicMapSettings">
            <summary>
            Returns or sets a <see cref="P:Infragistics.Documents.Excel.Charts.Series.GeographicMapSettings"/> instance
            which defines the appearance and behavior for a geographic map chart.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable when the <see cref="P:Infragistics.Documents.Excel.WorksheetChart.ChartType">ChartType</see>
            property is set to <i>RegionMap</i>.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.InvertIfNegative">
            <summary>
            Determines if negative values will be inverted.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.LeaderLines">
            <summary>
            Returns or sets the <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.LeaderLines"/> instance.
            </summary>
            <remarks>
            <p class="body">
            A leader line connects a <see cref="T:Infragistics.Documents.Excel.Charts.DataLabel"/> to it's associated series.
            </p> 
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.DataLabel"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.DataPointCollection"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.Line">
            <summary>
            Determines the <see cref="P:Infragistics.Documents.Excel.Charts.ChartLineBase.Fill">fill</see> and
            <see cref="P:Infragistics.Documents.Excel.Charts.ChartLineBase.WidthInPoints">width</see> of a series line.
            </summary>
            <remarks>
            <p class="body">
            This property is not applicable for series which support <see cref="P:Infragistics.Documents.Excel.Charts.Series.Fill">fills</see>,
            such as bar, area, or pie charts.
            </p>
            <p class="body">
            For chart series which supports fills, use the <see cref="P:Infragistics.Documents.Excel.Charts.Series.Fill"/> property
            to control the fill color, and the <see cref="P:Infragistics.Documents.Excel.Charts.Series.Border"/> property for the
            line drawn around that fill area.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.Fill"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.Border"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.MarkerFill"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.MarkerBorder"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.MarkerBorder">
            <summary>
            Determines the appearance of the <see cref="T:Infragistics.Documents.Excel.Charts.ChartBorder">border</see>
            (a.k.a. outline) for the marker.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.MarkerFill">
            <summary>
            Defines the <see cref="T:Infragistics.Documents.Excel.Charts.ChartFillBase">fill</see> appearance for the marker.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.MarkerSize">
            <summary>
            Determines the size of the markers.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.MarkerStyle">
            <summary>
            Determines the style of the markers
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.Name">
            <summary>
            The name of the series
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.OwningSeries">
            <summary>
            Returns or sets a reference to the owning <see cref="T:Infragistics.Documents.Excel.Charts.Series"/>.
            Applicable only for a line series in a <i>Pareto</i> chart.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable for Series contained within a
            <i>Pareto</i> chart.
            </p>
            <p class="body">
            If the <see cref="P:Infragistics.Documents.Excel.Charts.Series.ChartType"/> property of this series, as well as that of
            the associated <see cref="T:Infragistics.Documents.Excel.WorksheetChart">chart</see>, are not both set to
            'Pareto', an exception is thrown.
            </p>
            <p class="body">
            If the value assigned to this property has a <see cref="P:Infragistics.Documents.Excel.Charts.Series.ChartType"/> of any value
            other than 'ClusteredColumn', an exception is thrown.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.PictureType">
            <summary>
            Determines whether pictures are scaled, stacked, or stretched.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.PictureUnit">
            <summary>
            Returns or sets a value which defines the unit of measure
            when <see cref="P:Infragistics.Documents.Excel.Charts.Series.PictureType"/> is set to <i>Stack</i>.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.PlotOrder">
            <summary>
            The plotting order for the data series. 
            </summary>
            <remarks>
            <para class="note">
            <b>Note:</b> this is the order in which the series names will appear in the legend. When there is only one series then this is omitted. This must be a whole number between 1 and the number of series on the chart. If you enter zero then 1 is used. If you enter a number greater than the number of series then the total number of series is used. 
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.ShowDataLabels">
            <summary>
            Returns or sets a boolean value indicating whether to display
            <see cref="P:Infragistics.Documents.Excel.Charts.Series.DataLabels"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.ShowWaterfallConnectorLines">
            <summary>
            Returns or sets a boolean value indicating whether to display
            connecting lines between the data points in a waterfall chart.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable for waterfall charts.
            </p>
            <p class="body">
            Use the <see cref="P:Infragistics.Documents.Excel.Charts.Series.Border"/> property to control the visual
            appearance of the connector lines.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.Smooth">
            <summary>
            Determines whether a smoothing effect should be applied.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.SmoothResolved">
            <summary>
            Evidently a scatterType of 'smoothMarkers' doesn't clearly convey
            our desire to make it a SMOOTH scatter series, so we have to go the
            extra mile here.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.TrendlineCollection">
            <summary>
            Returns a collection of <see cref="T:Infragistics.Documents.Excel.Charts.Trendline"/> instances for this series.
            </summary>
            <remarks>
            <p class="body">
            Trendlines are supported for Area, Bar, Bubble, Line, and Scatter charts,
            and are not supported for other chart types.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.Charts.Trendline"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.Type">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.Charts.SeriesType"/> value which determines
            the type of this series. Applicable only for combo charts.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable for combo charts. Setting this
            property for any other type of chart causes an exception to be thrown.
            </p>
            <p class="body">
            Combo charts do not support <i>Bubble</i> or <i>Surface</i>; setting this property
            to either of those values causes an exception to be thrown.
            </p>
            <p class="body">
            The <see cref="P:Infragistics.Documents.Excel.Charts.Series.ChartType"/> property must be set to a value that is compatible
            with assigned series type. If the current value of the ChartType property is
            not compatible with the value assigned to this property, a reasonable default
            value, which is compatible, is assigned to the ChartType property.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.ChartType"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.XValues">
            <summary>
            Returns or sets a <see cref="P:Infragistics.Documents.Excel.Charts.Series.XValues"/> instance that contains a collection of all the x values in the series.
            </summary>
            <remarks>
            <para>The value of this property can be a range on a worksheet or an array of constant values, but not a combination of both.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.Values">
            <summary>
            Returns or sets a <see cref="P:Infragistics.Documents.Excel.Charts.Series.Values"/> instance that contains a collection of all the values in the series.
            </summary>
            <remarks>
            <para>The value of this property can be a range on a worksheet or an array of constant values, but not a combination of both.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Series.Axis">
            <summary>
            Returns the value axis on which this series is plotted.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.Series.GetResolvedFill(System.Int32)">
            <summary>
            Returns the value of the Fill property if it is explicitly
            set, otherwise returns an automatically resolved contrasting
            fill based on the index. An index of 0 yields themed color
            Accent1, and index of 1 yields Accent2, and so on, up to
            Accent6, and then they repeat.
            </summary>
            <param name="index">This series index in the collection.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.Series.GetResolvedLineFill(System.Int32)">
            <summary>
            Returns the value of the Line.Fill property if it is explicitly
            set, otherwise returns an automatically resolved contrasting
            fill based on the index. An index of 0 yields themed color
            Accent1, and index of 1 yields Accent2, and so on, up to
            Accent6, and then they repeat.
            </summary>
            <param name="index">This series index in the collection.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.Series.GetResolvedMarkerFill(System.Int32)">
            <summary>
            Returns the value of the MarkerFill property if it is explicitly
            set, then the Series Fill or Line.Fill if explicitly set, otherwise
            returns an automatically resolved contrasting fill based on the index.
            </summary>
            <param name="index">This series index in the collection.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.Series.HasNegativeValues(Infragistics.Documents.Excel.Workbook)">
            <summary>
            Returns a boolean value indicating whether this series
            has negative numeric values.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.SeriesName">
            <summary>
            Defines the name of a series
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.Name">Series.Name</seealso>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.SeriesName.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.SeriesName"/>
            </summary>
            <param name="name">The name of the series</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.SeriesName.#ctor(Infragistics.Documents.Excel.Sheet,System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.SeriesName"/>
            </summary>
            <param name="sheet">The sheet reference</param>
            <param name="formula">The string representation of the formula.</param>
            <param name="cellReferenceMode">A <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> value which specifies whether the <paramref name="formula"/> parameter should be interpreted as an <b>A1</b> or <b>R1C1</b> expression. This parameter is optional and defaults to null, in which case the <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> property is used.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.SeriesName.ToString">
            <summary>
            Gets the string representation of the <see cref="T:Infragistics.Documents.Excel.Charts.SeriesName"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.SeriesName.GetNames">
            <summary>
            Gets all the names of the series
            </summary>
            <returns>An array of strings</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.SeriesValuesBase">
            <summary>
            Abstract base class that defines a set of values in a <see cref="T:Infragistics.Documents.Excel.Charts.Series"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.BubbleSizes">Series.BubbleSizes</seealso>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.Values">Series.Values</seealso>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.XValues">Series.XValues</seealso>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.SeriesValuesBase.#ctor(System.Collections.IEnumerable)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.SeriesValuesBase"/>
            </summary>
            <param name="values">The set of values</param>
            <exception cref="T:System.ArgumentNullException">If values is null</exception>
            <exception cref="T:System.ArgumentException">If no values or any value is not a string or something that can be converted to a double.</exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.SeriesValuesBase.#ctor(Infragistics.Documents.Excel.Sheet,System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.SeriesValuesBase"/>
            </summary>
            <param name="sheet">The sheet that <see cref="T:Infragistics.Documents.Excel.Charts.Series"/> belongs to.</param>
            <param name="formula">A string representation of the source range(s) for the values</param>
            <param name="cellReferenceMode">An optional <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> to use to parse the source ranges. If null it defaults to the workbook's mode.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.SeriesValuesBase.GetValues">
            <summary>
            Returns an object array containing the value of
            each data point in the associated <see cref="T:Infragistics.Documents.Excel.Charts.Series"/>.
            </summary>
            <returns>An array of values where each element in the array represents the value of a data point in the associated Series.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.XValues">
            <summary>
            Defines a set of values in a series
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.XValues">Series.XValues</seealso>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.XValues.#ctor(System.Collections.IEnumerable)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.XValues"/>
            </summary>
            <param name="values">The set of values</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.XValues.#ctor(Infragistics.Documents.Excel.Sheet,System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.XValues"/>
            </summary>
            <param name="sheet">The worksheet that the <see cref="T:Infragistics.Documents.Excel.Charts.Series"/> belongs to.</param>
            <param name="formula">A string representation of the source range(s) for the values</param>
            <param name="cellReferenceMode">An optional <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> to use to parse the source ranges. If null it defaults to the workbook's mode.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.XValues.GetValues">
            <summary>
            Returns the actual values for this <see cref="T:Infragistics.Documents.Excel.Charts.XValues"/> instance.
            </summary>
            <returns>An object array containing the actual data point values for the associated <see cref="T:Infragistics.Documents.Excel.Charts.Series"/>.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.XValues.GetXValues">
            <summary>
            Returns an object which contains a list of the values in the series.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.SeriesValues">
            <summary>
            Defines a set of values in a series
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.BubbleSizes">Series.BubbleSizes</seealso>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.Values">Series.YValues</seealso>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.SeriesValues.#ctor(System.Collections.IEnumerable)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.SeriesValues"/>
            </summary>
            <param name="values">The set of values</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.SeriesValues.#ctor(Infragistics.Documents.Excel.Sheet,System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode},Infragistics.Documents.Excel.Charts.SeriesValuesColorBy)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.SeriesValues"/> instance.
            </summary>
            <param name="sheet">The worksheet that the <see cref="T:Infragistics.Documents.Excel.Charts.Series"/> belongs to.</param>
            <param name="sourceRange">A string representation of the source range(s) for the values</param>
            <param name="cellReferenceMode">An optional <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> to use to parse the source ranges. If null it defaults to the workbook's mode.</param>
            <param name="colorBy">
            An optional <see cref="T:Infragistics.Documents.Excel.Charts.SeriesValuesColorBy"/> value indicating whether
            the values which are used for coloring regions in a geographic map chart
            are interpreted as numerical values or categories. Applicable only when
            the associated series ChartType is set to <i>RegionMap</i>.
            </param>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.CategoryAxisBinning">
            <summary>
            Exposes properties related to category axis binning.
            Applicable only for Histogram and Pareto charts.
            </summary>
            <remarks>
            <p class="body">
            This class is immutable.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.AxisBinning"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.#ctor(System.Nullable{System.Double},System.Boolean,System.Nullable{System.Double},System.Boolean,System.Nullable{System.Double})">
            <summary>
            Creates a new instance with the specified property values.
            </summary>
            <param name="binWidth">Specifies the value of the <see cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.BinWidth"/> property.</param>
            <param name="overflow">Specifies the value of the <see cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.Overflow"/> property.</param>
            <param name="overflowThreshold">Specifies the value of the <see cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.OverflowThreshold"/> property.</param>
            <param name="underflow">Specifies the value of the <see cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.Underflow"/> property.</param>
            <param name="underflowThreshold">Specifies the value of the <see cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.UnderflowThreshold"/> property.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.#ctor(System.Nullable{System.Int32},System.Boolean,System.Nullable{System.Double},System.Boolean,System.Nullable{System.Double})">
            <summary>
            Creates a new instance with the specified property values.
            </summary>
            <param name="numberOfBins">Specifies the value of the <see cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.NumberOfBins"/> property.</param>
            <param name="overflow">Specifies the value of the <see cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.Overflow"/> property.</param>
            <param name="overflowThreshold">Specifies the value of the <see cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.OverflowThreshold"/> property.</param>
            <param name="underflow">Specifies the value of the <see cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.Underflow"/> property.</param>
            <param name="underflowThreshold">Specifies the value of the <see cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.UnderflowThreshold"/> property.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.BinWidth">
            <summary>
            Returns the number of data points in each range, i.e., how many
            data points exist in each bin.
            </summary>
            <remarks>
            <p class="body">
            Use this property to control the number of data points that should appear
            in each bin, allowing the total number of bins to be determined automatically.
            </p>
            <p class="body">
            BinWidth and <see cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.NumberOfBins"/> are mutually exclusive.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.NumberOfBins"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.NumberOfBins">
            <summary>
            Returns the total number of bins.
            </summary>
            <remarks>
            <p class="body">
            Use this property to control the number of bins that should appear,
            allowing the number of data points per bin to be determined automatically.
            </p>
            <p class="body">
            NumberOfBins and <see cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.BinWidth"/> are mutually exclusive.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.BinWidth"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.Overflow">
            <summary>
            Specifies whether a bin is created for all values above a given threshold.
            </summary>
            <remarks>
            <p class="body">
            Setting this property to true causes a bin to be created for values
            above a given threshold.
            </p>
            <p class="body">
            The threshold is determined automatically by default; use the
            <see cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.OverflowThreshold"/> property to specify a threshold
            value.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.OverflowThreshold"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.Underflow"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.OverflowThreshold">
            <summary>
            Determines the threshold for the <see cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.Overflow"/> bin.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable when the <see cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.Overflow"/>
            property is set to true.
            </p>
            <p class="body">
            When this property is left unset, the threshold is determined automatically.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.Overflow"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.UnderflowThreshold"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.Underflow">
            <summary>
            Specifies whether a bin is created for all values below a given threshold.
            </summary>
            <remarks>
            <p class="body">
            Setting this property to true causes a bin to be created for values
            below a given threshold.
            </p>
            <p class="body">
            The threshold is determined automatically by default; use the
            <see cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.UnderflowThreshold"/> property to specify a threshold
            value.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.OverflowThreshold"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.Overflow"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.UnderflowThreshold">
            <summary>
            Determines the threshold for the <see cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.Underflow"/> bin.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable when the <see cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.Underflow"/>
            property is set to true.
            </p>
            <p class="body">
            When this property is left unset, the threshold is determined automatically.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.Underflow"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.CategoryAxisBinning.UnderflowThreshold"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.BoxAndWhiskerSettings">
            <summary>
            Exposes properties related to the <i>BoxAndWhisker</i> chart type.
            </summary>
            <remarks>
            <p class="body">
            This class is immutable.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.BoxAndWhiskerSettings"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.BoxAndWhiskerSettings.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,Infragistics.Documents.Excel.Charts.QuartileCalculation)">
            <summary>
            Creates a new instance with the specified property settings.
            </summary>
            <param name="showInnerPoints">The value of the <see cref="P:Infragistics.Documents.Excel.Charts.BoxAndWhiskerSettings.ShowInnerPoints"/> property.</param>
            <param name="showOutlierPoints">The value of the <see cref="P:Infragistics.Documents.Excel.Charts.BoxAndWhiskerSettings.ShowOutlierPoints"/> property.</param>
            <param name="showMeanMarkers">The value of the <see cref="P:Infragistics.Documents.Excel.Charts.BoxAndWhiskerSettings.ShowMeanMarkers"/> property.</param>
            <param name="showMeanLine">The value of the <see cref="P:Infragistics.Documents.Excel.Charts.BoxAndWhiskerSettings.ShowMeanLine"/> property.</param>
            <param name="quartileCalculation">The value of the <see cref="P:Infragistics.Documents.Excel.Charts.BoxAndWhiskerSettings.QuartileCalculation"/> property.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.BoxAndWhiskerSettings.ShowInnerPoints">
            <summary>
            Determines whether inner points appear on a box and whisker chart.
            </summary>
            <remarks>
            <p class="body">
            Inner points appear between the lower whisker line and the upper whisker line.
            </p>                                                                                                            
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.BoxAndWhiskerSettings.ShowOutlierPoints"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.BoxAndWhiskerSettings.ShowOutlierPoints">
            <summary>
            Determines whether outlier points appear on a box and whisker chart.
            </summary>
            <remarks>
            <p class="body">
            Outlier points appear either below the lower whisker line or above the upper whisker line.
            </p>                                                                                                            
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.BoxAndWhiskerSettings.ShowInnerPoints"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.BoxAndWhiskerSettings.ShowMeanMarkers">
            <summary>
            Determines whether mean markers appear on a box and whisker chart.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.BoxAndWhiskerSettings.ShowMeanLine"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.BoxAndWhiskerSettings.ShowMeanLine">
            <summary>
            Determines whether a mean line appears on a box and whisker chart.
            </summary>
            <remarks>
            <p class="body">
            Mean lines connect the means of the boxes.
            </p>                                                                                                            
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.BoxAndWhiskerSettings.ShowMeanMarkers"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.BoxAndWhiskerSettings.QuartileCalculation">
            <summary>
            Determines the method for median calculation.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.GetXValuesResult.DataType">
            <summary>
            Returns whether the values represent numbers, strings, or string arrays.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.GetXValuesResult.Values">
            <summary>
            Returns a list containing each value, in the same order as the
            associated data points appear on the series.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.GetXValuesResult.GetXAxisValues(System.Double@,System.Double@)">
            <summary>
            Returns a list of doubles which represent the x-axis values for the associated series.
            </summary>
            <param name="min">[out] The lowest value across the range.</param>
            <param name="max">[out] The highest value across the range.</param>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.XValue">
            <summary>
            Wraps an individual value 
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.XValue.Index">
            <summary>
            Returns the zero-based ordinal position of this entry in the list.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.XValue.Number">
            <summary>
            Returns the numeric value for this data point or double.NaN
            if this data point value is a string or string array.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.XValue.StringValue">
            <summary>
            Returns the string value for this data point or null
            if this data point value is a number or string array.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.XValue.StringArrayValue">
            <summary>
            Returns the string array value for this data point or null
            if this data point value is a number or string.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.XValue.XAxisValue">
            <summary>
            Returns a numeric value which represents the resolved
            x-axis value for this data point. If the associated
            value is numeric, that value is returned, otherwise
            the zero-based index is returned.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.XValue.ToString">
            <summary>
            Returns the string representation of this object.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.XValue.ExplodeStringArray(System.String)">
            <summary>
            Concatenates each value in the string array, separated
            by the specified delimiter.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.SeriesCollection">
            <summary>
            A collection of <see cref="T:Infragistics.Documents.Excel.Charts.Series"/> for a <see cref="T:Infragistics.Documents.Excel.WorksheetChart"/>
            </summary>
            <see cref="P:Infragistics.Documents.Excel.WorksheetChart.SeriesCollection">WorksheetChart.SeriesCollection</see>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.SeriesCollection.Item(System.Int32)">
            <summary>
            Indexer
            </summary>
            <param name="index">A zero based index</param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.SeriesCollection.Count">
            <summary>
            Returns the number of items in the collection (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.SeriesCollection.IsReadOnly">
            <summary>
            Determines if the collecion can be modified (read-only)
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.SeriesCollection.Add">
            <summary>
            Adds a new series to the collection
            </summary>
            <returns>The newly added <see cref="T:Infragistics.Documents.Excel.Charts.Series"/></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.SeriesCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.SeriesCollection.Contains(Infragistics.Documents.Excel.Charts.Series)">
            <summary>
            Determines if the collection contains thhe item
            </summary>
            <param name="item">The item to check</param>
            <returns>True if the item is in the collection, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.SeriesCollection.GetEnumerator">
            <summary>
            Gets an enumerator for the items in the collection
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.SeriesCollection.IndexOf(Infragistics.Documents.Excel.Charts.Series)">
            <summary>
            Returns the index of the item in the collection
            </summary>
            <param name="item">The item to check</param>
            <returns>the zero-based index or -1 if the item isn't in the collection.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.SeriesCollection.Insert(System.Int32)">
            <summary>
            Inserts a new <see cref="T:Infragistics.Documents.Excel.Charts.Series"/> into the collection at the specified index.
            </summary>
            <param name="index">The index to insert the new series</param>
            <returns>The newly inserted <see cref="T:Infragistics.Documents.Excel.Charts.Series"/></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.SeriesCollection.Remove(Infragistics.Documents.Excel.Charts.Series)">
            <summary>
            Removes an item from the collection.
            </summary>
            <param name="item">The series to remove</param>
            <returns>True if the series was removed, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.SeriesCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the series at the specified index
            </summary>
            <param name="index">The zero-based index</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.SeriesCollection.UsesSecondaryAxes">
            <summary>
            Returns true if the AxisGroup property of any series
            in the collection is set to 'Secondary'.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.SeriesCollection.Filter(System.Nullable{Infragistics.Documents.Excel.Charts.SeriesType},System.Nullable{Infragistics.Documents.Excel.Charts.AxisGroup},Infragistics.Documents.Excel.Charts.Series)">
            <summary>
            Returns only the series that match the specified filter criteria.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.TickLabels">
            <summary>
            Represents the tick-mark labels associated with tick marks on a chart <see cref="T:Infragistics.Documents.Excel.Charts.Axis"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Axis.TickLabels">Axis.TickLabels</seealso>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.TickLabels.Alignment">
            <summary>
            Specifies the alignment of the tick labels
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.TickLabels.Font">
            <summary>
            Specifies which font to use. Read-only.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> this property will return null until the <see cref="T:Infragistics.Documents.Excel.Charts.TickLabels"/>
            is set on the <see cref="P:Infragistics.Documents.Excel.Charts.Axis.TickLabels">Axis.TickLabels</see> property.</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.TickLabels.Fill">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.Charts.ChartFillBase"/> derived object
            which defines the fill applied to the background of tick labels.
            </summary>
            <remarks>
            <p class="body">
            This property is not applicable for <i>BoxAndWhisker</i>, <i>Histogram</i>,
            <i>Pareto</i>, <i>Sunburst</i>, <i>Treemap</i>, or <i>Waterfall</i> charts.
            </p> 
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.TickLabels.MultiLevel">
            <summary>
            Specifies whether an axis is multilevel or not. 
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.TickLabels.NumberFormat">
            <summary>
            Returns or sets the format to use for numbers.
            </summary>
            <remarks>
            <p class="body">
            Note that in some cases it may be necessary to set <see cref="P:Infragistics.Documents.Excel.Charts.TickLabels.NumberFormatLinked"/>
            to false in order to see the format applied. If the tick labels are not displaying the
            format you specified, try setting NumberFormatLinked to false.
            </p> 
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.TickLabels.NumberFormatLinked"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.TickLabels.NumberFormatLinked">
            <summary>
            True if the number format is linked to the cells (so that the number format changes in the labels when it changes in the cells). 
            </summary>
            <remarks>
            <p class="body">
            Note that in some cases it may be necessary to set this property
            to false in order to see the <see cref="P:Infragistics.Documents.Excel.Charts.TickLabels.NumberFormat"/> applied.
            If the tick labels are not displaying the format you specified,
            try setting this property to false.
            </p> 
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.TickLabels.NumberFormat"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.TickLabels.Offset">
            <summary>
            Returns or sets a Long value that represents the distance between the levels of labels, and the distance between the first level and the axis line.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.TickLabels.ReadingOrder">
            <summary>
            Determines the reading order
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.TickLabels.Rotation">
            <summary>
            Determines the rotation of the text area, expressed in degrees.
            </summary>
            <remarks>
            <p class="body">
            The Rotation property is only applicable when <see cref="P:Infragistics.Documents.Excel.Charts.TickLabels.TextDirection"/>
            is set to <i>Horizontal</i>.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.TickLabels.TextDirection"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.TickLabels.TextDirection">
            <summary>
            Determines the orientation and direction in which text flows.
            </summary>
            <remarks>
            <p class="body">Note that the <see cref="P:Infragistics.Documents.Excel.Charts.TickLabels.Rotation"/> property is only applicable when this property is set to <i>Horizontal</i>.</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.TickLabels.Rotation"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.UpDownBars">
            <summary>
            Represents the bars which depict gain or loss on a stock chart.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Charts.UpDownBars.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Charts.UpDownBars"/> instance.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.UpDownBars.DownBar">
            <summary>
            Returns an <see cref="T:Infragistics.Documents.Excel.Charts.UpDownBar"/> instance which controls the appearance
            of the down bars for a stock chart.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.UpDownBars.DownBar"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.UpDownBars"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.HighLowLines"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.UpDownBars.GapWidth">
            <summary>
            Specifies the width of the gap between bars.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.UpDownBars.UpBar">
            <summary>
            Returns an <see cref="T:Infragistics.Documents.Excel.Charts.UpDownBar"/> instance which controls the appearance
            of the up bars for a stock chart.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.UpDownBars.UpBar"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.UpDownBars"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.HighLowLines"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.UpDownBar">
            <summary>
            Represents the bar which depicts gain or loss on a stock chart.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.UpDownBar.BarType">
            <summary>
            Returns a value which identifies this instance as as up or down bar.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.UpDownBar.Border">
            <summary>
            Determines the appearance of the border drawn around
            the bar, as well as whether a border appears.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.UpDownBar.Fill"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.UpDownBar.Fill">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.Charts.ChartFillBase"/> derived object
            which defines the fill properties for the bar.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.UpDownBar.Border"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Charts.Wall">
            <summary>
            Represents the walls and floor of a 3-D chart.
            This object isn't a collection. There's no object
            that represents a single wall; you must return all
            the walls as a unit.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.BackWall">WorksheetChart.BackWall</seealso>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.SideWall">WorksheetChart.SideWall</seealso>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.WallDefault">WorksheetChart.Wall</seealso>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.Floor">WorksheetChart.Floor</seealso>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Wall.Border">
            <summary>
            Determines the appearance of the border drawn around
            the text area, as well as whether a border appears.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Wall.Fill"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Wall.Fill">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.Charts.ChartFillBase"/> derived object
            which defines the fill for this series.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Wall.Border"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Wall.Thickness">
            <summary>
            The thickness of the wall
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Charts.Wall.Type">
            <summary>
            Returns the type of the wall, i.e., back, side, floor, or all.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ComboChartGroup">
            <summary>
            Exposes chart-level properties for <see cref="T:Infragistics.Documents.Excel.Charts.Series"/> which appear within a combo chart.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.ComboChartGroups"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ComboChartGroup.AxisGroup">
            <summary>
            Returns the <see cref="P:Infragistics.Documents.Excel.ComboChartGroup.AxisGroup"/> value with which this instance was created.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ComboChartGroup.ChartType">
            <summary>
            Returns the <see cref="P:Infragistics.Documents.Excel.ComboChartGroup.ChartType"/> value with which this instance was created.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ComboChartGroup.DoughnutHoleSize">
            <summary>
            Returns or sets the size of the hole in a doughnut chart,
            expressed as a percentage of the size of the encompassing circle.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable to doughnut charts.
            </p> 
            <p class="body">
            The valid range for this property is 0 through 90, inclusive.
            </p> 
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.DoughnutHoleSize"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ComboChartGroup.FirstSliceAngle">
            <summary>
            Returns or sets the angle, expressed in degrees which determines the origin
            of the first slice, as relative to the 12 o'clock position of the emcompassing
            circle.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable to pie and doughnut charts.
            </p> 
            <p class="body">
            The valid range for this property is between 0 and 360, inclusive.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.FirstSliceAngle"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ComboChartGroup.GapWidth">
            <summary>
            Specifies the width of the gap between bars.
            Applicable only for bar/column charts.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable for bar charts.
            </p>
            <p class="body">
            The valid range for this property is between 0 and 500, inclusive.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.GapWidth"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ComboChartGroup.SeriesOverlap">
            <summary>
            Determines the amount by which intersecting <see cref="T:Infragistics.Documents.Excel.Charts.Series"/> overlap,
            expressed as a percentage of the bar size.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable for bar charts.
            </p>
            <p class="body">
            The valid range for this property is between -100 and 100, inclusive.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.SeriesOverlap"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ComboChartGroupValidator.Analyze(Infragistics.Documents.Excel.Charts.ChartType[],System.Boolean)">
            <summary>
            Analyzes the specified ChartType array and evaluates whether they
            can all fit on a maximum of two axes. Returns an object which separates
            the chart types into axis groups so the caller can (a) determine whether
            all the chart types can exist in the same chart and (b) set the Series.AxisGroup
            property of each resulting series if they can.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ComboChartGroupValidator.CorrectArrays(Infragistics.Documents.Excel.Charts.SeriesCollection,Infragistics.Documents.Excel.Charts.ChartType[]@,Infragistics.Documents.Excel.Charts.AxisGroup[]@)">
            <summary>
            Extends the size of the specified arrays by repeating the last value
            as many times as necessary to make the arrays the same size as the
            specified SeriesCollection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.SeriesAxisGroup.TryAdd(Infragistics.Documents.Excel.Charts.ChartType)">
            <summary>
            Adds the specified chartType to this group if possible.
            Returns a boolean which indicates whether it was able
            to be added.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ComboChartGroupCollection">
            <summary>
            A collection of <see cref="T:Infragistics.Documents.Excel.ComboChartGroup"/> objects for a <see cref="T:Infragistics.Documents.Excel.WorksheetChart"/>
            </summary>
            <remarks>
            <p class="body">
            This collection is used to apply chart-specific properties to <see cref="T:Infragistics.Documents.Excel.Charts.Series"/> which
            appear within a combo chart.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.ComboChartGroup"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.ComboChartGroups"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ComboChartGroupCollection.Count">
            <summary>
            Returns the number of items in the collection (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ComboChartGroupCollection.Item(Infragistics.Documents.Excel.Charts.ChartType,Infragistics.Documents.Excel.Charts.AxisGroup)">
            <summary>
            Returns the <see cref="T:Infragistics.Documents.Excel.ComboChartGroup"/> instance associated with the specified
            <paramref name="chartType"/> and <paramref name="axisGroup"/>, or null if no such
            instance exists.
            </summary>
            <param name="chartType">A <see cref="T:Infragistics.Documents.Excel.Charts.ChartType"/> constant which identifies the combo chart group.</param>
            <param name="axisGroup">An <see cref="T:Infragistics.Documents.Excel.Charts.AxisGroup"/> constant which identifies the combo chart group.</param>
            <returns>A new or existing <see cref="T:Infragistics.Documents.Excel.ComboChartGroup"/> instance.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.ComboChartGroupCollection.IsReadOnly">
            <summary>
            Determines if the collecion can be modified (read-only)
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ComboChartGroupCollection.Add(Infragistics.Documents.Excel.Charts.ChartType,Infragistics.Documents.Excel.Charts.AxisGroup)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.ComboChartGroup"/>, or returns an existing one,
            which matches the specified <paramref name="chartType"/> and <paramref name="axisGroup"/>.
            </summary>
            <param name="chartType">A <see cref="T:Infragistics.Documents.Excel.Charts.ChartType"/> constant which identifies the combo chart group.</param>
            <param name="axisGroup">An <see cref="T:Infragistics.Documents.Excel.Charts.AxisGroup"/> constant which identifies the combo chart group.</param>
            <returns>A new or existing <see cref="T:Infragistics.Documents.Excel.ComboChartGroup"/> instance.</returns>
            <remarks>
            <p class="body">
            This method returns an object which provides a way to set chart-specific
            properties for a <see cref="T:Infragistics.Documents.Excel.Charts.Series"/> that is displayed within a combo chart.
            </p>
            <p class="body">
            For example, to change the <see cref="P:Infragistics.Documents.Excel.WorksheetChart.GapWidth"/> property for
            each series associated with a bar chart contained within a combo chart, set the
            <see cref="P:Infragistics.Documents.Excel.ComboChartGroup.GapWidth"/> property of the instance returned from
            this method.
            </p>
            <p class="body">
            If a <see cref="T:Infragistics.Documents.Excel.ComboChartGroup"/> instance corresponding to the specified
            <paramref name="chartType"/> and <paramref name="axisGroup"/> already exists,
            that instance is returned; otherwise a new instance is created and that instance
            is returned.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.ComboChartGroup"/>
            <seealso cref="M:Infragistics.Documents.Excel.ComboChartGroupCollection.Remove(Infragistics.Documents.Excel.Charts.ChartType,Infragistics.Documents.Excel.Charts.AxisGroup)"/>
            <exception cref="T:System.NotSupportedException">
            The specified <paramref name="chartType"/> is not supported within a combo chart.
            See documentation for the WorksheetChart.<see cref="M:Infragistics.Documents.Excel.WorksheetChart.SetComboChartSourceData(System.String,Infragistics.Documents.Excel.Charts.ChartType[],System.Boolean,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})">SetComboChartSourceData</see>
            method for a list of supported chart types.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.ComboChartGroupCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ComboChartGroupCollection.GetEnumerator">
            <summary>
            Gets an enumerator for the items in the collection
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ComboChartGroupCollection.Remove(Infragistics.Documents.Excel.ComboChartGroup)">
            <summary>
            Removes the specified <see cref="T:Infragistics.Documents.Excel.ComboChartGroup"/> from this collection.
            </summary>
            <param name="comboChartGroup">The <see cref="T:Infragistics.Documents.Excel.ComboChartGroup"/> instance to be removed.</param>
            <returns>True if the item was removed, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ComboChartGroupCollection.Remove(Infragistics.Documents.Excel.Charts.ChartType,Infragistics.Documents.Excel.Charts.AxisGroup)">
            <summary>
            Removes the specified <see cref="T:Infragistics.Documents.Excel.ComboChartGroup"/> from this collection.
            </summary>
            <param name="chartType">A <see cref="T:Infragistics.Documents.Excel.Charts.ChartType"/> constant which identifies the combo chart group.</param>
            <param name="axisGroup">An <see cref="T:Infragistics.Documents.Excel.Charts.AxisGroup"/> constant which identifies the combo chart group.</param>
            <returns>True if the item was removed, otherwise false.</returns>
        </member>
        <member name="F:Infragistics.Documents.Excel.SeriesChartTypeGroup.Unsupported">
            <summary>Not supported within a combo chart.</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SeriesChartTypeGroup.Area">
            <summary>Area</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SeriesChartTypeGroup.AreaStacked">
            <summary>Stacked area</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SeriesChartTypeGroup.AreaStacked100">
            <summary>Stacked area 100%</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SeriesChartTypeGroup.BarClustered">
            <summary>Clustered bar</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SeriesChartTypeGroup.BarStacked">
            <summary>Stacked bar</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SeriesChartTypeGroup.BarStacked100">
            <summary>Stacked bar 100%</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SeriesChartTypeGroup.ColClustered">
            <summary>Clustered column</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SeriesChartTypeGroup.ColStacked">
            <summary>Stacked column</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SeriesChartTypeGroup.ColStacked100">
            <summary>Stacked column 100%</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SeriesChartTypeGroup.Line">
            <summary>Line with or wthout markers</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SeriesChartTypeGroup.LineStacked">
            <summary>Stacked line with or wthout markers</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SeriesChartTypeGroup.LineStacked100">
            <summary>Stacked line 100% with or wthout markers</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SeriesChartTypeGroup.Pie">
            <summary>Pie/PieExploded</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SeriesChartTypeGroup.PieOfPie">
            <summary>Pie of pie</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SeriesChartTypeGroup.BarOfPie">
            <summary>Bar of pie</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SeriesChartTypeGroup.Doughnut">
            <summary>Doughnut/DoughnutExploded</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SeriesChartTypeGroup.Radar">
            <summary>Radar with or without markers</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SeriesChartTypeGroup.RadarFilled">
            <summary>Radar filled</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SeriesChartTypeGroup.ScatterStraight">
            <summary>Scatter - XYScatter or Scatter with straight lines, with or without markers</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SeriesChartTypeGroup.ScatterSmooth">
            <summary>Scatter with smooth lines, with or without markers</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetChart">
            <summary>
            Represents a chart. 
            </summary>
            <remarks>
            <para>
            This class does not allow for the editing of chart data when the <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat">Workbook.CurrentFormat</see> is 'Excel97To2003', or 'Excel97To2003Template'. 
            It is used for round-tripping chart data between loading and saving a workbook in those formats.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.AutoScaling">
            <summary>
            True if Microsoft Excel scales a 3-D chart so that it's closer in size to the equivalent 2-D chart. The <see cref="P:Infragistics.Documents.Excel.WorksheetChart.RightAngleAxes"/>  property must be True 
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.AxisCollection">
            <summary>
            Returns the axis collection (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.BackWall">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Excel.Charts.Wall"/> object that allows the user to
            format the back wall of a 3-D chart. Read-only.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.Floor"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.SideWall"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.WallDefault"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.BarShape">
            <summary>
            Returns or sets the shape of <see cref="T:Infragistics.Documents.Excel.Charts.Series"/> bars.
            Applicable only to 3D bar-type charts.
            </summary>
            <remarks>
            <p class="body">
            This property is applicable only to the following chart types:
            </p>
            <p class="body">
            <ul>
            <li>Bar3DStacked</li>
            <li>Column3DStacked</li>
            <li>ConeBarStacked</li>
            <li>ConeColStacked</li>
            <li>PyramidBarStacked</li>
            <li>PyramidColStacked</li>
            <li>CylinderBarStacked</li>
            <li>CylinderColStacked</li>
            <li>Bar3DStacked100</li>
            <li>Column3DStacked100</li>
            <li>ConeBarStacked100</li>
            <li>ConeColStacked100</li>
            <li>PyramidBarStacked100</li>
            <li>PyramidColStacked100</li>
            <li>CylinderBarStacked100</li>
            <li>CylinderColStacked100</li>
            <li>Column3D</li>
            <li>PyramidCol</li>
            <li>ConeCol</li>
            <li>CylinderCol</li>
            </ul>
            </p>
            <p class="body">
            Use this property to set the bar shape for all series bars.
            </p>
            <p class="body">
            To set the shape for a particular series bar, use the <see cref="P:Infragistics.Documents.Excel.Charts.Series.BarShape"/> property.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.BarShape"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.ChartType"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.BarShapeResolved">
            <summary>
            Returns the resolved value of the <see cref="P:Infragistics.Documents.Excel.WorksheetChart.BarShape"/> property.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.BarShape"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.BarShape"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.ChartArea">
            <summary>
            Returns a <see cref="P:Infragistics.Documents.Excel.WorksheetChart.ChartArea"/> object that represents the complete chart area for the chart. Read-only.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.ChartTitle">
            <summary>
            Returns or sets an <see cref="P:Infragistics.Documents.Excel.WorksheetChart.ChartTitle"/> object.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.ChartType">
            <summary>
            Specifies the chart type.
            </summary>
            <remarks>
            <p class="body">
            All chart types are supported by the <see cref="T:Infragistics.Documents.Excel.WorksheetChart"/> type;
            no derived classes exist or are necessary to support different chart types.
            </p>
            <p class="body">
            Note that changing the chart type may cause related property values
            to be changed.
            </p>
            <p class="body">
            For example, when transitioning from a chart type which supports
            line markers, The <see cref="P:Infragistics.Documents.Excel.Charts.Series.MarkerStyle"/> property is changed
            to reflect the new chart style.
            </p>
            <p class="body">
            Using another example, when transitioning from a chart type which does
            not support <see cref="T:Infragistics.Documents.Excel.Charts.Axis">axes</see>, such as a pie or doughnut chart,
            to a chart type that does support them, the <see cref="P:Infragistics.Documents.Excel.WorksheetChart.AxisCollection"/>
            is modified accordingly.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetShapeCollection.AddChart(Infragistics.Documents.Excel.Charts.ChartType,System.Drawing.Rectangle,System.Action{Infragistics.Documents.Excel.WorksheetChart})"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.ComboChartGroups">
            <summary>
            Returns a collection of the <see cref="T:Infragistics.Documents.Excel.ComboChartGroup"/> instances associated with this chart.
            </summary>
            <remarks>
            <p class="body">
            The properties of the <see cref="T:Infragistics.Documents.Excel.WorksheetChart"/> class which apply only to a specific chart type
            are not applicable for combo charts. For example, the <see cref="P:Infragistics.Documents.Excel.WorksheetChart.GapWidth"/> property,
            which applies to bar charts, is not used for bar charts which appear within a combo chart. The reason
            for this is that combo charts support multiple occurrences of the same chart type,
            making the WorksheetChart-level properties ambiguous in the context of a combo chart.
            </p>
            <p class="body">
            This class makes it possible to set chart-specific properties for one or more occurrences of
            a particular chart type, for a particular axis group.
            </p>
            <p class="body">
            For example, consider a combo chart with two <i>ClusteredColumn</i> series, one on the primary
            axis and another on the secondary.
            To set the <see cref="P:Infragistics.Documents.Excel.WorksheetChart.GapWidth"/> property for the chart on the primary axis, add an item to
            this collection with a <see cref="P:Infragistics.Documents.Excel.WorksheetChart.ChartType"/> of <i>ClusteredColumn</i>, and an <see cref="T:Infragistics.Documents.Excel.Charts.AxisGroup"/>
            of <i>Primary</i>. On the <see cref="T:Infragistics.Documents.Excel.ComboChartGroup"/> instance returned from the collection's Add method,
            set the <i>GapWidth</i> property to the desired value.
            </p>
            <p class="body">
            When the chart is serialized, this collection is checked against each series in the combo chart.
            If the <see cref="P:Infragistics.Documents.Excel.Charts.Series.ChartType">ChartType</see> and the <see cref="P:Infragistics.Documents.Excel.Charts.Series.AxisGroup">AxisGroup</see> 
            match the respective properties on a ComboChartGroup instance, the value of that instance's <i>GapWidth</i>
            property is applied to the chart element for that series. Because the other clustered column series exists
            on the secondary axis, the property is not applied to that series, since while it has the same <i>ChartType</i>,
            its <i>AxisGroup</i> is different.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.ComboChartGroup"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.ChartType"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.AxisGroup"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.DepthPercent">
            <summary>
            Returns or sets the depth of a 3-D chart as a percentage of the chart width (between 20 and 2000 percent).
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.DisplayBlanksAs">
            <summary>
            Returns or sets the way that blank cells are plotted on a chart. 
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.DoughnutHoleSize">
            <summary>
            Returns or sets the size of the hole in a doughnut chart,
            expressed as a percentage of the size of the encompassing circle.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable to doughnut charts.
            </p> 
            <p class="body">
            The valid range for this property is 0 through 90, inclusive.
            </p> 
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.DropLines">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.Charts.ChartDropLines"/> instance which determines
            the appearance for a stock chart's drop lines.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable for stock charts.
            </p>
            <p class="body">
            High/low lines are not displayed by default; to enable them,
            assign a <see cref="T:Infragistics.Documents.Excel.Charts.ChartDropLines"/>to this property.
            to null.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.Floor">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Excel.Charts.Wall"/> object that allows the user to
            format the bottom wall of a 3-D chart. Read-only.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.BackWall"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.SideWall"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.WallDefault"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.GapDepth">
            <summary>
            Returns or sets the gap depth in a 3-D chart, expressed
            as a percentage of the marker width. The value of this property must
            be between 0 and 500. 
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.GapWidth"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.GapWidth">
            <summary>
            Returns or sets the distance between the data series in a bar chart,
            as a percentage of the marker width. The value of this property must
            be between 0 and 500. 
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.GapDepth"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.FirstSliceAngle">
            <summary>
            Returns or sets the angle which determines the origin of the first
            slice, as relative to the 12 o'clock position of the emcompassing circle.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable to pie and doughnut charts.
            </p> 
            <p class="body">
            The valid range for this property is 0 through 360, inclusive. Fractional
            angles are not supported; nor are negative angles.
            </p> 
            <p class="body">
            By default, the first slice begins at the "12 o'clock" position of the
            pie chart, i.e., the top center point of the encompassing circle.
            </p> 
            <p class="body">
            Use this property to offset the origin of the first slice; for example, a
            value of 30 positions the first slice at the 1 o'clock position, 60 at the
            2 o'clock position, 90 for 3 o'clock, etc.
            </p> 
            <p class="body">
            Larger values move along the circumference of the emcompassing circle
            in a clockwise direction, with a value of 0 or 360 both coinciding with
            the 12 o'clock position.
            </p> 
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.HeightPercent">
            <summary>
            Returns or sets the height of a 3-D chart as a percentage of the chart width (between 5 and 500 percent).
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.HighLowLines">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.Charts.ChartHighLowLines"/> instance which determines
            the appearance for a stock chart's high/low lines.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable for stock charts.
            </p>
            <p class="body">
            High/low lines depict the high and low prices for a stock chart.
            </p>
            <p class="body">
            High/low lines are displayed by default; to disable them, set this property
            to null.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.Legend">
            <summary>
            Returns or sets a <see cref="P:Infragistics.Documents.Excel.WorksheetChart.Legend"/> object which represents
            the legend for the chart. 
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.Perspective">
            <summary>
            Returns or sets a value that represents the perspective
            for the 3-D chart view, expressed in degrees.
            </summary>
            <remarks>
            <p class="body">
            This property supports values within the inclusive range of <b>0</b> and <b>120</b>.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.PlotArea">
            <summary>
            Returns a PlotArea object that represents the plot area of a chart. Read-only.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.PlotVisibleOnly">
            <summary>
            True if only visible cells are plotted. False if both visible and hidden cells are plotted. 
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.RightAngleAxes">
            <summary>
            True if the chart axes are at right angles, independent of chart rotation or elevation. Applies only to 3-D line, column, and bar charts. 
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.RotationX">
            <summary>
            Returns or sets the rotation of a 3-D chart view around the X-axis, expressed in degrees.
            </summary>
            <remarks>
            <p class="body">
            This property controls the viewing perspective by rotating the
            chart around the horizontal axis, such that the top of the chart
            appears to move closer or further away.
            </p>
            <p class="body">
            This property is only applicable to 3D charts.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.RotationY"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.RotationY">
            <summary>
            Returns or sets the rotation of a 3-D chart view around the Y-axis, expressed in degrees.
            </summary>
            <remarks>
            <p class="body">
            This property controls the viewing perspective by rotating the
            chart around the vertical axis, such that the left edge of the chart
            appears to move closer or further away.
            </p>
            <p class="body">
            This property is only applicable to 3D charts.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.RotationX"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.SecondPlotSize">
            <summary>
            Returns or sets the size of the second plot area in a 'bar of pie'
            or 'pie of pie' chart, expressed as a percentage of the first plot
            area's size.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable for the <i>BarOfPie</i> and <i>PieOfPie</i>
            <see cref="P:Infragistics.Documents.Excel.WorksheetChart.ChartType">chart types</see>.
            </p>
            <p class="body">
            This property supports values in the range of <b>5</b>  to <b>200</b>, inclusively.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.SeriesCollection">
            <summary>
            Returns the series collection (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.SeriesLines">
            <summary>
            Determines the <see cref="P:Infragistics.Documents.Excel.Charts.ChartLineBase.Fill">fill</see> and
            <see cref="P:Infragistics.Documents.Excel.Charts.ChartLineBase.WidthInPoints">width</see> for the lines
            which connect the first and second plot areas in a 'bar of pie'
            or 'pie of pie' chart.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable for the <i>BarOfPie</i> and <i>PieOfPie</i>
            <see cref="P:Infragistics.Documents.Excel.WorksheetChart.ChartType">chart types</see>.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.SecondPlotSize"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.SeriesOverlap">
            <summary>
            Determines the amount by which intersecting <see cref="T:Infragistics.Documents.Excel.Charts.Series"/> overlap,
            expressed as a percentage of the bar size.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable for 2D bar charts.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.GapDepth"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.GapWidth"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.SideWall">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Excel.Charts.Wall"/> object that allows the user to
            format the side wall of a 3-D chart. Read-only.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.Floor"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.BackWall"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.WallDefault"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.UpDownBars">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.Charts.UpDownBars"/> instance which determines
            the appearance for a stock chart's up/down bars.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable for stock charts.
            </p>
            <p class="body">
            Up/down bars depict gains or losses across a series for a stock chart.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.UpDownBars.UpBar">UpBar</seealso>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.UpDownBars.DownBar">DownBar</seealso>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.VaryColors">
            <summary>
            Returns or sets a boolean value indicating whether the fill colors
            for <see cref="T:Infragistics.Documents.Excel.Charts.Series">series</see> and <see cref="T:Infragistics.Documents.Excel.Charts.DataPoint">data points</see>
            are automatically selected by Excel.
            </summary>
            <remarks>
            <p class="body">
            This property defaults to <b>true</b>, causing fill colors for
            series and data points to be automatically selected by Excel.
            </p>
            <p class="body">
            The automatically selected color can always be overridden for individual series
            and/or data points using the <see cref="P:Infragistics.Documents.Excel.Charts.Series.Fill"/>, <see cref="P:Infragistics.Documents.Excel.Charts.Series.Line"/>,
            and <see cref="P:Infragistics.Documents.Excel.Charts.DataPoint.Fill"/> properties.
            </p>
            <p class="body">
            In cases where VaryColors is set to true, but a fill is explicitly assigned,
            the assigned fill is used for the associated series or data point, while series
            or data points which have no explicitly assigned fill will have a fill color
            automatically selected.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.Fill"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.Line"/>
            <seealso cref="P:Infragistics.Documents.Excel.Charts.DataPoint.Fill"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.WallDefault">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Excel.Charts.Wall"/> object which represents the back and side
            walls, and floor of the chart. Applicable only for 3-D charts.
            </summary>
            <remarks>
            <p class="body">
            Use this property to apply the same settings for the back wall, side wall, and floor.
            </p>
            <p class="body">
            Use the <see cref="P:Infragistics.Documents.Excel.WorksheetChart.BackWall"/> property to control the appearance of the back wall.
            </p>
            <p class="body">
            Use the <see cref="P:Infragistics.Documents.Excel.WorksheetChart.SideWall"/> property to control the appearance of the side wall.
            </p>
            <p class="body">
            Use the <see cref="P:Infragistics.Documents.Excel.WorksheetChart.Floor"/> property to control the appearance of the bottom wall.
            </p>
            <p class="body">
            The BackWall, SideWall, and Floor properties take precedence over this property.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.BackWall"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.SideWall"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetChart.Floor"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.Sheet">
            <summary>
            Gets the worksheet on which the shape resides.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.ShouldRoundTripChartPart">
            <summary>
            Returns true if this chart was created via deserialization
            and has not been modified.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetChart.ShouldRoundTripChartStyles">
            <summary>
            Returns true if this chart was created via deserialization
            and has a color style and chart style associated with it.
            Used to determine whether we write out the color/chart style
            that was deserialized or create new ones.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetChart.SetComboChartSourceData(System.String,Infragistics.Documents.Excel.Charts.ChartType[],System.Boolean,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})">
             <summary>
             Sets the source data range for a combo chart.
             </summary>
             <param name="dataRange">The data range for the combo chart</param>
             <param name="seriesChartTypes">
             An array of <see cref="P:Infragistics.Documents.Excel.WorksheetChart.ChartType"/> constants which specify the chart type for each series
             yielded from the specified <paramref name="dataRange"/>.
             </param>
             <param name="plotByRows">Optional. True to plot by rows where each row is a separate series or false to plot by columns where each column is a separate series. The default is false.</param>
             <param name="cellReferenceMode">Optional. Determines how to parse the dataRange.</param>
             <remarks>
             <p class="body">
             Combo charts support multiple chart types within the main chart, with each different
             chart type being associated with one or more <see cref="T:Infragistics.Documents.Excel.Charts.Series"/>.
             </p>
             <p class="body">
             Use this method to populate the <see cref="P:Infragistics.Documents.Excel.WorksheetChart.SeriesCollection"/> for a combo chart.
             </p>
             <p class="body">
             For example, given a <paramref name="dataRange"/> which yields three series, the caller
             can specify an array with three elements as the value of the <paramref name="seriesChartTypes"/>
             parameter. Each array element is then applied to the corresponding series, in the same order
             in which they appear in the array.
             </p>
             <p class="body">
             Duplicate ChartType values can appear in the <paramref name="seriesChartTypes"/> array,
             in which case the corresponding series appear within the same chart. For example, specifying
             an array with <i>ClusteredColumn</i>, <i>Line</i>, and <i>Line</i> results in a combo chart
             with the first series appearing in a clustered column chart, and the remaining series appearing
             in a line chart.
             </p>
             <p class="body">
             Specifying null for the value of the <paramref name="seriesChartTypes"/> parameter
             is treated the same as a two-element array containing 'ColumnClustered' and 'Line',
             resulting in a clustered column chart for the first series, and a line chart for the
             remaining series.
             </p>
             <p class="body">
             If fewer values are present in the <paramref name="seriesChartTypes"/> array than the
             number of series yielded from the specified <paramref name="dataRange"/>, the remaining
             series acquire the same ChartType and AxisGroup as the last element in the <i>seriesChartTypes</i>
             array. If more values are present in the array than the number of series yielded, these values
             are ignored.
             </p>
             <p class="body">
             Certain chart type values are invalid for a combo chart; if any of these chart types
             are present in the array, an exception is thrown, listing the invalid chart types.
             </p>
             <p class="body">
             The following table lists the ChartType values which are supported in combo charts,
             grouped by series type:
             </p>
             <p class="body">
             <table border = "1" >
             <tr><th> SeriesType </th ><th>ChartType (supported in combo charts)</th></tr>
             <tr>
              <td>Area</td><td>Area, AreaStacked, AreaStacked100</td>
             </tr>
            	<tr>
            		<td>Bar</td><td>ColumnClustered, ColumnStacked, ColumnStacked100, BarClustered, BarStacked, BarStacked100, BarOfPie</td>
            	</tr>
            	<tr>
            		<td>Line</td><td>Line, LineStacked, LineStacked100, LineMarkers, LineMarkersStacked, LineMarkersStacked100</td>
            	</tr>
            	<tr>
            		<td>Pie</td><td>Pie, PieExploded, PieOfPie, Doughnut, DoughnutExploded</td>
            	</tr>
            	<tr>
            		<td>Radar</td><td>Radar, RadarFilled, RadarMarkers</td>
            	</tr>
            	<tr>
            		<td>Scatter</td><td>XYScatter, XYScatterLines, XYScatterLinesNoMarkers, XYScatterSmooth, XYScatterSmoothNoMarkers</td>
            	</tr>
            	<tr>
            		<td>Bubble</td><td><b>Not Supported</b></td>
            	</tr>
            	<tr>
            		<td>Surface</td><td><b>Not Supported</b></td>
            	</tr>
            </table>
             </p> 
             <p class="body">
             Combo charts support a maximum of two axis groups. If the combination of values in the
             <paramref name="seriesChartTypes"/> array necessitates more than two axis groups, an exception
             is thrown.
             </p>
             <p class="body">
             Combo charts require a minimum of two <see cref="T:Infragistics.Documents.Excel.Charts.Series"/>. If the specified <paramref name="dataRange"/>
             yields less that two series, an exception is thrown.
             </p>
             <p class="body">
             If the combination of series used in a combo chart is indistinguishable from a non-combo
             chart, the chart may not be recognized by Excel as a combo chart. For example, adding two
             series, one of type <i>Radar</i> and one of type <i>RadarMarkers</i>, is a valid combination.
             When opened in Excel, however, such a chart will not be recognized as a combo chart, since the
             combination of series does not necessitate multiple chart elements. All relevant property values
             are persisted, however, and there is no distinguishable difference between the original chart
             and the serialized one.
             </p>
             </remarks>
             <seealso cref="T:Infragistics.Documents.Excel.Charts.Series"/>
             <seealso cref="T:Infragistics.Documents.Excel.Charts.Axis"/>
             <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.ChartType"/>
             <seealso cref="P:Infragistics.Documents.Excel.Charts.Series.AxisGroup"/>
             <exception cref="T:System.Exception">
             The current value of the <see cref="P:Infragistics.Documents.Excel.WorksheetChart.ChartType"/> property is not <i>Combo</i>.
             </exception>
             <exception cref="T:System.NotSupportedException">
             The specified <paramref name="seriesChartTypes"/> array contains one or more values which are not
             supported within a combo chart.
             </exception>
             <exception cref="T:System.NotSupportedException">
             The specified <paramref name="seriesChartTypes"/> array contains a combination of values which
             would require more than the maximum allowable number of axes (two).
             </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetChart.SetSourceData(System.String,System.Boolean,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})">
            <summary>
            Sets the source data range for the chart.
            </summary>
            <param name="dataRange">The data range for the chart</param>
            <param name="plotByRows">Optional. True to plot by rows where each row is a separate series or false to plot by columns where each column is a separate series. The default is false.</param>
            <param name="cellReferenceMode">Optional. Determines how to parse the dataRange.</param>
            <remarks>
            <p class="data">
            For combo charts, this method always displays the first series in a clustered column chart,
            with all subsequent series displayed in line charts. Use the <see cref="M:Infragistics.Documents.Excel.WorksheetChart.SetComboChartSourceData(System.String,Infragistics.Documents.Excel.Charts.ChartType[],System.Boolean,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})"/>
            to customize the series charts for a combo chart.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetChart.GetMinRequiredSeriesCount(Infragistics.Documents.Excel.Charts.ChartType)">
            <summary>
            Returns the minimum number of series required for the specified chart type.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetChart.SupportsFillAndBorder(Infragistics.Documents.Excel.Charts.ChartType)">
            <summary>
            Returns true if the specified chart type supports fills and a border,
            such as bar, area, pie, surface, etc. Line-type charts return false,
            except for Line3D which does have a fillable element. Use this to
            determine whether to use the Line property OR Border/Fill properties
            of a Series.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetChart.InitializeDefaultValues">
            <summary>
            Called immediately after we create a WorksheetChart;
            used to adjust default property values based on the
            chart type.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetChart.OnAfterSetSourceData(Infragistics.Documents.Excel.Charts.ChartType)">
            <summary>
            Called at the end of the SetSourceData method.
            Used to initialize newly created series.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetChart.GetExplicitMarkerStyle(Infragistics.Documents.Excel.Charts.ChartType)">
            <summary>
            Returns a non-null MarkerStyle for chart types that require
            an explicit setting for the series marker style in order to
            be perceived as the correct chart type in Excel.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetChart.DirtyForSerialization">
            <summary>
            Used for unit testing to mark the chart as requiring
            manual serialization, i.e., similarly to when a property
            value is changed.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.AverageConditionalFormat">
            <summary>
            Exposes properties which control the visual attributes of a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>
            based on whether a cell's value is above or below the average or standard deviation
            for the associated range.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.AverageConditionalFormat.#ctor(System.Collections.Generic.IList{Infragistics.Documents.Excel.WorksheetRegion},Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionAboveBelow)">
            <summary>
            Creates a new instance with the specified initial value for the
            <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.AverageConditionalFormat.AboveBelow"/> property.
            </summary>
            <param name="regions">The worksheet regions.</param>
            <param name="aboveBelow">A <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionAboveBelow"/> value which determines the manner in which cell values are compared against the average or standard deviation for the associated range. Defaults to <i>AboveAverage</i>.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.AverageConditionalFormat.AboveBelow">
            <summary>
            Returns or sets a value which determines the manner in which cell values
            are compared against the average or standard deviation for the associated
            range.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.AverageConditionalFormat.NumericStandardDeviation">
            <summary>
            Returns or sets the numeric standard deviation for this condition.
            Applicable only when the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.AverageConditionalFormat.AboveBelow"/> property is set
            to 'AboveStandardDeviation' or 'BelowStandardDeviation'.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.AverageConditionalFormat.MeetsCriteria(System.Object,System.Int32,System.Int32,Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase)">
            <summary>
            Returns true if the specified <paramref name="cellValue"/> meets
            the criteria defined by this instance.
            </summary>
            <param name="cellValue">The cell value to compare.</param>
            <param name="rowIndex">The index of the row</param>
            <param name="columnIndex">The index of the column</param>
            <param name="cellRef">The reference for the cell.</param>
            <returns>True if the condition is met.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.BlanksConditionalFormat">
            <summary>
            Exposes properties which control the visual attributes of a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>
            based on whether the cell's value is not set.
            </summary>
            <remarks>
            <p class="body">
            This condition can be used to control the visual attributes of cells with no value.
            </p>
            <p class="body">
            To negate this condition, use the <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.NoBlanksConditionalFormat"/> class.
            </p>
            <p class="body">
            Since empty cells do not display content, the foreground-related properties of the
            <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatBase.CellFormat"/> are not applicable.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.NoBlanksConditionalFormat"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.BlanksConditionalFormat.#ctor(System.Collections.Generic.IList{Infragistics.Documents.Excel.WorksheetRegion})">
            <summary>
            Creates a new instance.
            </summary>
            <param name="regions">The worksheet regions.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.BlanksConditionalFormat.MeetsCriteria(System.Object,System.Int32,System.Int32,Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase)">
            <summary>
            Returns true if the specified <paramref name="cellValue"/> meets
            the criteria defined by this instance.
            </summary>
            <param name="cellValue">The cell value to compare.</param>
            <param name="rowIndex">The index of the row</param>
            <param name="columnIndex">The index of the column</param>
            <param name="cellRef">The reference for the cell.</param>
            <returns>True if the condition is met.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.CellDataBarInfo">
            <summary>
            Exposes the information necessary for drawing a data bar for a specific cell. 
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.CellConditionalFormat"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CellConditionalFormat.DataBarInfo">CellConditionalFormat.DataBarInfo</seealso>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.GetCellConditionalFormat(System.Int32,System.Int32)">Worksheet.GetCellConditionalFormat</seealso>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellConditionalFormat(System.Int32)">WorksheetRow.GetCellConditionalFormat</seealso>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.CellDataBarInfo.AxisColor">
            <summary>
            The color to use to draw the axis line or null if no axis line is to be drawn (read-only).
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CellDataBarInfo.AxisPosition"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.AxisColor">DataBarConditionalFormat.AxisColor</seealso>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.CellDataBarInfo.AxisPosition">
            <summary>
            Specifies the position, as a percentage of the cell width, where the axis ahould be rendered (read-only)
            </summary>
            <value> a percentage from 0 to 100</value>
            <remarks>
            <para class="note"><b>Note:</b> if <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CellDataBarInfo.AxisColor"/> returns null then this property can be ignored.</para>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CellDataBarInfo.AxisColor"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.AxisPosition">DataBarConditionalFormat.AxisPosition</seealso>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.CellDataBarInfo.BarBorder">
            <summary>
            The color to use to draw the border around the data bar or null if no border is to be drawn (read-only).
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.BarBorderColor">DataBarConditionalFormat.BarBorder</seealso>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.NegativeBarFormat.BarBorderColor">NegativeBarFormat.BorderColor</seealso>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.CellDataBarInfo.BarColor">
            <summary>
            The color to use to draw the data bar (read-only).
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CellDataBarInfo.BarFillType"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CellDataBarInfo.BarPositionFrom"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CellDataBarInfo.BarPositionTo"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.BarColor">DataBarConditionalFormat.BarColor</seealso>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.NegativeBarFormat.BarColor">NegativeBarFormat.Color</seealso>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.CellDataBarInfo.BarFillType">
            <summary>
            Specifies whether the data bar should be filled with a sold color or a gradient (read-only).
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CellDataBarInfo.BarColor"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.BarFillType">DataBarConditionalFormat.BarFillType</seealso>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.CellDataBarInfo.BarPositionFrom">
            <summary>
            Species the position, as a percentage of the cell width, where the data bar should begin (read-only).
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CellDataBarInfo.BarPositionTo"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CellDataBarInfo.Direction"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.CellDataBarInfo.BarPositionTo">
            <summary>
            Species the position, as a percentage of the cell width, where the data bar should end (read-only).
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CellDataBarInfo.BarPositionFrom"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CellDataBarInfo.Direction"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.CellDataBarInfo.Direction">
            <summary>
            Specifies the direction of the bata bar (read-only).
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CellDataBarInfo.BarPositionFrom"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CellDataBarInfo.BarPositionTo"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.Direction">DataBarConditionalFormat.Direction</seealso>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.CellDataBarInfo.IsNegative">
            <summary>
            Returns true if the cell value is negative (read-only).
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.NegativeBarFormat">DataBarConditionalFormat.NegativeBarFormat</seealso>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.CellDataBarInfo.ShowValue">
            <summary>
            Returns whether the cell value is to be shown along with the data bar (read-only).
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.ShowValue">DataBarConditionalFormat.ShowValue</seealso>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.CellIconInfo">
            <summary>
            Exposes the information necessary for drawing an icon for a specific cell. 
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.CellConditionalFormat"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CellConditionalFormat.IconInfo">CellConditionalFormat.IconInfo</seealso>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.GetCellConditionalFormat(System.Int32,System.Int32)">Worksheet.GetCellConditionalFormat</seealso>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellConditionalFormat(System.Int32)">WorksheetRow.GetCellConditionalFormat</seealso>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.CellIconInfo.Icon">
            <summary>
            The icon to be drawn (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.CellIconInfo.IconIndex">
            <summary>
            The index of the icon in the icon set (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.CellIconInfo.IconSet">
            <summary>
            The icon set (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.CellIconInfo.ShowValue">
            <summary>
            Returns whether the cell value is to be shown along with the data bar (read-only).
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.ShowValue">DataBarConditionalFormat.ShowValue</seealso>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat">
            <summary>
            Exposes properties which control the coloring of a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>
            based on the cell's value as relative to minimum, midpoint, and maximum threshold values.
            </summary>
            <remarks>
            <p class="body">
            This class support either a 2-color or 3-color scale, as determined by the value of the
            <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.#ctor(System.Collections.Generic.IList{Infragistics.Documents.Excel.WorksheetRegion},Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleType)">colorScaleType</see>
            parameter of the constructor.
            </p>
            <p class="body">
            For 2-color scales, cells in the associated range are colored based on how their
            value relates to the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MinimumThreshold">minimum</see> and <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MaximumThreshold">maximum</see>
            thresholds.
            </p>
            <p class="body">
            For 3-color scales, cells in the associated range are colored based on how their
            value relates to the minimum, <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MidpointThreshold">midpoint</see>, and
            maximum thresholds.
            </p>
            <p class="body">
            This class supports a maximum of three separate and distinct color thresholds.
            </p>
            <p class="body">
            Specifying only one threshold is not supported and may result in unexpected behavior.
            </p>
            <p class="body">
            If this instance is created as a 2-color scale, the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MidpointThreshold"/>
            property is not applicable. Attempting to set a property on the object returned from
            the MidpointThreshold property in this case will cause an exception to be thrown.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MinimumThreshold"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MaximumThreshold"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MidpointThreshold"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.ColorScaleType"/>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleCriterion"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.#ctor(System.Collections.Generic.IList{Infragistics.Documents.Excel.WorksheetRegion},Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleType)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="regions">The worksheet regions.</param>
            <param name="colorScaleType">A <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleType"/> value which identifies this instance as supporting two or three color scale thresholds. This parameter defaults to 'TwoColor'.</param>
            <remarks>
            <p class="body">
            A <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat"/> instance which is created with
            the 'TwoColor' value does not support the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MidpointThreshold"/>;
            attempting to set a property on the object retuned from the MidpointThreshold
            property will cause an exception to be thrown.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.ColorScaleType">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleType"/> value which
            identifies this instance as a 2-color or 3-color scale.
            </summary>
            <remarks>
            <p class="body">
            A <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat"/> instance which is created with
            the 'TwoColor' value does not support the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MidpointThreshold"/>;
            attempting to set a property on the object retuned from the MidpointThreshold
            property will cause an exception to be thrown.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MinimumThreshold">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleCriterion"/> object which defines the properties
            of the minimum threshold for this instance.
            </summary>
            <remarks>
            <p class="body">
            The minimum threshold defines the criteria for the lowest or minimum value
            across the associated range.
            </p>
            <p class="body">
            For a 2-color scale, the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MaximumThreshold"/> defines the next "stop";
            for a 3-color scale, the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MidpointThreshold"/> property defines the next stop.
            </p>
            <p class="body">
            The following <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.ValueType">value types</see> are not valid for the
            minimum threshold, and will cause an exception to be thrown:
            </p>
            <p class="body">
            <ul>
            <li>HighestValue</li>
            <li>AutomaticMinimum</li>
            <li>AutomaticMaximum</li>
            </ul>
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MidpointThreshold"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MaximumThreshold"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MaximumThreshold">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleCriterion"/> object which defines the properties
            of the maximum threshold for this instance.
            </summary>
            <remarks>
            <p class="body">
            The following <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.ValueType">value types</see> are not valid for the
            maximum threshold, and will cause an exception to be thrown:
            </p>
            <p class="body">
            <ul>
            <li>LowestValue</li>
            <li>AutomaticMinimum</li>
            <li>AutomaticMaximum</li>
            </ul>
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MidpointThreshold"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MinimumThreshold"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MidpointThreshold">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleCriterion"/> object which defines the properties
            of the midpoint threshold for this instance.
            </summary>
            <remarks>
            <p class="body" >
            The midpoint threshold is only supported for a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat"/> 
            instance with a value of 'ThreeColor' specified for the <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.#ctor(System.Collections.Generic.IList{Infragistics.Documents.Excel.WorksheetRegion},Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleType)">colorScaleType</see>
            parameter.
            </p>
            <p class="body" >
            Attempting to set a property on the instance returned from this property will cause
            an exception to be thrown if this instance was created as a 2-color scale.
            </p>
            <p class="body">
            The following <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.ValueType">value types</see> are not valid for the
            midpoint threshold, and will cause an exception to be thrown:
            </p>
            <p class="body">
            <ul>
            <li>LowestValue</li>
            <li>HighestValue</li>
            <li>AutomaticMinimum</li>
            <li>AutomaticMaximum</li>
            </ul>
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MinimumThreshold"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MaximumThreshold"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.OnCriterionPropertyChange(Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleCriterion,System.String)">
            <summary>
            Called directly from the <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleCriterion"/> class when a
            property value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MeetsCriteria(System.Object,System.Int32,System.Int32,Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase)">
            <summary>
            Returns true if the specified <paramref name="cellValue"/> meets
            the criteria defined by this instance.
            </summary>
            <param name="cellValue">The cell value to compare.</param>
            <param name="rowIndex">The index of the row</param>
            <param name="columnIndex">The index of the column</param>
            <param name="cellRef">The reference for the cell.</param>
            <returns>True if the condition is met.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleCriterion">
            <summary>
            Defines the criterion for a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat"/> threshold.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MinimumThreshold"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MaximumThreshold"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MidpointThreshold"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleCriterion.Owner">
            <summary>
            The <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat"/> instance with which this instance is associated.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleCriterion.FormatColor">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> object which defines the color
            information for the threshold associated with this instance.
            </summary>
            <remarks>
            <p class="body">
            This property returns null if not explicitly set by the caller.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleCriterion.Threshold">
            <summary>
            Identifies whether this instance represents the minimum, midpoint, or maximum threshold.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleCriterion.ToString">
            <summary>
            Returns the string representation of this instance.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatBase">
            <summary>
            Abstract base class for classes which control
            the visual attributes of a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>,
            based on whether the cell's value meets a logical condition.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatBase.#ctor">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatBase.#ctor(System.Collections.Generic.IList{Infragistics.Documents.Excel.WorksheetRegion},Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionType)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="regions">The worksheet regions.</param>
            <param name="conditionType">A <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionType"/> constant describing the type of format condition.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatBase.CellFormat">
            <summary>
            Returns an <see cref="T:Infragistics.Documents.Excel.IWorksheetCellFormat"/> interface implementation
            which represents the format for cells which meet the criteria associated
            with this condition.
            </summary>
            <remarks>
            <p class="body">
            The IWorksheetCellFormat implementation defines the visual attributes which
            are applied to cells whose value meets the associated condition.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection">
            <summary>
            Collection class for objects which derive from <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase"/>.
            </summary>
            <remarks>
            <p class="body">
            To enable a conditional format on a <see cref="T:Infragistics.Documents.Excel.WorksheetRegion">region</see>
            of worksheet <see cref="T:Infragistics.Documents.Excel.WorksheetCell">cells</see>, add a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase"/>-derived
            instance to this collection.
            </p>
            <p class="body">
            This collection exposes an Add method for each type of conditional format available.
            </p>
            <p class="body">
            For example, to add a conditional format which is based on a value and a logical
            operator, use the <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddOperatorCondition(System.String,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionOperator)"/>
            method.
            </p>
            <p class="body">
            The conditional formatting classes which derive from <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatBase"/>
            expose a <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatBase.CellFormat">CellFormat</see> property, which
            in turn exposes properties which control the visual attributes of cells which meet the
            criteria defined by the condition. This format is applied to cells with a value which
            passes the condition.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddAverageCondition(System.String,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionAboveBelow)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddBlanksCondition(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddColorScaleCondition(System.String,Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleType)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddDataBarCondition(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddDateTimeCondition(System.String,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTimePeriod)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddDuplicateCondition(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddErrorsCondition(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddFormulaCondition(System.String,System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddIconSetCondition(System.String,Infragistics.Documents.Excel.FormatConditionIconSet)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddNoBlanksCondition(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddNoErrorsCondition(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddOperatorCondition(System.String,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionOperator)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddRankCondition(System.String,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTopBottom,System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddTextCondition(System.String,System.String,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTextOperator)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddUniqueCondition(System.String)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.Count">
            <summary>
            Returns the total number of items in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.Item(System.Int32)">
            <summary>
            Indexer
            </summary>
            <param name="index">The zer-based index of an item</param>
            <returns>The item at the specified index</returns>
            <exception cref="T:System.IndexOutOfRangeException">If the index is negative or greater than or equal to <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.Count"/></exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddOperatorCondition(System.String,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionOperator)">
            <summary>
            Adds a new <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat"/> instance to this collection.
            </summary>
            <param name="regionAddress">A string identifying the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion">region</see> to which this conditional format applies.</param>
            <param name="conditionOperator">A <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionOperator"/> value which defines the initial value of the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operator"/> property. This parameter is optional and defaults to <i>Equal</i>.</param>
            <returns>The resulting <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat"/> instance.</returns>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddFormulaCondition(System.String,System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})">
            <summary>
            Adds a new <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormulaConditionalFormat"/> instance to this collection.
            </summary>
            <param name="regionAddress">A string identifying the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion">region</see> to which this conditional format applies.</param>
            <param name="formula">The formula which is used to determine whether a cell value meets the condition criteria.</param>
            <param name="cellReferenceMode">A <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> value which specifies whether the <paramref name="formula"/> parameter should be interpreted as an <b>A1</b> or <b>R1C1</b> expression. This parameter is optional and defaults to null, in which case the <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> property is used.</param>
            <returns>The resulting <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormulaConditionalFormat"/> instance.</returns>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormulaConditionalFormat"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.FormulaConditionalFormat.Formula"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.FormulaConditionalFormat.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddRankCondition(System.String,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTopBottom,System.Int32)">
            <summary>
            Adds a new <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.RankConditionalFormat"/> instance to this collection.
            </summary>
            <param name="regionAddress">A string identifying the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion">region</see> to which this conditional format applies.</param>
            <param name="topBottom">A <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTopBottom"/> value which determines whether the top or bottom of the ranking is evaluated. This parameter is optional and defaults to <i>Top</i>.</param>
            <param name="rank">The numeric, percentage, or percentile ranking. This parameter is optional and defaults to <i>10</i>.</param>
            <returns>The resulting <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.RankConditionalFormat"/> instance.</returns>
            <remarks>
            <p class="body">
            A <i>RankConditionalFormat</i> can be used, for example, to format the "top ten" values in a given cell range.
            </p>
            <p class="body">
            To change the number of top or bottom values, use the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.RankConditionalFormat.Rank"/> property.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.RankConditionalFormat"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddAverageCondition(System.String,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionAboveBelow)">
            <summary>
            Adds a new <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.AverageConditionalFormat"/> instance to this collection.
            </summary>
            <param name="regionAddress">A string identifying the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion">region</see> to which this conditional format applies.</param>
            <param name="aboveBelow">A <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionAboveBelow"/> value which defines the initial value of the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.AverageConditionalFormat.AboveBelow"/> property. This parameter is optional and defaults to <i>AboveAverage</i>.</param>
            <returns>The resulting <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.AverageConditionalFormat"/>.</returns>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.AverageConditionalFormat"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddUniqueCondition(System.String)">
            <summary>
            Adds a new <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.UniqueConditionalFormat"/> instance to this collection,
            configured as a unique value condition.
            </summary>
            <param name="regionAddress">A string identifying the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion">region</see> to which this conditional format applies.</param>
            <returns>The resulting <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.UniqueConditionalFormat"/> instance.</returns>
            <remarks>
            <p class="body">
            Use this method to add a condition which evaluates to true only for cell values which
            are unique across the associated range.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.UniqueConditionalFormat"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddDuplicateCondition(System.String)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddDuplicateCondition(System.String)">
            <summary>
            Adds a new <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.DuplicateConditionalFormat"/> instance to this collection,
            configured as a duplicate value condition.
            </summary>
            <param name="regionAddress">A string identifying the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion">region</see> to which this conditional format applies.</param>
            <returns>The resulting <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.DuplicateConditionalFormat"/> instance.</returns>
            <remarks>
            <p class="body">
            Use this method to add a condition which evaluates to true only for cell values which
            are non-unique across the associated range.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.DuplicateConditionalFormat"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddUniqueCondition(System.String)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddDateTimeCondition(System.String,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTimePeriod)">
            <summary>
            Adds a new <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.DateTimeConditionalFormat"/> instance to this collection.
            </summary>
            <param name="regionAddress">A string identifying the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion">region</see> to which this conditional format applies.</param>
            <param name="dateOperator">A <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTimePeriod"/> which defines the time period against which cell date values are evaluated. This parameter is optional and defaults to <i>Today</i>.</param>
            <returns>The resulting <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.DateTimeConditionalFormat"/> instance.</returns>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.DateTimeConditionalFormat"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddTextCondition(System.String,System.String,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTextOperator)">
            <summary>
            Adds a new <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.TextOperatorConditionalFormat"/> instance to this collection.
            </summary>
            <param name="regionAddress">A string identifying the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion">region</see> to which this conditional format applies.</param>
            <param name="text">A string which determines the string against which cell text values are evaluated. This parameter is optional and defaults to <i>null</i>.</param>
            <param name="textOperator">A <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTextOperator"/> value which determines the manner in which cell values are compared to the <paramref name="text"/> value. This parameter is optional and defaults to <i>BeginsWith</i>.</param>
            <returns>The resulting <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.TextOperatorConditionalFormat"/> instance.</returns>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.TextOperatorConditionalFormat"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddBlanksCondition(System.String)">
            <summary>
            Adds a new <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.BlanksConditionalFormat"/> instance to this collection.
            </summary>
            <param name="regionAddress">A string identifying the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion">region</see> to which this conditional format applies.</param>
            <returns>The resulting <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.BlanksConditionalFormat"/> instance.</returns>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.BlanksConditionalFormat"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddNoBlanksCondition(System.String)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddNoBlanksCondition(System.String)">
            <summary>
            Adds a new <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.NoBlanksConditionalFormat"/> instance to this collection.
            </summary>
            <param name="regionAddress">A string identifying the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion">region</see> to which this conditional format applies.</param>
            <returns>The resulting <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.NoBlanksConditionalFormat"/> instance.</returns>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.NoBlanksConditionalFormat"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddBlanksCondition(System.String)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddErrorsCondition(System.String)">
            <summary>
            Adds a new <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ErrorsConditionalFormat"/> instance to this collection.
            </summary>
            <param name="regionAddress">A string identifying the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion">region</see> to which this conditional format applies.</param>
            <returns>The resulting <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ErrorsConditionalFormat"/> instance.</returns>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ErrorsConditionalFormat"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddNoErrorsCondition(System.String)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddNoErrorsCondition(System.String)">
            <summary>
            Adds a new <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.NoErrorsConditionalFormat"/> instance to this collection.
            </summary>
            <param name="regionAddress">A string identifying the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion">region</see> to which this conditional format applies.</param>
            <returns>The resulting <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.NoErrorsConditionalFormat"/> instance.</returns>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ErrorsConditionalFormat"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddErrorsCondition(System.String)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddColorScaleCondition(System.String,Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleType)">
            <summary>
            Adds a new <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat"/> instance to this collection.
            </summary>
            <param name="regionAddress">A string identifying the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion">region</see> to which this conditional format applies.</param>
            <param name="colorScaleType">A <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleType"/> value which determines whether to add a 2-color or 3-color scale.</param>
            <returns>The resulting <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat"/> instance.</returns>
            <remarks>
            <p class="body">
            Note that when <i>TwoColor</i> is specified as the value of the <paramref name="colorScaleType"/>
            parameter, the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MidpointThreshold"/> property is not applicable;
            attempting to set properties on the object returned from that property causes an exception to be thrown.
            </p>
            <p class="body">
            The <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MinimumThreshold"/> and <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MaximumThreshold"/>
            properties can be used to customize the coloring and threshold boundaries for the minimum and maximum points of the associated
            range.
            </p>
            <p class="body">
            For a 3-color scale, the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MidpointThreshold"/> can also
            be used to customize the midpoint threshold boundary.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat"/>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleCriterion"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddIconSetCondition(System.String,Infragistics.Documents.Excel.FormatConditionIconSet)">
            <summary>
            Adds a new <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat"/> instance to this collection.
            </summary>
            <param name="regionAddress">A string identifying the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion">region</see> to which this conditional format applies.</param>
            <param name="iconSet">A <see cref="T:Infragistics.Documents.Excel.FormatConditionIconSet"/> value which identifies the icon set to use. This parameter is optional and defaults to <i>IconSet3TrafficLights1</i>.</param>
            <returns>The resulting <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat"/> instance.</returns>
            <remarks>
            <p class="body">
            Each constant in the <see cref="T:Infragistics.Documents.Excel.FormatConditionIconSet"/> enumeration contains either
            3, 4, or 5 in its name. This number identifies the number of thresholds supported by
            the condition.
            </p>
            <p class="body">
            A three-threshold condition supports thresholds of 33%, 67%, and 100%.
            </p>
            <p class="body">
            A four-threshold condition supports thresholds of 25%, 50%, 75%, and 100%.
            </p>
            <p class="body">
            A five-threshold condition supports thresholds of 20%, 40%, 60%, 80%, and 100%.
            </p>
            <p class="body">
            A <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleCriterion"/> object for each threshold, is returned
            from the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.IconCriteria"/>
            collection.
            </p>
            <p class="body">
            These objects provide the ability to customize the values for the corresponding 
            threshold. For example, the icon that is displayed for a given index can be
            overridden using the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion.Icon"/> property.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.IconCriteria"/>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddDataBarCondition(System.String)">
            <summary>
            Adds a new <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat"/> instance to this collection.
            </summary>
            <param name="regionAddress">A string identifying the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion">region</see> to which this conditional format applies.</param>
            <returns>The resulting <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat"/> instance.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.Contains(Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase)">
            <summary>
            Returns true if the collection contains the condition
            </summary>
            <param name="condition">The condition</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.GetEnumerator">
            <summary>
            Returns an enumerator for the items in the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator for the items in the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.IndexOf(Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase)">
            <summary>
            Gets the index of the item in the collection
            </summary>
            <param name="condition"></param>
            <returns>The index or -1 if the item is not in the collection</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.Remove(Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase)">
            <summary>
            Removes an item from the collection
            </summary>
            <param name="condition"></param>
            <returns>true is the item was removed or false if the item wasn't in the collection</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.RemoveAt(System.Int32)">
            <summary>
            Removes an item from the collection at a specifoed index
            </summary>
            <param name="index">The zero based index in the collection</param>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase">
            <summary>
            Abstract base class which encapsulates the condition for a formatting rule.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.#ctor">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.#ctor(System.Collections.Generic.IList{Infragistics.Documents.Excel.WorksheetRegion},Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionType)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="regions">The worksheet regions.</param>
            <param name="conditionType">A <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionType"/> constant describing the type of condition.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.Worksheet">
            <summary>
            Returns a reference to the associated worksheet.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.Workbook">
            <summary>
            Returns a reference to the associated workbook.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.Regions">
            <summary>
            Returns the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion"/> which identifies the cell range
            with which this condition is associated.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.ConditionType">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionType"/> value which identifies the
            type of condition for this instance.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.Priority">
            <summary>
            Returns or sets a value which determines the order of evaluation
            when multiple conditional formatting rules exist.
            </summary>
            <remarks>
            <p class="body">
            By default, <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatBase">conditions</see> are evaluated
            in the order in which they appear within the containing
            <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection">collection</see>.
            </p>
            <p class="body">
            This property makes it possible to weight one condition over another, essentially
            overriding the condition's ordinal position within the collection.
            </p>
            <p class="body">
            A lower number means a higher priority; for example, a condition with a
            priority of 1 is evaluated before one with a priority of 2.
            </p>
            <p class="body">
            If a cell value meets more than one condition, the format defined by the first
            condition to be evaluated takes precedence.
            </p>
            <p class="body">
            Setting the priority on one condition may cause the value of other conditions
            in the collection to be changed to ensure that each condition has a unique value.
            </p>
            </remarks>
            <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.SetFirstPriority"/>
            <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.SetLastPriority"/>
            <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.StopIfTrue"/> 
            <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.StopIfTrue">
            <summary>
            Returns or sets a boolean indicating whether additional formatting rules
            are evaluated if this rule evaluates to true. Applicable only in the case
            where the containing <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection">collection</see>
            contains more than one element.
            </summary>
            <remarks>
            <p class="body">
            If a cell value meets more than one condition, the format defined by the
            first condition takes precedence. Individual format properties are "merged"
            during the resolution process; for example, if one format has red borders
            and another has a red foreground color, a cell value which meets both conditions
            may be formatted with both red borders <b>and</b> a red foreground color.
            </p>
            <p class="body">
            This property makes it possible to short-circuit the resolution process, so that
            no other conditional formats are applied after the first condition evaluates to true.
            </p>
            <p class="body">
            Using the above example, assume <i>StopIfTrue</i> is set to a value of true on the
            conditional format with red borders, a second conditional format exists with a red
            foreground color, and a cell value meets both conditions. Because the StopIfTrue
            setting prevents additional formats from being evaluated, the cell will not show
            a red foreground color, whereas with <i>StopIfTrue</i> being set to false, it
            would show both red borders and a red foreground color.
            </p>
            <p class="body">
            In addition to preventing subsequent conditions from being evaluated, the order
            in which conditions are evaluated can be controlled using the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.Priority"/>
            property.
            </p>
            </remarks>
            <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.Priority"/>
            <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.SetFirstPriority"/>
            <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.SetLastPriority"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.MeetsCriteria(System.Object,System.Int32,System.Int32,Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase)">
            <summary>
            When overridden in a derived class, returns a boolean value indicating
            whether the specified <paramref name="cellValue"/> meets the criteria
            defined by this instance.
            </summary>
            <param name="cellValue">The cell value to compare.</param>
            <param name="rowIndex">The index of the row</param>
            <param name="columnIndex">The index of the column</param>
            <param name="cellRef">The reference for the cell.</param>
            <returns>True if the condition is met.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.SetFirstPriority">
            <summary>
            Sets the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.Priority"/> value for this rule such that it
            is the first condition to be evaluated. Applicable only in the case
            where there is more than one element contained within the associated
            <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection">collection</see>.
            </summary>
            <remarks>
            <p class="body">
            When multiple <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatBase">conditions</see> exist
            in the same <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection">collection</see>,
            the order in which they are evaluated has bearing on which format is applied
            to cells which meet those conditions.
            </p>
            <p class="body">
            This method ensures that the associated condition is the first one to be
            evaluated.
            </p>
            <p class="body">
            To make a condition the last one to be evaluated, use the <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.SetLastPriority"/>
            method.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.Priority"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.SetLastPriority"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.SetLastPriority">
            <summary>
            Sets the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.Priority"/> value for this rule such that it
            is the last condition to be evaluated. Applicable only in the case
            where there is more than one element contained within the associated
            <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection"/>.
            </summary>
            <remarks>
            <p class="body">
            Just as the <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.SetFirstPriority"/> method ensures that the associated
            condition is evalulated first, the <i>SetLastPriority</i> method ensures that
            the associated condition is evaluated last.
            </p>
            <p class="body">
            Calling this method on more than one condition essentially replaces the previously
            designated condition as the last one to be evaluated with this one.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.Priority"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.SetLastPriority"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.StopIfTrue"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.SetRegions(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})">
            <summary>
            Replaces the existing regions with new ones
            </summary>
            <param name="regionAddress">A string with one or more comma separated region address</param>
            <param name="cellReferenceMode">An optional cell reference mode</param>
            <exception cref="T:System.ArgumentException">If regionAddress is invalid or contains a region from another worksheet</exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.RegionsToStringHelper(Infragistics.Documents.Excel.Worksheet,System.Collections.Generic.IList{Infragistics.Documents.Excel.WorksheetRegion},Infragistics.Documents.Excel.CellReferenceMode,System.Boolean,System.Boolean,System.Collections.Generic.IList{System.String},System.Nullable{System.Char})">
            <summary>
            Returns the string representation of the region/regions to
            which this instance applies.
            </summary>
            <param name="ws">Reference to the owning Worksheet</param>
            <param name="regions">IList of WorksheetRegion instances.</param>
            <param name="crm">CellReferenceMode (defaults to A1)</param>
            <param name="includeWorksheetName">True to include the name of the worksheet, e.g., "Sheet2!A1:A10". Defaults to false.</param>
            <param name="useRelative">True to use relative row/column notation, i.e., A1:A10 as opposed to $A$1:$A$10. Defaults to false.</param>
            <param name="list">If non-null, will be populated with the string representation of each region in the list.</param>
            <param name="unionOperator">If non-null, overrides the resolved union operator. Use to write regions out to an sqref element, which requires space delimiters.</param>
            <returns>
            The string representation of the region or regions associated
            with this condition. Multiple regions are separated by the resolved
            region union operator for the culture associated with the specified
            Worksheet.
            </returns>
        </member>
        <member name="E:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase.PropertyChanged">
            <summary>
            Occurs after a property value has changed
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue">
            <summary>
            Exposes properties which define the value and its unit of measure
            for a conditional format threshold.
            </summary>
            <remarks>
            <p class="body">
            When the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.ValueType"/> property is set to <i>Number</i>, <i>Percentage</i>,
            or <i>Percentile</i>, only the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.Value"/> property is applicable.
            </p>
            <p class="body">
            Similarly, the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.Formula"/> property is only applicable when<i>ValueType</i>
            is set to <i>Formula</i>.
            </p>
            <p class="body">
            For the following settings of <i>ValueType</i>, neither <i>Value</i> nor <i>Formula</i>
            is applicable, and the actual threshold is derived based on the highest and/or lowest
            values in the associated range:
            </p>
            <p class="body">
            <ul>
            <li>AutomaticMinimum</li>
            <li>AutomaticMaximum</li>
            <li>LowestValue</li>
            <li>HighestValue</li>
            </ul>
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.Value"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.Formula"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode},Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.Formula">
            <summary>
            Returns the <see cref="T:Infragistics.Documents.Excel.Formula">formula</see> which determines
            whether cell values meet the criteria defined by the associated condition.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable when the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.ValueType"/> property is set to <i>Formula</i>.
            </p>
            <p class="body">
            To assign a <see cref="T:Infragistics.Documents.Excel.Formula">formula</see>, use the <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode},Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/>
            method.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode},Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.Value">
            <summary>
            Returns the numeric value for this instance.
            </summary>
            <remarks>
            <p class="body">
            This property is read-only; to assign a value type, use the
            <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.SetValue(Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/> or
            <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.SetValue(System.Double,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/>
            methods.
            </p>
            <p class="body">
            Note that the unit of measure for this value is determined by the
            <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.ValueType"/> property; for example, when <i>ValueType</i>
            is set to <i>Number</i>, the value is interpreted as a numeric value,
            but when set to <i>Percentage</i>, it is interpreted as a percentage.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.ValueType"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.Formula"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.SetValue(System.Double,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.ValueType">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType"/> value which specifies
            the manner in which the threshold values for this instance are determined.
            </summary>
            <remarks>
            <p class="body">
            This property is read-only; to assign one of the following value types, use the
            <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.SetValue(Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/> method:
            </p>
            <p class="body">
            <ul>
            <li>AutomaticLowest</li>
            <li>AutomaticHighest</li>
            <li>LowestValue</li>
            <li>HighestValue</li>
            </ul>
            </p>
            <p class="body">
            To assign a value type of <i>Number</i>, <i>Percentage</i>, or <i>Percentile</i>use the
            <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.SetValue(System.Double,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/> method.
            </p>
            <p class="body">
            To assign a <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.Formula"/>, use the <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode},Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/> method.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.SetValue(Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode},Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)">
            <summary>
            Assigns the specified formula to the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.Formula"/> property, and assigns
            a value of <i>Formula</i> to the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.ValueType"/> property.
            </summary>
            <param name="formula">The string representation of the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.Formula"/> to be assigned to the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.Value"/> property.</param>
            <param name="cellReferenceMode">A <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> value which specifies whether the <paramref name="formula"/> parameter should be interpreted as an <b>A1</b> or <b>R1C1</b> expression. This parameter is optional and defaults to null, in which case the <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> property is used.</param>
            <param name="valueType">
            A <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType"/> value which specifies the manner in which
            the value returned from the formula is interpreted. This parameter is optional and
            defaults to 'Formula'.
            </param>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.Formula"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.ValueType"/>
            <seealso cref="T:Infragistics.Documents.Excel.Formula"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.SetValue(System.Double,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)">
            <summary>
            Sets the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.Value"/> and <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.ValueType"/> properties to the
            specified values.
            </summary>
            <param name="value">The new value for the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.Value"/> property.</param>
            <param name="valueType">
            The new value for the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.ValueType"/> property. Must be set to either
            <i>Number</i>, <i>Percentage</i>, or <i>Percentile</i> or an exception is thrown.
            </param>
            <remarks>
            <p class="body">
            To set the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.ValueType"/> property to <i>Formula</i>, use the
            <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode},Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/> method.
            </p>
            <p class="body">
            To set the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.ValueType"/> property to a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType"/>
            value for which the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.Value"/> is not applicable, use the
            <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.SetValue(Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/> method.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">If the value type or value is not appropriate for the condition.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If the value is out of range.</exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.SetValue(Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)">
            <summary>
            Sets the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.ValueType"/> property to the specified
            <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType"/> value.
            </summary>
            <param name="valueType">The new value for the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.ValueType"/> property.</param>
            <remarks>
            <p class="body">
            The <paramref name="valueType"/> parameter must be set to one of the following values
            or an exception is thrown:
            </p>
            <p class="body">
            <ul>
            <li>AutomaticLowest</li>
            <li>AutomaticHighest</li>
            <li>LowestValue</li>
            <li>HighestValue</li>
            </ul>
            </p>
            <p class="body">
            To set the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.Value"/> property to a numeric value, use the
            <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.SetValue(System.Double,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/> method.
            </p>
            <p class="body">
            To set the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.ValueType"/> property to <i>Formula</i>, use the
            <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode},Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/> method.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.ToString">
            <summary>
            Returns the string representation of this instance.
            </summary>
        </member>
        <member name="E:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.PropertyChanged">
            <summary>
            Occurs after a property value has changed
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValueInfo.Equals(System.Object)">
            <summary>
            Checks for equality
            </summary>
            <param name="obj">The object to compare</param>
            <returns>true is equal</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValueInfo.GetHashCode">
            <summary>
            Calculates a number suitable for hasing
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValueInfo.ToString">
            <summary>
            Returns the Index.ToString()
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.CellConditionalFormat">
            <summary>
            Represents the aggregated conditioal format for a specific cell. It is returned via the <see cref="M:Infragistics.Documents.Excel.Worksheet.GetCellConditionalFormat(System.Int32,System.Int32)">Worksheet.GetCellConditionalFormat</see> and the <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellConditionalFormat(System.Int32)">WorksheetRow.GetCellConditionalFormat</see> methods.
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.GetCellConditionalFormat(System.Int32,System.Int32)">Worksheet.GetCellConditionalFormat</seealso>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellConditionalFormat(System.Int32)">WorksheetRow.GetCellConditionalFormat</seealso>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.CellConditionalFormat.CellFormat">
            <summary>
            Returns a cell format that represents the aggregated format for all conditional formats that apply to the cell (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.CellConditionalFormat.DataBarInfo">
            <summary>
            Returns a data bar info if applicable, otherwise null (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.CellConditionalFormat.IconInfo">
            <summary>
            Returns an icon info if applicable, otherwise null (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.CellConditionalFormat.HasConditionFormatting">
            <summary>
            Returns whether this cell has conditional formatting applied (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase">
            <summary>
            Base class for the <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion"/> and <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleCriterion"/> classes.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion"/>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleCriterion"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.Value">
            <summary>
            Returns the numeric value for this instance.
            </summary>
            <remarks>
            <p class="body">
            This property is read-only; to assign a value type, use the
            <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.SetValue(Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/> or
            <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.SetValue(System.Double,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/>
            methods.
            </p>
            <p class="body">
            Note that the unit of measure for this value is determined by the
            <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.ValueType"/> property; for example, when <i>ValueType</i>
            is set to <i>Number</i>, the value is interpreted as a numeric value,
            but when set to <i>Percentage</i>, it is interpreted as a percentage.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.ValueType"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.Formula"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.SetValue(System.Double,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.ValueType">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType"/> value which specifies
            the manner in which the threshold values for this instance are determined.
            </summary>
            <remarks>
            <p class="body">
            This property is read-only; to assign one of the following value types, use the
            <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.SetValue(Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/> method:
            </p>
            <p class="body">
            <ul>
            <li>AutomaticLowest</li>
            <li>AutomaticHighest</li>
            <li>LowestValue</li>
            <li>HighestValue</li>
            </ul>
            </p>
            <p class="body">
            To assign a value type of <i>Number</i>, <i>Percentage</i>, or <i>Percentile</i>use the
            <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.SetValue(System.Double,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/> method.
            </p>
            <p class="body">
            To assign a <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.Formula"/>, use the <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode},Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/> method.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.SetValue(Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.Formula">
            <summary>
            Returns the <see cref="T:Infragistics.Documents.Excel.Formula">formula</see> which determines
            whether cell values meet the criteria defined by the associated condition.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable when the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.ValueType"/> property is set to <i>Formula</i>.
            </p>
            <p class="body">
            To assign a <see cref="T:Infragistics.Documents.Excel.Formula">formula</see>, use the <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode},Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/>
            method.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode},Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode},Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)">
            <summary>
            Assigns the specified formula to the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.Formula"/> property, and assigns
            a value of <i>Formula</i> to the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.ValueType"/> property.
            </summary>
            <param name="formula">The string representation of the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.Formula"/> to be assigned to the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.Value"/> property.</param>
            <param name="cellReferenceMode">A <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> value which specifies whether the <paramref name="formula"/> parameter should be interpreted as an <b>A1</b> or <b>R1C1</b> expression. This parameter is optional and defaults to null, in which case the <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> property is used.</param>
            <param name="valueType">
            A <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType"/> value which specifies the manner in which
            the value returned from the formula is interpreted. This parameter is optional and
            defaults to 'Formula'.
            </param>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.Formula"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.ValueType"/>
            <seealso cref="T:Infragistics.Documents.Excel.Formula"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.SetValue(System.Double,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)">
            <summary>
            Sets the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.Value"/> and <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.ValueType"/> properties to the
            specified values.
            </summary>
            <param name="value">The new value for the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.Value"/> property.</param>
            <param name="valueType">
            The new value for the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.ValueType"/> property. Must be set to either
            <i>Number</i>, <i>Percentage</i>, or <i>Percentile</i> or an exception is thrown.
            </param>
            <remarks>
            <p class="body">
            To set the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.ValueType"/> property to <i>Formula</i>, use the
            <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode},Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/> method.
            </p>
            <p class="body">
            To set the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.ValueType"/> property to a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType"/>
            value for which the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.Value"/> is not applicable, use the
            <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.SetValue(Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/> method.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.SetValue(Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)">
            <summary>
            Sets the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.ValueType"/> property to the specified
            <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType"/> value.
            </summary>
            <param name="valueType">The new value for the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.ValueType"/> property.</param>
            <remarks>
            <p class="body">
            The <paramref name="valueType"/> parameter must be set to one of the following values
            or an exception is thrown:
            </p>
            <p class="body">
            <ul>
            <li>AutomaticLowest</li>
            <li>AutomaticHighest</li>
            <li>LowestValue</li>
            <li>HighestValue</li>
            </ul>
            </p>
            <p class="body">
            To set the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.Value"/> property to a numeric value, use the
            <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.SetValue(System.Double,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/> method.
            </p>
            <p class="body">
            To set the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.ValueType"/> property to <i>Formula</i>, use the
            <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode},Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType)"/> method.
            </p>
            </remarks>
        </member>
        <member name="E:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.PropertyChanged">
            <summary>
            Occurs after a property value has changed
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat">
            <summary>
            Exposes properties which displays data bars in a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>
            based on the cell's value as relative to the associated range.
            </summary>
            <remarks>
            <p class="body">
            </p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.FillPercentMinDefaultValue">
            <summary>Expressed as a percentage</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.FillPercentMaxDefaultValue">
            <summary>Expressed as a percentage</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.#ctor(System.Collections.Generic.IList{Infragistics.Documents.Excel.WorksheetRegion})">
            <summary>
            Creates a new instance.
            </summary>
            <param name="regions">The worksheet regions.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.AxisColor">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> object which defines the
            color of the axis.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.AxisPosition">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.DataBarAxisPosition"/> value which determines
            whether an axis is displayed.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.DataBarAxisPosition"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.BarColor">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> object which defines the
            fill color of the data bar.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.BarColorResolved">
            <summary>
            Returns the value returned from the BarColor property
            if one is specified, otherwise returns (99, 142, 198).
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.BarBorderColor">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> object which defines the
            border color of the data bar.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.BarBorderColorResolved">
            <summary>
            Returns the value returned from the BarColor property
            if one is specified, otherwise returns (0, 0, 0).
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.DefaultBarBorderColor">
            <summary>
            Returns (255, 0, 0)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.BarFillType">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.DataBarFillType"/> value which determines
            whether the data bar is filled with a solid color or a gradient.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.Direction">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.DataBarDirection"/> value which determines
            the direction in which the data bar extends.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.MaxPoint">
            <summary>
            Returns or sets a value which determines the manner in which the longest
            bar is evaluated for this condition.
            </summary>
            <remarks>
            <p class="body">
            The following values are not supported for the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.ValueType"/>
            property, and will cause an exception to be thrown:
            </p>
            <p class="body">
            <ul>
            <li>LowestValue</li>
            <li>AutomaticMinimum</li>
            <li>None</li>
            </ul>
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.MinPoint"/>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.MinPoint">
            <summary>
            Returns or sets a value which determines the manner in which the shortest
            bar is evaluated for this condition.
            </summary>
            <remarks>
            <p class="body">
            The following values are not supported for the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.ValueType"/>
            property, and will cause an exception to be thrown:
            </p>
            <p class="body">
            <ul>
            <li>HighestValue</li>
            <li>AutomaticMaximum</li>
            <li>None</li>
            </ul>
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.MinPoint"/>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.NegativeBarFormat">
            <summary>
            Returns a <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.NegativeBarFormat"/> object which defines the visual
            attributes of negative-value data bars.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.FillPercentMax">
            <summary>
            Returns or sets an integer value which determines the length of
            the longest data bar, expressed as a percentage of the cell's width.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.FillPercentMin">
            <summary>
            Returns or sets an integer value which determines the length of
            the shortest data bar, expressed as a percentage of the cell's width.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.ShowBorder">
            <summary>
            Returns or sets a boolean value indicating whether borders
            are displayed for both negative-value and positive-value
            databars.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.ShowValue">
            <summary>
            Returns or sets a boolean value indicating whether the cell
            value is shown along with the data bar.
            </summary>
            <remarks>
            <p class="body">
            By default, the cell value is displayed along with the databar;
            use this property to prevent the cell value from appearing.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.SerializeAsX14">
            <summary>
            Returns true if any of the properties which require x14
            markup to be serialized are set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.MeetsCriteria(System.Object,System.Int32,System.Int32,Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase)">
            <summary>
            Returns true if the specified <paramref name="cellValue"/> meets
            the criteria defined by this instance.
            </summary>
            <param name="cellValue">The cell value to compare.</param>
            <param name="rowIndex">The index of the row</param>
            <param name="columnIndex">The index of the column</param>
            <param name="cellRef">The reference for the cell.</param>
            <returns>True if the condition is met.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.DateTimeConditionalFormat">
            <summary>
            Exposes properties which control the visual attributes of a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>
            based on whether a cell's date/time value falls within a given range of time.
            </summary>
            <remarks>
            <p class="body">
            This condition can be used to control the visual attributes of cells with date/time
            values which fall within a range of time as specified by the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.DateTimeConditionalFormat.DateOperator"/>
            property.
            </p>
            <p class="body">
            This condition provides only limited support for defining date/time ranges, i.e., the
            current, previous, or next day, week or month. For wider ranges, or more precise conditions,
            use the <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormulaConditionalFormat"/> class, and assign the desired date/time
            formula to the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.FormulaConditionalFormat.Formula"/> property.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.DateTimeConditionalFormat.DateOperator"/>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTimePeriod"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.DateTimeConditionalFormat.#ctor(System.Collections.Generic.IList{Infragistics.Documents.Excel.WorksheetRegion},Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTimePeriod)">
            <summary>
            Creates a new instance with the specified initial value for the
            <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.DateTimeConditionalFormat.DateOperator"/> property. The default initial value
            is 'Today'.
            </summary>
            <param name="regions">The worksheet regions.</param>
            <param name="dateOperator">A <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTimePeriod"/> value which defines the time range for the comparison. This parameter defaults to 'Today'.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.DateTimeConditionalFormat.DateOperator">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTimePeriod"/> value which
            defines the range of time against which cell values are compared when
            evaluating this condition.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.DateTimeConditionalFormat.MeetsCriteria(System.Object,System.Int32,System.Int32,Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase)">
            <summary>
            Returns true if the specified <paramref name="cellValue"/> meets
            the criteria defined by this instance.
            </summary>
            <param name="cellValue">The cell value to compare.</param>
            <param name="rowIndex">The index of the row</param>
            <param name="columnIndex">The index of the column</param>
            <param name="cellRef">The reference for the cell.</param>
            <returns>True if the condition is met.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.DuplicateConditionalFormat">
            <summary>
            Exposes properties which control the visual attributes of a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>
            based on whether a cell's value is unique or duplicated across the associated range.
            </summary>
            <remarks>
            <p class="body">
            This condition evaluates to true only for cell values which are non-unique across
            the associated range.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.UniqueConditionalFormat"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.DuplicateConditionalFormat.#ctor(System.Collections.Generic.IList{Infragistics.Documents.Excel.WorksheetRegion})">
            <summary>
            Creates a new instance.
            </summary>
            <param name="regions">The worksheet regions.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.DuplicateConditionalFormat.MeetsCriteria(System.Object,System.Int32,System.Int32,Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase)">
            <summary>
            Returns true if the specified <paramref name="cellValue"/> meets
            the criteria defined by this instance.
            </summary>
            <param name="cellValue">The cell value to compare.</param>
            <param name="rowIndex">The index of the row</param>
            <param name="columnIndex">The index of the column</param>
            <param name="cellRef">The reference for the cell.</param>
            <returns>True if the condition is met.</returns>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionNotificationType.NoneRquired">
            <summary>
            The conditional format is based solely on the value of each cell so no
            additional notification is required when a cell changes.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionNotificationType.WhenCellInRegionChanges">
            <summary>
            When any cell in the region changes than all cell in the region need
            to be notified to re-get their conditional formats so we will call
            OnConditionalFormatChange off the IWorkbookOwner interface
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionNotificationType.WhenAnyCellChanges">
            <summary>
            When any cell changes we will call
            OnConditionalFormatChange off the IWorkbookOwner interface regardless
            of whether that cell in in the condition format region.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionType">
            <summary>
            Constants which determine the criteria for a format <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ConditionBase">condition</see>.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionType.CellValue">
            <summary>
            The format is based on the cell's value, which is evaluated against
            one or more conditions to determine whether the value meets a particular
            criteria.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionType.Expression">
            <summary>
            The format is determined by evaluating a formula.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionType.ColorScale">
            <summary>
            Represents a conditional formatting rule which applies gradations to
            cell colors to indicate relative differences in the values of cells
            which belong to the associated range.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionType.DataBar">
            <summary>
            Represents a conditional formatting rule which renders a color bar
            inside the cell to indicate relative differences in the values of cells
            which belong to the associated range.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionType.Rank">
            <summary>
            Cells with the top/bottom <i>n</i> values are formatted, where <i>n</i>
            represents a numeric, percentage, or percentile ranking. For example,
            this type can be used to to enable a 'top ten' condition.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionType.IconSets">
            <summary>
            Represents a conditional formatting rule which displays an icon
            inside the cell which indicates the cell's value as relative to
            the highest and lowest value in the associated range.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionType.UniqueValues">
            <summary>
            Cells with values which are unique across the associated range are formatted.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionType.DuplicateValues">
            <summary>
            Cells with values which are duplicated (non-unique) across the associated range are formatted.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionType.TextString">
            <summary>
            The format is determined by whether the cell's value matches a literal string value.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionType.Blanks">
            <summary>
            Cells with no value are formatted. Note that foreground-related
            properties such as font colors are not applicable.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionType.TimePeriod">
            <summary>
            The format is determined by whether a cell's date value falls within
            a given period of time.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionType.Average">
            <summary>
            Cells with values which are greater than or less than the average value
            for the associated region are formatted.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionType.NoBlanks">
            <summary>
            Cells with a non-empty value are formatted.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionType.Errors">
            <summary>
            The format is applied to cells which contain an error.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionType.NoErrors">
            <summary>
            The format is applied to cells which do not contain an error.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionOperator">
            <summary>
            Constants which specify the manner in which a cell value is
            compared against one or more operands.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionOperator.Between">
            <summary>
            The condition evaluates to true if the cell value is between
            the values of the two operands.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionOperator.NotBetween">
            <summary>
            The condition evaluates to true if the cell value is not between
            the values of the two operands.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionOperator.Equal">
            <summary>
            The condition evaluates to true if the cell value is equal to
            the value of the operand.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionOperator.NotEqual">
            <summary>
            The condition evaluates to true if the cell value is not equal to
            the value of the operand.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionOperator.Greater">
            <summary>
            The condition evaluates to true if the cell value is greater than
            the value of the operand.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionOperator.Less">
            <summary>
            The condition evaluates to true if the cell value is less than
            the value of the operand.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionOperator.GreaterEqual">
            <summary>
            The condition evaluates to true if the cell value is greater than
            or equal to the value of the operand.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionOperator.LessEqual">
            <summary>
            The condition evaluates to true if the cell value is less than
            or equal to the value of the operand.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTextOperator">
            <summary>
            Constants which specify the text comparison method applied when
            evaluating a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatBase">format condition</see>.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTextOperator.BeginsWith">
            <summary>
            The string being evaluated must begin with the value to which
            it is being compared in order for the condition to be met.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTextOperator.EndsWith">
            <summary>
            The string being evaluated must end with the value to which
            it is being compared in order for the condition to be met.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTextOperator.Contains">
            <summary>
            The string being evaluated must match some part of the value to which
            it is being compared in order for the condition to be met.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTextOperator.DoesNotContain">
            <summary>
            Negates the <see cref="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTextOperator.Contains"/> value; the string being evaluated
            must not match any part of the value to which it is being compared in
            order for the condition to be met.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionAboveBelow">
            <summary>
            Constants which specify the manner in which cell values are compared
            when evaluating a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.AverageConditionalFormat"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionAboveBelow.AboveAverage">
            <summary>
            The cell value must be above the average for the associated range
            in order to meet the associated condition.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionAboveBelow.BelowAverage">
            <summary>
            The cell value must be below the average for the associated range
            in order to meet the associated condition.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionAboveBelow.EqualAboveAverage">
            <summary>
            The cell value must be equal to or above the average for the associated range
            in order to meet the associated condition.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionAboveBelow.EqualBelowAverage">
            <summary>
            The cell value must be equal to or below the average for the associated range
            in order to meet the associated condition.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionAboveBelow.AboveStandardDeviation">
            <summary>
            The cell value must be above the standard deviation for the associated range
            in order to meet the associated condition.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionAboveBelow.BelowStandardDeviation">
            <summary>
            The cell value must be below the standard deviation for the associated range
            in order to meet the associated condition.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTopBottom">
            <summary>
            Constans which identify whether a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.RankConditionalFormat"/> evaluates
            to true for the top or bottom ranked values across the associated range.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTopBottom.Bottom">
            <summary>
            The cell value must fall within the bottom ranking of values for the associated range.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTopBottom.Top">
            <summary>
            The cell value must fall within the top ranking of values for the associated range.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTimePeriod">
            <summary>
            Constants which define the manner in which a cell's date/time value is compared
            when evaluating a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.DateTimeConditionalFormat"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTimePeriod.Today">
            <summary>
            The cell's date/time value is compared to the current date.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTimePeriod.Tomorrow">
            <summary>
            The cell's date/time value is compared to the day after the current date.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTimePeriod.Yesterday">
            <summary>
            The cell's date/time value is compared to the day before the current date.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTimePeriod.ThisWeek">
            <summary>
            The cell's date/time value is compared to the current week, as defined by the
            <see cref="T:System.Globalization.CalendarWeekRule"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTimePeriod.NextWeek">
            <summary>
            The cell's date/time value is compared to the week after the current one, as defined by the
            <see cref="T:System.Globalization.CalendarWeekRule"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTimePeriod.LastWeek">
            <summary>
            The cell's date/time value is compared to the week before the current one, as defined by the
            <see cref="T:System.Globalization.CalendarWeekRule"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTimePeriod.LastSevenDays">
            <summary>
            The cell's date/time value meets the condition if it lies within the range
            of the past seven days, without regard to the
            <see cref="T:System.Globalization.CalendarWeekRule"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTimePeriod.ThisMonth">
            <summary>
            The cell's date/time value is compared to the current month.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTimePeriod.NextMonth">
            <summary>
            The cell's date/time value is compared to the month after the current one.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTimePeriod.LastMonth">
            <summary>
            The cell's date/time value is compared to the month before the current one.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType">
            <summary>
            Constants which identify the type of value which defines the criteria for a
            <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleCriterion"/> or <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType.Number">
            <summary>
            The criteria is defined by a numeric value.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType.Percentage">
            <summary>
            The criteria is defined by a percentage.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType.Percentile">
            <summary>
            The criteria is defined by a percentile rating.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType.Formula">
            <summary>
            The criteria is defined by a formula.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType.LowestValue">
            <summary>
            The criteria is defined by the lowest value across the associated range.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType.HighestValue">
            <summary>
            The criteria is defined by the highest value across the associated range.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType.AutomaticMinimum">
            <summary>
            The shortest data bar is proportional to the lowest value across the associated range.
            Applicable only to the <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionValueType.AutomaticMaximum">
            <summary>
            The longest data bar is proportional to the highest value across the associated range.
            Applicable only to the <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleCriterionThreshold">
            <summary>
            Constants which identify the threshold of a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleCriterion"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleCriterionThreshold.Minimum">
            <summary>
            Identifies the minimum threshold.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleCriterionThreshold.Midpoint">
            <summary>
            Identifies the midpoint threshold.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleCriterionThreshold.Maximum">
            <summary>
            Identifies the maximum threshold.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleType">
            <summary>
            Constants which identify whether a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat"/>
            supports two or three thresholds. Used to differentiate between a 2-color and
            3-color scale.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleType.TwoColor">
            <summary>
            The color scale supports only the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MinimumThreshold">minimum</see>
            and <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MaximumThreshold">maximum</see> thresholds.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleType.ThreeColor">
            <summary>
            In addition to the the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MinimumThreshold">minimum</see>
            and <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MaximumThreshold">maximum</see> thresholds, the color
            scale also supports a <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat.MidpointThreshold">midpoint</see>
            threshold.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.DataBarAxisPosition">
            <summary>
            Constants which determine the axis position for a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.DataBarAxisPosition.Automatic">
            <summary>
            Displays the axis at a variable position based on the ratio of the minimum
            negative value to the maximum positive value in the associated range. Positive
            values are displayed in a left-to-right direction; negative values are displayed
            from right to left. When all values are positive, or all values are negative,
            no axis is displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.DataBarAxisPosition.Midpoint">
            <summary>
            Displays the axis at the midpoint of the cell, regardless of the set of values
            in the associated range. Positive values are displayed in a left-to-right
            direction; negative values are displayed from right to left.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.DataBarAxisPosition.None">
            <summary>
            No axis is displayed; positive and negative values are both displayed in
            the left-to-right direction.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.DataBarFillType">
            <summary>
            Constants which determine whether <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat">data bars</see> are filled with a solid color or
            with a gradient.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.DataBarFillType.SolidColor">
            <summary>
            Data bars are filled with a solid color.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.DataBarFillType.Gradient">
            <summary>
            Data bars are filled with a linear gradient.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.DataBarDirection">
            <summary>
            Constants which determine whether <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat">data bars</see> are filled with a solid color or
            with a gradient.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.DataBarDirection.Context">
            <summary>
            The direction the data bar is displayed is based on context.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.DataBarDirection.LeftToRight">
            <summary>
            The data bar is displayed from left-to-right.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.DataBarDirection.RightToLeft">
            <summary>
            The data bar is displayed from right-to-left.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.DataBarNegativeBarColorType">
            <summary>
            Constants which specify the manner in which the color for negative-value
            data bars is determined.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.DataBarNegativeBarColorType.Color">
            <summary>
            Use the value of the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.NegativeBarFormat.BarColor"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.DataBarNegativeBarColorType.SameAsPositive">
            <summary>
            Use the same color as that of the positive-value data bars.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.ThresholdComparison">
            <summary>
            Constants which determine  the manner in which cell values
            are compared to the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.Value"/>
            property when conditional criteria is evaluated by an
            <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.ThresholdComparison.GreaterEqual">
            <summary>
            The cell value can be greater than <b>or equal to</b> the threshold <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.Value">value</see>.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ConditionalFormatting.ThresholdComparison.Greater">
            <summary>
            The cell value must be greater than <b>but not equal to</b> the threshold <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.Value">value</see>.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.ErrorsConditionalFormat">
            <summary>
            Exposes properties which control the visual attributes of a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>
            based on whether the cell's value is in error.
            </summary>
            <remarks>
            <p class="body">
            This condition can be used to control the visual attributes of cells
            with a value which represents an error condition. For example, a cell
            which displays the result of a formula whereby the formula results in
            a divide-by-zero error meets the criteria of this condition.
            </p>
            <p class="body">
            To negate this condition, use the <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.NoErrorsConditionalFormat"/> class.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.NoErrorsConditionalFormat"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ErrorsConditionalFormat.#ctor(System.Collections.Generic.IList{Infragistics.Documents.Excel.WorksheetRegion})">
            <summary>
            Creates a new instance.
            </summary>
            <param name="regions">The worksheet regions.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ErrorsConditionalFormat.MeetsCriteria(System.Object,System.Int32,System.Int32,Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase)">
            <summary>
            Returns true if the specified <paramref name="cellValue"/> meets
            the criteria defined by this instance.
            </summary>
            <param name="cellValue">The cell value to compare.</param>
            <param name="rowIndex">The index of the row</param>
            <param name="columnIndex">The index of the column</param>
            <param name="cellRef">The reference for the cell.</param>
            <returns>True if the condition is met.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.FormulaConditionalFormat">
            <summary>
            Exposes properties which control the visual attributes of a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>
            based on whether the cell's value meets the criteria defined by a <see cref="T:Infragistics.Documents.Excel.Formula">formula</see>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.FormulaConditionalFormat.Formula"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.FormulaConditionalFormat.#ctor(System.Collections.Generic.IList{Infragistics.Documents.Excel.WorksheetRegion},System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})">
            <summary>
            Creates a new instance. with the specified <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionOperator"/>.
            </summary>
            <param name="regions">The worksheet regions.</param>
            <param name="formula">The string representation of the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.FormulaConditionalFormat.Formula"/> which defines the criteria for this condition.</param>
            <param name="cellReferenceMode">A <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> value which specifies whether the <paramref name="formula"/> parameter should be interpreted as an <b>A1</b> or <b>R1C1</b> expression. This parameter is optional and defaults to null, in which case the <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> property is used.</param>
            <remarks>
            <p class="body">
            The <paramref name="formula"/> parameter can be left empty upon construction of the object;
            however, in order for the condition to be evaluated, the <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.FormulaConditionalFormat.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})"/>
            method must then be used to assign the formula.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.FormulaConditionalFormat.Formula"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.FormulaConditionalFormat.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.FormulaConditionalFormat.Formula">
            <summary>
            Returns or sets the <see cref="T:Infragistics.Documents.Excel.Formula">formula</see> which defines the criteria for this condition.
            </summary>
            <remarks>
            <p class="body">
            This property is not settable; however, the <see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.FormulaConditionalFormat.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})"/>
            method can be used to assign the formula.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.FormulaConditionalFormat.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.FormulaConditionalFormat.MeetsCriteria(System.Object,System.Int32,System.Int32,Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase)">
            <summary>
            Returns true if the specified <paramref name="cellValue"/> meets
            the criteria defined by this instance.
            </summary>
            <param name="cellValue">The cell value to compare.</param>
            <param name="rowIndex">The index of the row</param>
            <param name="columnIndex">The index of the column</param>
            <param name="cellRef">The reference for the cell.</param>
            <returns>True if the condition is met.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.FormulaConditionalFormat.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})">
            <summary>
            Assigns a new <see cref="T:Infragistics.Documents.Excel.Formula"/> to this instance.
            </summary>
            <param name="formula">The string representation of the formula.</param>
            <param name="cellReferenceMode">A <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> value which specifies whether the <paramref name="formula"/> parameter should be interpreted as an <b>A1</b> or <b>R1C1</b> expression. This parameter is optional and defaults to null, in which case the <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> property is used.</param>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion">
            <summary>
            Defines the criterion for an <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat"/> threshold.
            </summary>
            <remarks>
            <p class="body">
            This class provides the ability to override the default behavior of the
            associated <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat">condition</see> for the
            threshold defined by this instance.
            </p>
            <p class="body">
            For example, the icon displayed for cell values which fall within this threshold
            is determined by the value of the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.IconSet"/>,
            but can be overridden using the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion.Icon"/> property.
            </p>
            <p class="body">
            Similarly, the default unit for this criterion's <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.Value">value</see> is percentage,
            but this can be overridden using the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.ValueType"/>
            property. For example, to define the unit for the value as a specific number, assign
            a value of <i>Number</i> to the <i>ValueType</i> property.
            </p>
            <p class="body">
            The value for this threshold is defined by the parent condition, based on the
            total number of thresholds. For <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.IconSet"/>
            values which yield three thresholds, for example, the effective value is dependent
            on the threshold, so that each threshold represents approximately 33% of the associated
            range. This can be overridden using the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.Value"/> property; for example, setting
            the <i>ValueType</i> property to <i>Number</i> and the <i>Value</i> property to
            a specific number overrides the behavior as defined by the parent condition, and forces
            the threshold boundary to the specific numeric value.
            </p>
            <p class="body">
            For this reason, the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion.Icon"/>, <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.Value"/>, and <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ConditionValue.ValueType"/>
            properties support null values, and are in fact set to null by default; this is interpreted
            by the parent condition as "not set", resulting in the threshold criterion being determined
            solely by the parent condition.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion.Icon"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.Value"/>
            <seealso cref="T:System.ValueType"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.IconSet"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion.OwnerCollection">
            <summary>
            Returns a reference to the <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconSetCriterionCollection">collection</see> to which this instance belongs.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion.Comparison">
            <summary>
            Returns or sets a <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion.Comparison"/> value which
            determines whether a "greater than" or "greater than or equal to"
            comparison is made when comparing cell values to the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.Value">value</see>
            of this instance.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion.Icon">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.FormatConditionIcon"/> value which
            identifies the icon displayed for this threshold as defined by the
            <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.IconSet"/> and <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion.Index"/>
            properties.
            </summary>
            <remarks>
            <p class="body">
            By default, the icon displayed for this threshold is defined by the
            parent <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat">condition</see>, via the
            value of the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.IconSet"/> property.
            </p>
            <p class="body">
            This property provides a way to override the default icon as defined by
            the parent condition.
            </p>
            <p class="body">
            This property defaults to the appropriate value given the <i>IconSet</i>
            as defined by the parent condition and this instance's <i>Threshold</i>.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.FormatConditionIcon"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.IconSet"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion.IconSet">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Excel.FormatConditionIconSet"/> value which
            identifies the icon set that includes this icon (read-only).
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.FormatConditionIconSet"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.IconSet"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion.Index">
            <summary>
            Identifies the position of this instance within the associated
            <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconSetCriterionCollection"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion.IsCustom">
            <summary>
            Returns true if this <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion.IconSet"/> is from a different
            IconSet than the one returned from the parent condition's
            IconSet property or if the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion.IndexInIconSet"/> 
            is not the same as the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion.Index"/> 
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion.Index"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion.IndexInIconSet"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.IconSet">IconSetConditionalFormat.IconSet</seealso>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion.IndexInIconSet">
            <summary>
            Identifies the index of the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion.Icon"/> in the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion.IconSet"/>
            </summary>
            <value>The index of the Icon in the Inconset or -1 if the Icon property is set to <see cref="F:Infragistics.Documents.Excel.FormatConditionIcon.NoCellIcon"/></value>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconSetCriterionCollection"/>.
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterionInfo.Equals(System.Object)">
            <summary>
            Checks for equality
            </summary>
            <param name="obj">The object to compare</param>
            <returns>true is equal</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterionInfo.GetHashCode">
            <summary>
            Calculates a number suitable for hasing
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterionInfo.ToString">
            <summary>
            Returns the Index.ToString()
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat">
            <summary>
            Exposes properties which displays icons in a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>
            based on the cell's value as relative to threshold values.
            </summary>
            <remarks>
            <p class="body">
            This class provides the ability to display an icon inside a cell when that cell's
            value meets the criteria defined by the relevant <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion"/>.
            </p>
            <p class="body">
            Each icon set contains between three and five individual icons. The number of icons
            defines the number of thresholds; for example, a 3-icon set implies 3 thresholds, with
            each threshold representing approximately 33% of the associated range. A 4-icon set
            provides 4 thresholds, each representing 25% of the range; a 5-icon set contains 5
            thresholds with each representing 20% of the range.
            </p>
            <p class="body">
            Threshold ranges are pre-defined based on the number of icons in the associated set,
            although this can be customized using the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.Value">Value</see> property
            of the <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion"/> associated with that threshold.
            </p>
            <p class="body">
            By default thresholds are expressed as percentages; use the <i>Value</i>
            property to customize this to support a percentile rating or a specific value. How the
            <i>Value</i> property is interpreted is dependent on the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CriterionBase.ValueType">ValueType</see> property.
            </p>
            <p class="body">
            While the number of thresholds is always fixed at 3, 4, or 5, the icon which is displayed
            for a given threshold can be customized using the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion.Icon"/> property.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.#ctor(System.Collections.Generic.IList{Infragistics.Documents.Excel.WorksheetRegion},Infragistics.Documents.Excel.FormatConditionIconSet)">
            <summary>
            Creates a new instance, assigning the specified <see cref="T:Infragistics.Documents.Excel.FormatConditionIconSet"/>
            value to the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.IconSet"/> property.
            </summary>
            <param name="regions">The worksheet regions.</param>
            <param name="iconSet">
            A <see cref="T:Infragistics.Documents.Excel.FormatConditionIconSet"/> value which identifies the set of icons used
            to depict whether a cell value falls within a given threshold. This parameter
            is optional and defaults to <i>IconSet3TrafficLights1</i>.
            </param>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.IconCriteria">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconSetCriterionCollection">collection</see>
            which defines the criteria for this condition.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.IconSet">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.FormatConditionIconSet"/> value which identifies
            the set of icons used to express this condition.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.IsCustom">
            <summary>
            Returns true if the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion.Icon">Icon</see>
            property of one or more <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion">criterion</see>
            returns a value which is from a different icon set as the one
            returned from the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.IconSet"/> property.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.IsPercentile">
            <summary>
            This property is not used in the Excel UI, and is redundant
            because each IconCriterion's Value is of type ConditionValue,
            which provides ways to specify the unit of measure, one of which
            is percentile. In the interest of maintaining the document's
            integrity we'll round trip this but it doesn't get used.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.IsReverseOrder">
            <summary>
            Returns or sets a boolean value indicating whether the order in
            which icons appear is reversed.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.ShowValue">
            <summary>
            Returns or sets a boolean value indicating whether the cell
            value is shown along with the icon.
            </summary>
            <remarks>
            <p class="body">
            By default, the cell value is displayed along with the icon;
            use this property to prevent the cell value from appearing.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.GetIcons(Infragistics.Documents.Excel.FormatConditionIconSet,System.Boolean)">
            <summary>
            Returns an array of the <see cref="T:Infragistics.Documents.Excel.FormatConditionIcon"/> constants associated
            with the specified <see cref="T:Infragistics.Documents.Excel.FormatConditionIconSet"/> constant, optionally
            reversing their order.
            </summary>
            <param name="iconSet">A <see cref="T:Infragistics.Documents.Excel.FormatConditionIconSet"/> value.</param>
            <param name="reverse">Optional; specify true to reverse the order (see <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.IsReverseOrder"/>); defaults to false.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.MeetsCriteria(System.Object,System.Int32,System.Int32,Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase)">
            <summary>
            Returns true if the specified <paramref name="cellValue"/> meets
            the criteria defined by this instance.
            </summary>
            <param name="cellValue">The cell value to compare.</param>
            <param name="rowIndex">The index of the row</param>
            <param name="columnIndex">The index of the column</param>
            <param name="cellRef">The reference for the cell.</param>
            <returns>True if the condition is met.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.IconSetCriterionCollection">
            <summary>
            Collection class for objects of type <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion"/>.
            </summary>
            <remarks>
            <p class="body">
            This class does not expose an Add method because <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion"/>
            instances are created based on the iconset.
            </p>
            <p class="body">
            Enumerating this class causes immediate creation of all
            <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion"/> objects.
            </p>
            <p class="body">
            The <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetCriterionCollection.Count">Count</see> property
            always returns either 3, 4, or 5, depending on the value of the
            <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.IconSet"/> property.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.IconCriteria"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.IconSet"/>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat"/>
            <seealso cref="T:Infragistics.Documents.Excel.FormatConditionIconSet"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetCriterionCollection.Item(System.Int32)">
            <summary>
            Returns the <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion"/> object corresponding to the
            specified <paramref name="index"/>.
            </summary>
            <param name="index">A zero-based index.</param>
            <returns>The corresponding <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion"/> object</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetCriterionCollection.Count">
            <summary>
            Returns the number of <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion"/> objects
            contained within this collection.
            </summary>
            <remarks>
            <p class="body">
            This property returns a value of 3, 4, or 5, depending on the
            value of the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat.IconSet"/>
            property.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.FormatConditionIconSet"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.IconSetCriterionCollection.HasCustomIcon">
            <summary>
            Returns true if the Icon property of any of the criterion
            contained within the collection is from a different IconSet
            than the one returned from the parent condition's IconSet
            property.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.NegativeBarFormat">
            <summary>
            Exposes properties which control the appearance of negative-value
            <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat">data bars</see>.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.NegativeBarFormat.BarBorderColorType">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.DataBarNegativeBarColorType"/> value which specifies
            whether the same border color as that which is used for data bars with positive cell
            values is also used for data bars with negative cell values.
            </summary>
            <remarks>
            <p class="body">
            By default, databars for cells with negative values use the same color
            as those with positive values, and the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.NegativeBarFormat.BarBorderColor"/>
            property is not used.
            </p>
            <p class="body">
            Use this property to apply the color specified by the
            <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.NegativeBarFormat.BarBorderColor"/> property to the borders of databars
            with negative cell values.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.NegativeBarFormat.BarBorderColor"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.BarBorderColor"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.NegativeBarFormat.BarColorType">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.DataBarNegativeBarColorType"/> value which specifies
            whether the same color as that which is used for the positive data bars is used.
            </summary>
            <remarks>
            <p class="body">
            By default, databars for cells with negative values have a different color
            than those with positive values.
            </p>
            <p class="body">
            Use this property to apply the same color to databars regardless of whether
            the cell value is positive or negative.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.NegativeBarFormat.BarColor"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat.BarColor"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.NegativeBarFormat.BarBorderColor">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> which defines the border color
            applied to data bars with a negative value.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable when the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.NegativeBarFormat.BarBorderColorType"/> 
            property is set to <i>Color</i>.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.NegativeBarFormat.BarBorderColorType"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.NegativeBarFormat.BarBorderColorResolved">
            <summary>
            Returns the actual bar border color, accounting for the
            value of the BorderColorType property.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.NegativeBarFormat.BarColor">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> which defines the fill color
            applied to data bars with a negative value.
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable when the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.NegativeBarFormat.BarColorType"/> 
            property is set to <i>Color</i>.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.NegativeBarFormat.BarBorderColorType"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.NegativeBarFormat.BarColorResolved">
            <summary>
            Returns the actual bar fill color, accounting for the
            value of the BarColorType property.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.NegativeBarFormat.DefaultBarColor">
            <summary>
            Returns (255, 0, 0)
            </summary>
        </member>
        <member name="E:Infragistics.Documents.Excel.ConditionalFormatting.NegativeBarFormat.PropertyChanged">
            <summary>
            Occurs after a property value has changed
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.NoBlanksConditionalFormat">
            <summary>
            Exposes properties which control the visual attributes of a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>
            based on whether the cell's value is not set.
            </summary>
            <remarks>
            <p class="body">
            This condition can be used to control the visual attributes of cells
            with a non-empty value.
            </p>
            <p class="body">
            To negate this condition, use the <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.NoBlanksConditionalFormat"/> class.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.NoBlanksConditionalFormat"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.NoBlanksConditionalFormat.#ctor(System.Collections.Generic.IList{Infragistics.Documents.Excel.WorksheetRegion})">
            <summary>
            Creates a new instance.
            </summary>
            <param name="regions">The worksheet regions.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.NoBlanksConditionalFormat.MeetsCriteria(System.Object,System.Int32,System.Int32,Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase)">
            <summary>
            Returns true if the specified <paramref name="cellValue"/> meets
            the criteria defined by this instance.
            </summary>
            <param name="cellValue">The cell value to compare.</param>
            <param name="rowIndex">The index of the row</param>
            <param name="columnIndex">The index of the column</param>
            <param name="cellRef">The reference for the cell.</param>
            <returns>True if the condition is met.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.NoErrorsConditionalFormat">
            <summary>
            Exposes properties which control the visual attributes of a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>
            based on whether the cell's value is in error.
            </summary>
            <remarks>
            <p class="body">
            This condition can be used to control the visual attributes of cells
            with a value which does not constitute an error.
            </p>
            <p class="body">
            To negate this condition, use the <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ErrorsConditionalFormat"/> class.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ErrorsConditionalFormat"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.NoErrorsConditionalFormat.#ctor(System.Collections.Generic.IList{Infragistics.Documents.Excel.WorksheetRegion})">
            <summary>
            Creates a new instance.
            </summary>
            <param name="regions">The worksheet regions.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.NoErrorsConditionalFormat.MeetsCriteria(System.Object,System.Int32,System.Int32,Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase)">
            <summary>
            Returns true if the specified <paramref name="cellValue"/> meets
            the criteria defined by this instance.
            </summary>
            <param name="cellValue">The cell value to compare.</param>
            <param name="rowIndex">The index of the row</param>
            <param name="columnIndex">The index of the column</param>
            <param name="cellRef">The reference for the cell.</param>
            <returns>True if the condition is met.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat">
            <summary>
            Exposes properties which control the visual attributes of a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>
            based on whether the cell's value meets the criteria defined by a logical operator.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operator"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand1"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.#ctor(System.Collections.Generic.IList{Infragistics.Documents.Excel.WorksheetRegion},Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionOperator)">
            <summary>
            Creates a new instance with the specified <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionOperator"/>.
            </summary>
            <param name="regions">The worksheet regions.</param>
            <param name="conditionOperator">A <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionOperator"/> value which determines the manner in which the cell value is compared to the operand(s). This parameter defaults to 'Equal'.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.MeetsCriteria(System.Object,System.Int32,System.Int32,Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase)">
            <summary>
            Returns true if the specified <paramref name="cellValue"/> meets
            the criteria defined by this instance.
            </summary>
            <param name="cellValue">The cell value to compare.</param>
            <param name="rowIndex">The index of the row</param>
            <param name="columnIndex">The index of the column</param>
            <param name="cellRef">The reference for the cell.</param>
            <returns>True if the condition is met.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operator">
            <summary>
            Returns a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionOperator"/> constant which determines the
            manner in which the cell value is compared against the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand1"/>
            property.
            </summary>
            <remarks>
            <p class="body">
            This property determines how the cell value is compared to the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand1"/>
            property; for example, whether it is equal, greater than, less than, etc.
            </p>
            <p class="body">
            For the <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionOperator"/> values 'Between' and 'NotBetween',
            the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand2"/> property must also be set.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand1"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand2"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand1">
            <summary>
            Returns the <see cref="T:Infragistics.Documents.Excel.Formula">formula</see> which defines
            the criteria for the first operand of this condition.
            </summary>
            <remarks>
            <p class="body">
            This property is not directly settable; however, the following methods can be used to
            assign a formula:
            </p>
            <p class="body">
            <ul>
                <li><see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand1(System.Double)"/></li>
                <li><see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand1(System.String)"/></li>
                <li><see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand1(System.DateTime)"/></li>
                <li><see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand1Formula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})"/></li>
            </ul>
            </p>
            <p class="body">
            When the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operator"/> property is set
            to <i>Between</i> or <i>NotBetween</i>, this property defines the
            lower limit of the range for "between" comparisons.
            </p>
            <p class="body">
            Use the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand2"/> property to define the
            upper limit of the range for "between" comparisons.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand1(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand1(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand1(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand1Formula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand2"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand2">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.Formula">formula</see> for the second operand
            which defines the criteria for this condition when the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operator"/>
            property is set to <i>Between</i> or <i>NotBetween</i>
            </summary>
            <remarks>
            <p class="body">
            This property is only applicable when the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operator"/> property is set
            to <i>Between</i> or <i>NotBetween</i>.
            </p>
            <p class="body">
            Use this property to define the upper limit of the range for "between" comparisons, and the
            <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand1"/> property to define the lower limit.
            </p>
            <p class="body">
            This property is not directly settable; however, the following methods can be used to
            assign a formula:
            </p>
            <p class="body">
            <ul>
                <li><see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand2(System.Double)"/></li>
                <li><see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand2(System.String)"/></li>
                <li><see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand2(System.DateTime)"/></li>
                <li><see cref="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand2Formula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})"/></li>
            </ul>
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand2(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand2(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand2(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand2Formula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand1"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand1Formula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})">
            <summary>
            Assigns a <see cref="T:Infragistics.Documents.Excel.Formula"/> to the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand1"/> property.
            </summary>
            <param name="formula">The string representation of the <see cref="T:Infragistics.Documents.Excel.Formula"/> to be assigned to the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand1"/> property.</param>
            <param name="cellReferenceMode">A <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> value which specifies whether the <paramref name="formula"/> parameter should be interpreted as an <b>A1</b> or <b>R1C1</b> expression. This parameter is optional and defaults to null, in which case the <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> property is used.</param>
            <remarks>
            <p class="body">
            Note that the value of the <paramref name="formula"/> parameter must begin with an
            equals sign (=).
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand1"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand1(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand1(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand1(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand2Formula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand2Formula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})">
            <summary>
            Assigns a <see cref="T:Infragistics.Documents.Excel.Formula"/> to the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand2"/> property.
            </summary>
            <param name="formula">The string representation of the <see cref="T:Infragistics.Documents.Excel.Formula"/> to be assigned to the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand2"/> property.</param>
            <param name="cellReferenceMode">A <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> value which specifies whether the <paramref name="formula"/> parameter should be interpreted as an <b>A1</b> or <b>R1C1</b> expression. This parameter is optional and defaults to null, in which case the <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> property is used.</param>
            <remarks>
            <p class="body">
            Note that the value of the <paramref name="formula"/> parameter must begin with an
            equals sign (=).
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand2"/>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand1"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand2(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand2(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand2(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand1Formula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand1(System.Double)">
            <summary>
            Assigns the specified <i>System.Double</i> value to the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand1"/> property.
            </summary>
            <param name="value">The <i>System.Double</i> value to assign.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand1(System.String)">
            <summary>
            Assigns the specified <i>System.String</i> value to the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand1"/> property.
            </summary>
            <param name="value">The <i>System.String</i> value to assign.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand1(System.DateTime)">
            <summary>
            Assigns the specified <i>System.DateTime</i> value to the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand1"/> property.
            </summary>
            <param name="value">The <i>System.DateTime</i> value to assign.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand2(System.Double)">
            <summary>
            Assigns the specified <i>System.Double</i> value to the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand2"/> property.
            </summary>
            <param name="value">The <i>System.Double</i> value to assign.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand2(System.String)">
            <summary>
            Assigns the specified <i>System.String</i> value to the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand2"/> property.
            </summary>
            <param name="value">The <i>System.String</i> value to assign.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.SetOperand2(System.DateTime)">
            <summary>
            Assigns the specified <i>System.DateTime</i> value to the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.OperatorConditionalFormat.Operand2"/> property.
            </summary>
            <param name="value">The <i>System.DateTime</i> value to assign.</param>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.RankConditionalFormat">
            <summary>
            Exposes properties which control the visual attributes of a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>
            based on whether a cell's value is within the top or bottom rank of values across the
            associated range.
            </summary>
            <remarks>
            <p class="body">
            A rank condition evaluates to true if a cell value is within the range defined by
            the top or bottom <i>n</i> values across the associated range, where <i>n</i> represents
            the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.RankConditionalFormat.Rank"/>.
            </p>
            <p class="body">
            A popular example of a rank condition is "top ten ", where cell values which are within
            the range of the ten highest values across the range meet the condition. The <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.RankConditionalFormat.Rank"/>
            property, however, can be set to any arbitrary number or percentage, and is not limited to only
            the top or bottom ten values.
            </p>
            <p class="body">
            By default, this condition evaluates to true if a cell's value is at or above the specified rank;
            to change this to the bottom of the ranking, set the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.RankConditionalFormat.TopBottom"/> property to 'Bottom'.
            </p>
            <p class="body">
            The numeric criteria can be changed to a percentage using the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.RankConditionalFormat.IsPercent"/> property.
            In this case, the <i>Rank</i> property is interepreted as a percentage.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.RankConditionalFormat.#ctor(System.Collections.Generic.IList{Infragistics.Documents.Excel.WorksheetRegion},Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTopBottom,System.Int32)">
            <summary>
            Creates a new instance, initializing the value of the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.RankConditionalFormat.TopBottom"/>
            property to the specified <paramref name="topBottom"/> value.
            </summary>
            <param name="regions">The worksheet regions.</param>
            <param name="topBottom">A <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTopBottom"/> value which determines whether to compare against the highest or lowest values in the range. This parameter is optional and defaults to 'Top'.</param>
            <param name="rank">The initial value of the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.RankConditionalFormat.Rank"/> property. This parameter is optional and defaults to 10.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.RankConditionalFormat.IsPercent">
            <summary>
            Returns or sets a boolean value indicating whether the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.RankConditionalFormat.Rank"/> is determined
            by a percentage value.
            </summary>
            <remarks>
            <p class="body">
            By default, this condition evaluates cell values against the value of the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.RankConditionalFormat.Rank"/>
            property, with the rank representing an explicit numeric value. Set this property to true
            to identify the rank as a percentage.
            </p>
            <p class="body">
            If the <i>IsPercent</i> property is set to true, this property supports only values
            between 1 and 100, inclusively.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.RankConditionalFormat.Rank">
            <summary>
            Returns or sets a value which specifies either the number or percentage
            of the rank value for the associated condition.
            </summary>
            <remarks>
            <p class="body">
            The default value of this property is 10, and the default value for the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.RankConditionalFormat.TopBottom"/>
            property is 'Top', so that creating an instance of this class without specifying non-default
            property values results in a "top ten" condition.
            </p>
            <p class="body">
            The value of this property is interepreted as either a number or a percentage,
            depending on the value of the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.RankConditionalFormat.IsPercent"/> property.
            </p>
            <p class="body">
            If the <i>IsPercent</i> property is set to true, this property supports only values
            between 1 and 100, inclusively.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.RankConditionalFormat.IsPercent"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.RankConditionalFormat.TopBottom">
            <summary>
            Returns or sets a value indicating whether a cell value must fall within
            the top or bottom of the ranking across the associated range.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.RankConditionalFormat.MeetsCriteria(System.Object,System.Int32,System.Int32,Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase)">
            <summary>
            Returns true if the specified <paramref name="cellValue"/> meets
            the criteria defined by this instance.
            </summary>
            <param name="cellValue">The cell value to compare.</param>
            <param name="rowIndex">The index of the row</param>
            <param name="columnIndex">The index of the column</param>
            <param name="cellRef">The reference for the cell.</param>
            <returns>True if the condition is met.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.TextOperatorConditionalFormat">
            <summary>
            Exposes properties which control the visual attributes of a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>
            based on whether the cell's text value meets the criteria defined by a string and a
            <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTextOperator"/> value.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.TextOperatorConditionalFormat.#ctor(System.Collections.Generic.IList{Infragistics.Documents.Excel.WorksheetRegion},System.String,Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTextOperator)">
            <summary>
            Creates a new instance with the specified initial values for the 
            <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.TextOperatorConditionalFormat.Text"/> and <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.TextOperatorConditionalFormat.TextOperator"/> properties.
            </summary>
            <param name="regions">The worksheet region.</param>
            <param name="text">The initial value of the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.TextOperatorConditionalFormat.Text"/> property.</param>
            <param name="textOperator">The initial value of the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.TextOperatorConditionalFormat.TextOperator"/> property.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.TextOperatorConditionalFormat.Text">
            <summary>
            Returns or sets the string value against which cell text is compared.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.TextOperatorConditionalFormat.TextOperator">
            <summary>
            Returns or sets a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionTextOperator"/> value which
            determines the manner in which the cell text is compared to the value of the
            <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.TextOperatorConditionalFormat.Text"/> property.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.TextOperatorConditionalFormat.MeetsCriteria(System.Object,System.Int32,System.Int32,Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase)">
            <summary>
            Returns true if the specified <paramref name="cellValue"/> meets
            the criteria defined by this instance.
            </summary>
            <param name="cellValue">The cell value to compare.</param>
            <param name="rowIndex">The index of the row</param>
            <param name="columnIndex">The index of the column</param>
            <param name="cellRef">The reference for the cell.</param>
            <returns>True if the condition is met.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.ThresholdConditionBase">
            <summary>
            Base class for the <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.DataBarConditionalFormat"/>, <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat"/>,
            and <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.ColorScaleConditionalFormat"/> classes.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ThresholdConditionBase.#ctor">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ThresholdConditionBase.#ctor(System.Collections.Generic.IList{Infragistics.Documents.Excel.WorksheetRegion},Infragistics.Documents.Excel.ConditionalFormatting.FormatConditionType)">
            <summary>
            Creates a new instance.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ConditionalFormatting.ThresholdConditionBase.Formula">
            <summary>
            Returns the <see cref="T:Infragistics.Documents.Excel.Formula">formula</see> which determines the values to which
            this condition applies.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> the formula should return a boolean result. When the formula is applied to cells in the region if the formula returns false then those cells will not be included in the formatting.</para>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ThresholdConditionBase.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.ThresholdConditionBase.SetFormula(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})">
            <summary>
            Assigns a new <see cref="T:Infragistics.Documents.Excel.Formula"/> to the <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ThresholdConditionBase.Formula"/> property.
            </summary>
            <param name="formula">The string representation of the formula.</param>
            <param name="cellReferenceMode">A <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> value which specifies whether the <paramref name="formula"/> parameter should be interpreted as an <b>A1</b> or <b>R1C1</b> expression. This parameter is optional and defaults to null, in which case the <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> property is used.</param>
            <remarks>
            <para class="note"><b>Note:</b> the formula should return a boolean result. When the formula is applied to cells in the region if the formula returns false then those cells will not be included in the formatting.</para>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.ThresholdConditionBase.Formula"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.ConditionalFormatting.UniqueConditionalFormat">
            <summary>
            Exposes properties which control the visual attributes of a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>
            based on whether a cell's value is unique across the associated range.
            </summary>
            <remarks>
            <p class="body">
            This condition evaluates to true only for cell values which are unique across
            the associated range.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.DuplicateConditionalFormat"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.UniqueConditionalFormat.#ctor(System.Collections.Generic.IList{Infragistics.Documents.Excel.WorksheetRegion})">
            <summary>
            Creates a new instance.
            </summary>
            <param name="regions">The worksheet regions.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.ConditionalFormatting.UniqueConditionalFormat.MeetsCriteria(System.Object,System.Int32,System.Int32,Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase)">
            <summary>
            Returns true if the specified <paramref name="cellValue"/> meets
            the criteria defined by this instance.
            </summary>
            <param name="cellValue">The cell value to compare.</param>
            <param name="rowIndex">The index of the row</param>
            <param name="columnIndex">The index of the column</param>
            <param name="cellRef">The reference for the cell.</param>
            <returns>True if the condition is met.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.CustomView">
            <summary>
            Represents a custom view in Microsoft Excel.
            </summary>
            <remarks>
            <p class="body">
            Custom views provide a way to save display options and optionally print options for the workbook and each worksheet in the workbook.
            These options can be different from the options currently set on the workbook and worksheets.
            </p>
            <p class="body">
            Multiple custom views can be saved with a workbook, and the options from a custom view can be applied to its associated workbook by 
            calling the <see cref="M:Infragistics.Documents.Excel.CustomView.Apply"/> method on it.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CustomViews"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomView.Apply">
            <summary>
            Applies all options from the custom view to the associated workbook and its worksheets.
            </summary>
            <remarks>
            <p class="body">
            There is no state of the workbook indicating the custom view currently applied, so applying a custom view
            simply copies over all options saved with it to the workbook and its worksheet. If an applied custom view
            is then changed, those changes will not be updated on the workbook or worksheets. Instead, the custom view will need
            to be applied again for those changes to be reflected on the workbook or worksheet.
            </p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            The custom view has previously been removed from its associated workbook.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomView.GetDisplayOptions(Infragistics.Documents.Excel.Worksheet,System.Boolean)">
            <summary>
            Gets the display options associated with the specified worksheet.
            </summary>
            <remarks>
            <p class="body">
            Setting properties on the returned <see cref="T:Infragistics.Documents.Excel.DisplayOptions"/> instance will not change the actual
            display of the worksheet. After setting properties, the <see cref="M:Infragistics.Documents.Excel.CustomView.Apply"/> method of the 
            <see cref="T:Infragistics.Documents.Excel.CustomView"/> will apply them to the worksheet.
            </p>
            </remarks>
            <param name="worksheet">The worksheet whose associated display options are to be retrieved.</param>
            <param name="createIfNull">True to create the display options if it has not yet been allocated. The options will be initialized based on the current state of the Worksheet. Note the options should only have been null if there were no options for the Worksheet when the Workbook was loaded.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheet"/> is null.
            </exception>
            <returns>
            Null if the worksheet does not belong to the workbook associated with this custom view; 
            otherwise, the display options associated with the worksheet.
            </returns>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DisplayOptions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomView.GetSheetDisplayOptions(Infragistics.Documents.Excel.Sheet,System.Boolean)">
            <summary>
            Gets the display options associated with the specified sheet.
            </summary>
            <remarks>
            <p class="body">
            Setting properties on the returned <see cref="T:Infragistics.Documents.Excel.DisplayOptionsBase"/> instance will not change the actual
            display of the sheet. After setting properties, the <see cref="M:Infragistics.Documents.Excel.CustomView.Apply"/> method of the 
            <see cref="T:Infragistics.Documents.Excel.CustomView"/> will apply them to the sheet.
            </p>
            </remarks>
            <param name="sheet">The sheet whose associated display options are to be retrieved.</param>
            <param name="createIfNull">True to create the display options if it has not yet been allocated. The options will be initialized based on the current state of the Sheet. Note the options should only have been null if there were no options for the Sheet when the Workbook was loaded.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sheet"/> is null.
            </exception>
            <returns>
            Null if the sheet does not belong to the workbook associated with this custom view; 
            otherwise, the display options associated with the worksheet.
            </returns>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DisplayOptions"/>
            <seealso cref="P:Infragistics.Documents.Excel.Chartsheet.DisplayOptions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomView.GetHiddenColumns(Infragistics.Documents.Excel.Worksheet,System.Boolean)">
            <summary>
            Gets the hidden columns associated with the specified worksheet.
            </summary>
            <remarks>
            <p class="body">
            Adding columns on the returned <see cref="T:Infragistics.Documents.Excel.HiddenColumnCollection"/> instance will not actually hide 
            columns in the worksheet. After modifying the hidden columns in this collection, the <see cref="M:Infragistics.Documents.Excel.CustomView.Apply"/> 
            method of the <see cref="T:Infragistics.Documents.Excel.CustomView"/> will hide or unhide the columns.
            </p>
            </remarks>
            <param name="worksheet">The worksheet whose associated hidden columns are to be retrieved.</param>
            <param name="createIfNull">True to create the hidden column if it has not yet been allocated of the Worksheet. The options will be initialized based on the current state. Note the options should only have been null if there were no options for the Worksheet when the Workbook was loaded. Also this will not allocate the collection unless the <see cref="P:Infragistics.Documents.Excel.CustomView.SaveHiddenRowsAndColumns"/> is true.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheet"/> is null.
            </exception>
            <returns>
            Null if <see cref="P:Infragistics.Documents.Excel.CustomView.SaveHiddenRowsAndColumns"/> is False or if the worksheet does not belong to the workbook 
            associated with this custom view; otherwise, the collection of hidden columns associated with the worksheet.
            </returns>
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.Hidden"/>
            <seealso cref="P:Infragistics.Documents.Excel.CustomView.SaveHiddenRowsAndColumns"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomView.GetHiddenRows(Infragistics.Documents.Excel.Worksheet,System.Boolean)">
            <summary>
            Gets the hidden rows associated with the specified worksheet.
            </summary>
            <remarks>
            <p class="body">
            Adding rows on the returned <see cref="T:Infragistics.Documents.Excel.HiddenRowCollection"/> instance will not actually hide 
            rows in the worksheet. After modifying the hidden rows in this collection, the <see cref="M:Infragistics.Documents.Excel.CustomView.Apply"/> 
            method of the <see cref="T:Infragistics.Documents.Excel.CustomView"/> will hide or unhide the rows.
            </p>
            </remarks>
            <param name="worksheet">The worksheet whose associated hidden rows are to be retrieved.</param>
            <param name="createIfNull">True to create the hidden column if it has not yet been allocated. The options will be initialized based on the current state of the Worksheet. Note the options should only have been null if there were no options for the Worksheet when the Workbook was loaded. Also this will not allocate the collection unless the <see cref="P:Infragistics.Documents.Excel.CustomView.SaveHiddenRowsAndColumns"/> is true.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheet"/> is null.
            </exception>
            <returns>
            Null if <see cref="P:Infragistics.Documents.Excel.CustomView.SaveHiddenRowsAndColumns"/> is False or if the worksheet does not belong to the workbook 
            associated with this custom view; otherwise, the collection of hidden rows associated with the worksheet.
            </returns>
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.Hidden"/>
            <seealso cref="P:Infragistics.Documents.Excel.CustomView.SaveHiddenRowsAndColumns"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomView.GetPrintOptions(Infragistics.Documents.Excel.Worksheet,System.Boolean)">
            <summary>
            Gets the print options associated with the specified worksheet.
            </summary>
            <remarks>
            <p class="body">
            Setting properties on the returned <see cref="T:Infragistics.Documents.Excel.PrintOptions"/> instance will not change the actual
            print settings of the worksheet. After setting properties, the <see cref="M:Infragistics.Documents.Excel.CustomView.Apply"/> method of the 
            <see cref="T:Infragistics.Documents.Excel.CustomView"/> will apply them to the worksheet.
            </p>
            </remarks>
            <param name="worksheet">The worksheet whose associated print options are to be retrieved.</param>
            <param name="createIfNull">True to create the print options if it has not yet been allocated. The options will be initialized based on the current state of the Worksheet. Note the options should only have been null if there were no options for the Worksheet when the Workbook was loaded. Also this will not allocate the collection unless the <see cref="P:Infragistics.Documents.Excel.CustomView.SavePrintOptions"/> is true.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheet"/> is null.
            </exception>
            <returns>
            Null if <see cref="P:Infragistics.Documents.Excel.CustomView.SavePrintOptions"/> is False or if the worksheet does not belong to the workbook associated
            with this custom view; otherwise, the print options associated with the worksheet.
            </returns>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.PrintOptions"/>
            <seealso cref="P:Infragistics.Documents.Excel.CustomView.SavePrintOptions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomView.GetSheetPrintOptions(Infragistics.Documents.Excel.Sheet,System.Boolean)">
            <summary>
            Gets the print options associated with the specified sheet.
            </summary>
            <remarks>
            <p class="body">
            Setting properties on the returned <see cref="T:Infragistics.Documents.Excel.PrintOptionsBase"/> instance will not change the actual
            print settings of the sheet. After setting properties, the <see cref="M:Infragistics.Documents.Excel.CustomView.Apply"/> method of the 
            <see cref="T:Infragistics.Documents.Excel.CustomView"/> will apply them to the sheet.
            </p>
            </remarks>
            <param name="sheet">The sheet whose associated print options are to be retrieved.</param>
            <param name="createIfNull">True to create the print options if it has not yet been allocated. The options will be initialized based on the current state of the Sheet. Note the options should only have been null if there were no options for the Sheet when the Workbook was loaded. Also this will not allocate the collection unless the <see cref="P:Infragistics.Documents.Excel.CustomView.SavePrintOptions"/> is true.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sheet"/> is null.
            </exception>
            <returns>
            Null if <see cref="P:Infragistics.Documents.Excel.CustomView.SavePrintOptions"/> is False or if the sheet does not belong to the workbook associated
            with this custom view; otherwise, the print options associated with the sheet.
            </returns>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.PrintOptions"/>
            <seealso cref="P:Infragistics.Documents.Excel.Chartsheet.PrintOptions"/>
            <seealso cref="P:Infragistics.Documents.Excel.CustomView.SavePrintOptions"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomView.Name">
            <summary>
            Gets or sets the name of the custom view.
            </summary>
            <remarks>
            <p class="body">
            The name of the custom view is displayed in the custom views dialog of Microsoft Excel and must be 
            case-insensitively unique to other custom views in the workbook.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            The value assigned is a null or empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value assigned is the name of another custom view in this custom view's associated workbook (custom view 
            names are compared case-insensitively).
            </exception>
            <value>The name of the custom view.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomView.SaveHiddenRowsAndColumns">
            <summary>
            Gets the value indicating whether hidden row and column settings are saved with the custom view.
            </summary>
            <remarks>
            <p class="body">
            If the value is False, the return value of <see cref="M:Infragistics.Documents.Excel.CustomView.GetHiddenColumns(Infragistics.Documents.Excel.Worksheet,System.Boolean)"/> and <see cref="M:Infragistics.Documents.Excel.CustomView.GetHiddenRows(Infragistics.Documents.Excel.Worksheet,System.Boolean)"/>
            will always be null, regardless of the worksheet specified.
            </p>
            </remarks>
            <value>The value indicating whether hidden row and column settings are saved with the custom view.</value>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetHiddenColumns(Infragistics.Documents.Excel.Worksheet,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetHiddenRows(Infragistics.Documents.Excel.Worksheet,System.Boolean)"/>
            <seealso cref="T:Infragistics.Documents.Excel.HiddenColumnCollection"/>
            <seealso cref="T:Infragistics.Documents.Excel.HiddenRowCollection"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomView.SavePrintOptions">
            <summary>
            Gets the value indicating whether print options are saved with the custom view.
            </summary>
            <remarks>
            <p class="body">
            If the value is False, the return value of <see cref="M:Infragistics.Documents.Excel.CustomView.GetPrintOptions(Infragistics.Documents.Excel.Worksheet,System.Boolean)"/> will always be null, 
            regardless of the worksheet specified.
            </p>
            </remarks>
            <value>The value indicating whether print options are saved with the custom view.</value>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetPrintOptions(Infragistics.Documents.Excel.Worksheet,System.Boolean)"/>
            <seealso cref="T:Infragistics.Documents.Excel.PrintOptions"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomView.WindowOptions">
            <summary>
            Gets the window options for the workbook associated with the custom view.
            </summary>
            <remarks>
            <p class="body">
            Setting properties on the returned <see cref="P:Infragistics.Documents.Excel.CustomView.WindowOptions"/> instance will not change the actual
            window options of the associated workbook. After setting properties, the <see cref="M:Infragistics.Documents.Excel.CustomView.Apply"/> method 
            of the <see cref="T:Infragistics.Documents.Excel.CustomView"/> will apply them to the workbook.
            </p>
            </remarks>
            <value>The window options for the workbook associated with the custom view..</value>
            <seealso cref="T:Workbook.WindowOptions"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.CustomViewDisplayOptions">
            <summary>
            Class which exposes the worksheet display options which can only be controlled through the custom view.
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetDisplayOptions(Infragistics.Documents.Excel.Worksheet,System.Boolean)"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetDisplayOptions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomViewDisplayOptions.ResetCore">
            <summary>
            Resets the display options to their default settings.
            </summary>
            <remarks>
            <p class="body">
            The defaults used for each setting are the same defaults with which Microsoft Excel creates a blank worksheet.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomViewDisplayOptions.MagnificationInCurrentView">
            <summary>
            Gets or sets the magnification level of the worksheet in the current <see cref="P:Infragistics.Documents.Excel.DisplayOptions.View"/>.
            </summary>
            <remarks>
            <p class="body">
            Magnifications are stored as percentages of the normal viewing magnification. A value of 100 indicates normal magnification
            whereas a value of 200 indicates a zoom that is twice the normal viewing magnification.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value is outside the valid range of magnification levels for a worksheet. The level must be between 10 and 400.
            </exception>
            <value>The magnification level of the worksheet in the current View.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInNormalView"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInPageBreakView"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInPageLayoutView"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.CustomViewCollection">
            <summary>
            A collection of <see cref="T:Infragistics.Documents.Excel.CustomView"/> instances in a workbook.
            </summary>
            <see cref="P:Infragistics.Documents.Excel.Workbook.CustomViews"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomViewCollection.Add(System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds a new custom view to the collection.
            </summary>
            <param name="name">The name to give the newly created custom view.</param>
            <param name="savePrintOptions">
            True to save print options for each worksheet with the custom view; False otherwise.
            </param>
            <param name="saveHiddenRowsAndColumns">
            True to save information about hidden rows and columns for each worksheet with the custom view; False otherwise.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name"/> is a null or empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name"/> is the name of another custom view in the collection (custom view names are compared 
            case-insensitively).
            </exception>
            <returns>The newly created <see cref="T:Infragistics.Documents.Excel.CustomView"/> instance.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomViewCollection.Clear">
            <summary>
            Clears all custom views from the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomViewCollection.Contains(Infragistics.Documents.Excel.CustomView)">
            <summary>
            Determines whether a custom view is in this collection.
            </summary>
            <param name="customView">The custom view to locate in the collection.</param>
            <returns>True if the custom view is found; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomViewCollection.Remove(Infragistics.Documents.Excel.CustomView)">
            <summary>
            Removes the specified custom view from the collection.
            </summary>
            <param name="customView">The custom view to remove from the collection.</param>
            <returns>
            True if the custom view was successfully removed; False if the custom view was not 
            in the collection.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomViewCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the custom view at the specified index from the collection.
            </summary>
            <param name="index">The zero-based index of the custom view in the collection.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or <paramref name="index"/> is greater than or 
            equal to <see cref="P:Infragistics.Documents.Excel.CustomViewCollection.Count"/>.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomViewCollection.Count">
            <summary>
            Gets the number of custom views in the collection.
            </summary>
            <value>The number of custom views in the collection.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomViewCollection.Item(System.Int32)">
            <summary>
            Gets the custom view at the specified index.
            </summary>
            <param name="index">The zero-based index of the custom view to get.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or <paramref name="index"/> is greater than or 
            equal to <see cref="P:Infragistics.Documents.Excel.CustomViewCollection.Count"/>.
            </exception>
            <value>The custom view at the specified index.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.CustomViewWindowOptions">
            <summary>
            Represents the workbook window options which are saved with custom views.
            </summary>
            <remarks>
            <p class="body">
            The properties explicitly defined on this class and not inherited from the base class, 
            <see cref="T:Infragistics.Documents.Excel.WindowOptions"/>, are options that can be saved with a custom view, but 
            not with a workbook. Therefore, these properties will not be applied when the 
            <see cref="M:Infragistics.Documents.Excel.CustomView.Apply"/> method is called.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.CustomView.WindowOptions"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorkbookWindowOptions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomViewWindowOptions.Reset">
            <summary>
            Resets the window options to their default settings.
            </summary>
            <remarks>
            <p class="body">
            The defaults used for each setting are the same defaults with which Microsoft Excel creates a blank workbook.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomViewWindowOptions.BoundsInPixels">
            <summary>
            Gets or sets the pixel bounds of the workbook's MDI child window when <see cref="T:Infragistics.Documents.Excel.CustomView"/> 
            owning these window options is applied.
            </summary>
            <remarks>
            <p class="note">
            <b>Note:</b> This property will have no affect on the workbook if <see cref="P:Infragistics.Documents.Excel.CustomViewWindowOptions.Maximized"/> is True. However, in this case,
            the value of this property will still be saved with the workbook.
            </p>
            <p class="note">
            <b>Note:</b> This setting cannot be saved with a <see cref="T:Infragistics.Documents.Excel.Workbook"/> in the Excel file. It can only be saved
            with a CustomView. Therefore, there is no corresponding property in <see cref="T:Infragistics.Documents.Excel.WorkbookWindowOptions"/> and
            calling <see cref="T:CustomView.Apply"/> on the associated CustomView will not apply this property. Only by 
            applying the custom view through the Microsoft Excel user interface will the setting on this property be applied.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            The left or top of the value assigned is outside the bounds of -32768 and 32767.
            </exception>
            <exception cref="T:System.ArgumentException">
            The width or height of the value assigned is outside the bounds of 0 and 65535.
            </exception>
            <value>
            The pixel bounds of the workbook's MDI child window when CustomView owning these 
            window options is applied.
            </value>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.Apply"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomViewWindowOptions.Maximized">
            <summary>
            Gets or sets the value indicating whether the workbook's MDI child window will be maximized
            when the <see cref="T:Infragistics.Documents.Excel.CustomView"/> owning these window options is applied.
            </summary>
            <remarks>
            <p class="note">
            <b>Note:</b> This setting cannot be saved with a <see cref="T:Infragistics.Documents.Excel.Workbook"/> in the Excel file. It can only be saved
            with a CustomView. Therefore, there is no corresponding property in <see cref="T:Infragistics.Documents.Excel.WorkbookWindowOptions"/> and
            calling <see cref="T:CustomView.Apply"/> on the associated CustomView will not apply this property. Only by 
            applying the custom view through the Microsoft Excel user interface will the setting on this property be applied.
            </p>
            </remarks>
            <value>
            The value indicating whether the workbook's MDI child window will be maximized when the CustomView owning these 
            window options is applied.
            </value>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.Apply"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookWindowOptions.Minimized"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomViewWindowOptions.ShowFormulaBar">
            <summary>
            Gets or sets the value indicating whether Microsoft Excel will display the formula bar when
            the <see cref="T:Infragistics.Documents.Excel.CustomView"/> owning these window options is applied.
            </summary>
            <remarks>
            <p class="note">
            <b>Note:</b> This setting cannot be saved with a <see cref="T:Infragistics.Documents.Excel.Workbook"/> in the Excel file. It can only be saved
            with a CustomView. Therefore, there is no corresponding property in <see cref="T:Infragistics.Documents.Excel.WorkbookWindowOptions"/> and
            calling <see cref="M:Infragistics.Documents.Excel.CustomView.Apply"/> on the associated CustomView will not apply this property. Only by 
            applying the custom view through the Microsoft Excel user interface will the setting on this property be applied.
            </p>
            </remarks>
            <value>
            The value indicating whether Microsoft Excel will display the formula bar when the CustomView owning these window 
            options is applied.
            </value>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.Apply"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomViewWindowOptions.ShowStatusBar">
            <summary>
            Gets or sets the value indicating whether Microsoft Excel will display the status bar when
            the <see cref="T:Infragistics.Documents.Excel.CustomView"/> owning these window options is applied.
            </summary>
            <remarks>
            <p class="note">
            <b>Note:</b> This setting cannot be saved with a <see cref="T:Infragistics.Documents.Excel.Workbook"/> in the Excel file. It can only be saved
            with a CustomView. Therefore, there is no corresponding property in <see cref="T:Infragistics.Documents.Excel.WorkbookWindowOptions"/> and
            calling <see cref="T:CustomView.Apply"/> on the associated CustomView will not apply this property. Only by 
            applying the custom view through the Microsoft Excel user interface will the setting on this property be applied.
            </p>
            </remarks>
            <value>
            The value indicating whether Microsoft Excel will display the status bar when the CustomView owning these window 
            options is applied.
            </value>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.Apply"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.AnyValueDataValidationRule">
            <summary>
            Represents a data validation rule which allows any value to be set on the target cells.
            This would be used to provide an input message to the user when the cell was selected.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DataValidationRules"/>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.AnyValueDataValidationRule,Infragistics.Documents.Excel.WorksheetCell)"/>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.AnyValueDataValidationRule,Infragistics.Documents.Excel.WorksheetRegion)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.AnyValueDataValidationRule.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.AnyValueDataValidationRule"/> instance.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CustomDataValidationRule">
            <summary>
            Represents a data validation rule which allows any formula to be used to validate the value applied to a cell.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DataValidationRules"/>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.CustomDataValidationRule,Infragistics.Documents.Excel.WorksheetCell)"/>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.CustomDataValidationRule,Infragistics.Documents.Excel.WorksheetRegion)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomDataValidationRule.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.CustomDataValidationRule"/> instance.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomDataValidationRule.IsEquivalentTo(Infragistics.Documents.Excel.DataValidationRule)">
            <summary>
            Indicates if this rule is structurally equivalent to another.
            </summary>
            <param name="other">The rule to compare against</param>
            <returns>Returns true if the specified <paramref name="other"/> has the same settings as this rule.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomDataValidationRule.GetFormula(System.String)">
            <summary>
            Gets the formula used to validate the value applied to a cell.
            </summary>
            <param name="address">
            The address of the cell or region that serves as the basis for relative references, or null to use the top-left cell of 
            the worksheet.
            </param>
            <remarks>
            <p class="body">
            The formula will indicate the value is invalid by evaluating to False, 0, any <see cref="T:Infragistics.Documents.Excel.ErrorValue"/> (such as #VALUE!), 
            or any string other than "True" (case-insensitive). 
            True, "True" (case-insensitive), null, and non-zero numeric values will indicate a valid value has been applied.
            </p>
            <p class="body">
            The address passed in is only needed if relative addresses are used in the the formula. For example, consider the formula 
            applied is =B1, and the data validation rule is applied to the region A1:A5. If you get the formula for A1, the formula
            =B1 will be returned. If you get the formula for A2, =B2 will be returned. Similarly, for cell A5, =B5 will be returned.
            However, if the formula contains no references or all absolute references, the <paramref name="address"/> is ignored. So
            in the previous example, if the original formula was =$B$1, the same formula will be returned regardless of the specified 
            address.
            </p>
            <p class="body">
            <paramref name="address"/> can be any valid cell or region reference on a worksheet. If a region address is specified, the
            top-left cell or the region is used. The cell or region specified does not need to have the data validation rule applied to it. 
            Any reference is allowed.
            </p>
            <p class="body">
            The cell reference mode with which to parse <paramref name="address"/> will be assumed to be A1, unless the data validation 
            rule is applied to a worksheet which is in a workbook, in which case the <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> will be used.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="address"/> is not a valid cell or regions address.
            </exception>
            <returns>A formula used to validate the value applied to a cell.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.CustomDataValidationRule.GetFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.CustomDataValidationRule.SetFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.CustomDataValidationRule.SetFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomDataValidationRule.GetFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>
            Gets the formula used to validate the value applied to a cell.
            </summary>
            <param name="address">
            The address of the cell or region that serves as the basis for relative references, or null to use the top-left cell of 
            the worksheet.
            </param>
            <param name="format">The workbook format with which to parse <paramref name="address"/>.</param>
            <param name="cellReferenceMode">The cell reference mode with which to parse <paramref name="address"/>.</param>
            <param name="culture">The culture to use when generating the formula string.</param>
            <remarks>
            <p class="body">
            The formula will indicate the value is invalid by evaluating to False, 0, any <see cref="T:Infragistics.Documents.Excel.ErrorValue"/> (such as #VALUE!), 
            or any string other than "True" (case-insensitive). 
            True, "True" (case-insensitive), null, and non-zero numeric values will indicate a valid value has been applied.
            </p>
            <p class="body">
            The address passed in is only needed if relative addresses are used in the the formula. For example, consider the formula 
            applied is =B1, and the data validation rule is applied to the region A1:A5. If you get the formula for A1, the formula
            =B1 will be returned. If you get the formula for A2, =B2 will be returned. Similarly, for cell A5, =B5 will be returned.
            However, if the formula contains no references or all absolute references, the <paramref name="address"/> is ignored. So
            in the previous example, if the original formula was =$B$1, the same formula will be returned regardless of the specified 
            address.
            </p>
            <p class="body">
            <paramref name="address"/> can be any valid cell or region reference on a worksheet. If a region address is specified, the
            top-left cell or the region is used. The cell or region specified does not need to have the data validation rule applied to it. 
            Any reference is allowed.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="address"/> is not a valid cell or regions address.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when <paramref name="format"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookFormat"/> enumeration.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <returns>A formula used to validate the value applied to a cell.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.CustomDataValidationRule.GetFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.CustomDataValidationRule.SetFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.CustomDataValidationRule.SetFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomDataValidationRule.SetFormula(System.String,System.String)">
            <summary>
            Sets the formula used to validate the value applied to a cell.
            </summary>
            <param name="formula">The validation formula to use for the rule.</param>
            <param name="address">
            The address of the cell or region that serves as the basis for relative references, or null to use the top-left cell of 
            the worksheet.
            </param>
            <remarks>
            <p class="body">
            The formula will indicate the value is invalid by evaluating to False, 0, any <see cref="T:Infragistics.Documents.Excel.ErrorValue"/> (such as #VALUE!), 
            or any string other than "True" (case-insensitive). 
            True, "True" (case-insensitive), null, and non-zero numeric values will indicate a valid value has been applied.
            </p>
            <p class="body">
            The address passed in is only needed if relative addresses are used in the the formula. When the data validation rule is 
            applied to cells or regions, the references in the formula used by each individual cell will be shifted by the offset of
            the cell to the passed in <paramref name="address"/>. For example, consider the formula specified is =B1 and the specified 
            address is A1. If the data validation rule is then applied to the A5 cell, the formula is will use is =B5. However, if the
            references in the formula are absolute, such as =$B$1, the same formula will be applied regardless of the specified address.
            </p>
            <p class="body">
            <paramref name="address"/> can be any valid cell or region reference on a worksheet. If a region address is specified, the
            top-left cell or the region is used. The cell or region specified does not need to have the data validation rule applied to it. 
            Any reference is allowed.
            </p>
            <p class="body">
            The cell reference mode with which to parse <paramref name="address"/> will be assumed to be A1, unless the data validation 
            rule is applied to a worksheet which is in a workbook, in which case the <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> will be used.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="formula"/> is null and the rule is currently applied to a <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            Occurs when <paramref name="formula"/> is not a valid formula.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="address"/> is not a valid cell or regions address.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.CustomDataValidationRule.GetFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.CustomDataValidationRule.GetFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.CustomDataValidationRule.SetFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomDataValidationRule.SetFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>
            Sets the formula used to validate the value applied to a cell.
            </summary>
            <param name="formula">The validation formula to use for the rule.</param>
            <param name="address">
            The address of the cell or region that serves as the basis for relative references, or null to use the top-left cell of 
            the worksheet.
            </param>
            <param name="format">The workbook format with which to parse <paramref name="address"/>.</param>
            <param name="cellReferenceMode">The cell reference mode with which to parse <paramref name="address"/>.</param>
            <param name="culture">The culture to use when parsing the formula string.</param>
            <remarks>
            <p class="body">
            The formula will indicate the value is invalid by evaluating to False, 0, any <see cref="T:Infragistics.Documents.Excel.ErrorValue"/> (such as #VALUE!), 
            or any string other than "True" (case-insensitive). 
            True, "True" (case-insensitive), null, and non-zero numeric values will indicate a valid value has been applied.
            </p>
            <p class="body">
            The address passed in is only needed if relative addresses are used in the the formula. When the data validation rule is 
            applied to cells or regions, the references in the formula used by each individual cell will be shifted by the offset of
            the cell to the passed in <paramref name="address"/>. For example, consider the formula specified is =B1 and the specified 
            address is A1. If the data validation rule is then applied to the A5 cell, the formula is will use is =B5. However, if the
            references in the formula are absolute, such as =$B$1, the same formula will be applied regardless of the specified address.
            </p>
            <p class="body">
            <paramref name="address"/> can be any valid cell or region reference on a worksheet. If a region address is specified, the
            top-left cell or the region is used. The cell or region specified does not need to have the data validation rule applied to it. 
            Any reference is allowed.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="formula"/> is null and the rule is currently applied to a <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            Occurs when <paramref name="formula"/> is not a valid formula.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="address"/> is not a valid cell or regions address.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when <paramref name="format"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookFormat"/> enumeration.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.CustomDataValidationRule.GetFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.CustomDataValidationRule.GetFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.CustomDataValidationRule.SetFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.DataValidationRuleCollection">
            <summary>
            A collection of <see cref="T:Infragistics.Documents.Excel.DataValidationRule"/> instances in a worksheet.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DataValidationRules"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection)">
            <summary>
            Applies a data validation rule to the a set of references.
            </summary>
            <param name="rule">The data validation rule to apply to the set of references.</param>
            <param name="references">The reference to which the data validation rule should be applied.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="rule"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="references"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="references"/> are from a worksheet other than this collection.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="rule"/> already applied to another worksheet.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="rule"/> is invalid based on its rule type's requirements.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the one or more of the cells in the <paramref name="references"/> collection are in the totals row of a table.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection,System.Boolean)">
            <summary>
            Applies a data validation rule to the a set of references.
            </summary>
            <param name="rule">The data validation rule to apply to the set of references.</param>
            <param name="references">The reference to which the data validation rule should be applied.</param>
            <param name="overwriteExistingRules">
            Indicates whether cells in the references collection which already have data validation rules should have the rules overwritten.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="rule"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="references"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="references"/> are from a worksheet other than this collection.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="rule"/> already applied to another worksheet.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="rule"/> is invalid based on its rule type's requirements.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="overwriteExistingRules"/> is False and the one or more of the cells in the <paramref name="references"/> 
            collection already have a data validation rule applied to it.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the one or more of the cells in the <paramref name="references"/> collection are in the totals row of a table.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.AnyValueDataValidationRule,Infragistics.Documents.Excel.WorksheetCell)">
            <summary>
            Applies an <see cref="T:Infragistics.Documents.Excel.AnyValueDataValidationRule"/> to a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>.
            </summary>
            <param name="rule">The data validation rule to apply to the cell.</param>
            <param name="cell">The cell to which the data validation rule should be applied.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="rule"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="cell"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="cell"/> is from a worksheet other than this collection.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="rule"/> already applied to another worksheet.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="rule"/> is invalid based on its rule type's requirements.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="cell"/> already has a data validation rule applied to it.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="cell"/> is a total cell of a table.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.AnyValueDataValidationRule,Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>
            Applies an <see cref="T:Infragistics.Documents.Excel.AnyValueDataValidationRule"/> to the cells in a <see cref="T:Infragistics.Documents.Excel.WorksheetRegion"/>.
            </summary>
            <param name="rule">The data validation rule to apply to the region.</param>
            <param name="region">The region to which the data validation rule should be applied.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="rule"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="region"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="region"/> is from a worksheet other than this collection.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="rule"/> already applied to another worksheet.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="rule"/> is invalid based on its rule type's requirements.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the one or more of the cells in the <paramref name="region"/> already have a data validation rule applied to it.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the one or more of the cells in the <paramref name="region"/> is a total cell of a table.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.CustomDataValidationRule,Infragistics.Documents.Excel.WorksheetCell)">
            <summary>
            Applies an <see cref="T:Infragistics.Documents.Excel.CustomDataValidationRule"/> to a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>.
            </summary>
            <param name="rule">The data validation rule to apply to the cell.</param>
            <param name="cell">The cell to which the data validation rule should be applied.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="rule"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="cell"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="cell"/> is from a worksheet other than this collection.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="rule"/> already applied to another worksheet.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="rule"/> is invalid based on its rule type's requirements.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="cell"/> already has a data validation rule applied to it.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="cell"/> is a total cell of a table.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.CustomDataValidationRule,Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>
            Applies an <see cref="T:Infragistics.Documents.Excel.CustomDataValidationRule"/> to the cells in a <see cref="T:Infragistics.Documents.Excel.WorksheetRegion"/>.
            </summary>
            <param name="rule">The data validation rule to apply to the region.</param>
            <param name="region">The region to which the data validation rule should be applied.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="rule"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="region"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="region"/> is from a worksheet other than this collection.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="rule"/> already applied to another worksheet.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="rule"/> is invalid based on its rule type's requirements.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the one or more of the cells in the <paramref name="region"/> already have a data validation rule applied to it.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the one or more of the cells in the <paramref name="region"/> is a total cell of a table.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.ListDataValidationRule,Infragistics.Documents.Excel.WorksheetCell)">
            <summary>
            Applies an <see cref="T:Infragistics.Documents.Excel.ListDataValidationRule"/> to a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>.
            </summary>
            <param name="rule">The data validation rule to apply to the cell.</param>
            <param name="cell">The cell to which the data validation rule should be applied.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="rule"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="cell"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="cell"/> is from a worksheet other than this collection.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="rule"/> already applied to another worksheet.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="rule"/> is invalid based on its rule type's requirements.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="cell"/> already has a data validation rule applied to it.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="cell"/> is a total cell of a table.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.ListDataValidationRule,Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>
            Applies an <see cref="T:Infragistics.Documents.Excel.ListDataValidationRule"/> to the cells in a <see cref="T:Infragistics.Documents.Excel.WorksheetRegion"/>.
            </summary>
            <param name="rule">The data validation rule to apply to the region.</param>
            <param name="region">The region to which the data validation rule should be applied.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="rule"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="region"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="region"/> is from a worksheet other than this collection.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="rule"/> already applied to another worksheet.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="rule"/> is invalid based on its rule type's requirements.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the one or more of the cells in the <paramref name="region"/> already have a data validation rule applied to it.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the one or more of the cells in the <paramref name="region"/> is a total cell of a table.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.OneConstraintDataValidationRule,Infragistics.Documents.Excel.WorksheetCell)">
            <summary>
            Applies an <see cref="T:Infragistics.Documents.Excel.OneConstraintDataValidationRule"/> to a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>.
            </summary>
            <param name="rule">The data validation rule to apply to the cell.</param>
            <param name="cell">The cell to which the data validation rule should be applied.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="rule"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="cell"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="cell"/> is from a worksheet other than this collection.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="rule"/> already applied to another worksheet.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="rule"/> is invalid based on its rule type's requirements.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="cell"/> already has a data validation rule applied to it.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="cell"/> is a total cell of a table.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.OneConstraintDataValidationRule,Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>
            Applies an <see cref="T:Infragistics.Documents.Excel.OneConstraintDataValidationRule"/> to the cells in a <see cref="T:Infragistics.Documents.Excel.WorksheetRegion"/>.
            </summary>
            <param name="rule">The data validation rule to apply to the region.</param>
            <param name="region">The region to which the data validation rule should be applied.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="rule"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="region"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="region"/> is from a worksheet other than this collection.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="rule"/> already applied to another worksheet.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="rule"/> is invalid based on its rule type's requirements.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the one or more of the cells in the <paramref name="region"/> already have a data validation rule applied to it.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the one or more of the cells in the <paramref name="region"/> is a total cell of a table.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.TwoConstraintDataValidationRule,Infragistics.Documents.Excel.WorksheetCell)">
            <summary>
            Applies an <see cref="T:Infragistics.Documents.Excel.TwoConstraintDataValidationRule"/> to a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>.
            </summary>
            <param name="rule">The data validation rule to apply to the cell.</param>
            <param name="cell">The cell to which the data validation rule should be applied.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="rule"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="cell"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="cell"/> is from a worksheet other than this collection.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="rule"/> already applied to another worksheet.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="rule"/> is invalid based on its rule type's requirements.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="cell"/> already has a data validation rule applied to it.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="cell"/> is a total cell of a table.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.TwoConstraintDataValidationRule,Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>
            Applies an <see cref="T:Infragistics.Documents.Excel.TwoConstraintDataValidationRule"/> to the cells in a <see cref="T:Infragistics.Documents.Excel.WorksheetRegion"/>.
            </summary>
            <param name="rule">The data validation rule to apply to the region.</param>
            <param name="region">The region to which the data validation rule should be applied.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="rule"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="region"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="region"/> is from a worksheet other than this collection.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="rule"/> already applied to another worksheet.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="rule"/> is invalid based on its rule type's requirements.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the one or more of the cells in the <paramref name="region"/> already have a data validation rule applied to it.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the one or more of the cells in the <paramref name="region"/> is a total cell of a table.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Clear">
            <summary>
            Removes all data validation rules from the <see cref="P:Infragistics.Documents.Excel.DataValidationRuleCollection.Worksheet"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Contains(Infragistics.Documents.Excel.DataValidationRule)">
            <summary>
            Determines whether the specified data validation rule exists on the <see cref="P:Infragistics.Documents.Excel.DataValidationRuleCollection.Worksheet"/>.
            </summary>
            <param name="rule">The rule to test.</param>
            <returns>True if the rule is applied to one or more cells on the Worksheet; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Contains(Infragistics.Documents.Excel.WorksheetCell)">
            <summary>
            Determines whether the specified cell has a data validation rule applied to it.
            </summary>
            <param name="cell">The cell to test.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="cell"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="cell"/> is from a worksheet other than this collection.
            </exception>
            <returns>
            True if the cell has a data validation rule applied; False otherwise.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Contains(Infragistics.Documents.Excel.WorksheetReferenceCollection)">
            <summary>
            Determines whether the specified references collection has a data validation rule applied to any of it's cells.
            </summary>
            <param name="references">The references collection to test.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="references"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="references"/> are from a worksheet other than this collection.
            </exception>
            <returns>
            True if the any cell from the references collection has a data validation rule applied; False otherwise.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Contains(Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>
            Determines whether the specified region has a data validation rule applied to any of it's cells.
            </summary>
            <param name="region">The region to test.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="region"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="region"/> is from a worksheet other than this collection.
            </exception>
            <returns>
            True if the any cell from the region has a data validation rule applied; False otherwise.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.FindRule(Infragistics.Documents.Excel.WorksheetCell)">
            <summary>
            Find the data validation rule applied to the specified cell.
            </summary>
            <param name="cell">The cell to test.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="cell"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="cell"/> is from a worksheet other than this collection.
            </exception>
            <returns>A <see cref="T:Infragistics.Documents.Excel.DataValidationRule"/>-derived instance or null if the cell has no rule applied.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.GetAllReferences(Infragistics.Documents.Excel.DataValidationRule)">
            <summary>
            Gets a collection of all the references which have the specified or an equivalent rule applied to them.
            </summary>
            <param name="rule">The rule to test.</param>
            <returns>A collection of references in the <see cref="P:Infragistics.Documents.Excel.DataValidationRuleCollection.Worksheet"/> with a rule applied to it that is equivalent to the specified <paramref name="rule"/>.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Remove(Infragistics.Documents.Excel.DataValidationRule)">
            <summary>
            Removes the specified rule from the <see cref="P:Infragistics.Documents.Excel.DataValidationRuleCollection.Worksheet"/>.
            </summary>
            <param name="rule">The rule which should be removed.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="rule"/> is null.
            </exception>
            <returns>True if the rule was contained on the Worksheet before removal; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Remove(Infragistics.Documents.Excel.WorksheetCell)">
            <summary>
            Removes the data validation rule form the cell if one is applied.
            </summary>
            <remarks>
            <p class="body">
            If the rule is only applied to the specified cell, it will be removed from the collection.
            </p>
            </remarks>
            <param name="cell">The cell which should have its data validation rule cleared.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="cell"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="cell"/> is from a worksheet other than this collection.
            </exception>
            <returns>
            True if the data validation rule was found and removed from the cell; False if the cell had no data validation rule applied.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Remove(Infragistics.Documents.Excel.WorksheetReferenceCollection)">
            <summary>
            Removes the data validation rule form all cells in the specified collection.
            </summary>
            <remarks>
            <p class="body">
            If any rules in the collection are not applied to any cells after this operation, they will be removed from the collection.
            </p>
            </remarks>
            <param name="references">The collection of references which should have its data validation rules cleared.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="references"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="references"/> are from a worksheet other than this collection.
            </exception>
            <returns>
            True if the data validation rule was found and removed from any cells in the collection; False if the cells had no data validation rule applied.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Remove(Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>
            Removes the data validation rule form all cells in the specified region.
            </summary>
            <remarks>
            <p class="body">
            If any rules in the collection are not applied to any cells after this operation, they will be removed from the collection.
            </p>
            </remarks>
            <param name="region">The region which should have its data validation rules cleared.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="region"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="region"/> is from a worksheet other than this collection.
            </exception>
            <returns>
            True if the data validation rule was found and removed from any cells in the region; False if the region had no data validation rule applied.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.TryGetReferences(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection@)">
            <summary>
            Gets the references which have the specified rule applied to them or null if the rule is not used on the <see cref="P:Infragistics.Documents.Excel.DataValidationRuleCollection.Worksheet"/>.
            </summary>
            <param name="rule">The rule to test.</param>
            <param name="references">
            [Out] When this method returns, contains the references which have the rule applied to them or null if the rule isn't applied on 
            the Worksheet.
            </param>
            <returns>True if the rule has been applied on the Worksheet; False otherwise.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.DataValidationRuleCollection.Count">
            <summary>
            Gets the number of data validation rules applied on the <see cref="P:Infragistics.Documents.Excel.DataValidationRuleCollection.Worksheet"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.DataValidationRuleCollection.Item(Infragistics.Documents.Excel.DataValidationRule)">
            <summary>
            Gets or sets the references which have the data validation rule applied to it.
            </summary>
            <param name="rule">A data validation rule.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when the <paramref name="rule"/> is null.
            </exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            Occurs when the property is retrieved and the <paramref name="rule"/> is not applied to the <see cref="P:Infragistics.Documents.Excel.DataValidationRuleCollection.Worksheet"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the property is set and the value is from a Worksheet other than this collection.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the property is set and the <paramref name="rule"/> is invalid based on its rule type's requirements.
            </exception>
        </member>
        <member name="T:Infragistics.Documents.Excel.DataValidationCriteria">
            <summary>
            Determines what types of cell values are allowed and how the cell value is validated against the constraint(s).
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>
            <seealso cref="T:Infragistics.Documents.Excel.OneConstraintDataValidationRule"/>
            <seealso cref="T:Infragistics.Documents.Excel.TwoConstraintDataValidationRule"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.DataValidationCriteria.WholeNumber">
            <summary>
            Only numbers are allowed and they cannot have a fractional part.
            When comparing against constraints, the cell value is used.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DataValidationCriteria.Decimal">
            <summary>
            Only numbers are allowed.
            When comparing against constraints, the cell value is used.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DataValidationCriteria.Date">
            <summary>
            Dates with or without time portions are allowed as well as numbers equivalent to valid dates.
            When comparing against constraints, the cell value is used.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DataValidationCriteria.Time">
            <summary>
            Times are allowed are well as numbers equivalent to valid times without a date portion.
            When comparing against constraints, the cell value is used.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DataValidationCriteria.TextLength">
            <summary>
            Non-error values are allowed.
            When comparing against constraints, the length of the cell value's text equivalent is used.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.DataValidationErrorStyle">
            <summary>
            Represents the various styles in which invalid values are handled by Microsoft Excel. When error messages are not 
            shown for invalid values, the error style is ignored and all invalid values are allowed to be set on cells.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.DataValidationRule.ErrorStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.DataValidationRule.ShowErrorMessageForInvalidValue"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.DataValidationErrorStyle.Stop">
            <summary>
            Invalid values are not allowed. The error dialog shown in Microsoft Excel displays an error icon and retry and cancel 
            buttons. The retry button will put focus back in the cell and allow the user to try to enter a new value. The cancel 
            button will cancel the edit and revert the cell back to the previous value it contained before the edit operation.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DataValidationErrorStyle.Warning">
            <summary>
            Invalid values are allowed. The error dialog shown in Microsoft Excel displays a warning icon, asks the user if they 
            want to continue, and has yes, no and cancel buttons. The yes button commits the value to the cell. The no button will
            put focus back in the cell and allow the user to try to enter a new value. And the cancel button will cancel the edit 
            and revert the cell back to the previous value it contained before the edit operation.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DataValidationErrorStyle.Information">
            <summary>
            Invalid values are allowed. The error dialog shown in Microsoft Excel displays an information icon and ok and cancel 
            buttons. The ok button commits the value to the cell. The cancel button will cancel the edit and revert the cell back 
            to the previous value it contained before the edit operation.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.OneConstraintDataValidationOperator">
            <summary>
            Represents the various operators which can be used when validating the cell value against a constraint.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.OneConstraintDataValidationRule"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.GetConstraintFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.GetConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/> 
        </member>
        <member name="F:Infragistics.Documents.Excel.OneConstraintDataValidationOperator.EqualTo">
            <summary>
            Only allows the cell value if it or its text length, depending on the validation criteria, is equal to the 
            constraint applied to the validation rule.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.OneConstraintDataValidationOperator.NotEqualTo">
            <summary>
            Only allows the cell value if it or its text length, depending on the validation criteria, is not equal to the 
            constraint applied to the validation rule.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.OneConstraintDataValidationOperator.GreaterThan">
            <summary>
            Only allows the cell value if it or its text length, depending on the validation criteria, is greater than the 
            constraint applied to the validation rule.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.OneConstraintDataValidationOperator.GreaterThanOrEqualTo">
            <summary>
            Only allows the cell value if it or its text length, depending on the validation criteria, is greater than or equal to the 
            constraint applied to the validation rule.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.OneConstraintDataValidationOperator.LessThan">
            <summary>
            Only allows the cell value if it or its text length, depending on the validation criteria, is less than the 
            constraint applied to the validation rule.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.OneConstraintDataValidationOperator.LessThanOrEqualTo">
            <summary>
            Only allows the cell value if it or its text length, depending on the validation criteria, is less than or equal to the 
            constraint applied to the validation rule.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.TwoConstraintDataValidationOperator">
            <summary>
            Represents the various operators which can be used when validating the cell value against two constraints.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.TwoConstraintDataValidationRule"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/> 
        </member>
        <member name="F:Infragistics.Documents.Excel.TwoConstraintDataValidationOperator.Between">
            <summary>
            Only allows the cell value if it or its text length, depending on the validation criteria, is between the 
            constraints applied to the validation rule. The constraints are inclusive.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.TwoConstraintDataValidationOperator.NotBetween">
            <summary>
            Only allows the cell value if it or its text length, depending on the validation criteria, is not between the 
            constraints applied to the validation rule. The constraints are exclusive.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.LimitedValueDataValidationRule">
            <summary>
            Base class for all data validations rules which prevent certain values form being applied to a cell.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.ListDataValidationRule"/>
            <seealso cref="T:Infragistics.Documents.Excel.CustomDataValidationRule"/>
            <seealso cref="T:Infragistics.Documents.Excel.OneConstraintDataValidationRule"/>
            <seealso cref="T:Infragistics.Documents.Excel.TwoConstraintDataValidationRule"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.LimitedValueDataValidationRule.IsEquivalentTo(Infragistics.Documents.Excel.DataValidationRule)">
            <summary>
            Indicates if this rule is structurally equivalent to another.
            </summary>
            <param name="other">The rule to compare against</param>
            <returns>Returns true if the specified <paramref name="other"/> has the same settings as this rule.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.LimitedValueDataValidationRule.AllowNull">
            <summary>
            Gets or sets the value which indicates whether a null, or blank, value is allowed to be set on a cell.
            </summary>
            <value>True if a null value can be set on the cell; False otherwise.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.ListDataValidationRule">
            <summary>
            Represents a data validation rule which allows a value from a list of accepted values to be applied to a cell.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DataValidationRules"/>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.ListDataValidationRule,Infragistics.Documents.Excel.WorksheetCell)"/>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.ListDataValidationRule,Infragistics.Documents.Excel.WorksheetRegion)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ListDataValidationRule.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.ListDataValidationRule"/> instance.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ListDataValidationRule.IsEquivalentTo(Infragistics.Documents.Excel.DataValidationRule)">
            <summary>
            Indicates if this rule is structurally equivalent to another.
            </summary>
            <param name="other">The rule to compare against</param>
            <returns>Returns true if the specified <paramref name="other"/> has the same settings as this rule.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ListDataValidationRule.GetValuesFormula(System.String)">
            <summary>
            Gets the formula which specifies the accepted values.
            </summary>
            <param name="address">
            The address of the cell or region that serves as the basis for relative references, or null to use the top-left cell of 
            the worksheet.
            </param>
            <remarks>
            <p class="body">
            The is a string containing the list of accepted values or a reference to a cell or region in the same Workbook which contains 
            the accepted values.
            </p>
            <p class="body">
            If the formula equals a string, it will be a list of accepted value, such as ="A,B,C". If one of the values must contain a double 
            quote ("), the character will be repeated in the list, like so: ="A,""B"",C". This will allow the values A, "B", and C. The 
            separator between values will be a comma (,), unless the decimal separator for the current culture is a comma, in which case the 
            separator will be a semicolon (;).
            </p>
            <p class="body">
            If the formula equals one or more references, it will be a reference to a single cell or region in the same Workbook. Union, 
            intersection, and range operators are not allowed. An formula might be something like =$A$1 or =Sheet2!$A$1:$A$5. In addition to a 
            single cell or region, a named reference can also be used, but only if it refers to a single cell or region. If a region is specified, 
            or a named reference that refers to a region, the region will consist of a single row or column. A formula that equals an error value 
            can also be returned, but will cause the cell to not accept any values and the drop down to be empty, so it is not very useful.
            </p>
            <p class="body">
            The address passed in is only needed if relative addresses are used in the the formula. For example, consider the formula 
            applied is =B1, and the data validation rule is applied to the region A1:A5. If you get the formula for A1, the formula
            =B1 will be returned. If you get the formula for A2, =B2 will be returned. Similarly, for cell A5, =B5 will be returned.
            However, if the formula contains no references or all absolute references, the <paramref name="address"/> is ignored. So
            in the previous example, if the original formula was =$B$1, the same formula will be returned regardless of the specified 
            address.
            </p>
            <p class="body">
            <paramref name="address"/> can be any valid cell or region reference on a worksheet. If a region address is specified, the
            top-left cell or the region is used. The cell or region specified does not need to have the data validation rule applied to it. 
            Any reference is allowed.
            </p>
            <p class="body">
            The cell reference mode with which to parse <paramref name="address"/> will be assumed to be A1, unless the data validation 
            rule is applied to a worksheet which is in a workbook, in which case the <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> will be used.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="address"/> is not a valid cell or regions address.
            </exception>
            <returns>A formula used to validate the value applied to a cell.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.TryGetValues(System.Object[]@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.GetValuesFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValuesFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValuesFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ListDataValidationRule.GetValuesFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>
            Gets the formula which specifies the accepted values.
            </summary>
            <param name="address">
            The address of the cell or region that serves as the basis for relative references, or null to use the top-left cell of 
            the worksheet.
            </param>
            <param name="format">The workbook format with which to parse <paramref name="address"/>.</param>
            <param name="cellReferenceMode">The cell reference mode with which to parse <paramref name="address"/>.</param>
            <param name="culture">The culture to use when generating the formula string.</param>
            <remarks>
            <p class="body">
            The is a string containing the list of accepted values or a reference to a cell or region in the same Workbook which contains 
            the accepted values.
            </p>
            <p class="body">
            If the formula equals a string, it will be a list of accepted value, such as ="A,B,C". If one of the values must contain a double 
            quote ("), the character will be repeated in the list, like so: ="A,""B"",C". This will allow the values A, "B", and C. The 
            separator between values will be a comma (,), unless the decimal separator for the current culture is a comma, in which case the 
            separator will be a semicolon (;).
            </p>
            <p class="body">
            If the formula equals one or more references, it will be a reference to a single cell or region in the same Workbook. Union, 
            intersection, and range operators are not allowed. An formula might be something like =$A$1 or =Sheet2!$A$1:$A$5. In addition to a 
            single cell or region, a named reference can also be used, but only if it refers to a single cell or region. If a region is specified, 
            or a named reference that refers to a region, the region will consist of a single row or column. A formula that equals an error value 
            can also be returned, but will cause the cell to not accept any values and the drop down to be empty, so it is not very useful.
            </p>
            <p class="body">
            The address passed in is only needed if relative addresses are used in the the formula. For example, consider the formula 
            applied is =B1, and the data validation rule is applied to the region A1:A5. If you get the formula for A1, the formula
            =B1 will be returned. If you get the formula for A2, =B2 will be returned. Similarly, for cell A5, =B5 will be returned.
            However, if the formula contains no references or all absolute references, the <paramref name="address"/> is ignored. So
            in the previous example, if the original formula was =$B$1, the same formula will be returned regardless of the specified 
            address.
            </p>
            <p class="body">
            <paramref name="address"/> can be any valid cell or region reference on a worksheet. If a region address is specified, the
            top-left cell or the region is used. The cell or region specified does not need to have the data validation rule applied to it. 
            Any reference is allowed.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="address"/> is not a valid cell or regions address.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when <paramref name="format"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookFormat"/> enumeration.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <returns>A formula used to validate the value applied to a cell.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.TryGetValues(System.Object[]@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.GetValuesFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValuesFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValuesFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValues(System.Object[])">
            <summary>
            Sets the list of accepted values the cell can accept.
            </summary>
            <remarks>
            <p class="body">
            If <see cref="P:Infragistics.Documents.Excel.LimitedValueDataValidationRule.AllowNull"/> is True, null values are allowed in addition to the list of accepted values.
            </p>
            <p class="body">
            All values will have ToString called on them to covert the accepted values list to a formula.
            </p>
            <p class="note">
            <b>Note:</b> the formula of accepted values is created by separating each value with a function parameter separator and concatenating 
            them into a single string. So a list of 1, 2, and 3 would have the following formula created: ="1,2,3". However, if the decimal separator 
            of the current culture is a comma (,) then a semicolon (;) will be used to separate the values instead. Because of this, if the ToString 
            of a value returns a string which contains one of these separators, the value will be split into two or more allowed values.
            </p>
            </remarks>
            <param name="values">The list of accepted values.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="values"/> is null and the rule is currently applied to a <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="values"/> array is empty.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.GetValuesFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.GetValuesFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValuesFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValuesFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValuesFormula(System.String,System.String)">
            <summary>
            Sets the formula which specifies the accepted values.
            </summary>
            <param name="valuesFormula">The formula which provides the accepted values for the rule.</param>
            <param name="address">
            The address of the cell or region that serves as the basis for relative references, or null to use the top-left cell of 
            the worksheet.
            </param>
            <remarks>
            <p class="body">
            The formula must be a string containing the list of accepted values or a reference to a cell or region in the same Workbook 
            which contains the accepted values.
            </p>
            <p class="body">
            If a formula equaling a string is specified, it must be a string literal and it cannot be concatenated. For example, an 
            acceptable formula would be ="A,B,C". If one of the values must contain a double quote ("), the character should be repeated 
            in the list, like so: ="A,""B"",C". This will allow the values A, "B", and C. The separator between values must be a comma (,), 
            unless the decimal separator for the current culture is a comma, in which case the separator must be a semicolon (;).
            </p>
            <p class="body">
            If a formula equaling one or more references is specified, it must be a reference to a single cell or region in the same Workbook. 
            Union, intersection, and range operators are not allowed. An acceptable formula might be =$A$1 or =Sheet2!$A$1:$A$5. In addition 
            to a single cell or region, a named reference can also be used, but only if it refers to a single cell or region. If a region is 
            specified, or a named reference that refers to a region, the region must consist of a single row or column. A formula that equals 
            an error value is also allowed, but will cause the cell to not accept any values and the drop down to be empty, so it is not very 
            useful.
            </p>
            <p class="body">
            The address passed in is only needed if relative addresses are used in the the formula. When the data validation rule is 
            applied to cells or regions, the references in the formula used by each individual cell will be shifted by the offset of
            the cell to the passed in <paramref name="address"/>. For example, consider the formula specified is =B1 and the specified 
            address is A1. If the data validation rule is then applied to the A5 cell, the formula is will use is =B5. However, if the
            references in the formula are absolute, such as =$B$1, the same formula will be applied regardless of the specified address.
            </p>
            <p class="body">
            <paramref name="address"/> can be any valid cell or region reference on a worksheet. If a region address is specified, the
            top-left cell or the region is used. The cell or region specified does not need to have the data validation rule applied to it. 
            Any reference is allowed.
            </p>
            <p class="body">
            The cell reference mode with which to parse <paramref name="address"/> will be assumed to be A1, unless the data validation 
            rule is applied to a worksheet which is in a workbook, in which case the <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> will be used.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="valuesFormula"/> is null and the rule is currently applied to a <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            Occurs when <paramref name="valuesFormula"/> is not a valid formula.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the specified value contains something other than a string or reference.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the specified value contains a region reference which has more than one row and column.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="address"/> is not a valid cell or regions address.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValues(System.Object[])"/>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.GetValuesFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.GetValuesFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValuesFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValuesFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>
            Sets the formula which specifies the accepted values.
            </summary>
            <param name="valuesFormula">The formula which provides the accepted values for the rule.</param>
            <param name="address">
            The address of the cell or region that serves as the basis for relative references, or null to use the top-left cell of 
            the worksheet.
            </param>
            <param name="format">The workbook format with which to parse <paramref name="address"/>.</param>
            <param name="cellReferenceMode">The cell reference mode with which to parse <paramref name="address"/>.</param>
            <param name="culture">The culture to use when parsing the formula string.</param>
            <remarks>
            <p class="body">
            The formula must be a string containing the list of accepted values or a reference to a cell or region in the same Workbook 
            which contains the accepted values.
            </p>
            <p class="body">
            If a formula equaling a string is specified, it must be a string literal and it cannot be concatenated. For example, an 
            acceptable formula would be ="A,B,C". If one of the values must contain a double quote ("), the character should be repeated 
            in the list, like so: ="A,""B"",C". This will allow the values A, "B", and C. The separator between values must be a comma (,), 
            unless the decimal separator for the current culture is a comma, in which case the separator must be a semicolon (;).
            </p>
            <p class="body">
            If a formula equaling one or more references is specified, it must be a reference to a single cell or region in the same Workbook. 
            Union, intersection, and range operators are not allowed. An acceptable formula might be =$A$1 or =Sheet2!$A$1:$A$5. In addition 
            to a single cell or region, a named reference can also be used, but only if it refers to a single cell or region. If a region is 
            specified, or a named reference that refers to a region, the region must consist of a single row or column. A formula that equals 
            an error value is also allowed, but will cause the cell to not accept any values and the drop down to be empty, so it is not very 
            useful.
            </p>
            <p class="body">
            The address passed in is only needed if relative addresses are used in the the formula. When the data validation rule is 
            applied to cells or regions, the references in the formula used by each individual cell will be shifted by the offset of
            the cell to the passed in <paramref name="address"/>. For example, consider the formula specified is =B1 and the specified 
            address is A1. If the data validation rule is then applied to the A5 cell, the formula is will use is =B5. However, if the
            references in the formula are absolute, such as =$B$1, the same formula will be applied regardless of the specified address.
            </p>
            <p class="body">
            <paramref name="address"/> can be any valid cell or region reference on a worksheet. If a region address is specified, the
            top-left cell or the region is used. The cell or region specified does not need to have the data validation rule applied to it. 
            Any reference is allowed.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="valuesFormula"/> is null and the rule is currently applied to a <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            Occurs when <paramref name="valuesFormula"/> is not a valid formula.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the specified value contains something other than a string or reference.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the specified value contains a region reference which has more than one row and column.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="address"/> is not a valid cell or regions address.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when <paramref name="format"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookFormat"/> enumeration.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValues(System.Object[])"/>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.GetValuesFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.GetValuesFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValuesFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ListDataValidationRule.TryGetValues(System.Object[]@)">
            <summary>
            Tries to obtain the value of the constraint.
            </summary>
            <remarks>
            <p class="body">
            The list of values can only be obtained if it was set with the <see cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValues(System.Object[])"/> method or a formula is applied with one of 
            the SetValuesFormula methods and the formula equals a constant string with a list of values, such as ="A,B,C".
            </p>
            </remarks>
            <param name="values">When the method returns, will be an array of values or null if the list of values could not be obtained.</param>
            <returns>True if the list of values could be obtained; False otherwise.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValuesFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValuesFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.ListDataValidationRule.ShowDropdown">
            <summary>
            Gets or sets the value which indicates whether a drop down should be displayed in Microsoft Excel with the list of accepted values.
            </summary>
            <remarks>
            <p class="body">
            If this is True, a drop down arrow will be displayed next to the cell when it is selected. When the user clicks the drop down arrow,
            a drop down will be displayed with the list of accepted values.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.OneConstraintDataValidationRule">
            <summary>
            Represents a data validation rule which can validate the cell value against a single constraint value or formula.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DataValidationRules"/>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.OneConstraintDataValidationRule,Infragistics.Documents.Excel.WorksheetCell)"/>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.OneConstraintDataValidationRule,Infragistics.Documents.Excel.WorksheetRegion)"/>
            <seealso cref="T:Infragistics.Documents.Excel.OneConstraintDataValidationOperator"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.OneConstraintDataValidationRule"/> instance.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.#ctor(Infragistics.Documents.Excel.OneConstraintDataValidationOperator,Infragistics.Documents.Excel.DataValidationCriteria)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.OneConstraintDataValidationRule"/> instance.
            </summary>
            <param name="validationOperator">The operator to use when comparing the cell value to the constraint value.</param>
            <param name="validationCriteria">The criteria to use when validating the cell value.</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when the <paramref name="validationCriteria"/> is not a member of the <see cref="T:Infragistics.Documents.Excel.DataValidationCriteria"/> enumeration.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.IsEquivalentTo(Infragistics.Documents.Excel.DataValidationRule)">
            <summary>
            Indicates if this rule is structurally equivalent to another.
            </summary>
            <param name="other">The rule to compare against</param>
            <returns>Returns true if the specified <paramref name="other"/> has the same settings as this rule.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.GetConstraintFormula(System.String)">
            <summary>
            Gets the constraint formula used to validate the cell value.
            </summary>
            <param name="address">
            The address of the cell or region that serves as the basis for relative references, or null to use the top-left cell of 
            the worksheet.
            </param>
            <remarks>
            <p class="body">
            The way in which the cell value is compared to the constraint formula's value is determined by the <see cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator"/>
            as well as the <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>.
            </p>
            <p class="body">
            Depending on the ValidationCriteria of the rule, either the cell value itself or the length of the cell value's text equivalent is 
            compared to the constraint formula's value.
            </p>
            <p class="body">
            The address passed in is only needed if relative addresses are used in the the formula. For example, consider the formula 
            applied is =B1, and the data validation rule is applied to the region A1:A5. If you get the formula for A1, the formula
            =B1 will be returned. If you get the formula for A2, =B2 will be returned. Similarly, for cell A5, =B5 will be returned.
            However, if the formula contains no references or all absolute references, the <paramref name="address"/> is ignored. So
            in the previous example, if the original formula was =$B$1, the same formula will be returned regardless of the specified 
            address.
            </p>
            <p class="body">
            <paramref name="address"/> can be any valid cell or region reference on a worksheet. If a region address is specified, the
            top-left cell or the region is used. The cell or region specified does not need to have the data validation rule applied to it. 
            Any reference is allowed.
            </p>
            <p class="body">
            The cell reference mode with which to parse <paramref name="address"/> will be assumed to be A1, unless the data validation 
            rule is applied to a worksheet which is in a workbook, in which case the <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> will be used.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="address"/> is not a valid cell or regions address.
            </exception>
            <returns>A formula used to validate the value applied to a cell.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.Double@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.DateTime@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.TimeSpan@)"/>
            <seealso cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.GetConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/> 
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.GetConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>
            Gets the constraint formula used to validate the cell value.
            </summary>
            <param name="address">
            The address of the cell or region that serves as the basis for relative references, or null to use the top-left cell of 
            the worksheet.
            </param>
            <param name="format">The workbook format with which to parse <paramref name="address"/>.</param>
            <param name="cellReferenceMode">The cell reference mode with which to parse <paramref name="address"/>.</param>
            <param name="culture">The culture to use when generating the formula string.</param>
            <remarks>
            <p class="body">
            The way in which the cell value is compared to the constraint formula's value is determined by the <see cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator"/>
            as well as the <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>.
            </p>
            <p class="body">
            Depending on the ValidationCriteria of the rule, either the cell value itself or the length of the cell value's text equivalent is 
            compared to the constraint formula's value.
            </p>
            <p class="body">
            The address passed in is only needed if relative addresses are used in the the formula. For example, consider the formula 
            applied is =B1, and the data validation rule is applied to the region A1:A5. If you get the formula for A1, the formula
            =B1 will be returned. If you get the formula for A2, =B2 will be returned. Similarly, for cell A5, =B5 will be returned.
            However, if the formula contains no references or all absolute references, the <paramref name="address"/> is ignored. So
            in the previous example, if the original formula was =$B$1, the same formula will be returned regardless of the specified 
            address.
            </p>
            <p class="body">
            <paramref name="address"/> can be any valid cell or region reference on a worksheet. If a region address is specified, the
            top-left cell or the region is used. The cell or region specified does not need to have the data validation rule applied to it. 
            Any reference is allowed.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="address"/> is not a valid cell or regions address.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when <paramref name="format"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookFormat"/> enumeration.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <returns>A formula used to validate the value applied to a cell.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.Double@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.DateTime@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.TimeSpan@)"/>
            <seealso cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.GetConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>  
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.Double)">
            <summary>
            Sets the constraint value used to validate the cell value.
            </summary>
            <remarks>
            <p class="body">
            The way in which the cell value is compared to the constraint value is determined by the <see cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator"/> as well 
            as the <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>.
            </p>
            <p class="body">
            Depending on the ValidationCriteria of the rule, either the cell value itself or the length of the cell value's text equivalent is 
            compared to the constraint value.
            </p>
            <p class="body">
            This overload is preferred when the ValidationCriteria is WholeNumber, Decimal, or TextLength. When the ValidationCriteria is Time, 
            the <see cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.TimeSpan)"/> overload is preferred, and when the ValidationCriteria is Date, the 
            <see cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.DateTime)"/> overload is preferred.
            </p>
            </remarks>
            <param name="value">The constraint value used to compare against the cell value.</param>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.Double@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/> 
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.DateTime)">
            <summary>
            Sets the constraint value used to validate the cell value.
            </summary>
            <remarks>
            <p class="body">
            The way in which the cell value is compared to the constraint value is determined by the <see cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator"/> as well 
            as the <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>.
            </p>
            <p class="body">
            Depending on the ValidationCriteria of the rule, either the cell value itself or the length of the cell value's text equivalent is 
            compared to the constraint value.
            </p>
            <p class="body">
            This overload is preferred when the ValidationCriteria is Date. When the ValidationCriteria is WholeNumber, Decimal, or TextLength, 
            the <see cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.Double)"/> overload is preferred, and when the ValidationCriteria is Time, the 
            <see cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.TimeSpan)"/> overload is preferred.
            </p>
            </remarks>
            <param name="value">The constraint value used to compare against the cell value.</param>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="value"/> cannot be represented as a date in Excel.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.DateTime@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/> 
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.TimeSpan)">
            <summary>
            Sets the constraint value used to validate the cell value.
            </summary>
            <remarks>
            <p class="body">
            The way in which the cell value is compared to the constraint value is determined by the <see cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator"/> as well 
            as the <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>.
            </p>
            <p class="body">
            Depending on the ValidationCriteria of the rule, either the cell value itself or the length of the cell value's text equivalent is 
            compared to the constraint value.
            </p>
            <p class="body">
            This overload is preferred when the ValidationCriteria is Time. When the ValidationCriteria is WholeNumber, Decimal, or TextLength, 
            the <see cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.Double)"/> overload is preferred, and when the ValidationCriteria is Date, the 
            <see cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.DateTime)"/> overload is preferred.
            </p>
            </remarks>
            <param name="value">The constraint value used to compare against the cell value.</param>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.TimeSpan@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String)">
            <summary>
            Sets the constraint formula used to validate the cell value.
            </summary>
            <param name="constraintFormula">The validation formula to use for the rule.</param>
            <param name="address">
            The address of the cell or region that serves as the basis for relative references, or null to use the top-left cell of 
            the worksheet.
            </param>
            <remarks>
            <p class="body">
            The way in which the cell value is compared to the constraint formula's value is determined by the <see cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator"/>
            as well as the <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>.
            </p>
            <p class="body">
            Depending on the ValidationCriteria of the rule, either the cell value itself or the length of the cell value's text equivalent is 
            compared to the constraint formula's value.
            </p>
            <p class="body">
            The address passed in is only needed if relative addresses are used in the the formula. When the data validation rule is 
            applied to cells or regions, the references in the formula used by each individual cell will be shifted by the offset of
            the cell to the passed in <paramref name="address"/>. For example, consider the formula specified is =B1 and the specified 
            address is A1. If the data validation rule is then applied to the A5 cell, the formula is will use is =B5. However, if the
            references in the formula are absolute, such as =$B$1, the same formula will be applied regardless of the specified address.
            </p>
            <p class="body">
            <paramref name="address"/> can be any valid cell or region reference on a worksheet. If a region address is specified, the
            top-left cell or the region is used. The cell or region specified does not need to have the data validation rule applied to it. 
            Any reference is allowed.
            </p>
            <p class="body">
            The cell reference mode with which to parse <paramref name="address"/> will be assumed to be A1, unless the data validation 
            rule is applied to a worksheet which is in a workbook, in which case the <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> will be used.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="constraintFormula"/> is null and the rule is currently applied to a <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            Occurs when <paramref name="constraintFormula"/> is not a valid formula.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="address"/> is not a valid cell or regions address.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.DateTime)"/>
            <seealso cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.GetConstraintFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.GetConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/> 
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>
            Sets the constraint formula used to validate the cell value.
            </summary>
            <param name="constraintFormula">The validation formula to use for the rule.</param>
            <param name="address">
            The address of the cell or region that serves as the basis for relative references, or null to use the top-left cell of 
            the worksheet.
            </param>
            <param name="format">The workbook format with which to parse <paramref name="address"/>.</param>
            <param name="cellReferenceMode">The cell reference mode with which to parse <paramref name="address"/>.</param>
            <param name="culture">The culture to use when parsing the formula string.</param>
            <remarks>
            <p class="body">
            The way in which the cell value is compared to the constraint formula's value is determined by the <see cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator"/>
            as well as the <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>.
            </p>
            <p class="body">
            Depending on the ValidationCriteria of the rule, either the cell value itself or the length of the cell value's text equivalent is 
            compared to the constraint formula's value.
            </p>
            <p class="body">
            The address passed in is only needed if relative addresses are used in the the formula. When the data validation rule is 
            applied to cells or regions, the references in the formula used by each individual cell will be shifted by the offset of
            the cell to the passed in <paramref name="address"/>. For example, consider the formula specified is =B1 and the specified 
            address is A1. If the data validation rule is then applied to the A5 cell, the formula is will use is =B5. However, if the
            references in the formula are absolute, such as =$B$1, the same formula will be applied regardless of the specified address.
            </p>
            <p class="body">
            <paramref name="address"/> can be any valid cell or region reference on a worksheet. If a region address is specified, the
            top-left cell or the region is used. The cell or region specified does not need to have the data validation rule applied to it. 
            Any reference is allowed.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="constraintFormula"/> is null and the rule is currently applied to a <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            Occurs when <paramref name="constraintFormula"/> is not a valid formula.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="address"/> is not a valid cell or regions address.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when <paramref name="format"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookFormat"/> enumeration.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.DateTime)"/>
            <seealso cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.GetConstraintFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.GetConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String)"/>  
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.Double@)">
            <summary>
            Tries to obtain the value of the constraint.
            </summary>
            <remarks>
            <p class="body">
            The constraint value can only be obtained if it was set with the one of the SetConstraint methods or a formula was set with one 
            of the SetConstraintFormula methods and the formula equals a constant value, such as =5.
            </p>
            </remarks>
            <param name="value">When the method returns, will be the value of the constraint or 0 if the value could not be obtained.</param>
            <returns>True if the constraint value could be obtained; False otherwise.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.DateTime@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.TimeSpan@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.DateTime@)">
            <summary>
            Tries to obtain the value of the constraint.
            </summary>
            <remarks>
            <p class="body">
            The constraint value can only be obtained if it was set with the one of the SetConstraint methods or a formula was set with one 
            of the SetConstraintFormula methods and the formula equals a constant value, such as =5.
            </p>
            </remarks>
            <param name="value">When the method returns, will be the value of the constraint or DateTime.MinValue if the value could not be obtained.</param>
            <returns>True if the constraint value could be obtained; False otherwise.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.Double@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.TimeSpan@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.TimeSpan@)">
            <summary>
            Tries to obtain the value of the constraint.
            </summary>
            <remarks>
            <p class="body">
            The constraint value can only be obtained if it was set with the one of the SetConstraint methods or a formula was set with one 
            of the SetConstraintFormula methods and the formula equals a constant value, such as =5.
            </p>
            </remarks>
            <param name="value">When the method returns, will be the value of the constraint or TimeSpan.Zero if the value could not be obtained.</param>
            <returns>True if the constraint value could be obtained; False otherwise.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.Double@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.DateTime@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator">
            <summary>
            Gets or sets the validation operator to use when comparing the cell value against the constraint value or formula.
            </summary>
            <remarks>
            <p class="body">
            Depending on the <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/> of the rule, either the cell value itself or the 
            length of the cell value's text equivalent is compared to the constraint value or formula.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when the value is not a member of the <see cref="T:Infragistics.Documents.Excel.OneConstraintDataValidationOperator"/> enumeration.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.GetConstraintFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.GetConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/> 
        </member>
        <member name="T:Infragistics.Documents.Excel.TwoConstraintDataValidationRule">
            <summary>
            Represents a data validation rule which can validate the cell value against two constraint values or formulas.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DataValidationRules"/>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.TwoConstraintDataValidationRule,Infragistics.Documents.Excel.WorksheetCell)"/>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.TwoConstraintDataValidationRule,Infragistics.Documents.Excel.WorksheetRegion)"/>
            <seealso cref="T:Infragistics.Documents.Excel.TwoConstraintDataValidationOperator"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.TwoConstraintDataValidationRule"/> instance.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.#ctor(Infragistics.Documents.Excel.TwoConstraintDataValidationOperator,Infragistics.Documents.Excel.DataValidationCriteria)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.TwoConstraintDataValidationRule"/> instance.
            </summary>
            <param name="validationOperator">The operator to use when comparing the cell value to the constraint values.</param>
            <param name="validationCriteria">The criteria to use when validating the cell value.</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when the <paramref name="validationCriteria"/> is not a member of the <see cref="T:Infragistics.Documents.Excel.DataValidationCriteria"/> enumeration.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.IsEquivalentTo(Infragistics.Documents.Excel.DataValidationRule)">
            <summary>
            Indicates if this rule is structurally equivalent to another.
            </summary>
            <param name="other">The rule to compare against</param>
            <returns>Returns true if the specified <paramref name="other"/> has the same settings as this rule.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String)">
            <summary>
            Gets the lower constraint formula used to validate the cell value.
            </summary>
            <param name="address">
            The address of the cell or region that serves as the basis for relative references, or null to use the top-left cell of 
            the worksheet.
            </param>
            <remarks>
            <p class="body">
            The way in which the cell value is compared to the lower constraint formula's value is determined by the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            as well as the <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>.
            </p>
            <p class="body">
            Depending on the ValidationCriteria of the rule, either the cell value itself or the length of the cell value's text equivalent 
            is compared to the lower constraint formula's value.
            </p>
            <p class="body">
            When the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/> is Between, the value must be greater than or equal to the lower constraint and less 
            than or equal to the upper constraint. When the ValidationOperator is NotBetween, the value must be less than the lower constraint
            or greater than the upper constraint.
            </p>
            <p class="body">
            The address passed in is only needed if relative addresses are used in the the formula. For example, consider the formula 
            applied is =B1, and the data validation rule is applied to the region A1:A5. If you get the formula for A1, the formula
            =B1 will be returned. If you get the formula for A2, =B2 will be returned. Similarly, for cell A5, =B5 will be returned.
            However, if the formula contains no references or all absolute references, the <paramref name="address"/> is ignored. So
            in the previous example, if the original formula was =$B$1, the same formula will be returned regardless of the specified 
            address.
            </p>
            <p class="body">
            <paramref name="address"/> can be any valid cell or region reference on a worksheet. If a region address is specified, the
            top-left cell or the region is used. The cell or region specified does not need to have the data validation rule applied to it. 
            Any reference is allowed.
            </p>
            <p class="body">
            The cell reference mode with which to parse <paramref name="address"/> will be assumed to be A1, unless the data validation 
            rule is applied to a worksheet which is in a workbook, in which case the <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> will be used.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="address"/> is not a valid cell or regions address.
            </exception>
            <returns>A formula used to validate the value applied to a cell.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetLowerConstraint(System.Double@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetLowerConstraint(System.DateTime@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetLowerConstraint(System.TimeSpan@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/> 
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>
            Gets the lower constraint formula used to validate the cell value.
            </summary>
            <param name="address">
            The address of the cell or region that serves as the basis for relative references, or null to use the top-left cell of 
            the worksheet.
            </param>
            <param name="format">The workbook format with which to parse <paramref name="address"/>.</param>
            <param name="cellReferenceMode">The cell reference mode with which to parse <paramref name="address"/>.</param>
            <param name="culture">The culture to use when generating the formula string.</param>
            <remarks>
            <p class="body">
            The way in which the cell value is compared to the lower constraint formula's value is determined by the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            as well as the <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>.
            </p>
            <p class="body">
            Depending on the ValidationCriteria of the rule, either the cell value itself or the length of the cell value's text equivalent 
            is compared to the lower constraint formula's value.
            </p>
            <p class="body">
            When the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/> is Between, the value must be greater than or equal to the lower constraint and less 
            than or equal to the upper constraint. When the ValidationOperator is NotBetween, the value must be less than the lower constraint
            or greater than the upper constraint.
            </p>
            <p class="body">
            The address passed in is only needed if relative addresses are used in the the formula. For example, consider the formula 
            applied is =B1, and the data validation rule is applied to the region A1:A5. If you get the formula for A1, the formula
            =B1 will be returned. If you get the formula for A2, =B2 will be returned. Similarly, for cell A5, =B5 will be returned.
            However, if the formula contains no references or all absolute references, the <paramref name="address"/> is ignored. So
            in the previous example, if the original formula was =$B$1, the same formula will be returned regardless of the specified 
            address.
            </p>
            <p class="body">
            <paramref name="address"/> can be any valid cell or region reference on a worksheet. If a region address is specified, the
            top-left cell or the region is used. The cell or region specified does not need to have the data validation rule applied to it. 
            Any reference is allowed.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="address"/> is not a valid cell or regions address.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when <paramref name="format"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookFormat"/> enumeration.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <returns>A formula used to validate the value applied to a cell.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetLowerConstraint(System.Double@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetLowerConstraint(System.DateTime@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetLowerConstraint(System.TimeSpan@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/> 
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String)">
            <summary>
            Gets the upper constraint formula used to validate the cell value.
            </summary>
            <param name="address">
            The address of the cell or region that serves as the basis for relative references, or null to use the top-left cell of 
            the worksheet.
            </param>
            <remarks>
            <p class="body">
            The way in which the cell value is compared to the upper constraint formula's value is determined by the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            as well as the <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>.
            </p>
            <p class="body">
            Depending on the ValidationCriteria of the rule, either the cell value itself or the length of the cell value's text equivalent 
            is compared to the upper constraint formula's value.
            </p>
            <p class="body">
            When the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/> is Between, the value must be greater than or equal to the lower constraint and less 
            than or equal to the upper constraint. When the ValidationOperator is NotBetween, the value must be less than the lower constraint
            or greater than the upper constraint.
            </p>
            <p class="body">
            The address passed in is only needed if relative addresses are used in the the formula. For example, consider the formula 
            applied is =B1, and the data validation rule is applied to the region A1:A5. If you get the formula for A1, the formula
            =B1 will be returned. If you get the formula for A2, =B2 will be returned. Similarly, for cell A5, =B5 will be returned.
            However, if the formula contains no references or all absolute references, the <paramref name="address"/> is ignored. So
            in the previous example, if the original formula was =$B$1, the same formula will be returned regardless of the specified 
            address.
            </p>
            <p class="body">
            <paramref name="address"/> can be any valid cell or region reference on a worksheet. If a region address is specified, the
            top-left cell or the region is used. The cell or region specified does not need to have the data validation rule applied to it. 
            Any reference is allowed.
            </p>
            <p class="body">
            The cell reference mode with which to parse <paramref name="address"/> will be assumed to be A1, unless the data validation 
            rule is applied to a worksheet which is in a workbook, in which case the <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> will be used.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="address"/> is not a valid cell or regions address.
            </exception>
            <returns>A formula used to validate the value applied to a cell.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetUpperConstraint(System.Double@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetUpperConstraint(System.DateTime@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetUpperConstraint(System.TimeSpan@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>  
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>
            Gets the upper constraint formula used to validate the cell value.
            </summary>
            <param name="address">
            The address of the cell or region that serves as the basis for relative references, or null to use the top-left cell of 
            the worksheet.
            </param>
            <param name="format">The workbook format with which to parse <paramref name="address"/>.</param>
            <param name="cellReferenceMode">The cell reference mode with which to parse <paramref name="address"/>.</param>
            <param name="culture">The culture to use when generating the formula string.</param>
            <remarks>
            <p class="body">
            The way in which the cell value is compared to the upper constraint formula's value is determined by the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            as well as the <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>.
            </p>
            <p class="body">
            Depending on the ValidationCriteria of the rule, either the cell value itself or the length of the cell value's text equivalent 
            is compared to the upper constraint formula's value.
            </p>
            <p class="body">
            When the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/> is Between, the value must be greater than or equal to the lower constraint and less 
            than or equal to the upper constraint. When the ValidationOperator is NotBetween, the value must be less than the lower constraint
            or greater than the upper constraint.
            </p>
            <p class="body">
            The address passed in is only needed if relative addresses are used in the the formula. For example, consider the formula 
            applied is =B1, and the data validation rule is applied to the region A1:A5. If you get the formula for A1, the formula
            =B1 will be returned. If you get the formula for A2, =B2 will be returned. Similarly, for cell A5, =B5 will be returned.
            However, if the formula contains no references or all absolute references, the <paramref name="address"/> is ignored. So
            in the previous example, if the original formula was =$B$1, the same formula will be returned regardless of the specified 
            address.
            </p>
            <p class="body">
            <paramref name="address"/> can be any valid cell or region reference on a worksheet. If a region address is specified, the
            top-left cell or the region is used. The cell or region specified does not need to have the data validation rule applied to it. 
            Any reference is allowed.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="address"/> is not a valid cell or regions address.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when <paramref name="format"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookFormat"/> enumeration.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <returns>A formula used to validate the value applied to a cell.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetUpperConstraint(System.Double@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetUpperConstraint(System.DateTime@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetUpperConstraint(System.TimeSpan@)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>  
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)">
            <summary>
            Sets the lower constraint value used to validate the cell value.
            </summary>
            <remarks>
            <p class="body">
            The way in which the cell value is compared to the lower constraint value is determined by the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            as well as the <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>.
            </p>
            <p class="body">
            Depending on the ValidationCriteria of the rule, either the cell value itself or the length of the cell value's text equivalent 
            is compared to the lower constraint value.
            </p>
            <p class="body">
            When the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/> is Between, the value must be greater than or equal to the lower constraint and less 
            than or equal to the upper constraint. When the ValidationOperator is NotBetween, the value must be less than the lower constraint
            or greater than the upper constraint.
            </p>
            <p class="body">
            This overload is preferred when the ValidationCriteria is WholeNumber, Decimal, or TextLength. When the ValidationCriteria is Time, 
            the <see cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)"/> overload is preferred, and when the ValidationCriteria is Date, the 
            <see cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)"/> overload is preferred.
            </p>
            </remarks>
            <param name="value">The lower constraint value used to compare against the cell value.</param>
            <exception cref="T:System.ArgumentException">
            Occurs when the specified value is greater than the upper constraint value. If the upper constraint formula does not equal 
            a constant, this verification is not performed.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)"/>
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/> 
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)">
            <summary>
            Sets the lower constraint value used to validate the cell value.
            </summary>
            <remarks>
            <p class="body">
            The way in which the cell value is compared to the lower constraint value is determined by the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            as well as the <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>.
            </p>
            <p class="body">
            Depending on the ValidationCriteria of the rule, either the cell value itself or the length of the cell value's text equivalent 
            is compared to the lower constraint value.
            </p>
            <p class="body">
            When the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/> is Between, the value must be greater than or equal to the lower constraint and less 
            than or equal to the upper constraint. When the ValidationOperator is NotBetween, the value must be less than the lower constraint
            or greater than the upper constraint.
            </p>
            <p class="body">
            This overload is preferred when the ValidationCriteria is Date. When the ValidationCriteria is WholeNumber, Decimal, or TextLength, 
            the <see cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)"/> overload is preferred, and when the ValidationCriteria is Time, the 
            <see cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)"/> overload is preferred.
            </p>
            </remarks>
            <param name="value">The lower constraint value used to compare against the cell value.</param>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="value"/> cannot be represented as a date in Excel.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the specified value is greater than the upper constraint value. If the upper constraint formula does not equal 
            a constant, this verification is not performed.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)"/>
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/> 
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)">
            <summary>
            Sets the lower constraint value used to validate the cell value.
            </summary>
            <remarks>
            <p class="body">
            The way in which the cell value is compared to the lower constraint value is determined by the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            as well as the <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>.
            </p>
            <p class="body">
            Depending on the ValidationCriteria of the rule, either the cell value itself or the length of the cell value's text equivalent 
            is compared to the lower constraint value.
            </p>
            <p class="body">
            When the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/> is Between, the value must be greater than or equal to the lower constraint and less 
            than or equal to the upper constraint. When the ValidationOperator is NotBetween, the value must be less than the lower constraint
            or greater than the upper constraint.
            </p>
            <p class="body">
            This overload is preferred when the ValidationCriteria is Time. When the ValidationCriteria is WholeNumber, Decimal, or TextLength, 
            the <see cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)"/> overload is preferred, and when the ValidationCriteria is Date, the 
            <see cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)"/> overload is preferred.
            </p>
            </remarks>
            <param name="value">The lower constraint value used to compare against the cell value.</param>
            <exception cref="T:System.ArgumentException">
            Occurs when the specified value is greater than the upper constraint value. If the upper constraint formula does not equal 
            a constant, this verification is not performed.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)"/>
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)">
            <summary>
            Gets the lower constraint formula used to validate the cell value.
            </summary>
            <param name="lowerConstraintFormula">The lower constraint formula to use for the rule.</param>
            <param name="address">
            The address of the cell or region that serves as the basis for relative references, or null to use the top-left cell of 
            the worksheet.
            </param>
            <remarks>
            <p class="body">
            The way in which the cell value is compared to the lower constraint formula's value is determined by the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            as well as the <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>.
            </p>
            <p class="body">
            Depending on the ValidationCriteria of the rule, either the cell value itself or the length of the cell value's text equivalent 
            is compared to the lower constraint formula's value.
            </p>
            <p class="body">
            When the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/> is Between, the value must be greater than or equal to the lower constraint and less 
            than or equal to the upper constraint. When the ValidationOperator is NotBetween, the value must be less than the lower constraint
            or greater than the upper constraint.
            </p>
            <p class="body">
            The address passed in is only needed if relative addresses are used in the the formula. When the data validation rule is 
            applied to cells or regions, the references in the formula used by each individual cell will be shifted by the offset of
            the cell to the passed in <paramref name="address"/>. For example, consider the formula specified is =B1 and the specified 
            address is A1. If the data validation rule is then applied to the A5 cell, the formula is will use is =B5. However, if the
            references in the formula are absolute, such as =$B$1, the same formula will be applied regardless of the specified address.
            </p>
            <p class="body">
            <paramref name="address"/> can be any valid cell or region reference on a worksheet. If a region address is specified, the
            top-left cell or the region is used. The cell or region specified does not need to have the data validation rule applied to it. 
            Any reference is allowed.
            </p>
            <p class="body">
            The cell reference mode with which to parse <paramref name="address"/> will be assumed to be A1, unless the data validation 
            rule is applied to a worksheet which is in a workbook, in which case the <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> will be used.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="lowerConstraintFormula"/> is null and the rule is currently applied to a <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="lowerConstraintFormula"/> is an <see cref="T:Infragistics.Documents.Excel.ArrayFormula"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="address"/> is not a valid cell or regions address.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Occurs when the specified value is null and the rule is currently applied to a <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            Occurs when <paramref name="lowerConstraintFormula"/> is not a valid formula.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the specified value equals a constant, such as =5, and the constant value is greater than the upper constraint value.
            If the upper constraint formula does not equal a constant, this verification is not performed.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/> 
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>
            Gets the lower constraint formula used to validate the cell value.
            </summary>
            <param name="lowerConstraintFormula">The lower constraint formula to use for the rule.</param>
            <param name="address">
            The address of the cell or region that serves as the basis for relative references, or null to use the top-left cell of 
            the worksheet.
            </param>
            <param name="format">The workbook format with which to parse <paramref name="address"/>.</param>
            <param name="cellReferenceMode">The cell reference mode with which to parse <paramref name="address"/>.</param>
            <param name="culture">The culture to use when parsing the formula string.</param>
            <remarks>
            <p class="body">
            The way in which the cell value is compared to the lower constraint formula's value is determined by the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            as well as the <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>.
            </p>
            <p class="body">
            Depending on the ValidationCriteria of the rule, either the cell value itself or the length of the cell value's text equivalent 
            is compared to the lower constraint formula's value.
            </p>
            <p class="body">
            When the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/> is Between, the value must be greater than or equal to the lower constraint and less 
            than or equal to the upper constraint. When the ValidationOperator is NotBetween, the value must be less than the lower constraint
            or greater than the upper constraint.
            </p>
            <p class="body">
            The address passed in is only needed if relative addresses are used in the the formula. When the data validation rule is 
            applied to cells or regions, the references in the formula used by each individual cell will be shifted by the offset of
            the cell to the passed in <paramref name="address"/>. For example, consider the formula specified is =B1 and the specified 
            address is A1. If the data validation rule is then applied to the A5 cell, the formula is will use is =B5. However, if the
            references in the formula are absolute, such as =$B$1, the same formula will be applied regardless of the specified address.
            </p>
            <p class="body">
            <paramref name="address"/> can be any valid cell or region reference on a worksheet. If a region address is specified, the
            top-left cell or the region is used. The cell or region specified does not need to have the data validation rule applied to it. 
            Any reference is allowed.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="lowerConstraintFormula"/> is null and the rule is currently applied to a <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="lowerConstraintFormula"/> is an <see cref="T:Infragistics.Documents.Excel.ArrayFormula"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="address"/> is not a valid cell or regions address.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Occurs when the specified value is null and the rule is currently applied to a <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            Occurs when <paramref name="lowerConstraintFormula"/> is not a valid formula.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the specified value equals a constant, such as =5, and the constant value is greater than the upper constraint value.
            If the upper constraint formula does not equal a constant, this verification is not performed.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when <paramref name="format"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookFormat"/> enumeration.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>  
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)">
            <summary>
            Sets the upper constraint value used to validate the cell value.
            </summary>
            <remarks>
            <p class="body">
            The way in which the cell value is compared to the upper constraint value is determined by the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            as well as the <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>.
            </p>
            <p class="body">
            Depending on the ValidationCriteria of the rule, either the cell value itself or the length of the cell value's text equivalent 
            is compared to the upper constraint value.
            </p>
            <p class="body">
            When the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/> is Between, the value must be greater than or equal to the lower constraint and less 
            than or equal to the upper constraint. When the ValidationOperator is NotBetween, the value must be less than the lower constraint
            or greater than the upper constraint.
            </p>
            <p class="body">
            This overload is preferred when the ValidationCriteria is WholeNumber, Decimal, or TextLength. When the ValidationCriteria is Time, 
            the <see cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)"/> overload is preferred, and when the ValidationCriteria is Date, the 
            <see cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)"/> overload is preferred.
            </p>
            </remarks>
            <param name="value">The lower constraint value used to compare against the cell value.</param>
            <exception cref="T:System.ArgumentException">
            Occurs when the specified value is less than the lower constraint value. If the lower constraint formula does not equal 
            a constant, this verification is not performed.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/> 
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)">
            <summary>
            Sets the upper constraint value used to validate the cell value.
            </summary>
            <remarks>
            <p class="body">
            The way in which the cell value is compared to the upper constraint value is determined by the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            as well as the <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>.
            </p>
            <p class="body">
            Depending on the ValidationCriteria of the rule, either the cell value itself or the length of the cell value's text equivalent 
            is compared to the upper constraint value.
            </p>
            <p class="body">
            When the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/> is Between, the value must be greater than or equal to the lower constraint and less 
            than or equal to the upper constraint. When the ValidationOperator is NotBetween, the value must be less than the lower constraint
            or greater than the upper constraint.
            </p>
            <p class="body">
            This overload is preferred when the ValidationCriteria is Date. When the ValidationCriteria is WholeNumber, Decimal, or TextLength, 
            the <see cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)"/> overload is preferred, and when the ValidationCriteria is Time, the 
            <see cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)"/> overload is preferred.
            </p>
            </remarks>
            <param name="value">The lower constraint value used to compare against the cell value.</param>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="value"/> cannot be represented as a date in Excel.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the specified value is less than the lower constraint value. If the lower constraint formula does not equal 
            a constant, this verification is not performed.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/> 
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)">
            <summary>
            Sets the upper constraint value used to validate the cell value.
            </summary>
            <remarks>
            <p class="body">
            The way in which the cell value is compared to the upper constraint value is determined by the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            as well as the <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>.
            </p>
            <p class="body">
            Depending on the ValidationCriteria of the rule, either the cell value itself or the length of the cell value's text equivalent 
            is compared to the upper constraint value.
            </p>
            <p class="body">
            When the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/> is Between, the value must be greater than or equal to the lower constraint and less 
            than or equal to the upper constraint. When the ValidationOperator is NotBetween, the value must be less than the lower constraint
            or greater than the upper constraint.
            </p>
            <p class="body">
            This overload is preferred when the ValidationCriteria is Time. When the ValidationCriteria is WholeNumber, Decimal, or TextLength, 
            the <see cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)"/> overload is preferred, and when the ValidationCriteria is Date, the 
            <see cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)"/> overload is preferred.
            </p>
            </remarks>
            <param name="value">The lower constraint value used to compare against the cell value.</param>
            <exception cref="T:System.ArgumentException">
            Occurs when the specified value is less than the lower constraint value. If the lower constraint formula does not equal 
            a constant, this verification is not performed.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)">
            <summary>
            Gets the upper constraint formula used to validate the cell value.
            </summary>
            <param name="upperConstraintFormula">The upper constraint formula to use for the rule.</param>
            <param name="address">
            The address of the cell or region that serves as the basis for relative references, or null to use the top-left cell of 
            the worksheet.
            </param>
            <remarks>
            <p class="body">
            The way in which the cell value is compared to the upper constraint formula's value is determined by the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            as well as the <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>.
            </p>
            <p class="body">
            Depending on the ValidationCriteria of the rule, either the cell value itself or the length of the cell value's text equivalent 
            is compared to the upper constraint formula's value.
            </p>
            <p class="body">
            When the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/> is Between, the value must be greater than or equal to the lower constraint and less 
            than or equal to the upper constraint. When the ValidationOperator is NotBetween, the value must be less than the lower constraint
            or greater than the upper constraint.
            </p>
            <p class="body">
            The address passed in is only needed if relative addresses are used in the the formula. When the data validation rule is 
            applied to cells or regions, the references in the formula used by each individual cell will be shifted by the offset of
            the cell to the passed in <paramref name="address"/>. For example, consider the formula specified is =B1 and the specified 
            address is A1. If the data validation rule is then applied to the A5 cell, the formula is will use is =B5. However, if the
            references in the formula are absolute, such as =$B$1, the same formula will be applied regardless of the specified address.
            </p>
            <p class="body">
            <paramref name="address"/> can be any valid cell or region reference on a worksheet. If a region address is specified, the
            top-left cell or the region is used. The cell or region specified does not need to have the data validation rule applied to it. 
            Any reference is allowed.
            </p>
            <p class="body">
            The cell reference mode with which to parse <paramref name="address"/> will be assumed to be A1, unless the data validation 
            rule is applied to a worksheet which is in a workbook, in which case the <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> will be used.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="upperConstraintFormula"/> is null and the rule is currently applied to a <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="upperConstraintFormula"/> is an <see cref="T:Infragistics.Documents.Excel.ArrayFormula"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="address"/> is not a valid cell or regions address.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Occurs when the specified value is null and the rule is currently applied to a <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            Occurs when <paramref name="upperConstraintFormula"/> is not a valid formula.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the specified value equals a constant, such as =5, and the constant value is greater than the upper constraint value.
            If the upper constraint formula does not equal a constant, this verification is not performed.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/> 
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>
            Gets the upper constraint formula used to validate the cell value.
            </summary>
            <param name="upperConstraintFormula">The upper constraint formula to use for the rule.</param>
            <param name="address">
            The address of the cell or region that serves as the basis for relative references, or null to use the top-left cell of 
            the worksheet.
            </param>
            <param name="format">The workbook format with which to parse <paramref name="address"/>.</param>
            <param name="cellReferenceMode">The cell reference mode with which to parse <paramref name="address"/>.</param>
            <param name="culture">The culture to use when parsing the formula string.</param>
            <remarks>
            <p class="body">
            The way in which the cell value is compared to the upper constraint formula's value is determined by the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            as well as the <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/>.
            </p>
            <p class="body">
            Depending on the ValidationCriteria of the rule, either the cell value itself or the length of the cell value's text equivalent 
            is compared to the upper constraint formula's value.
            </p>
            <p class="body">
            When the <see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/> is Between, the value must be greater than or equal to the lower constraint and less 
            than or equal to the upper constraint. When the ValidationOperator is NotBetween, the value must be less than the lower constraint
            or greater than the upper constraint.
            </p>
            <p class="body">
            The address passed in is only needed if relative addresses are used in the the formula. When the data validation rule is 
            applied to cells or regions, the references in the formula used by each individual cell will be shifted by the offset of
            the cell to the passed in <paramref name="address"/>. For example, consider the formula specified is =B1 and the specified 
            address is A1. If the data validation rule is then applied to the A5 cell, the formula is will use is =B5. However, if the
            references in the formula are absolute, such as =$B$1, the same formula will be applied regardless of the specified address.
            </p>
            <p class="body">
            <paramref name="address"/> can be any valid cell or region reference on a worksheet. If a region address is specified, the
            top-left cell or the region is used. The cell or region specified does not need to have the data validation rule applied to it. 
            Any reference is allowed.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="upperConstraintFormula"/> is null and the rule is currently applied to a <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="upperConstraintFormula"/> is an <see cref="T:Infragistics.Documents.Excel.ArrayFormula"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="address"/> is not a valid cell or regions address.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Occurs when the specified value is null and the rule is currently applied to a <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            Occurs when <paramref name="upperConstraintFormula"/> is not a valid formula.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the specified value equals a constant, such as =5, and the constant value is greater than the upper constraint value.
            If the upper constraint formula does not equal a constant, this verification is not performed.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when <paramref name="format"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookFormat"/> enumeration.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)"/>
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/> 
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetLowerConstraint(System.Double@)">
            <summary>
            Tries to obtain the value of the lower constraint.
            </summary>
            <remarks>
            <p class="body">
            The constraint value can only be obtained if it was set with one of the SetLowerConstraint methods or a formula was set with one of the 
            SetLowerConstraintFormula methods and the formula equals a constant value, such as =5.
            </p>
            </remarks>
            <param name="value">When the method returns, will be the value of the constraint or 0 if the value could not be obtained.</param>
            <returns>True if the constraint value could be obtained; False otherwise.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetLowerConstraint(System.DateTime@)">
            <summary>
            Tries to obtain the value of the lower constraint.
            </summary>
            <remarks>
            <p class="body">
            The constraint value can only be obtained if it was set with one of the SetLowerConstraint methods or a formula was set with one of the 
            SetLowerConstraintFormula methods and the formula equals a constant value, such as =5.
            </p>
            </remarks>
            <param name="value">When the method returns, will be the value of the constraint or DateTime.MinValue if the value could not be obtained.</param>
            <returns>True if the constraint value could be obtained; False otherwise.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetLowerConstraint(System.TimeSpan@)">
            <summary>
            Tries to obtain the value of the lower constraint.
            </summary>
            <remarks>
            <p class="body">
            The constraint value can only be obtained if it was set with one of the SetLowerConstraint methods or a formula was set with one of the 
            SetLowerConstraintFormula methods and the formula equals a constant value, such as =5.
            </p>
            </remarks>
            <param name="value">When the method returns, will be the value of the constraint or TimeSpan.Zero if the value could not be obtained.</param>
            <returns>True if the constraint value could be obtained; False otherwise.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetUpperConstraint(System.Double@)">
            <summary>
            Tries to obtain the value of the upper constraint.
            </summary>
            <remarks>
            <p class="body">
            The constraint value can only be obtained if it was set with one of the SetUpperConstraint methods or a formula was set with one of the 
            SetLowerConstraintFormula methods and the formula equals a constant value, such as =5.
            </p>
            </remarks>
            <param name="value">When the method returns, will be the value of the constraint or 0 if the value could not be obtained.</param>
            <returns>True if the constraint value could be obtained; False otherwise.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetUpperConstraint(System.DateTime@)">
            <summary>
            Tries to obtain the value of the upper constraint.
            </summary>
            <remarks>
            <p class="body">
            The constraint value can only be obtained if it was set with one of the SetUpperConstraint methods or a formula was set with one of the 
            SetLowerConstraintFormula methods and the formula equals a constant value, such as =5.
            </p>
            </remarks>
            <param name="value">When the method returns, will be the value of the constraint or DateTime.MinValue if the value could not be obtained.</param>
            <returns>True if the constraint value could be obtained; False otherwise.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetUpperConstraint(System.TimeSpan@)">
            <summary>
            Tries to obtain the value of the upper constraint.
            </summary>
            <remarks>
            <p class="body">
            The constraint value can only be obtained if it was set with one of the SetUpperConstraint methods or a formula was set with one of the 
            SetLowerConstraintFormula methods and the formula equals a constant value, such as =5.
            </p>
            </remarks>
            <param name="value">When the method returns, will be the value of the constraint or TimeSpan.Zero if the value could not be obtained.</param>
            <returns>True if the constraint value could be obtained; False otherwise.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator">
            <summary>
            Gets or sets the validation operator to use when comparing the cell value against the constraint values or formulas.
            </summary>
            <remarks>
            <p class="body">
            Depending on the <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/> of the rule, either the cell value itself or the 
            length of the cell value's text equivalent is compared to the constraint values or formulas.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when the value is not a member of the <see cref="T:Infragistics.Documents.Excel.TwoConstraintDataValidationOperator"/> enumeration.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)"/>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria"/> 
        </member>
        <member name="T:Infragistics.Documents.Excel.ValueConstraintDataValidationRule">
            <summary>
            Base class for all data validations rules which compare the cell value against one or more constraint when determining
            the validity of the cell value.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.OneConstraintDataValidationRule"/>
            <seealso cref="T:Infragistics.Documents.Excel.TwoConstraintDataValidationRule"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.IsEquivalentTo(Infragistics.Documents.Excel.DataValidationRule)">
            <summary>
            Indicates if this rule is structurally equivalent to another.
            </summary>
            <param name="other">The rule to compare against</param>
            <returns>Returns true if the specified <paramref name="other"/> has the same settings as this rule.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria">
            <summary>
            Gets or sets the criteria to use when validating the cell value against the constraint(s).
            </summary>
            <remarks>
            <p class="body">
            Depending on the value specified, either then cell value or the length of its text equivalent will be compared against the 
            constraint(s). In addition, certain ValidationCriteria values may disallow a cell value even if it is valid when compared to
            the constraint. For example, the ValidationCriteria.WholeNumber value will not allow any number with a fractional portion.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when the value is not a member of the <see cref="T:Infragistics.Documents.Excel.DataValidationCriteria"/> enumeration.
            </exception>
        </member>
        <member name="T:Infragistics.Documents.Excel.DisplayOptionsBase">
            <summary>
            Abstract base class which exposes the various display options available for a sheet which can be 
            saved with both a sheet and its custom view.
            </summary>
            <remarks>
            <p class="body">
            This class provides a way to control how a sheet is displayed when it is viewed in Microsoft Excel.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.DisplayOptionsBase.Reset">
            <summary>
            Resets the display options to their default settings.
            </summary>
            <remarks>
            <p class="body">
            The defaults used for each setting are the same defaults with which Microsoft Excel creates a blank sheet.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.DisplayOptionsBase.ResetCore">
            <summary>
            Resets the display options to their default settings.
            </summary>
            <remarks>
            <p class="body">
            The defaults used for each setting are the same defaults with which Microsoft Excel creates a blank sheet.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptionsBase.Visibility">
            <summary>
            Gets or sets the visibility of the sheet.
            </summary>
            <remarks>
            <p class="body">
            The visibility determines whether the sheet's tab will appear in the tab bar at the
            bottom of Microsoft Excel. 
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.WorksheetVisibility"/> enumeration.
            </exception>
            <value>The visibility of the worksheet.</value>
        </member>
        <member name="E:Infragistics.Documents.Excel.DisplayOptionsBase.PropertyChanged">
            <summary>
            Occurs after a property value has changed
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.DisplayOptions">
            <summary>
            Abstract base class which exposes the various display options available for a worksheet which can be 
            saved with both a worksheet and a custom view.
            </summary>
            <remarks>
            <p class="body">
            This class provides a way to control how a worksheet is displayed when it is viewed in Microsoft Excel.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.CustomViewDisplayOptions"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetDisplayOptions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.DisplayOptions.ResetCore">
            <summary>
            Resets the display options to their default settings.
            </summary>
            <remarks>
            <p class="body">
            The defaults used for each setting are the same defaults with which Microsoft Excel creates a blank worksheet.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.FrozenPaneSettings">
            <summary>
            Gets the settings which control the frozen panes in the worksheet.
            </summary>
            <remarks>
            <p class="body">
            For these settings to be saved in the workbook file, <see cref="P:Infragistics.Documents.Excel.DisplayOptions.PanesAreFrozen"/> must be True.
            </p>
            <p class="note">
            <B>Note:</B> Frozen and unfrozen panes cannot be used simultaneously, so depending on whether the panes are 
            frozen or unfrozen, these settings may not be used.
            </p>
            </remarks>
            <value>The settings which control the frozen panes in the worksheet..</value>
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.PanesAreFrozen"/>
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.UnfrozenPaneSettings"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.GridlineColor">
            <summary>
            Gets or sets the color of the gridlines on the worksheet.
            </summary>
            <remarks>
            <p class="body">
            If the workbook is using a standard palette, the color set may be changed if it is not in the palette.
            In this case, the closest color in the standard palette will be used.
            </p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            The workbook is using a custom palette and setting this color would cause the custom palette to use 
            too many colors.
            </exception>
            <value>The color of the gridlines on the worksheet.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.PanesAreFrozen">
            <summary>
            Gets or sets the value which indicates if the panes in the worksheet are frozen.
            </summary>
            <remarks>
            <p class="body">
            Depending on the value of this property, either the <see cref="P:Infragistics.Documents.Excel.DisplayOptions.FrozenPaneSettings"/> or the
            <see cref="P:Infragistics.Documents.Excel.DisplayOptions.UnfrozenPaneSettings"/> will be used for the worksheet. The unused settings are 
            ignored and are not saved with the workbook stream.
            </p>
            </remarks>
            <value>The value which indicates if the panes in the worksheet are frozen.</value>
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.FrozenPaneSettings"/>
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.UnfrozenPaneSettings"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.ShowExpansionIndicatorBelowGroupedRows">
            <summary>
            Gets or sets the value which indicates whether the expansion indicators should be shown below grouped, 
            or indented rows.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.ShowExpansionIndicatorToRightOfGroupedColumns">
            <summary>
            Gets or sets the value which indicates whether the expansion indicators should be shown to the right of 
            grouped, or indented rows.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.ShowFormulasInCells">
            <summary>
            Gets or sets the value which indicates whether formulas are shown in cells.
            </summary>
            <remarks>
            <p class="body">
            If this value is True, the formula string will be displayed in the cell. If the value is
            False, the result of the formula will be displayed in the cell.
            </p>
            </remarks>
            <value>The value which indicates whether formulas are shown in cells.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.ShowGridlines">
            <summary>
            Gets or sets the value which indicates whether gridlines are shown between cells.
            </summary>
            <value>The value which indicates whether gridlines are shown between cells.</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.PrintGridlines"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.ShowOutlineSymbols">
            <summary>
            Gets or sets the value which indicates whether outline symbols are shown for outlined columns and rows.
            </summary>
            <remarks>
            <p class="body">
            If the outline symbols are displayed, they provide a visual representation of the outline levels or rows 
            and columns in Microsoft Excel.  In addition, the outline symbols include the expansion indicators which
            allow for the expanding and collapsing of outline groups.
            </p>
            </remarks>
            <value>The value which indicates whether outline symbols are shown for outlined columns and rows.</value>
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.OutlineLevel"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.ShowRowAndColumnHeaders">
            <summary>
            Gets or sets the value which indicates whether to display row and column headers.
            </summary>
            <remarks>
            <p class="body">
            The row and column headers show the identifier of the row or column. They also allow the user to easily select
            all cells in a row or column by clicking them.
            </p>
            </remarks>
            <value>The value which indicates whether to display row and column headers.</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.PrintRowAndColumnHeaders"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.ShowRulerInPageLayoutView">
            <summary>
            Gets or sets the value which indicates whether to show rulers in the page layout view.
            </summary>
            <remarks>
            <p class="body">
            When this value is True, one ruler will display above the column headers of the active page
            in page layout view. Another ruler will also display before the row headers of the active page.
            </p>
            <p class="note">
            <b>Note:</b> This property will only affect the worksheet view if the <see cref="P:Infragistics.Documents.Excel.DisplayOptions.View"/> is 
            PageLayout.
            </p>
            <p class="note">
            <b>Note:</b> The <see cref="T:Infragistics.Documents.Excel.WorksheetView"/> value of PageLayout is only supported in Excel 2007. 
            If a worksheet with that View is viewed in earlier versions of Microsoft Excel, the view will 
            default to Normal view.
            </p>
            </remarks>
            <value>The value which indicates whether to show rulers in the page layout view.</value>
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.View"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.ShowZeroValues">
            <summary>
            Gets or sets the value which indicates whether zero values are shown in cells.
            </summary>
            <remarks>
            <p class="body">
            If this value is True, cells with a value of zero will display their values; otherwise,
            those cells will display as blanks.
            </p>
            </remarks>
            <value>The value which indicates whether zero values are shown in cells.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.UnfrozenPaneSettings">
            <summary>
            Gets the settings which control the unfrozen panes in the worksheet.
            </summary>
            <remarks>
            <p class="body">
            For these settings to be saved in the workbook file, <see cref="P:Infragistics.Documents.Excel.DisplayOptions.PanesAreFrozen"/> must be False.
            </p>
            <p class="note">
            <B>Note:</B> Frozen and unfrozen panes cannot be used simultaneously, so depending on whether the panes are 
            frozen or unfrozen, these settings may not be used.
            </p>
            </remarks>
            <value>The settings which control the unfrozen panes in the worksheet.</value>
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.PanesAreFrozen"/>
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.FrozenPaneSettings"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.View">
            <summary>
            Gets or sets the current view of the worksheet.
            </summary>
            <remarks>
            <p class="body">
            The view determines the overall display of the worksheet in Microsoft Excel.
            </p>
            <p class="note">
            <b>Note:</b> The <see cref="T:Infragistics.Documents.Excel.WorksheetView"/> value of PageLayout is only supported in Excel 2007. 
            If a worksheet with that View is viewed in earlier versions of Microsoft Excel, the view will 
            default to Normal view.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the WorksheetView enumeration.
            </exception>
            <value>The current view of the worksheet.</value>
            <seealso cref="P:Infragistics.Documents.Excel.CustomViewDisplayOptions.MagnificationInCurrentView"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInNormalView"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInPageBreakView"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInPageLayoutView"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.DisplayOptions.ClearSelection">
            <summary>
            Removes any saved selection information.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.DisplayValueCollection">
            <summary>
            A collection of display text values.
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetText"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32)"/>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.DisplayValues"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.DisplayValueCollection.Add(System.String)">
            <summary>
            Adds a display text value to the collection.
            </summary>
            <param name="item">The display text value to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item"/> is null or empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="item"/> matches another value in the collection. Values are compared case-insensitively.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.DisplayValueCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection is owned by a <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/> which only allowed the values in the collection.
            Clearing the collection would prevent the filter from including any values, which is not allowed for a FixedValuesFilter.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.DisplayValueCollection.Contains(System.String)">
            <summary>
            Determines whether the specified value is in the collection.
            </summary>
            <remarks>
            <p class="body">
            Display text values are compared case-insensitively.
            </p>
            </remarks>
            <param name="item">The display text value to find in the collection.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DisplayValueCollection.IndexOf(System.String)">
            <summary>
            Gets the index of the specified display text value in the collection.
            </summary>
            <param name="item">The display text value to find in the collection.</param>
            <returns>
            The 0-based index of the specified display text value in the collection or -1 if the item is not in the collection.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DisplayValueCollection.Insert(System.Int32,System.String)">
            <summary>
            Inserts a display text value into the collection.
            </summary>
            <param name="index">The 0-based index where the value should be inserted.</param>
            <param name="item">The display text value to insert into the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item"/> is null or empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="item"/> matches another value in the collection. Values are compared case-insensitively.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than <see cref="P:Infragistics.Documents.Excel.DisplayValueCollection.Count"/>.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.DisplayValueCollection.Remove(System.String)">
            <summary>
            Removes a display text value from the collection.
            </summary>
            <param name="item">The display text value to remove from the collection.</param>
            <remarks>
            <p class="body">
            Display text values are compared case-insensitively.
            </p>
            </remarks>
            <returns>True if the value was found and removed; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DisplayValueCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the display text value at the specified index.
            </summary>
            <param name="index">The 0-based index of the value to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than or equal to <see cref="P:Infragistics.Documents.Excel.DisplayValueCollection.Count"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            This operation removes the last item in the collection and it is owned by a <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/> which only 
            allowed the values in the collection. Clearing the collection would prevent the filter from including any values, which 
            is not allowed for a FixedValuesFilter.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayValueCollection.Count">
            <summary>
            Gets the number of display text values in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayValueCollection.Item(System.Int32)">
            <summary>
            Gets or sets the display text value at the specified index.
            </summary>
            <param name="index">The 0-based index of the value to get or set.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than or equal to <see cref="P:Infragistics.Documents.Excel.DisplayValueCollection.Count"/>.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The value assigned is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value assigned matches another value in the collection. Values are compared case-insensitively.
            </exception>
        </member>
        <member name="T:Infragistics.Documents.Excel.DocumentProperties">
            <summary>
            Class which exposes the document level properties for a Microsoft Excel file.
            </summary>
            <remarks>
            <p class="body">
            The properties exposed by this class can be changed on a Microsoft Excel file by right-clicking it
            in Windows Explorer and editing the properties on the Summary tab.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.DocumentProperties.Author">
            <summary>
            Gets or sets the author of the document.
            </summary>
            <remarks>
            <p class="body">
            The value of the property has no effect on the contents of the file when opened in a host application.
            It is simply extra data associated with the document.
            </p>
            </remarks>
            <value>A string specifying the author of the document.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.DocumentProperties.Category">
            <summary>
            Gets or sets the category of the document.
            </summary>
            <remarks>
            <p class="body">
            The value of the property has no effect on the contents of the file when opened in a host application.
            It is simply extra data associated with the document.
            </p>
            </remarks>
            <value>A string specifying the category of the document.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.DocumentProperties.Comments">
            <summary>
            Gets or sets the comments associated with the document.
            </summary>
            <remarks>
            <p class="body">
            The value of the property has no effect on the contents of the file when opened in a host application.
            It is simply extra data associated with the document.
            </p>
            </remarks>
            <value>A string specifying the comments associated with the document.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.DocumentProperties.Company">
            <summary>
            Gets or sets the company to which the document belongs.
            </summary>
            <remarks>
            <p class="body">
            The value of the property has no effect on the contents of the file when opened in a host application.
            It is simply extra data associated with the document.
            </p>
            </remarks>
            <value>A string specifying the company to which the document belongs.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.DocumentProperties.Keywords">
            <summary>
            Gets or sets the keywords which describe the document.
            </summary>
            <remarks>
            <p class="body">
            The value of the property has no effect on the contents of the file when opened in a host application.
            It is simply extra data associated with the document.
            </p>
            </remarks>
            <value>A string specifying the keywords which describe the document.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.DocumentProperties.Manager">
            <summary>
            Gets or sets the manager associated with the document.
            </summary>
            <remarks>
            <p class="body">
            The value of the property has no effect on the contents of the file when opened in a host application.
            It is simply extra data associated with the document.
            </p>
            </remarks>
            <value>A string specifying the manager associated with the document.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.DocumentProperties.Status">
            <summary>
            Gets or sets the current status of the document.
            </summary>
            <remarks>
            <p class="body">
            The value of the property has no effect on the contents of the file when opened in a host application.
            It is simply extra data associated with the document.
            </p>
            </remarks>
            <value>A string representing the current status of the document.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.DocumentProperties.Subject">
            <summary>
            Gets or sets the subject of the contents of the document.
            </summary>
            <remarks>
            <p class="body">
            The value of the property has no effect on the contents of the file when opened in a host application.
            It is simply extra data associated with the document.
            </p>
            </remarks>
            <value>A string specifying the subject of the contents of the document.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.DocumentProperties.Title">
            <summary>
            Gets or sets the title of the document.
            </summary>
            <remarks>
            <p class="body">
            The value of the property has no effect on the contents of the file when opened in a host application.
            It is simply extra data associated with the document.
            </p>
            </remarks>
            <value>A string specifying the title of the document.</value>
        </member>
        <member name="E:Infragistics.Documents.Excel.DocumentProperties.PropertyChanged">
            <summary>
            Occurs after a property value has changed
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalculationMode">
            <summary>
            Represents the the ways formulas are recalculated when their referenced values change.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CalculationMode"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalculationMode.Manual">
            <summary>
            Formulas must be recalculated manually, by pressing a button in the Microsoft Excel interface.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalculationMode.Automatic">
            <summary>
            Formulas and data tables are automatically recalculated when the values in referenced cells change.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalculationMode.AutomaticExceptForDataTables">
            <summary>
            Only formulas are automatically recalculated when the values in referenced cells change.
            Data tables must be recalculated manually.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CellBorderLineStyle">
            <summary>
            Represents the different cell border line styles.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.Default">
            <summary>
            Use the default border line style.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.None">
            <summary>
            No border.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.Thin">
            <summary>
            Thin border.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.Medium">
            <summary>
            Medium border.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.Dashed">
            <summary>
            Dashed border.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.Dotted">
            <summary>
            Dotted border.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.Thick">
            <summary>
            Thick border.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.Double">
            <summary>
            Double-line border.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.Hair">
            <summary>
            Dotted border with small dots.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.MediumDashed">
            <summary>
            Dotted border with big dots.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.DashDot">
            <summary>
            Dash-dot border.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.MediumDashDot">
            <summary>
            Medium dash-dot border.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.DashDotDot">
            <summary>
            Dash-dot-dot border.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.MediumDashDotDot">
            <summary>
            Medium dash-dot-dot border.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.SlantedDashDot">
            <summary>
            Slanted dash-dot border.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CellReferenceMode">
            <summary>
            Represents the various ways cells can be referenced in a formula.
            </summary>
            <remarks>
            <p class="body">
            Setting this on the <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> will also affect the row and column labels.
            </p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellReferenceMode.A1">
            <summary>
            Cells are referenced by first specifying characters representing the column and a one-based number 
            specifying the row (R54 or CA56). The dollar sign ($) can preface one or both identifiers to make them 
            absolute references ($A$7). Without the dollar sign, references still use absolute row and column addresses,
            although shifting a formula to a new cell will perform a similar shift on all relative references.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellReferenceMode.R1C1">
            <summary>
            Cells are referenced in the following format R&lt;RowIndex&gt;C&lt;ColumnIndex&gt; (R34C5 or R2C345). 
            These indices are one-based and represent absolute references. To create a relative reference in R1C1 mode, a relative
            index must be placed inside square brackets following the R and/or C ( R[-1]C[5] or R9C[-3] ).  An R by itself 
            also represents a relative reference and is equivalent to R[0]. Similarly, C is equivalent to C[0], which means a 
            formula of =RC always references the cell which contains the formula.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.DateSystem">
            <summary>
            Represents the various ways a date can be stored internally.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DateSystem.From1900">
            <summary>
            Dates are stored as time elapsed since 1900.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DateSystem.From1904">
            <summary>
            Dates are stored as time elapsed since 1904 (used mainly on Apple computers).
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.DiagonalBorders">
            <summary>
            Represents the diagonal borders which can be displayed in cells.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DiagonalBorders.Default">
            <summary>
            The default value for the diagonal borders.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DiagonalBorders.None">
            <summary>
            No diagonal borders will be displayed in the cell.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DiagonalBorders.DiagonalDown">
            <summary>
            A diagonal border going from the top-left to bottom-right corner will be displayed in the cell.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DiagonalBorders.DiagonalUp">
            <summary>
            A diagonal border going from the bottom-left to top-right corner will be displayed in the cell.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DiagonalBorders.All">
            <summary>
            Both diagonal borders will be displayed in the cell.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ExcelDefaultableBoolean">
            <summary>
            Enumeration for a boolean type property that allows for a
            default setting. This is used in property override situations.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ExcelDefaultableBoolean.Default">
            <summary>
            Use the current default.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ExcelDefaultableBoolean.True">
            <summary>
            True.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ExcelDefaultableBoolean.False">
            <summary>
            False.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.FillPatternStyle">
            <summary>
            Enumeration for fill pattern styles. Default value is used in property override situations.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.Default">
            <summary>
            Obsolete. Use None instead.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.None">
            <summary>
            No fill pattern.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.Solid">
            <summary>
            Solid fill pattern with fill pattern foreground color. 
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.Gray50percent">
            <summary>
            "50% gray" fill pattern.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.Gray75percent">
            <summary>
            "75% gray" fill pattern.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.Gray25percent">
            <summary>
            "25% gray" fill pattern.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.HorizontalStripe">
            <summary>
            Horizontal stripe fill pattern.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.VerticalStripe">
            <summary>
            Vertical stripe fill pattern.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.ReverseDiagonalStripe">
            <summary>
            Reverse diagonal stripe fill pattern.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.DiagonalStripe">
            <summary>
            Diagonal stripe fill pattern.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.DiagonalCrosshatch">
            <summary>
            Diagonal crosshatch fill pattern.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.ThickDiagonalCrosshatch">
            <summary>
            Thick diagonal crosshatch fill pattern.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.ThinHorizontalStripe">
            <summary>
            Thin horizontal stripe fill pattern.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.ThinVerticalStripe">
            <summary>
            Thin vertical stripe fill pattern.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.ThinReverseDiagonalStripe">
            <summary>
            Thin reverse diagonal stripe fill pattern.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.ThinDiagonalStripe">
            <summary>
            Thin diagonal stripe fill pattern.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.ThinHorizontalCrosshatch">
            <summary>
            Thin horizontal crosshatch fill pattern.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.ThinDiagonalCrosshatch">
            <summary>
            Thin diagonal crosshatch fill pattern.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.Gray12percent">
            <summary>
            "12.5% gray" fill pattern.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.Gray6percent">
            <summary>
            "6.25% gray" fill pattern.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle">
            <summary>
            Enumeration for font superscript or subscript style. Default value is used in property override situations.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle.Default">
            <summary>
            Use the current default.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle.None">
            <summary>
            No superscript or subscript style.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle.Superscript">
            <summary>
            Superscript style.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle.Subscript">
            <summary>
            Subscript style.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.FontUnderlineStyle">
            <summary>
            Enumeration for font underline styles. Default value is used in property override situations.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FontUnderlineStyle.Default">
            <summary>
            Use the current default.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FontUnderlineStyle.None">
            <summary>
            No underline style.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FontUnderlineStyle.Single">
            <summary>
            Single underline style.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FontUnderlineStyle.Double">
            <summary>
            Double underline style.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FontUnderlineStyle.SingleAccounting">
            <summary>
            Single accounting underline style.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FontUnderlineStyle.DoubleAccounting">
            <summary>
            Double accounting underline style.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.FormatConditionIcon">
            <summary>
            Identifies the set of icons used by a <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.ConditionalFormatting.IconCriterion.Icon"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.GreenUpArrow">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconGreenUpArrow = 1
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.YellowSideArrow">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconYellowSideArrow = 2
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.RedDownArrow">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconRedDownArrow = 3
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.GrayUpArrow">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconGrayUpArrow = 4
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.GraySideArrow">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconGraySideArrow = 5
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.GrayDownArrow">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconGrayDownArrow = 6
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.GreenFlag">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconGreenFlag = 7
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.YellowFlag">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconYellowFlag = 8
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.RedFlag">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconRedFlag = 9
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.GreenCircle">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconGreenCircle = 10
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.YellowCircle">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconYellowCircle = 11
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.RedCircleWithBorder">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconRedCircleWithBorder = 12
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.BlackCircleWithBorder">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconBlackCircleWithBorder = 13
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.GreenTrafficLight">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconGreenTrafficLight = 14
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.YellowTrafficLight">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconYellowTrafficLight = 15
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.RedTrafficLight">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconRedTrafficLight = 16
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.YellowTriangle">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconYellowTriangle = 17
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.RedDiamond">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconRedDiamond = 18
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.GreenCheckSymbol">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconGreenCheckSymbol = 19
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.YellowExclamationSymbol">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconYellowExclamationSymbol = 20
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.RedCrossSymbol">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconRedCrossSymbol = 21
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.GreenCheck">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconGreenCheck = 22
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.YellowExclamation">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconYellowExclamation = 23
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.RedCross">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconRedCross = 24
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.YellowUpInclineArrow">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconYellowUpInclineArrow = 25
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.YellowDownInclineArrow">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconYellowDownInclineArrow = 26
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.GrayUpInclineArrow">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconGrayUpInclineArrow = 27
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.GrayDownInclineArrow">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconGrayDownInclineArrow = 28
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.RedCircle">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconRedCircle = 29
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.PinkCircle">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconPinkCircle = 30
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.GrayCircle">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconGrayCircle = 31
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.BlackCircle">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconBlackCircle = 32
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.CircleWithOneWhiteQuarter">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconCircleWithOneWhiteQuarter = 33
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.CircleWithTwoWhiteQuarters">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconCircleWithTwoWhiteQuarters = 34
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.CircleWithThreeWhiteQuarters">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconCircleWithThreeWhiteQuarters = 35
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.WhiteCircleAllWhiteQuarters">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconWhiteCircleAllWhiteQuarters = 36
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.ZeroBars">
            <summary>
            Microsoft.Office.Interop.Excel.xlIcon0Bars = 37
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.OneBar">
            <summary>
            Microsoft.Office.Interop.Excel.xlIcon1Bar = 38
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.TwoBars">
            <summary>
            Microsoft.Office.Interop.Excel.xlIcon2Bars = 39
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.ThreeBars">
            <summary>
            Microsoft.Office.Interop.Excel.xlIcon3Bars = 40
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.FourBars">
            <summary>
            Microsoft.Office.Interop.Excel.xlIcon4Bars = 41
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.GoldStar">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconGoldStar = 42
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.HalfGoldStar">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconHalfGoldStar = 43
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.SilverStar">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconSilverStar = 44
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.GreenUpTriangle">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconGreenUpTriangle = 45
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.YellowDash">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconYellowDash = 46
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.RedDownTriangle">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconRedDownTriangle = 47
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.FourFilledBoxes">
            <summary>
            Microsoft.Office.Interop.Excel.xlIcon4FilledBoxes = 48
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.ThreeFilledBoxes">
            <summary>
            Microsoft.Office.Interop.Excel.xlIcon3FilledBoxes = 49
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.TwoFilledBoxes">
            <summary>
            Microsoft.Office.Interop.Excel.xlIcon2FilledBoxes = 50
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.OneFilledBox">
            <summary>
            Microsoft.Office.Interop.Excel.xlIcon1FilledBox = 51
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.ZeroFilledBoxes">
            <summary>
            Microsoft.Office.Interop.Excel.xlIcon0FilledBoxes = 52
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIcon.NoCellIcon">
            <summary>
            Microsoft.Office.Interop.Excel.xlIconNoCellIcon = -1
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.FormatConditionIconSet">
            <summary>
            Constants which identify a set of icons for an <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.IconSetConditionalFormat"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIconSet.IconSetNoIcon">
            <summary>
            No icon is shown.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIconSet.IconSet3Arrows">
            <summary>
            Microsoft.Office.Interop.Excel.xl3Arrows = 1
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIconSet.IconSet3ArrowsGray">
            <summary>
            Microsoft.Office.Interop.Excel.xl3ArrowsGray = 2
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIconSet.IconSet3Flags">
            <summary>
            Microsoft.Office.Interop.Excel.xl3Flags = 3
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIconSet.IconSet3TrafficLights1">
            <summary>
            Microsoft.Office.Interop.Excel.xl3TrafficLights1 = 4
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIconSet.IconSet3TrafficLights2">
            <summary>
            Microsoft.Office.Interop.Excel.xl3TrafficLights2 = 5
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIconSet.IconSet3Signs">
            <summary>
            Microsoft.Office.Interop.Excel.xl3Signs = 6
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIconSet.IconSet3Symbols">
            <summary>
            Microsoft.Office.Interop.Excel.xl3Symbols = 7
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIconSet.IconSet3Symbols2">
            <summary>
            Microsoft.Office.Interop.Excel.xl3Symbols2 = 8
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIconSet.IconSet4Arrows">
            <summary>
            Microsoft.Office.Interop.Excel.xl4Arrows = 9
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIconSet.IconSet4ArrowsGray">
            <summary>
            Microsoft.Office.Interop.Excel.xl4ArrowsGray = 10
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIconSet.IconSet4RedToBlack">
            <summary>
            Microsoft.Office.Interop.Excel.xl4RedToBlack = 11
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIconSet.IconSet4Rating">
            <summary>
            Microsoft.Office.Interop.Excel.xl4CRV = 12
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIconSet.IconSet4TrafficLights">
            <summary>
            Microsoft.Office.Interop.Excel.xl4TrafficLights = 13
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIconSet.IconSet5Arrows">
            <summary>
            Microsoft.Office.Interop.Excel.xl5Arrows = 14
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIconSet.IconSet5ArrowsGray">
            <summary>
            Microsoft.Office.Interop.Excel.xl5ArrowsGray = 15
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIconSet.IconSet5Rating">
            <summary>
            Microsoft.Office.Interop.Excel.xl5CRV = 16
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIconSet.IconSet5Quarters">
            <summary>
            Microsoft.Office.Interop.Excel.xl5Quarters = 17
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIconSet.IconSet3Stars">
            <summary>
            Microsoft.Office.Interop.Excel.xl3Stars = 18
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIconSet.IconSet3Triangles">
            <summary>
            Microsoft.Office.Interop.Excel.xl3Triangles = 19
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FormatConditionIconSet.IconSet5Boxes">
            <summary>
            Microsoft.Office.Interop.Excel.xl5Boxes = 20
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.HorizontalCellAlignment">
            <summary>
            Enumeration for horizontal alignment styles. Default value is used in property override situations.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalCellAlignment.Default">
            <summary>
            Use the current default.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalCellAlignment.General">
            <summary>
            Alignment depends on underlying data type.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalCellAlignment.Left">
            <summary>
            Left alignment.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalCellAlignment.Center">
            <summary>
            Centered alignment.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalCellAlignment.Right">
            <summary>
            Right alignment.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalCellAlignment.Fill">
            <summary>
            Repeat cell value to fill whole cell.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalCellAlignment.Justify">
            <summary>
            Justify alignment.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalCellAlignment.CenterAcrossSelection">
            <summary>
            Centers the contents of the left-most cell in a center across selection group. All other cells in the center across selection group must be empty. The cells are not merged, and the data may appear to be in a cell other than the left-most cell.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalCellAlignment.Distributed">
            <summary>
            Distributed alignment.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.HorizontalTextAlignment">
            <summary>
            Represents the various horizontal text alignment types.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalTextAlignment.Center">
            <summary>
            Align text in the center of the line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalTextAlignment.Distributed">
            <summary>
            Distributes the words across the entire line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalTextAlignment.Justified">
            <summary>
            Align text so it is justified across the line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalTextAlignment.JustifiedLow">
            <summary>
            Aligns the text with an adjusted kashida length for Arabic text.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalTextAlignment.Left">
            <summary>
            Align the text to the left of the line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalTextAlignment.Right">
            <summary>
            Align the text to the right of the line.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalTextAlignment.ThaiDistributed">
            <summary>
            Distributes Thai text by treating each character as a word.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ObjectDisplayStyle">
            <summary>
            Represents the various way objects and shapes are displayed in the workbook.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ObjectDisplayStyle.ShowAll">
            <summary>
            All object are be shown.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ObjectDisplayStyle.ShowPlaceholders">
            <summary>
            Placeholders are shown in place of objects.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ObjectDisplayStyle.HideAll">
            <summary>
            No objects or shapes are shown.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Orientation">
            <summary>
            Represents the page orientations available when a worksheet is printed.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Orientation.Landscape">
            <summary>
            The page is printed with the larger dimension horizontal.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Orientation.Portrait">
            <summary>
            The page is printed with the larger dimension vertical.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Orientation.Default">
            <summary>
            The page is printed with the default setting.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PageOrder">
            <summary>
            Represents the ways to order the pages of multiple page worksheets.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PageOrder.DownThenOver">
            <summary>
            The first page to print is the top-left page. The next pages printed are below the first page.  
            When there are no more pages below, the page to the right of the top-left page is printed, then the pages 
            below it, and so on.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PageOrder.OverThenDown">
            <summary>
            The first page to print is the top-left page. The next pages printed are right of the first page.  
            When there are no more pages to the right, the page below the top-left page is printed, then the pages 
            to the right of it, and so on.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PageNumbering">
            <summary>
            Represents the way pages are numbered when printed.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PageNumbering.Automatic">
            <summary>
            Pages are automatically numbered based on the style of the worksheet.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PageNumbering.UseStartPageNumber">
            <summary>
            The starting page number specified is used for the first page, additional
            pages receive a page number that it one greater than the previous page.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PaneLocation">
            <summary>
            Represents the locations of the various panes which could exist in a multi-pane
            view of a worksheet.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaneLocation.BottomRight">
            <summary>
            The bottom-right pane of the worksheet. This location is only valid if the worksheet
            is split both horizontally and veritcally.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaneLocation.TopRight">
            <summary>
            The top-right pane of the worksheet. This location is only valid if the worksheet
            is split vertically. If the worksheet is only has left and right panes, this is the 
            location of the right pane.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaneLocation.BottomLeft">
            <summary>
            The bottom-left pane of the worksheet. This location is only valid is the worksheet
            is split horizontally. If the worksheet only has top and bottom panes, this is the 
            location of the bottom pane.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaneLocation.TopLeft">
            <summary>
            This top-left pane of the worksheet. This location is always valid. If the worksheet
            does not have any pane splits, this is the only pane. If the worksheet only has top
            and bottom panes, this is the location of the top pane. If the worksheet only has
            left and right panes, this is the location of the left pane.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PaperSize">
            <summary>
            Represents the various paper sizes available for printing.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Undefined">
            <summary>
            Undefined
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Letter">
            <summary>
            Letter 8 1/2\" x 11\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.LetterSmall">
            <summary>
            Letter small 8 1/2\" x 11\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Tabloid">
            <summary>
            Tabloid 11\" x 17\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Ledger">
            <summary>
            Ledger 17\" x 11\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Legal">
            <summary>
            Legal 8 1/2\" x 14\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Statement">
            <summary>
            Statement 5 1/2\" x 8 1/2\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Executive">
            <summary>
            Executive 7 1/4\" x 10 1/2\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A3">
            <summary>
            A3 297mm x 420mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A4">
            <summary>
            A4 210mm x 297mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A4Small">
            <summary>
            A4 small 210mm x 297mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A5">
            <summary>
            A5 148mm x 210mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.B4JIS">
            <summary>
            B4 (JIS) 257mm x 364mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.B5JIS">
            <summary>
            B5 (JIS) 182mm x 257mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Folio">
            <summary>
            Folio 8 1/2\" x 13\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Quarto">
            <summary>
            Quarto 215mm x 275mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Size10x14">
            <summary>
            10x14 10\" x 14\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Size11x17">
            <summary>
            11x17 11\" x 17\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Note">
            <summary>
            Note 8 1/2\" x 11\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Envelope9">
            <summary>
            Envelope #9 3 7/8\" x 8 7/8\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Envelope10">
            <summary>
            Envelope #10 4 1/8\" x 9 1/2\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Envelope11">
            <summary>
            Envelope #11 4 1/2\" x 10 3/8\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Envelope12">
            <summary>
            Envelope #12 4 3/4\" x 11\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Envelope14">
            <summary>
            Envelope #14 5\" x 11 1/2\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.C">
            <summary>
            C 17\" x 22\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.D">
            <summary>
            D 22\" x 34\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.E">
            <summary>
            E 34\" x 44\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.EnvelopeDL">
            <summary>
            Envelope DL 110mm x 220mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.EnvelopeC5">
            <summary>
            Envelope C5 162mm x 229mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.EnvelopeC3">
            <summary>
            Envelope C3 324mm x 458mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.EnvelopeC4">
            <summary>
            Envelope C4 229mm x 324mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.EnvelopeC6">
            <summary>
            Envelope C6 114mm x 162mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.EnvelopeC6C5">
            <summary>
            Envelope C6/C5 114mm x 229mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.B4ISO_1">
            <summary>
            B4 (ISO) 250mm x 353mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.B5ISO">
            <summary>
            B5 (ISO) 176mm x 250mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.B6ISO">
            <summary>
            B6 (ISO) 125mm x 176mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.EnvelopeItaly">
            <summary>
            Envelope Italy 110mm x 230mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.EnvelopeMonarch">
            <summary>
            Envelope Monarch 3 7/8\" x 7 1/2\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Size634Envelope">
            <summary>
            6 3/4 Envelope 3 5/8\" x 6 1/2\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.USStandardFanfold">
            <summary>
            US Standard Fanfold 14 7/8\" x 11\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.GermanStandardFanfold">
            <summary>
            German Std. Fanfold 8 1/2\" x 12\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.GermanLegalFanfold">
            <summary>
            German Legal Fanfold 8 1/2\" x 13\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.B4ISO_2">
            <summary>
            B4 (ISO) 250mm x 353mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.JapanesePostcard">
            <summary>
            Japanese Postcard 100mm x 148mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Size9x11">
            <summary>
            9x11 9\" x 11\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Size10x11">
            <summary>
            10x11 10\" x 11\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Size15x11">
            <summary>
            15x11 15\" x 11\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.EnvelopeInvite">
            <summary>
            Envelope Invite 220mm x 220mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.LetterExtra">
            <summary>
            Letter Extra 9 1/2\" x 12\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.LegalExtra">
            <summary>
            Legal Extra 9 1/2\" x 15\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.TabloidExtra">
            <summary>
            Tabloid Extra 11 11/16\" x 18\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A4Extra">
            <summary>
            A4 Extra 235mm x 322mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.LetterTransverse">
            <summary>
            Letter Transverse 8 1/2\" x 11\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A4Transverse">
            <summary>
            A4 Transverse 210mm x 297mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.LetterExtraTransverse">
            <summary>
            Letter Extra Transv. 9 1/2\" x 12\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.SuperAA4">
            <summary>
            Super A/A4 227mm x 356mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.SuperBA3">
            <summary>
            Super B/A3 305mm x 487mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.LetterPlus">
            <summary>
            Letter Plus 8 1/2\" x 12 11/16\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A4Plus">
            <summary>
            A4 Plus 210mm x 330mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A5Transverse">
            <summary>
            A5 Transverse 148mm x 210mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.B5JISTransverse">
            <summary>
            B5 (JIS) Transverse 182mm x 257mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A3Extra">
            <summary>
            A3 Extra 322mm x 445mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A5Extra">
            <summary>
            A5 Extra 174mm x 235mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.B5ISOExtra">
            <summary>
            B5 (ISO) Extra 201mm x 276mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A2">
            <summary>
            A2 420mm x 594mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A3Transverse">
            <summary>
            A3 Transverse 297mm x 420mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A3ExtraTransverse">
            <summary>
            A3 Extra Transverse 322mm x 445mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.DblJapanesePostcard">
            <summary>
            Dbl. Japanese Postcard 200mm x 148mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A6">
            <summary>
            A6 105mm x 148mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.LetterRotated">
            <summary>
            Letter Rotated 11\" x 8 1/2\"
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A3Rotated">
            <summary>
            A3 Rotated 420mm x 297mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A4Rotated">
            <summary>
            A4 Rotated 297mm x 210mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A5Rotated">
            <summary>
            A5 Rotated 210mm x 148mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.B4JISRotated">
            <summary>
            B4 (JIS) Rotated 364mm x 257mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.B5JISRotated">
            <summary>
            B5 (JIS) Rotated 257mm x 182mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.JapanesePostcardRotated">
            <summary>
            Japanese Postcard Rot. 148mm x 100mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.DblJapanesePostcardRotated">
            <summary>
            Dbl. Jap. Postcard Rot. 148mm x 200mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A6Rotated">
            <summary>
            A6 Rotated 148mm x 105mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.B6JIS">
            <summary>
            B6 (JIS) 128mm x 182mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.B6JISRotated">
            <summary>
            B6 (JIS) Rotated 182mm x 128mm
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Size12x11">
            <summary>
            12x11 12\" x 11\"
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PositioningOptions">
            <summary>
            Represents the options available for getting or setting the bounds of a shape, cell, or region.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PositioningOptions.None">
            <summary>
            No special options should be used. Get and set actual bounds on the worksheet in its current state.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PositioningOptions.IgnoreHiddenRowsAndColumns">
            <summary>
            Deprecated. Use TreatAllRowsAndColumnsAsVisible instead.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PositioningOptions.TreatAllRowsAndColumnsAsVisible">
            <summary>
            Ignore the <see cref="P:Infragistics.Documents.Excel.RowColumnBase.Hidden"/> value on all rows and columns. 
            Get and set bounds as if all rows and columns were currently visible.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Precision">
            <summary>
            Represents the types of precision which can be used when obtaining the value of a cell.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Precision.UseDisplayValues">
            <summary>
            The display value of the cell is used. If the cell's actual value is 10.005, but it is using currency formatting,
            it will display as $10.01.  When this cell is used in calculations, its displayed value of 10.01 will be used.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Precision.UseRealCellValues">
            <summary>
            The actual value of the cell is used. If the cell's actual value is 10.005, but it is using currency formatting,
            it will display as $10.01.  When this cell is used in calculations, its stored value of 10.005 will be used, 
            even though the display shows a slightly different value.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PredefinedShapeType">
            <summary>
            Represents the shape types that are predefined in Microsoft Excel.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PredefinedShapeType.Diamond">
            <summary>
            Represents the <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.DiamondShape"/> shape.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PredefinedShapeType.Ellipse">
            <summary>
            Represents the <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.EllipseShape"/> shape.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PredefinedShapeType.Heart">
            <summary>
            Represents the <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.HeartShape"/> shape.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PredefinedShapeType.IrregularSeal1">
            <summary>
            Represents the <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.IrregularSeal1Shape"/> shape.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PredefinedShapeType.IrregularSeal2">
            <summary>
            Represents the <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.IrregularSeal2Shape"/> shape.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PredefinedShapeType.LightningBolt">
            <summary>
            Represents the <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.LightningBoltShape"/> shape.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PredefinedShapeType.Line">
            <summary>
            Represents the <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.LineShape"/> shape.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PredefinedShapeType.Pentagon">
            <summary>
            Represents the <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.PentagonShape"/> shape.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PredefinedShapeType.Rectangle">
            <summary>
            Represents the <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.RectangleShape"/> shape.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PredefinedShapeType.RightTriangle">
            <summary>
            Represents the <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.RightTriangleShape"/> shape.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PredefinedShapeType.StraightConnector1">
            <summary>
            Represents the <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.StraightConnector1Shape"/> shape.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PrintErrors">
            <summary>
            Represents the various ways to print cell errors in a worksheet.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PrintErrors.PrintAsDisplayed">
            <summary>
            Errors are printed just as they are displayed on the worksheet.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PrintErrors.DontPrint">
            <summary>
            Errors are not prints, as though the cells containing them have no value.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PrintErrors.PrintAsDashes">
            <summary>
            Errors are printed as two dashes "--".
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PrintErrors.PrintAsNA">
            <summary>
            Errors are prints as "#N/A".
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PrintNotes">
            <summary>
            Represents the various ways to print cell notes.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PrintNotes.DontPrint">
            <summary>
            Cell notes are not printed.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PrintNotes.PrintAsDisplayed">
            <summary>
            Cell notes are printed as they are shown on the worksheet. With this option, cell
            notes will only appear in the printed worksheet if they are displayed on the worksheet
            in Microsoft Excel. If the notes just show indicators in Excel, the indicators and notes 
            will not be printed. 
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PrintNotes.PrintAtEndOfSheet">
            <summary>
            Cell notes are printed on the last page, after the entire worksheet has printed.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ScalingType">
            <summary>
            Represents the ways to scale a worksheet when it is printed.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ScalingType.UseScalingFactor">
            <summary>
            The scaling factor is used to scale the worksheet when printing.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ScalingType.FitToPages">
            <summary>
            The page maximums are used to determine how many pages the worksheet can be printed on.
            Less pages can be used if there is not enough printable content in the worksheet.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ScrollBars">
            <summary>
            Represents the various scroll bar configurations available for the workbook.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ScrollBars.None">
            <summary>
            No scroll bars are shown in Microsoft Excel.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ScrollBars.Horizontal">
            <summary>
            Only the horizontal scroll bar is shown in Microsoft Excel.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ScrollBars.Vertical">
            <summary>
            Only the vertical scroll bar is shown in Microsoft Excel.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ScrollBars.Both">
            <summary>
            Both scroll bars are shown in Microsoft Excel.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ShapePositioningMode">
            <summary>
            Represents the ways shapes will be repositioned when rows and columns are resized.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ShapePositioningMode.MoveAndSizeWithCells">
            <summary>
            Shapes will move and size with the cells. If columns before (or rows above) the shape are expanded,
            the shape will shift left. If columns within a shape are expanded, the shape will be widened.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ShapePositioningMode.MoveWithCells">
            <summary>
            Shapes will move but not size with the cells. If columns before (or rows above) the shape are
            expanded, the shape will shift left. If columns within a shape are expanded, the shape will not
            be widened.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ShapePositioningMode.DontMoveOrSizeWithCells">
            <summary>
            Shapes will not move or size with the cells. The shape will remain in its absolute pixel position of
            the worksheet, regardless the rows and columns resized before or inside it.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.SheetType">
            <summary>
            Indicates the type of workbook <see cref="T:Infragistics.Documents.Excel.Sheet"/>
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SheetType.Worksheet">
            <summary>
            A sheet that contains rows and columns of data.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SheetType.Chartsheet">
            <summary>
            A sheet that displays a single <see cref="T:Infragistics.Documents.Excel.WorksheetChart"/>
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.SparklineAxisMinMax">
            <summary>
            Determines how the min or max axis is calculated for a <seealso cref="T:Infragistics.Documents.Excel.Sparklines.Sparkline"/>
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.VerticalAxisMaxType"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.VerticalAxisMinType"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.SparklineAxisMinMax.Individual">
            <summary>
            Specifies that the vertical axis minimum or maximum for each sparkline in this sparkline group is calculated automatically such that the data point with the minimum or maximum value can be displayed in the plot area.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SparklineAxisMinMax.Group">
            <summary>
            Specifies that the vertical axis minimum or maximum is shared across all sparklines in this sparkline group and is calculated automatically such that the data point with the minimum or maximum value can be displayed in the plot area.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SparklineAxisMinMax.Custom">
            <summary>
            Specifies that the vertical axis minimum or maximum for each sparkline in this sparkline group is specified by the <see cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.VerticalAxisMin"/> or the <see cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.VerticalAxisMax"/> attribute of the <see cref="T:Infragistics.Documents.Excel.Sparklines.SparklineGroup"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.SparklineDisplayBlanksAs">
            <summary>
            Determines how blanks are displayed in a sparkline
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.DisplayBlanksAs"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.SparklineDisplayBlanksAs.Span">
            <summary>
            Empty cells are plotted as interpolated.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SparklineDisplayBlanksAs.Gap">
            <summary>
            Empty cells are not plotted.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SparklineDisplayBlanksAs.Zero">
            <summary>
            Empty cells are plotted as zero.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.SparklineType">
            <summary>
            Determines the type if sparkline
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.Type"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.SparklineType.Line">
            <summary>
            A line sparkline
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SparklineType.Column">
            <summary>
            A series of vertical columns
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SparklineType.Stacked">
            <summary>
            Deprecated - same as WinLoss
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.SparklineType.WinLoss">
            <summary>
            Positive and negative values stacked 
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.TextFormatMode">
            <summary>
            Represents the various way to combine a cell's value and format string to get its text.
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetText"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetText(Infragistics.Documents.Excel.TextFormatMode)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32,Infragistics.Documents.Excel.TextFormatMode)"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.TextFormatMode.AsDisplayed">
            <summary>
            Format the cell text as it is displayed in the Microsoft Excel UI. This takes into account the cell width when 
            formatting the text.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.TextFormatMode.IgnoreCellWidth">
            <summary>
            Format the cell text as if it had unlimited space in the cell. However, this will not include padding characters 
            from the format string.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetCellFormatOptions">
            <summary>
            Flagged enumeration which indicates which groups of formatting properties are used in a format.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FormatOptions"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetCellFormatOptions.None">
            <summary>
            No format properties are used on the format.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetCellFormatOptions.ApplyNumberFormatting">
            <summary>
            The <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FormatString"/> property is used on the format.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetCellFormatOptions.ApplyAlignmentFormatting">
            <summary>
            The <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Alignment"/>, <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Indent"/>, <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Rotation"/>, 
            <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.ShrinkToFit"/>, <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.VerticalAlignment"/>, and 
            <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.WrapText"/> properties are used on the format.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetCellFormatOptions.ApplyFontFormatting">
            <summary>
            The <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Font"/> property is used on the format.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetCellFormatOptions.ApplyBorderFormatting">
            <summary>
            The <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo"/>, <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle"/>, 
            <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo"/>, <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorders"/>, 
            <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle"/>, <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo"/>, 
            <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle"/>, <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo"/>, 
            <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle"/>, <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo"/>, and 
            <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle"/> properties are used on the format.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetCellFormatOptions.ApplyFillFormatting">
            <summary>
            The <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill"/> property is used on the format.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetCellFormatOptions.ApplyProtectionFormatting">
            <summary>
            The <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Locked"/> property is used on the format.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetCellFormatOptions.All">
            <summary>
            All properties are used on the format.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.VerticalCellAlignment">
            <summary>
            Enumeration for vertical alignment styles. Default value is used in property override situations.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.VerticalCellAlignment.Default">
            <summary>
            Use the current default.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.VerticalCellAlignment.Top">
            <summary>
            Top alignment.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.VerticalCellAlignment.Center">
            <summary>
            Center alignment.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.VerticalCellAlignment.Bottom">
            <summary>
            Bottom alignment.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.VerticalCellAlignment.Justify">
            <summary>
            Justify alignment.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.VerticalCellAlignment.Distributed">
            <summary>
            Distributed alignment.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.VerticalTextAlignment">
            <summary>
            Represents the various vertical text alignment types.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.VerticalTextAlignment.Bottom">
            <summary>
            Align the text to the bottom of the available area.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.VerticalTextAlignment.Center">
            <summary>
            Align the center to the bottom of the available area.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.VerticalTextAlignment.Top">
            <summary>
            Align the text to the top of the available area.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookEncryptionMode">
            <summary>
            Represents the various encryption modes that can be used to encrypt documents saved in the 2007 file formats and later.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookEncryptionMode.Standard">
            <summary>
            Standard encryption used in Excel 2007 and later
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookEncryptionMode.Agile">
            <summary>
            Agile encryption used in Excel 2010 and later
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookFormat">
            <summary>
            Represents the various file formats in which a workbook can be saved.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookFormat.Excel97To2003">
            <summary>
            The Excel 97-2003 BIFF8 file format.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookFormat.Excel97To2003Template">
            <summary>
            The Excel 97-2003 Template BIFF8 file format.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookFormat.Excel2007">
            <summary>
            The Excel 2007 XML file format.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookFormat.Excel2007MacroEnabled">
            <summary>
            The Excel 2007 Macro-Enabled XML file format.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookFormat.Excel2007MacroEnabledTemplate">
            <summary>
            The Excel 2007 Macro-Enabled Template XML file format.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookFormat.Excel2007Template">
            <summary>
            The Excel 2007 Template XML file format.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookFormat.StrictOpenXml">
            <summary>
            The Strict Open XML file format (ISO/IEC 29500 Strict).
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookThemeColorType">
            <summary>
            Represents the various theme colors in a workbook.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.ThemeColorType"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookThemeColorType.Light1">
            <summary>
            Represents the Text/Background - Light 1 theme color.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookThemeColorType.Dark1">
            <summary>
            Represents the Text/Background - Dark 1 theme color.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookThemeColorType.Light2">
            <summary>
            Represents the Text/Background - Light 2 theme color.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookThemeColorType.Dark2">
            <summary>
            Represents the Text/Background - Dark 2 theme color.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookThemeColorType.Accent1">
            <summary>
            Represents the Accent 1 theme color.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookThemeColorType.Accent2">
            <summary>
            Represents the Accent 2 theme color.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookThemeColorType.Accent3">
            <summary>
            Represents the Accent 3 theme color.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookThemeColorType.Accent4">
            <summary>
            Represents the Accent 4 theme color.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookThemeColorType.Accent5">
            <summary>
            Represents the Accent 5 theme color.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookThemeColorType.Accent6">
            <summary>
            Represents the Accent 6 theme color.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookThemeColorType.Hyperlink">
            <summary>
            Represents the Hyperlink theme color.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookThemeColorType.FollowedHyperlink">
            <summary>
            Represents the Followed Hyperlink theme color.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetSortType">
            <summary>
            Determines whether worksheet rows of columns are sorted within the region
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.Sorting.WorksheetSortSettings"/>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.SortSettings"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.WorksheetSortSettings.SortType">Worksheet.SortSettings.SortType</seealso>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetSortType.Rows">
            <summary>
            Sort rows
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetSortType.Columns">
            <summary>
            Sort columns
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetTableArea">
            <summary>
            Represents the various areas which can have a format applied at the table level.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.AreaFormats"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableArea.WholeTable">
            <summary>
            The format is applied to the entire table. Only the outer border properties can be set on this area format.
            Setting any other will cause an exception.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableArea.DataArea">
            <summary>
            The format is applied to the data area of the table.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableArea.HeaderRow">
            <summary>
            The format is applied to the header row of the table. All but the top border properties can be set on this 
            area format. Setting the top border properties will cause an exception.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableArea.TotalsRow">
            <summary>
            The format is applied to the totals row of the table. All but the bottom border properties can be set on this 
            area format. Setting the bottom border properties will cause an exception.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetTableColumnArea">
            <summary>
            Represents the various areas which can have a format applied at the table column level.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.AreaFormats"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableColumnArea.DataArea">
            <summary>
            The format is applied to the data area of the table column.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableColumnArea.HeaderCell">
            <summary>
            The format is applied to the header cell of the table column.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableColumnArea.TotalCell">
            <summary>
            The format is applied to the total cell of the table column.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetTableStyleArea">
            <summary>
            Represents the various areas which can have a format applied at the table style level.
            </summary>
            <remarks>
            <p class="note">
            <b>Note:</b> Only certain properties can be set on the table style are formats. The are as follows:
            <list type="bullet">
            <item><see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo"/></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle"/></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill"/></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo"/></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle"/></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo"/></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle"/></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo"/></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle"/></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorkbookFont.Bold">Font.Bold</see></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorkbookFont.ColorInfo">Font.ColorInfo</see></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorkbookFont.Italic">Font.Italic</see></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorkbookFont.Strikeout">Font.Strikeout</see></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorkbookFont.UnderlineStyle">Font.UnderlineStyle</see></item>
            </list>
            Setting any other format or font properties on the table style areas will cause an exception.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.WholeTable">
            <summary>
            The format is applied to the entire table.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.ColumnStripe">
            <summary>
            The format is applied to the odd numbered column stripes in the table.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.AlternateColumnStripe">
            <summary>
            The format is applied to the even numbered column stripes in the table.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.RowStripe">
            <summary>
            The format is applied to the odd numbered row stripes in the table.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.AlternateRowStripe">
            <summary>
            The format is applied to the even numbered row stripes in the table.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.LastColumn">
            <summary>
            The format is applied to the last column in the table.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.FirstColumn">
            <summary>
            The format is applied to the first column in the table.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.HeaderRow">
            <summary>
            The format is applied to the header row in the table.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.TotalRow">
            <summary>
            The format is applied to the totals row in the table.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.FirstHeaderCell">
            <summary>
            The format is applied to the first header cell in the table.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.LastHeaderCell">
            <summary>
            The format is applied to the last header cell in the table.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.FirstTotalCell">
            <summary>
            The format is applied to the first total cell in the table.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.LastTotalCell">
            <summary>
            The format is applied to the last total cell in the table.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetColumnWidthUnit">
            <summary>
            Represents the various units in which a column width can be represented.
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.GetDefaultColumnWidth(Infragistics.Documents.Excel.WorksheetColumnWidthUnit)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.SetDefaultColumnWidth(System.Double,Infragistics.Documents.Excel.WorksheetColumnWidthUnit)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetColumn.GetWidth(Infragistics.Documents.Excel.WorksheetColumnWidthUnit)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetColumn.SetWidth(System.Double,Infragistics.Documents.Excel.WorksheetColumnWidthUnit)"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetColumnWidthUnit.Character">
            <summary>
            The column width is represented in units of the '0' digit character width, including column padding. The digit is 
            measured with the default font for the workbook. The padding is a few pixels on either side of the column plus an 
            additional pixel for the gridline.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetColumnWidthUnit.Character256th">
            <summary>
            The column width is represented in 256ths of the '0' digit character width, including column padding, which means this 
            value will be 256 times the width expressed in Character units. The digit is measured with the default font for the 
            workbook. The padding is a few pixels on either side of the column plus an additional pixel for the gridline. These 
            units are the units in which the <see cref="P:Infragistics.Documents.Excel.WorksheetColumn.Width"/> and <see cref="P:Infragistics.Documents.Excel.Worksheet.DefaultColumnWidth"/> 
            properties are expressed.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetColumnWidthUnit.CharacterPaddingExcluded">
            <summary>
            The column width is represented in units of the '0' digit character width, excluding padding. The digit is measured with 
            the default font for the workbook. These units are the units in which Microsoft Excel displays column widths to the user
            and accepts new column widths from the user in the 'Column Width' dialog.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetColumnWidthUnit.Pixel">
            <summary>
            The column width is represented in pixels.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetColumnWidthUnit.Point">
            <summary>
            The column width is represented in points.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetColumnWidthUnit.Twip">
            <summary>
            The column width is represented in twips (20ths of a point).
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetView">
            <summary>
            Represents the various views for a worksheet.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetView.Normal">
            <summary>
            The worksheet is displayed in the normal view.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetView.PageLayout">
            <summary>
            The worksheet is displayed as it will appear when printed. This view displays where
            printed pages will begin and end as well as any headers or footers for the workbook.
            This value is only supported in Excel 2007 and defaults to Normal in earlier version.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetView.PageBreakPreview">
            <summary>
            This view shows a preview of where pages will break when the worksheet is printed.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetVisibility">
            <summary>
            Represents the various visibilities of a worksheet.
            </summary>
            <remarks>
            <p class="body">
            The worksheet visibility indicates how the worksheet will be displayed in the tab bar at 
            the bottom of the workbook window in Microsoft Excel.
            </p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetVisibility.Visible">
            <summary>
            The worksheet tab is present in the tab bar.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetVisibility.Hidden">
            <summary>
            The worksheet tab is not present in the tab bar. The worksheet can be made visible
            from the Unhide dialog in Microsoft Excel.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetVisibility.StrongHidden">
            <summary>
            The worksheet tab is not present in the tab bar. The worksheet can only be made visible
            again through a Visual Basic procedure in Microsoft Excel. The worksheet can not be made 
            visible through the user interface.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ErrorValue">
            <summary>
            Represents an error value in Microsoft Excel.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ErrorValue.ToString">
            <summary>
            Gets the string representation of the error value.
            </summary>
            <returns>The string representation of the error value.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.ErrorValue.ArgumentOrFunctionNotAvailable">
            <summary>
            Gets the ErrorValue representing the #N/A error.
            </summary>
            <remarks>
            <p class="body">
            This error occurs when a value isn't available for some part of a formula.
            </p>
            </remarks>
            <value>The ErrorValue representing the #N/A error.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.ErrorValue.Circularity">
            <summary>
            Gets the ErrorValue representing a circularity error.
            </summary>
            <remarks>
            <p class="body">
            There is no error constant for a circularity in Microsoft Excel and a circularity cannot be the result of a formula in Microsoft Excel.
            However, for run-time purposes, after loading or before saving a workbook, this error value will be used for the result of formulas
            which cause circular references when the owning workbook has <see cref="P:Infragistics.Documents.Excel.Workbook.IterativeCalculationsEnabled"/> set to False.
            </p>
            <p class="body">
            In Microsoft Excel, setting a circular reference formula on a cell will show an error dialog the first time the problem occurs. Subsequent
            formulas violating the circular reference restriction will just evaluate to zero. Therefore, when this value is encountered in a cell, it 
            can be treated as a zero for calculation purposes. This error value will be returned though so an actual zero value in a cell can be 
            differentiated from a circularity error.
            </p>
            <p class="note">
            <B>Note:</B> Because there is no circularity error constant in Microsoft Excel, this error value cannot be assigned to a cell manually.
            Attempting to assign this error value to a cell will result in an InvalidOperationException to be thrown. This error value will only be
            valid as the result of a formula which has been applied to a cell.
            </p>
            </remarks>
            <value>The ErrorValue representing a circularity error.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.ErrorValue.DivisionByZero">
            <summary>
            Gets the ErrorValue representing the #DIV/0! error.
            </summary>
            <remarks>
            <p class="body">
            This error occurs when a number is divided by zero.
            </p>
            </remarks>
            <value>The ErrorValue representing the #DIV/0! error.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.ErrorValue.EmptyCellRangeIntersection">
            <summary>
            Gets the ErrorValue representing the #NULL! error.
            </summary>
            <remarks>
            <p class="body">
            This error occurs when there is an intersection of two references that do not contain any common cells.
            The intersection operator is a space between two references.
            </p>
            </remarks>
            <value>The ErrorValue representing the #NULL! error.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.ErrorValue.InvalidCellReference">
            <summary>
            Gets the ErrorValue representing the #REF! error.
            </summary>
            <remarks>
            <p class="body">
            This error occurs when a cell reference or cell range reference is not valid.
            </p>
            </remarks>
            <value>The ErrorValue representing the #REF! error.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.ErrorValue.ValueRangeOverflow">
            <summary>
            Gets the ErrorValue representing the #NUM! error.
            </summary>
            <remarks>
            <p class="body">
            This error occurs when there are invalid numeric values in a formula.
            </p>
            </remarks>
            <value>The ErrorValue representing the #NUM! error.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.ErrorValue.WrongFunctionName">
            <summary>
            Gets the ErrorValue representing the #NAME? error.
            </summary>
            <remarks>
            <p class="body">
            This error occurs when text in a formula is not recognized.
            </p>
            </remarks>
            <value>The ErrorValue representing the #NAME? error.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.ErrorValue.WrongOperandType">
            <summary>
            Gets the ErrorValue representing the #VALUE! error.
            </summary>
            <remarks>
            <p class="body">
            This error occurs when an incorrect argument or operand is used in a function.
            </p>
            </remarks>
            <value>The ErrorValue representing the #VALUE! error.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.AverageFilter">
            <summary>
            Represents a filter which can filter data based on whether the data is below or above the average of the entire data range.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.AverageFilter.Average">
            <summary>
            Gets the average that was computed the last time the filter was applied or 0 if any errors or all non-numeric values 
            were found when applying the filter.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.AverageFilter.Type">
            <summary>
            Gets or sets the value indicating whether to filter in values below or above the average of the data range.
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.AverageFilterType"/> enumeration.
            </exception>
            <value>AboveAverage to show cells above the average of the data range; BelowAverage to show cells below the average.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.CustomFilter">
            <summary>
            Represents a filter which can filter data based on one or two custom conditions.
            </summary>
            <remarks>
            This filter type allows you to specify one or two filter conditions which have a comparison operator and value. 
            These two filter conditions can be combined with a logical and or a logical or operation.
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyCustomFilter(Infragistics.Documents.Excel.Filtering.CustomFilterCondition)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyCustomFilter(Infragistics.Documents.Excel.Filtering.CustomFilterCondition,Infragistics.Documents.Excel.Filtering.CustomFilterCondition,Infragistics.Documents.Excel.Filtering.ConditionalOperator)"/>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.CustomFilterCondition"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition1">
            <summary>
            Gets or sets the first condition by which to filter the cells in the data range.
            </summary>
            <remarks>
            <p class="body">
            The first filter condition is required. Setting Condition1 to null will cause an exception to be thrown.
            </p>
            <p class="body">
            When both Condition1 and <see cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition2"/> are set, the <see cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.ConditionalOperator"/> is used to determine
            how the conditions should be logically combined.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            The value assigned is null.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition2"/>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.ConditionalOperator"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition2">
            <summary>
            Gets or sets the second condition by which to filter the cells in the data range.
            </summary>
            <remarks>
            <p class="body">
            The second filter condition is optional. A value of null indicates that only <see cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition1"/> should be used to 
            filter the data.
            </p>
            <p class="body">
            When both Condition1 and Condition2 are set, the <see cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.ConditionalOperator"/> is used to determine how the conditions 
            should be logically combined.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition1"/>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.ConditionalOperator"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.CustomFilter.ConditionalOperator">
            <summary>
            Gets or sets the operator which defines how to logically combine <see cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition1"/> and <see cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition2"/>
            </summary>
            <remarks>
            <p class="body">
            When both Condition1 and Condition2 are set, the ConditionalOperator is used to determine how the conditions should be logically 
            combined. If only Condition1 is set and Condition2 is null, then ConditionalOperator is ignored.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.ConditionalOperator"/> enumeration.
            </exception>
            <value>
            And to require both conditions to pass for the data to be filtered in. Or to allow data to be filtered in when one or both 
            conditions are met.
            </value>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition1"/>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition2"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.CustomFilterCondition">
            <summary>
            A filter condition used in a <see cref="T:Infragistics.Documents.Excel.Filtering.CustomFilter"/>.
            </summary>
            <remarks>
            <p class="body">
            The CustomFilterCondition contains a comparison operator and a value. The value of each cell in the data range is compared against 
            the condition value using the comparison operator.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition1"/>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition2"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.CustomFilterCondition.#ctor(Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator,System.Double)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Filtering.CustomFilterCondition"/> instance.
            </summary>
            <param name="comparisonOperator">
            The operator which describes how the cell values should be compared against <paramref name="value"/>.
            </param>
            <param name="value">
            The number against which the cell values should be compared.
            </param>
            <remarks>
            <p class="body">
            For numbers, the <paramref name="comparisonOperator"/> cannot be BeginsWith, DoesNotBeginWith, EndsWith, DoesNotEndWith, 
            Contains, or DoesNotContain.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="comparisonOperator"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="value"/> is infinity or NaN.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="comparisonOperator"/> is BeginsWith, DoesNotBeginWith, EndsWith, DoesNotEndWith, Contains, or DoesNotContain.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.CustomFilterCondition.#ctor(Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator,System.DateTime)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Filtering.CustomFilterCondition"/> instance.
            </summary>
            <param name="comparisonOperator">
            The operator which describes how the cell values should be compared against <paramref name="value"/>.
            </param>
            <param name="value">
            The date against which the cell values should be compared.
            </param>
            <remarks>
            <p class="body">
            For dates, the <paramref name="comparisonOperator"/> cannot be BeginsWith, DoesNotBeginWith, EndsWith, DoesNotEndWith, 
            Contains, or DoesNotContain.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="comparisonOperator"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="value"/> cannot be expressed as a date in Excel.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="comparisonOperator"/> is BeginsWith, DoesNotBeginWith, EndsWith, DoesNotEndWith, Contains, or DoesNotContain.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.CustomFilterCondition.#ctor(Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator,System.TimeSpan)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Filtering.CustomFilterCondition"/> instance.
            </summary>
            <param name="comparisonOperator">
            The operator which describes how the cell values should be compared against <paramref name="value"/>.
            </param>
            <param name="value">
            The time against which the cell values should be compared.
            </param>
            <remarks>
            <p class="body">
            For times, the <paramref name="comparisonOperator"/> cannot be BeginsWith, DoesNotBeginWith, EndsWith, DoesNotEndWith, 
            Contains, or DoesNotContain.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="comparisonOperator"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="comparisonOperator"/> is BeginsWith, DoesNotBeginWith, EndsWith, DoesNotEndWith, Contains, or DoesNotContain.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.CustomFilterCondition.#ctor(Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator,System.String)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Filtering.CustomFilterCondition"/> instance.
            </summary>
            <param name="comparisonOperator">
            The operator which describes how the cell values should be compared against <paramref name="value"/>.
            </param>
            <param name="value">
            The string against which the cell values should be compared. The string can contains wild cards for any character (?) or for 
            zero or more characters (*).
            </param>
            <remarks>
            <p class="note">
            <b>Note:</b> If the value is longer than 255 characters in length and the workbook is saved in one of the 2003 formats,
            the correct rows will be hidden in the saved file, but the filter will be missing from the column.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="comparisonOperator"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator"/> enumeration.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.CustomFilterCondition.Equals(System.Object)">
            <summary>
            Determines whether the <see cref="T:Infragistics.Documents.Excel.Filtering.CustomFilterCondition"/> is equal to the specified object.
            </summary>
            <param name="obj">The object to test for equality.</param>
            <returns>True if the object is equal to this instance; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.CustomFilterCondition.GetHashCode">
            <summary>
            Gets the hash code for the <see cref="T:Infragistics.Documents.Excel.Filtering.CustomFilterCondition"/>.
            </summary>
            <returns>A number which can be used to hash this instance.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.CustomFilterCondition.ComparisonOperator">
            <summary>
            Gets the operator which describes how the cell values should be compared against <see cref="P:Infragistics.Documents.Excel.Filtering.CustomFilterCondition.Value"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.CustomFilterCondition.Value"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.CustomFilterCondition.Value">
            <summary>
            Gets the value against which the cell values should be compared.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.CustomFilterCondition.ComparisonOperator"/>		
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.DatePeriodFilter">
            <summary>
            Represents a filter which can filter dates in a specific period.
            </summary>
            <remarks>
            <p class="body">
            This filter allows dates to be filtered in if they are in a specific month or quarter of any year.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyDatePeriodFilter(Infragistics.Documents.Excel.Filtering.DatePeriodFilterType,System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyDatePeriodFilter(Infragistics.Documents.Excel.Filtering.DatePeriodFilterType,System.Int32)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.DatePeriodFilter.Type">
            <summary>
            Gets or sets the type of date period to filter in.
            </summary>
            <value>
            Month to filter in dates in a specific month of any year; Quarter to filter in dates in a specific quarter of any year.
            </value>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.DatePeriodFilterType"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value assigned is Quarter and the <see cref="P:Infragistics.Documents.Excel.Filtering.DatePeriodFilter.Value"/> is less than 1 or greater than 4 or
            the value assigned is Month and the Value is less than 1 or greater than 12.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.DatePeriodFilter.Value"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.DatePeriodFilter.Value">
            <summary>
            Gets or sets the 1-based value of the month or quarter to filter in.
            </summary>
            <remarks>
            <p class="body">
            If the <see cref="P:Infragistics.Documents.Excel.Filtering.DatePeriodFilter.Type"/> is Month, a Value of 1 indicates January, 2 indicates February, and so on. If Type is Quarter,
            a Value of 1 indicates Quarter 1, and so on.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Infragistics.Documents.Excel.Filtering.DatePeriodFilter.Type"/> is Quarter and the value assigned is less than 1 or greater than 4 or
            Type is Month and the value assigned is less than 1 or greater than 12.
            </exception>
            <value>The 1-based value of the month or quarter to filter in.</value>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.DatePeriodFilter.Type"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.DateRangeFilter">
            <summary>
            Abstract base class for filters which filter dates based on whether they are within a specified range of dates or not.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter"/>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.YearToDateFilter"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.DateRangeFilter.End">
            <summary>
            Gets the exclusive end date of the filtered in date range.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.DateRangeFilter.Start"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.DateRangeFilter.Start">
            <summary>
            Gets the inclusive start date of the filtered in date range.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.DateRangeFilter.End"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.DynamicValuesFilter">
            <summary>
            Abstract base class for all filter types which filter data based on a dynamic condition, such as the data present in the filtered
            data range, the date when the filter was applied, or the date when the filter is evaluated.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.AverageFilter"/>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter"/>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.DatePeriodFilter"/>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.YearToDateFilter"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.AverageFilterType">
            <summary>
            Represents the various types of the <see cref="T:Infragistics.Documents.Excel.Filtering.AverageFilter"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.AverageFilter.Type"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.AverageFilterType.AboveAverage">
            <summary>
            Filter in values above the average of the entire range of data being filtered.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.AverageFilterType.BelowAverage">
            <summary>
            Filter in values below the average of the entire range of data being filtered.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.CalendarType">
            <summary>
            Represents the various calendar types available for the <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/>
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.CalendarType"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.Gregorian">
            <summary>
            The Gregorian calendar should be used.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.GregorianArabic">
            <summary>
            The Arabic version of the Gregorian calendar should be used.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.GregorianMeFrench">
            <summary>
            The Middle East French version of the Gregorian calendar should be used.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.GregorianUs">
            <summary>
            The US English version of the Gregorian calendar should be used.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.GregorianXlitEnglish">
            <summary>
            The transliterated English version of the Gregorian calendar should be used.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.GregorianXlitFrench">
            <summary>
            The transliterated French version of the Gregorian calendar should be used.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.Hebrew">
            <summary>
            The Hebrew lunar calendar, as described by the Gauss formula for Passover and The Complete Restatement of Oral Law, 
            should be used.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.Hijri">
            <summary>
            The Hijri lunar calendar, as described by the Kingdom of Saudi Arabia, Ministry of Islamic Affairs, Endowments, Da‘wah 
            and Guidance, should be used.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.Japan">
            <summary>
            The Japanese Emperor Era calendar, as described by Japanese Industrial Standard JIS X 0301, should be used.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.Korea">
            <summary>
            The Korean Tangun Era calendar, as described by Korean Law Enactment No. 4, should be used.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.None">
            <summary>
            Specifies that no calendar should be used.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.Saka">
            <summary>
            The Saka Era calendar, as described by the Calendar Reform Committee of India, as part of the Indian Ephemeris and Nautical 
            Almanac, should be used.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.Taiwan">
            <summary>
            The Taiwanese calendar, as defined by the Chinese National Standard CNS 7648, should be used.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.Thai">
            <summary>
            The Thai calendar, as defined by the Royal Decree of H.M. King Vajiravudh (Rama VI) in Royal Gazette B. E. 2456 (1913 A.D.) 
            and by the decree of Prime Minister Phibunsongkhram (1941 A.D.) to start the year on the Gregorian January 1 and to map year 
            zero to Gregorian year 543 B.C., should be used.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.ConditionalOperator">
            <summary>
            Represents the various logical operators used to combine the conditions of the <see cref="T:Infragistics.Documents.Excel.Filtering.CustomFilter"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.ConditionalOperator"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ConditionalOperator.And">
            <summary>
            Filter in values where only <see cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition1"/> and <see cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition2"/> pass.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ConditionalOperator.Or">
            <summary>
            Filter in values where either <see cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition1"/> or <see cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition2"/> (or both) pass.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.DatePeriodFilterType">
            <summary>
            Represents the various date range types which can be filtered by the <see cref="T:Infragistics.Documents.Excel.Filtering.DatePeriodFilter"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.DatePeriodFilter.Type"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.DatePeriodFilterType.Month">
            <summary>
            Filter in dates in a specific month of any year.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.DatePeriodFilterType.Quarter">
            <summary>
            Filter in dates in a specific quarter of any year.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator">
            <summary>
            Represents the various comparisons which can be used in the <see cref="T:Infragistics.Documents.Excel.Filtering.CustomFilterCondition"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.CustomFilterCondition.ComparisonOperator"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator.Equals">
            <summary>
            Filter in values which are equal to the comparison value.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator.NotEqual">
            <summary>
            Filter in values which are not equal to the comparison value.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator.GreaterThan">
            <summary>
            Filter in values which are greater than the comparison value.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator.GreaterThanOrEqual">
            <summary>
            Filter in values which are greater than or equal to the comparison value.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator.LessThan">
            <summary>
            Filter in values which are less than the comparison value.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator.LessThanOrEqual">
            <summary>
            Filter in values which are less than or equal to the comparison value.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator.BeginsWith">
            <summary>
            Filter in string values which begin with the comparison value.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator.DoesNotBeginWith">
            <summary>
            Filter in string values which do not begin with the comparison value.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator.EndsWith">
            <summary>
            Filter in string values which ends with the comparison value.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator.DoesNotEndWith">
            <summary>
            Filter in string values which do not end with the comparison value.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator.Contains">
            <summary>
            Filter in string values which contain the comparison value.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator.DoesNotContain">
            <summary>
            Filter in string values which do not contain the comparison value.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.FixedDateGroupType">
            <summary>
            Represents the various types, or precisions, of a <see cref="T:Infragistics.Documents.Excel.Filtering.FixedDateGroup"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Type"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.FixedDateGroupType.Day">
            <summary>
            The group represents the day in which the <see cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Value"/> exists.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.FixedDateGroupType.Hour">
            <summary>
            The group represents the hour in which the <see cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Value"/> exists.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.FixedDateGroupType.Minute">
            <summary>
            The group represents the minute in which the <see cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Value"/> exists.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.FixedDateGroupType.Month">
            <summary>
            The group represents the month in which the <see cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Value"/> exists.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.FixedDateGroupType.Second">
            <summary>
            The group represents the second in which the <see cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Value"/> exists.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.FixedDateGroupType.Year">
            <summary>
            The group represents the year in which the <see cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Value"/> exists.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration">
            <summary>
            Represents the various durations which can be filtered by the <see cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter.Duration"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration.Day">
            <summary>
            The duration of accepted values is one day.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration.Week">
            <summary>
            The duration of accepted values is one week.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration.Month">
            <summary>
            The duration of accepted values is one month.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration.Quarter">
            <summary>
            The duration of accepted values is one quarter.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration.Year">
            <summary>
            The duration of accepted values is one year.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeOffset">
            <summary>
            Represents the various relative date offsets which can be filtered by the <see cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter.Offset"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.RelativeDateRangeOffset.Previous">
            <summary>
            Filter in values in the previous duration relative to the filter's creation date.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.RelativeDateRangeOffset.Current">
            <summary>
            Filter in values in the current duration relative to the filter's creation date.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.RelativeDateRangeOffset.Next">
            <summary>
            Filter in values in the next duration relative to the filter's creation date.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilterType">
            <summary>
            Represents the various filter types available for the <see cref="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter.Type"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.TopOrBottomFilterType.TopValues">
            <summary>
            Filter in the top N values in the sorted list of values.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.TopOrBottomFilterType.BottomValues">
            <summary>
            Filter in the bottom N values in the sorted list of values.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.TopOrBottomFilterType.TopPercentage">
            <summary>
            Filter in the top N percent of values the sorted list of values.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.TopOrBottomFilterType.BottomPercentage">
            <summary>
            Filter in the bottom N percent of values the sorted list of values.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.FillFilter">
            <summary>
            Represents a filter which will filter cells based on their background fills.
            </summary>
            <remarks>
            <p class="body">
            This filter specifies a single <see cref="T:Infragistics.Documents.Excel.CellFill"/>. Cells of with this fill will be visible in the data range. 
            All other cells will be hidden.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.FillFilter.Fill">
            <summary>
            Gets or sets the <see cref="T:Infragistics.Documents.Excel.CellFill"/> by which the cells should be filtered.
            </summary>
            <remarks>
            <p class="body">
            Cells of with this fill will be visible in the the data range. All other cells will be hidden.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            The value assigned is null.
            </exception>
            <value>The CellFill by which the cells should be filtered.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.CellFormat"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.Filter">
            <summary>
            Abstract base class for all filters which filters cells in a worksheet.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.CustomFilter"/>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter"/>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.DynamicValuesFilter"/>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.AverageFilter"/>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter"/>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.DatePeriodFilter"/>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.YearToDateFilter"/>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FontColorFilter"/>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FillFilter"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.FixedDateGroup">
            <summary>
            Represents a fixed range of dates.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.DateGroups"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.FixedDateGroup.#ctor(Infragistics.Documents.Excel.Filtering.FixedDateGroupType,System.DateTime)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Filtering.FixedDateGroup"/> instance.
            </summary>
            <param name="type">The type, or precision, of the group.</param>
            <param name="value">The reference date which determines range of accepted dates.</param>
            <remarks>
            <p class="body">
            <paramref name="type"/> indicates the precision of <paramref name="value"/>, which defines the range of accepted dates in the group.
            For example, if the type is Hour and value is 12/19/2011 1:29:13 PM, the date range allowed by the <see cref="T:Infragistics.Documents.Excel.Filtering.FixedDateGroup"/>
            would be 12/19/2011 1:00:00 PM to 12/19/2011 1:59:59 PM.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="type"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.FixedDateGroupType"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="value"/> cannot be defined in the Excel.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Equals(System.Object)">
            <summary>
            Determines whether the <see cref="T:Infragistics.Documents.Excel.Filtering.FixedDateGroup"/> is equal to the specified object.
            </summary>
            <param name="obj">The object to test for equality.</param>
            <returns>True if the object is equal to this instance; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.FixedDateGroup.GetHashCode">
            <summary>
            Gets the hash code for the <see cref="T:Infragistics.Documents.Excel.Filtering.FixedDateGroup"/>.
            </summary>
            <returns>A number which can be used to hash this instance.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.FixedDateGroup.GetRange(Infragistics.Documents.Excel.Filtering.CalendarType,System.DateTime@,System.DateTime@)">
            <summary>
            Gets the accepted date range based on the specified calendar type.
            </summary>
            <param name="calendarType">The calendar type in which to get the accepted date range.</param>
            <param name="start">Out parameter which will contain the inclusive start date of the accepted date range.</param>
            <param name="end">Out parameter which will contain the exclusive end date of the accepted date range.</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="calendarType"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.CalendarType"/> enumeration.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Start"/>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.End"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.End">
            <summary>
            Gets the exclusive end date of the accepted date range with a <see cref="T:Infragistics.Documents.Excel.Filtering.CalendarType"/> of None.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Start"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.FixedDateGroup.GetRange(Infragistics.Documents.Excel.Filtering.CalendarType,System.DateTime@,System.DateTime@)"/>  
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Start">
            <summary>
            Gets the inclusive start date of the accepted date range with a <see cref="T:Infragistics.Documents.Excel.Filtering.CalendarType"/> of None.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.End"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.FixedDateGroup.GetRange(Infragistics.Documents.Excel.Filtering.CalendarType,System.DateTime@,System.DateTime@)"/> 
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Type">
            <summary>
            Gets the type, or precision, of the group.
            </summary>
            <remarks>
            <p class="body">
            The group type indicates the precision of the <see cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Value"/>, which defines the range of accepted dates in the group.
            For example, if the Type is Hour and the Value is 12/19/2011 1:29:13 PM, the date range allowed by the <see cref="T:Infragistics.Documents.Excel.Filtering.FixedDateGroup"/>
            would be 12/19/2011 1:00:00 PM to 12/19/2011 1:59:59 PM.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Value"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Value">
            <summary>
            Gets the reference date which determines range of accepted dates.
            </summary>
            <remarks>
            <p class="body">
            <see cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Type"/> indicates the precision of the Value, which defines the range of accepted dates in the group.
            For example, if the Type is Hour and the Value is 12/19/2011 1:29:13 PM, the date range allowed by the <see cref="T:Infragistics.Documents.Excel.Filtering.FixedDateGroup"/>
            would be 12/19/2011 1:00:00 PM to 12/19/2011 1:59:59 PM.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Type"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection">
            <summary>
            A collection of fixed date groups.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.DateGroups"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection.Add(Infragistics.Documents.Excel.Filtering.FixedDateGroup)">
            <summary>
            Adds a fixed date group to the collection.
            </summary>
            <param name="item">The fixed date group to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="item"/> is already in the collection.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection is owned by a <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/> which only allowed the values in the collection.
            Clearing the collection would prevent the filter from including any values, which is not allowed for a FixedValuesFilter.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection.Contains(Infragistics.Documents.Excel.Filtering.FixedDateGroup)">
            <summary>
            Determines whether the specified fixed date group is in the collection.
            </summary>
            <param name="item">The fixed date group to find in the collection.</param>
            <returns>True if the item is in the collection; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection.IndexOf(Infragistics.Documents.Excel.Filtering.FixedDateGroup)">
            <summary>
            Gets the index of the specified fixed date group in the collection.
            </summary>
            <param name="item">The fixed date group to find in the collection.</param>
            <returns>
            The 0-based index of the specified fixed date group in the collection or -1 if the item is not in the collection.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection.Insert(System.Int32,Infragistics.Documents.Excel.Filtering.FixedDateGroup)">
            <summary>
            Inserts a fixed date group into the collection.
            </summary>
            <param name="index">The 0-based index where the value should be inserted.</param>
            <param name="item">The fixed date group to insert into the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="item"/> is already in the collection.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than <see cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection.Count"/>.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection.Remove(Infragistics.Documents.Excel.Filtering.FixedDateGroup)">
            <summary>
            Removes the fixed date group from the collection.
            </summary>
            <param name="item">The fixed date group to remove from the collection.</param>
            <returns>True if the value was found and removed; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the fixed date group at the specified index.
            </summary>
            <param name="index">The 0-based index of the value to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than or equal to <see cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection.Count"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            This operation removes the last item in the collection and it is owned by a <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/> which only 
            allowed the values in the collection. Clearing the collection would prevent the filter from including any values, which 
            is not allowed for a FixedValuesFilter.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection.Count">
            <summary>
            Gets the number of fixed date groups in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection.Item(System.Int32)">
            <summary>
            Gets or sets the fixed date group at the specified index.
            </summary>
            <param name="index">The 0-based index of the value to get or set.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than or equal to <see cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection.Count"/>.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The value assigned is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value assigned is already in the collection.
            </exception>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter">
            <summary>
            Represents a filter which can filter cells based on specific, fixed values, which are allowed to display.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,System.String[])"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,System.Collections.Generic.IEnumerable{System.String})"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,System.Collections.Generic.IEnumerable{Infragistics.Documents.Excel.Filtering.FixedDateGroup})"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,Infragistics.Documents.Excel.Filtering.CalendarType,System.Collections.Generic.IEnumerable{Infragistics.Documents.Excel.Filtering.FixedDateGroup})"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.CalendarType">
            <summary>
            Gets or sets the calendar type used to interpret values in the <see cref="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.DateGroups"/> collection.
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.CalendarType"/> enumeration.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.DateGroups">
            <summary>
            Gets the collection of fixed date groups which should be filtered in.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.DisplayValues"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.DisplayValues">
            <summary>
            Gets the collection of cell text values which should be filtered in.
            </summary>
            <remarks>
            <p class="body">
            Text values are compared case-insensitively.
            </p>
            <p class="note">
            <b>Note:</b> If any text values are longer than 255 characters in length and the workbook is saved in one of the 2003 formats,
            the correct rows will be hidden in the saved file, but the filter may be missing from the column or reapplying the filter
            may hide some of the matching cells.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.DateGroups"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetText(Infragistics.Documents.Excel.TextFormatMode)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32,Infragistics.Documents.Excel.TextFormatMode)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.IncludeBlanks">
            <summary>
            Gets or sets the value which indicates whether blank cells should be filtered in.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The value is set to False and both <see cref="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.DateGroups"/> and <see cref="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.DisplayValues"/> contain no values. 
            This would prevent the filter from including any values, which is not allowed for a <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/>.
            </exception>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.FontColorFilter">
            <summary>
            Represents a filter which will filter cells based on their font colors.
            </summary>
            <remarks>
            <p class="body">
            This filter specifies a single color. Cells with this color font will be visible in the data range. All other cells 
            will be hidden.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFontColorFilter(Infragistics.Documents.Excel.WorkbookColorInfo)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.FontColorFilter.FontColorInfo">
            <summary>
            Gets or sets the <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> which describes the font color by which the cells should be filtered.
            </summary>
            <remarks>
            <p class="body">
            Cells of this font color will be visible in the the data range. All other cells will be hidden.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            The value assigned is null.
            </exception>
            <value>The WorkbookColorInfo which describes the color by which the cells should be filtered.</value>
            <seealso cref="T:System.Type"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.CellFormat"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Font"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorkbookFont.ColorInfo"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.IconFilter">
            <summary>
            Represents a filter which can filter cells based on their conditional formatting icon.
            </summary>
            <remarks>
            <p class="body">
            This filter allows cells to be filtered in if their conditional formatting icon matches the criteria.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddIconSetCondition(System.String,Infragistics.Documents.Excel.FormatConditionIconSet)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyIconFilter(Infragistics.Documents.Excel.FormatConditionIconSet,System.Nullable{System.Int32})">WorksheetTableColumn.ApplyIconFilter(FormatConditionIconSet, int?)</seealso>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ApplyIconFilter(System.Int32,Infragistics.Documents.Excel.FormatConditionIconSet,System.Nullable{System.Int32})">WorksheetFilterSettings.ApplyIconFilter(int, FormatConditionIconSet, int?)</seealso>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.IconFilter.IconIndex">
            <summary>
            The icon set (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.IconFilter.IconSet">
            <summary>
            The icon's index in the associated icon set or null for 'NoCellIcon' (read-only).
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter">
            <summary>
            Represents a filter which can filter date cells based on dates relative to the when the filter was applied.
            </summary>
            <remarks>
            <p class="body">
            The RelativeDateRangeFilter allows you to filter in dates which are in the previous, current, or next time period 
            relative to the date when the filter was applied. The time periods available are day, week, month, quarter, year.
            So when using the previous filter type with a day duration, a 'yesterday' filter is created. Or when using a current 
            filter type with a year duration, a 'this year' filter is created. However, these filters compare the data against 
            the date when the filter was created. So a 'this year' filter created in 1999 will filter in all cells containing 
            dates in 1999, even if the workbook is opened in 2012.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyRelativeDateRangeFilter(Infragistics.Documents.Excel.Filtering.RelativeDateRangeOffset,Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter.Duration">
            <summary>
            Gets or sets the duration of the full range of accepted dates.
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration"/> enumeration.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter.Offset"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter.Offset">
            <summary>
            Gets or sets the offset of relative filter (previous, current, or next).
            </summary>
            <remarks>
            <p class="body">
            Type combined with <see cref="P:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter.Duration"/> determines the relative date range to filter.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeOffset"/> enumeration.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter.Duration"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter">
            <summary>
            Represents a filter which can filter in cells in the upper or lower portion of the sorted values.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyTopOrBottomFilter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyTopOrBottomFilter(Infragistics.Documents.Excel.Filtering.TopOrBottomFilterType,System.Int32)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter.Type">
            <summary>
            Gets or sets the type of the filter.
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assign is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilterType"/> enumeration.
            </exception>
            <value>
            TopValues or BottomValues to filter in the top or bottom N value in the list of sorted values; TopPercentage or BottomPercentage 
            to filter in the top or bottom N percentage of values in the list of sorted values.
            </value>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter.Value"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter.Value">
            <summary>
            Gets or sets the number or percentage of value of values which should be filtered in.
            </summary>
            <remarks>
            <p class="body">
            When <see cref="P:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter.Type"/> is TopValues or BottomValues, Value indicates the number of value which should be filtered in.
            When Type is TopPercentage or BottomPercentage, Value indicates percentage to filter in. For example, a Value of 15 and
            a Type of BottomPercentage will filter in the bottom 15 percent of values.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value assigned is less than 1 or greater than 500.
            </exception>
            <value>The number or percentage of items which should be filtered in.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings">
            <summary>
            Exposes methods to identify a region in the wroksheet and to apply filters and optionally sort criteria to that region.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.FilterSettings">Worksheet.FilterSettings</seealso>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region">
            <summary>
            Returns the total region including the filter headers (read-only).
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.SetRegion(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.SetRegion(System.String,Infragistics.Documents.Excel.CellReferenceMode)"/>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.SortAndFilterAreaRegion"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.SortAndFilterAreaRegion">
            <summary>
            Returns the region that the filters and sort settings are applied to (read-only).
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.SetRegion(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.SetRegion(System.String,Infragistics.Documents.Excel.CellReferenceMode)"/>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.SortSettings"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.SortSettings">
            <summary>
            Gets the settings which determine how the data within the worksheet's filer region should be sorted.
            </summary>
            <remarks>
            <p class="note">
            <B>Note:</B> Sort conditions are not constantly evaluated as data within the region changes. Sort conditions are applied to the region 
            only when they are are added or removed or when the <see cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ReapplySortConditions"/> method is called.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ReapplySortConditions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ApplyAverageFilter(System.Int32,Infragistics.Documents.Excel.Filtering.AverageFilterType)">
            <summary>
            Applies an <see cref="T:Infragistics.Documents.Excel.Filtering.AverageFilter"/> to the column.
            </summary>
            <param name="relativeColumnIndex">A zero based column index relative to the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/></param>
            <param name="type">The value indicating whether to filter in values below or above the average of the data range.</param>
            <exception cref="T:System.InvalidOperationException">If the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/> was not set.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If the relativeColumnIndex is outside of the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/>.</exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="type"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.AverageFilterType"/> enumeration.
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.AverageFilter"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.GetFilter(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ClearFilters"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ApplyCustomFilter(System.Int32,Infragistics.Documents.Excel.Filtering.CustomFilterCondition)">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.CustomFilter"/> to the column.
            </summary>
            <param name="relativeColumnIndex">A zero based column index relative to the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/></param>
            <param name="condition">The condition which must pass for the data to be filtered in.</param>
            <remarks>
            <p class="note">
            <b>Note:</b> If the filter condition value is longer than 255 characters in length and the workbook is saved in one of 
            the 2003 formats, the correct rows will be hidden in the saved file, but the filter will be missing from the column.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="condition"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/> was not set.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If the relativeColumnIndex is outside of the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/>.</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.CustomFilter"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.GetFilter(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ClearFilter(System.Int32)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ApplyCustomFilter(System.Int32,Infragistics.Documents.Excel.Filtering.CustomFilterCondition,Infragistics.Documents.Excel.Filtering.CustomFilterCondition,Infragistics.Documents.Excel.Filtering.ConditionalOperator)">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.CustomFilter"/> to the column.
            </summary>
            <param name="relativeColumnIndex">A zero based column index relative to the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/></param>
            <param name="condition1">The first condition used to filter the data.</param>
            <param name="condition2">The second condition used to filter the data.</param>
            <param name="conditionalOperator">
            The operator which defines how to logically combine <paramref name="condition1"/> and <paramref name="condition2"/>.
            </param>
            <remarks>
            <p class="body">
            If <paramref name="condition2"/> is null, the <paramref name="conditionalOperator"/> value is irrelevant.
            </p>
            <p class="note">
            <b>Note:</b> If one of the filter condition values is longer than 255 characters in length and the workbook is saved in one of 
            the 2003 formats, the correct rows will be hidden in the saved file, but the filter will be missing from the column.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="condition1"/> is null.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="conditionalOperator"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.ConditionalOperator"/> enumeration.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/> was not set.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If the relativeColumnIndex is outside of the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/>.</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.CustomFilter"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.GetFilter(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ClearFilter(System.Int32)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ApplyDatePeriodFilter(System.Int32,Infragistics.Documents.Excel.Filtering.DatePeriodFilterType,System.Int32)">
            <summary>
            Applies an <see cref="T:Infragistics.Documents.Excel.Filtering.DatePeriodFilter"/> to the column.
            </summary>
            <param name="relativeColumnIndex">A zero based column index relative to the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/></param>
            <param name="type">The type of date period to filter in.</param>
            <param name="value">The 1-based value of the month or quarter to filter in.</param>
            <remarks>
            <p class="body">
            If the <paramref name="type"/> is Month, a <paramref name="value"/> of 1 indicates January, 2 indicates February, and so on. 
            If type is Quarter, a value of 1 indicates Quarter 1, and so on.
            </p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">If the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/> was not set.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If the relativeColumnIndex is outside of the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/>.</exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="type"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.DatePeriodFilterType"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="type"/> is Quarter and <paramref name="value"/> is less than 1 or greater than 4 or
            type is Month and value is less than 1 or greater than 12.
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.DatePeriodFilter"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.GetFilter(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ClearFilter(System.Int32)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ApplyFillFilter(System.Int32,Infragistics.Documents.Excel.CellFill)">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.FillFilter"/> to the column.
            </summary>
            <param name="relativeColumnIndex">A zero based column index relative to the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/></param>
            <param name="fill">A <see cref="T:Infragistics.Documents.Excel.CellFill"/> by which the cells should be filtered.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="fill"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/> was not set.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If the relativeColumnIndex is outside of the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/>.</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FillFilter"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.GetFilter(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ClearFilter(System.Int32)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ApplyFixedValuesFilter(System.Int32,System.Boolean,System.String[])">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/> to the column.
            </summary>
            <param name="relativeColumnIndex">A zero based column index relative to the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/></param>
            <param name="includeBlanks">The value which indicates whether blank cells should be filtered in.</param>
            <param name="displayValues">The collection of case-insensitively unique cell text values which should be filtered in.</param>
            <remarks>
            <p class="note">
            <b>Note:</b> If any text values are longer than 255 characters in length and the workbook is saved in one of the 2003 formats,
            the correct rows will be hidden in the saved file, but the filter may be missing from the column or reapplying the filter
            may hide some of the matching cells.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="displayValues"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            A value in the <paramref name="displayValues"/> collection is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Multiple values from the <paramref name="displayValues"/> collection are case-insensitively equal.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="includeBlanks"/> is False and <paramref name="displayValues"/> has no items. At least one value must be allowed.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/> was not set.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If the relativeColumnIndex is outside of the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/>.</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetText(Infragistics.Documents.Excel.TextFormatMode)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32,Infragistics.Documents.Excel.TextFormatMode)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.GetFilter(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ClearFilter(System.Int32)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ApplyFixedValuesFilter(System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/> to the column.
            </summary>
            <param name="relativeColumnIndex">A zero based column index relative to the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/></param>
            <param name="includeBlanks">The value which indicates whether blank cells should be filtered in.</param>
            <param name="displayValues">The collection of case-insensitively unique cell text values which should be filtered in.</param>
            <remarks>
            <p class="note">
            <b>Note:</b> If any text values are longer than 255 characters in length and the workbook is saved in one of the 2003 formats,
            the correct rows will be hidden in the saved file, but the filter may be missing from the column or reapplying the filter
            may hide some of the matching cells.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="displayValues"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            A value in the <paramref name="displayValues"/> collection is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Multiple values from the <paramref name="displayValues"/> collection are case-insensitively equal.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="includeBlanks"/> is False and <paramref name="displayValues"/> has no items. At least one value must be allowed.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/> was not set.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If the relativeColumnIndex is outside of the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/>.</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetText(Infragistics.Documents.Excel.TextFormatMode)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32,Infragistics.Documents.Excel.TextFormatMode)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.GetFilter(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ClearFilter(System.Int32)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ApplyFixedValuesFilter(System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{Infragistics.Documents.Excel.Filtering.FixedDateGroup})">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/> to the column.
            </summary>
            <param name="relativeColumnIndex">A zero based column index relative to the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/></param>
            <param name="includeBlanks">The value which indicates whether blank cells should be filtered in.</param>
            <param name="dateGroups">The collection of fixed date groups which should be filtered in.</param>
            <remarks>
            <p class="note">
            <b>Note:</b> If any text values are longer than 255 characters in length and the workbook is saved in one of the 2003 formats,
            the correct rows will be hidden in the saved file, but the filter may be missing from the column or reapplying the filter
            may hide some of the matching cells.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="dateGroups"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            A FixedDateGroup in the <paramref name="dateGroups"/> collection is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Multiple items in <paramref name="dateGroups"/> are equal to each other.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="includeBlanks"/> is False and <paramref name="dateGroups"/> has no items. At least one value must be allowed.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/> was not set.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If the relativeColumnIndex is outside of the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/>.</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.GetFilter(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ClearFilter(System.Int32)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ApplyFixedValuesFilter(System.Int32,System.Boolean,Infragistics.Documents.Excel.Filtering.CalendarType,Infragistics.Documents.Excel.Filtering.FixedDateGroup[])">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/> to the column.
            </summary>
            <param name="relativeColumnIndex">A zero based column index relative to the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/></param>
            <param name="includeBlanks">The value which indicates whether blank cells should be filtered in.</param>
            <param name="calendarType">The calendar type used to interpret values in the <paramref name="dateGroups"/> collection.</param>
            <param name="dateGroups">The collection of fixed date groups which should be filtered in.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="dateGroups"/> is null.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="calendarType"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.CalendarType"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            A FixedDateGroup in the <paramref name="dateGroups"/> collection is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Multiple items in <paramref name="dateGroups"/> are equal to each other.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="includeBlanks"/> is False and <paramref name="dateGroups"/> has no items. At least one value must be allowed.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/> was not set.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If the relativeColumnIndex is outside of the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/>.</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.GetFilter(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ClearFilter(System.Int32)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ApplyFixedValuesFilter(System.Int32,System.Boolean,Infragistics.Documents.Excel.Filtering.CalendarType,System.Collections.Generic.IEnumerable{Infragistics.Documents.Excel.Filtering.FixedDateGroup})">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/> to the column.
            </summary>
            <param name="relativeColumnIndex">A zero based column index relative to the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/></param>
            <param name="includeBlanks">The value which indicates whether blank cells should be filtered in.</param>
            <param name="calendarType">The calendar type used to interpret values in the <paramref name="dateGroups"/> collection.</param>
            <param name="dateGroups">The collection of fixed date groups which should be filtered in.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="dateGroups"/> is null.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="calendarType"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.CalendarType"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            A FixedDateGroup in the <paramref name="dateGroups"/> collection is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Multiple items in <paramref name="dateGroups"/> are equal to each other.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="includeBlanks"/> is False and <paramref name="dateGroups"/> has no items. At least one value must be allowed.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/> was not set.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If the relativeColumnIndex is outside of the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/>.</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.GetFilter(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ClearFilter(System.Int32)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ApplyFontColorFilter(System.Int32,System.Drawing.Color)">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.FontColorFilter"/> to the column.
            </summary>
            <param name="relativeColumnIndex">A zero based column index relative to the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/></param>
            <param name="fontColor">The font color by which the cells should be filtered.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="fontColor"/> is empty.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/> was not set.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If the relativeColumnIndex is outside of the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/>.</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FontColorFilter"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.GetFilter(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ClearFilter(System.Int32)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ApplyFontColorFilter(System.Int32,Infragistics.Documents.Excel.WorkbookColorInfo)">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.FontColorFilter"/> to the column.
            </summary>
            <param name="relativeColumnIndex">A zero based column index relative to the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/></param>
            <param name="fontColorInfo">
            A <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> which describes the font color by which the cells should be filtered.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="fontColorInfo"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/> was not set.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If the relativeColumnIndex is outside of the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/>.</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FontColorFilter"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.GetFilter(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ClearFilter(System.Int32)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ApplyIconFilter(System.Int32,Infragistics.Documents.Excel.FormatConditionIconSet,System.Nullable{System.Int32})">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.IconFilter"/> to the column.
            </summary>
            <param name="relativeColumnIndex">A zero based column index relative to the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/></param>
            <param name="iconSet">The icon set containing the icon.</param>
            <exception cref="T:System.ArgumentException">If the icon set is not valid.</exception>
            <param name="iconIndex">The zero-based index of the icon in the set or null for 'NoCellIcon'.</param>
            <exception cref="T:System.IndexOutOfRangeException">If the index is less than zero or greater than or equal to the number of icons in the icon set..</exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible"/> value of the owning table is False. 
            Filters cannot be applied when the header row or filter button is hidden.
            </exception>
            <exception cref="T:System.InvalidOperationException">If column was removed from the table.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If the relativeColumnIndex is outside of the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/>.</exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="iconSet"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.FormatConditionIconSet"/> enumeration.
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.IconFilter"/>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ClearFilter(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddIconSetCondition(System.String,Infragistics.Documents.Excel.FormatConditionIconSet)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ApplyRelativeDateRangeFilter(System.Int32,Infragistics.Documents.Excel.Filtering.RelativeDateRangeOffset,Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration)">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter"/> to the column.
            </summary>
            <param name="relativeColumnIndex">A zero based column index relative to the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/></param>
            <param name="offset">
            The offset of relative filter. This combined with the <paramref name="duration"/> determines the full range of accepted dates.
            </param>
            <param name="duration">The duration of the full range of accepted dates.</param>
            <remarks>
            <p class="body">
            The RelativeDateRangeFilter allows you to filter in dates which are in the previous, current, or next time period 
            relative to the date when the filter was applied. The time periods available are day, week, month, quarter, year.
            So when using the previous filter type with a day duration, a 'yesterday' filter is created. Or when using a current 
            filter type with a year duration, a 'this year' filter is created. However, these filters compare the data against 
            the date when the filter was created. So a 'this year' filter created in 1999 will filter in all cells containing 
            dates in 1999, even if the workbook is opened in 2012.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="offset"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeOffset"/> enumeration.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="duration"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration"/> enumeration.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/> was not set.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If the relativeColumnIndex is outside of the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/>.</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.GetFilter(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ClearFilter(System.Int32)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ApplyTopOrBottomFilter(System.Int32)">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter"/> to the column which will filter in the top 10 values in the list of sorted values.
            </summary>
            <param name="relativeColumnIndex">A zero based column index relative to the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/></param>
            <exception cref="T:System.InvalidOperationException">If the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/> was not set.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If the relativeColumnIndex is outside of the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/>.</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.GetFilter(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ClearFilter(System.Int32)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ApplyTopOrBottomFilter(System.Int32,Infragistics.Documents.Excel.Filtering.TopOrBottomFilterType,System.Int32)">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter"/> to the column.
            </summary>
            <param name="relativeColumnIndex">A zero based column index relative to the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/></param>
            <param name="type">The type of the filter.</param>
            <param name="value">The number or percentage of value of values which should be filtered in.</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="type"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilterType"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="value"/> is less than 1 or greater than 500.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/> was not set.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If the relativeColumnIndex is outside of the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/>.</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.GetFilter(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ClearFilter(System.Int32)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ApplyYearToDateFilter(System.Int32)">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.YearToDateFilter"/> to the column.
            </summary>
            <param name="relativeColumnIndex">A zero based column index relative to the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/></param>
            <exception cref="T:System.InvalidOperationException">If the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/> was not set.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If the relativeColumnIndex is outside of the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/>.</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.YearToDateFilter"/>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ClearFilter(System.Int32)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ClearFilter(System.Int32)">
            <summary>
            Clears the filter that is applied to a specific column.
            </summary>
            <param name="relativeColumnIndex">A zero based column index relative to the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/></param>
            <exception cref="T:System.InvalidOperationException">If the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/> was not set.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If the relativeColumnIndex is outside of the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/>.</exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ClearFilters">
            <summary>
            Clears all previously applied filters
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ClearRegion">
            <summary>
            Clears the region as well as any existing filters and sort criteria
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.SetRegion(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.SetRegion(System.String,Infragistics.Documents.Excel.CellReferenceMode)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.GetFilter(System.Int32)">
            <summary>
            Gets the filter that is applied to a specific column.
            </summary>
            <param name="relativeColumnIndex">A zero based column index relative to the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/></param>
            <returns>The apllied filter or null if no filter was applied to this column.</returns>
            <exception cref="T:System.InvalidOperationException">If the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/> was not set.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If the relativeColumnIndex is outside of the <see cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/>.</exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ReapplyFilters">
            <summary>
            Re-filters all data cells in the filter region based on the applied filters.
            </summary>
            <remarks>
            <p class="body">
            Filters are not constantly evaluated as data within the region changes. Filters are applied to the region only when they are 
            added or removed or when the ReapplyFilters method is called.
            </p>
            <p class="body">
            If no filters are applied this method will not do anything to the data.
            </p>
            <p class="note">
            <B>Note:</B> When the filters are reevaluated, the rows of any cells which don't meet the filter criteria of their column will 
            be hidden. When a row is filtered out, the entire row is hidden from the worksheet, so any data outside the table but in the 
            same row will also be hidden.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ClearFilters"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ReapplySortConditions">
            <summary>
            Re-sorts all data cells in the region based on the sort conditions.
            </summary>
            <p class="body">
            Sort conditions are not constantly evaluated as data within the region changes. Sort conditions are applied to the region only when 
            they are are added or removed via the SortSettings.SortConditions collection or when 
            the ReapplySortCondition method is called.</p>
            <p class="body">
            If there are no sort conditions, this method will not do anything to the data.
            </p>
            <p class="note">
            <B>Note:</B> When the sort conditions are reevaluated, only visible data is sorted. If any rows in the data area of the region are
            hidden, the data from those rows will not be sorted.
            </p>
            <p class="note">
            <B>Note:</B> When the sort conditions are reevaluated, the cells are moved, but not the rows. Therefore, data outside the region
            but in rows which intersect the region's area will not be moved. If any moved cells within the region contain formulas, the 
            relative references to other cells will be shifted as much as the cell moves. For example, assume cell B5 is in the region and it has 
            a formula which references cell C10. If, due to sorting, the cell is shifted down to B12, the reference will also be shifted by 
            the same amount and the formula will now reference cell C17. However, updates like this will not be made to formulas referencing 
            the moved cells. So a formula referencing a moved cell will reference the new cell which replaces it after the sort is applied.
            </p>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.SortSettings"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.SetRegion(System.String)">
            <summary>
            Sets the region where the filter settings should be applied
            </summary>
            <param name="address">The address of the new region.</param>
            <remarks>
            <p class="body">The <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> of the workbook will be used to parse the region address.</p>
            <p class="note"><b>Note:</b> setting the region will clear any applied filters or sort criteria.</p>  
            </remarks>
            <exception cref="T:System.InvalidOperationException">If the region intersects with a table of other reserved area in the worksheet.</exception>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.SetRegion(System.String,Infragistics.Documents.Excel.CellReferenceMode)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ClearRegion"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.SetRegion(System.String,Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>
            Sets the region where the filter settings should be applied
            </summary>
            <param name="address">The address of the new region.</param>
            <param name="cellReferenceMode">The reference to use the parse the address.</param>
            <remarks>
            <p class="note"><b>Note:</b> setting the region will clear any applied filters or sort criteria.</p>  
            </remarks>
            <exception cref="T:System.InvalidOperationException">If the region intersects with a table of other reserved area in the worksheet.</exception>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.Region"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.SetRegion(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.WorksheetFilterSettings.ClearRegion"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.YearToDateFilter">
            <summary>
            Represents a filter which can filter in date cells if the dates occur between the start of the current year 
            and the time when the filter is evaluated.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyYearToDateFilter"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.FormattedStringFont">
            <summary>
            Controls the formatting of a range of characters in a <see cref="P:Infragistics.Documents.Excel.FormattedStringFont.FormattedString"/>.
            </summary>
            <remarks>
            <p class="body">
            The formatting of the string is controlled in a similar fashion as it would be in Microsoft Excel. In Excel, the user
            must select a portion of the text and set the various formatting properties of that selected text. 
            </p>
            <p class="body">
            With the <see cref="P:Infragistics.Documents.Excel.FormattedStringFont.FormattedString"/>, a portion of the string is "selected" by calling either 
            <see cref="M:Infragistics.Documents.Excel.FormattedString.GetFont(System.Int32)">GetFont(int)</see> or 
            <see cref="M:Infragistics.Documents.Excel.FormattedString.GetFont(System.Int32,System.Int32)">GetFont(int,int)</see>. Formatting properties 
            are then set on the returned FormattedStringFont and all characters in the font's selection range are given these 
            properties.
            </p>
            <p class="body">
            Getting the formatting properties of a FormattedStringFont will return the formatting of the first character in font's 
            selection range. This is similar to Excel, which will update the formatting interface to reflect the formatting of the 
            first character in a selection range when a cell's text is selected.
            </p>
            </remarks>
            <seealso cref="T:FormattedString"/>
            <seealso cref="M:FormattedString.GetFont(int)"/>
            <seealso cref="M:FormattedString.GetFont(int,int)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedStringFont.FormattedString">
            <summary>
            Gets the formatted string which is controlled by this font.
            </summary>
            <value>The formatted string which is controlled by this font.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.FormattedTextFont">
            <summary>
            Controls the formatting of a range of characters in <see cref="T:FormattedText"/>.
            </summary>
            <remarks>
            <p class="body">
            The formatting of the string is controlled in a similar fashion as it would be in Microsoft Excel. In Excel, the user
            must select a portion of the text and set the various formatting properties of that selected text. 
            </p>
            <p class="body">
            With the <see cref="T:FormattedText"/>, a portion of the string is "selected" by calling either 
            <see cref="T:FormattedText.GetFont(int)"/> or <see cref="T:FormattedText.GetFont(int,int)"/>. 
            Formatting properties are then set on the returned FormattedTextFont and all characters in the font's 
            selection range are given these properties.
            </p>
            <p class="body">
            Getting the formatting properties of a FormattedTextFont will return the formatting of the first character 
            in font's selection range. 
            </p>
            </remarks>
            <seealso cref="T:FormattedText"/>
            <seealso cref="T:FormattedText.GetFont(int)"/>
            <seealso cref="T:FormattedText.GetFont(int,int)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedTextFont.FormattedText">
            <summary>
            Gets the <see cref="T:FormattedText"/> which is controlled by this font.
            </summary>
            <value>The FormattedText which is controlled by this font.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.FormattedTextParagraph">
            <summary>
            Represents a paragraph in <see cref="T:FormattedText"/>.
            </summary>
            <seealso cref="T:FormattedText.Paragraphs"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedTextParagraph.Alignment">
            <summary>
            Gets or sets the alignment of the paragraph.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedTextParagraph.FormattedText">
            <summary>
            Gets the owning <see cref="T:FormattedText"/> to which the paragraph belongs or null if the 
            paragraph has been removed from its owning formatted text.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedTextParagraph.StartIndex">
            <summary>
            Gets the zero-based index of the paragraph's first character in the overall formatted text.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedTextParagraph.UnformattedString">
            <summary>
            Gets or sets the raw string of the paragraph.
            </summary>
            <remarks>
            <p class="body">
            If the new unformatted string assigned is shorter than the previous unformatted string, all formatting
            outside the range of the new value will be lost.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            The value assigned is a null string.
            </exception>
            <value>The unformatted string.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.FormattedTextParagraphCollection">
            <summary>
            A collection of <see cref="T:Infragistics.Documents.Excel.FormattedTextParagraph"/> instances in <see cref="T:FormattedText"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.FormattedText.Paragraphs"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedTextParagraphCollection.Add(System.String)">
            <summary>
            Adds a paragraph with the specified text and returns the <see cref="T:Infragistics.Documents.Excel.FormattedTextParagraph"/> 
            representing the new paragraph.
            </summary>
            <param name="paragraphText">The text in the paragraph.</param>
            <returns>The FormattedTextParagraph representing the new paragraph.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedTextParagraphCollection.Clear">
            <summary>
            Removes all paragraphs from the formatted text.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedTextParagraphCollection.Contains(Infragistics.Documents.Excel.FormattedTextParagraph)">
            <summary>
            Determines whether the specified paragraph exists in the collection.
            </summary>
            <param name="paragraph">The paragraph to find in the collection.</param>
            <returns>True if the paragraph exists in the collection; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedTextParagraphCollection.GetEnumerator">
            <summary>
            Gets the enumerator to iterate over all paragraphs.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedTextParagraphCollection.IndexOf(Infragistics.Documents.Excel.FormattedTextParagraph)">
            <summary>
            Gets the zero-based index of the specified paragraph in the collection.
            </summary>
            <param name="paragraph">The paragraph to find in the collection.</param>
            <returns>
            The zero-based index of the paragraph in the collection or -1 if the paragraph doesn't exist in the collection.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedTextParagraphCollection.Insert(System.Int32,System.String)">
            <summary>
            Inserts a paragraph with the specified text and returns the <see cref="T:Infragistics.Documents.Excel.FormattedTextParagraph"/> 
            representing the new paragraph.
            </summary>
            <param name="index">The zero-based index in the collection where the paragraph should be inserted.</param>
            <param name="paragraphText">The text in the paragraph.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or greater than the number of paragraphs in the collection.
            </exception>
            <returns>The FormattedTextParagraph representing the new paragraph.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedTextParagraphCollection.Remove(Infragistics.Documents.Excel.FormattedTextParagraph)">
            <summary>
            Removes the specified paragraph from the collection.
            </summary>
            <param name="paragraph">The paragraph to remove from the collection.</param>
            <returns>True if the paragraph was in the collection and was removed; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedTextParagraphCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the paragraph at the specified zero-based index in the collection.
            </summary>
            <param name="index">The zero-based index of the paragraph to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or greater than or equal to the number of paragraphs in the collection.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedTextParagraphCollection.Count">
            <summary>
            Gets the number of paragraphs in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedTextParagraphCollection.Item(System.Int32)">
            <summary>
            Gets the paragraph at the specified zero-based index.
            </summary>
            <param name="index">The zero-based index of the paragraph to get.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or greater than or equal to the number of paragraphs in the collection.
            </exception>
            <returns>The <see cref="T:Infragistics.Documents.Excel.FormattedTextParagraph"/> representing the paragraph at the specified index.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.ArrayFormula">
            <summary>
            Represents an array formula for a group of cells.
            </summary>
            <remarks>
            <p class="body">
            Array formulas are similar to regular formula in that they have the same grammar. However, array formulas must be set 
            on a single region of cells only. When the array formula is applied to a region of cells, each cell's 
            <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Formula">Formula</see> property will be the array formula. The 
            <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Formula">Value</see> of each cell cannot be changed unless <see cref="M:Infragistics.Documents.Excel.ArrayFormula.ClearCellRange"/> is 
            called on the array formula or another value is applied to a region of cells which completely contains the array 
            formula's region.
            </p>
            <p class="body">
            Because the array formula stores the region of the cells to which it is applied in the <see cref="P:Infragistics.Documents.Excel.ArrayFormula.CellRange"/> property, 
            the array formula can only be applied to one region of cells.
            </p>
            <p class="body">
            Array formulas are created through Microsoft Excel by selecting a region of cells, entering a formula for
            that range, and pressing Ctrl+Shift+Enter. This causes the formula of each cell in the region to appear as follows:
            {=Formula}.
            </p>
            <p class="body">
            See the Microsoft Excel documentation for more information on array formulas.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion[],Infragistics.Documents.Excel.WorksheetRow,System.Int16,Infragistics.Documents.Excel.ApplyFormulaFlags)">
            <summary>
            Applies the formula to all specified regions of cells.
            </summary>
            <remarks>
            <p class="body">
            This method, or one of the other ApplyTo overrides must be used to set the value of a cell to a formula.
            </p>
            <p class="body">
            After this method returns, the <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Formula"/> of all cells in all specified regions will
            return the array formula.
            </p>
            </remarks>
            <param name="regions">The regions of cells to apply the formula to.</param>
            <param name="anchorRow">The row within the region for which the formula was created or null to use the top row</param>
            <param name="anchorColumnIndex">The column within the region for which the formula was created or -1 to use the first column</param>
            <param name="flags"></param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="regions"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The length <paramref name="regions"/> is anything other than one.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The array formula is already applied to a cell region.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            One or more regions specified contain array formulas or data tables which extend outside the region.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetCell)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyArrayFormula(System.String)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.ClearCellRange">
            <summary>
            Removes this array formula as the formula for the cells to which it was applied.
            </summary>
            <remarks>
            <p class="body">
            After this method returns, the <see cref="P:Infragistics.Documents.Excel.ArrayFormula.CellRange"/> will be null.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.Parse(System.String,Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>
            Parses the specified formula value and returns the array formula which was created from it.
            </summary>
            <param name="value">The string which defines the array formula to parse.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the array formula.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="value"/> is not a valid formula.
            </exception>
            <returns>An <see cref="T:Infragistics.Documents.Excel.ArrayFormula"/> instance which represents the array formula value specified.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.Parse(System.String,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>
            Parses the specified formula value and returns the array formula which was created from it.
            </summary>
            <param name="value">The string which defines the array formula to parse.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the array formula.</param>
            <param name="culture">The culture used to parse the formula.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="value"/> is not a valid formula.
            </exception>
            <returns>An <see cref="T:Infragistics.Documents.Excel.ArrayFormula"/> instance which represents the array formula value specified.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.Parse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorkbookFormat)">
            <summary>
            Parses the specified formula value and returns the array formula which was created from it.
            </summary>
            <param name="value">The string which defines the array formula to parse.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the array formula.</param>
            <param name="fileFormat">The file format to use when parsing the array formula. This will be used to determine certain limits which are format dependant.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="fileFormat"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookFormat"/> enumeration.
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="value"/> is not a valid formula.
            </exception>
            <returns>An <see cref="T:Infragistics.Documents.Excel.ArrayFormula"/> instance which represents the array formula value specified.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.Parse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorkbookFormat,System.Globalization.CultureInfo)">
            <summary>
            Parses the specified formula value and returns the array formula which was created from it.
            </summary>
            <param name="value">The string which defines the array formula to parse.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the array formula.</param>
            <param name="fileFormat">The file format to use when parsing the array formula. This will be used to determine certain limits which are format dependant.</param>
            <param name="culture">The culture used to parse the formula.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="fileFormat"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookFormat"/> enumeration.
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="value"/> is not a valid formula.
            </exception>
            <returns>An <see cref="T:Infragistics.Documents.Excel.ArrayFormula"/> instance which represents the array formula value specified.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.ArrayFormula@)">
            <summary>
            Parses the specified formula value. The return value indicates whether the operation succeeded.
            </summary>
            <param name="value">The string which defines the array formula to parse.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the array formula.</param>
            <param name="formula">
            When this method returns, contains the array formula which was parsed from <paramref name="value"/>,
            if the conversion succeeded, or null if the conversion failed. This parameter is passed uninitialized.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <returns>True if <paramref name="value"/> was converted successfully; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo,Infragistics.Documents.Excel.ArrayFormula@)">
            <summary>
            Parses the specified formula value. The return value indicates whether the operation succeeded.
            </summary>
            <param name="value">The string which defines the array formula to parse.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the array formula.</param>
            <param name="culture">The culture used to parse the formula.</param>
            <param name="formula">
            When this method returns, contains the array formula which was parsed from <paramref name="value"/>,
            if the conversion succeeded, or null if the conversion failed. This parameter is passed uninitialized.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <returns>True if <paramref name="value"/> was converted successfully; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.ArrayFormula@,Infragistics.Documents.Excel.FormulaParseException@)">
            <summary>
            Parses the specified formula value. The return value indicates whether the operation succeeded.
            </summary>
            <param name="value">The string which defines the array formula to parse.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the array formula.</param>
            <param name="formula">
            When this method returns, contains the array formula which was parsed from <paramref name="value"/>
            if the conversion succeeded or null if the conversion failed. This parameter is passed uninitialized.
            </param>
            <param name="exception">
            When this method returns, contains the error information if the conversion failed or null if the 
            conversion succeeded. This parameter is passed uninitialized.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <returns>True if <paramref name="value"/> was converted successfully; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo,Infragistics.Documents.Excel.ArrayFormula@,Infragistics.Documents.Excel.FormulaParseException@)">
            <summary>
            Parses the specified formula value. The return value indicates whether the operation succeeded.
            </summary>
            <param name="value">The string which defines the array formula to parse.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the array formula.</param>
            <param name="culture">The culture used to parse the formula.</param>
            <param name="formula">
            When this method returns, contains the array formula which was parsed from <paramref name="value"/>
            if the conversion succeeded or null if the conversion failed. This parameter is passed uninitialized.
            </param>
            <param name="exception">
            When this method returns, contains the error information if the conversion failed or null if the 
            conversion succeeded. This parameter is passed uninitialized.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <returns>True if <paramref name="value"/> was converted successfully; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.ArrayFormula@)">
            <summary>
            Parses the specified formula value. The return value indicates whether the operation succeeded.
            </summary>
            <param name="value">The string which defines the array formula to parse.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the array formula.</param>
            <param name="fileFormat">The file format to use when parsing the formula. This will be used to determine certain limits which are format dependant.</param>
            <param name="formula">
            When this method returns, contains the array formula which was parsed from <paramref name="value"/>,
            if the conversion succeeded, or null if the conversion failed. This parameter is passed uninitialized.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="fileFormat"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookFormat"/> enumeration.
            </exception>
            <returns>True if <paramref name="value"/> was converted successfully; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorkbookFormat,System.Globalization.CultureInfo,Infragistics.Documents.Excel.ArrayFormula@)">
            <summary>
            Parses the specified formula value. The return value indicates whether the operation succeeded.
            </summary>
            <param name="value">The string which defines the array formula to parse.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the array formula.</param>
            <param name="fileFormat">The file format to use when parsing the formula. This will be used to determine certain limits which are format dependant.</param>
            <param name="culture">The culture used to parse the formula.</param>
            <param name="formula">
            When this method returns, contains the array formula which was parsed from <paramref name="value"/>,
            if the conversion succeeded, or null if the conversion failed. This parameter is passed uninitialized.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="fileFormat"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookFormat"/> enumeration.
            </exception>
            <returns>True if <paramref name="value"/> was converted successfully; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.ArrayFormula@,Infragistics.Documents.Excel.FormulaParseException@)">
            <summary>
            Parses the specified formula value. The return value indicates whether the operation succeeded.
            </summary>
            <param name="value">The string which defines the array formula to parse.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the array formula.</param>
            <param name="fileFormat">The file format to use when parsing the formula. This will be used to determine certain limits which are format dependant.</param>
            <param name="formula">
            When this method returns, contains the array formula which was parsed from <paramref name="value"/>
            if the conversion succeeded or null if the conversion failed. This parameter is passed uninitialized.
            </param>
            <param name="exception">
            When this method returns, contains the error information if the conversion failed or null if the 
            conversion succeeded. This parameter is passed uninitialized.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="fileFormat"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookFormat"/> enumeration.
            </exception>
            <returns>True if <paramref name="value"/> was converted successfully; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorkbookFormat,System.Globalization.CultureInfo,Infragistics.Documents.Excel.ArrayFormula@,Infragistics.Documents.Excel.FormulaParseException@)">
            <summary>
            Parses the specified formula value. The return value indicates whether the operation succeeded.
            </summary>
            <param name="value">The string which defines the array formula to parse.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the array formula.</param>
            <param name="fileFormat">The file format to use when parsing the formula. This will be used to determine certain limits which are format dependant.</param>
            <param name="culture">The culture used to parse the formula.</param>
            <param name="formula">
            When this method returns, contains the array formula which was parsed from <paramref name="value"/>
            if the conversion succeeded or null if the conversion failed. This parameter is passed uninitialized.
            </param>
            <param name="exception">
            When this method returns, contains the error information if the conversion failed or null if the 
            conversion succeeded. This parameter is passed uninitialized.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="fileFormat"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorkbookFormat"/> enumeration.
            </exception>
            <returns>True if <paramref name="value"/> was converted successfully; False otherwise.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.ArrayFormula.CellRange">
            <summary>
            Gets the cells to which the array formula is applied.
            </summary>
            <remarks>
            <p class="body">
            If this is null, the formula has not yet been applied.
            </p>
            </remarks>
            <value>The cells to which the array formula is applied.</value>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase.SetFormula(Infragistics.Documents.Excel.SingleTargetFormula,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Updates the formula on the reference.
            </summary>
            <param name="newFormula">The new formula to apply to the reference.</param>
            <param name="canClearPreviouslyCalculatedValue">
            Indicates whether to overwrite the cached calculated value with an initial calculation if the workbook is in manual calculation mode.
            </param>
            <param name="forceSet">
            Indicates whether to force using the set logic even if the specified formula is already applied to the reference.
            </param>
            <param name="isShiftingCells"></param>
        </member>
        <member name="T:Infragistics.Documents.Excel.FrozenPaneSettings">
            <summary>
            Class which controls the way frozen panes are arranged and used for a worksheet.
            </summary>
            <remarks>
            <p class="note">
            <B>Note:</B> Frozen and unfrozen panes cannot be used simultaneously, so depending whether the panes are 
            frozen or unfrozen, these settings may not be used or saved.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.PanesAreFrozen"/>
            <seealso cref="T:Infragistics.Documents.Excel.UnfrozenPaneSettings"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.FrozenPaneSettings.ResetCore">
            <summary>
            Resets the frozen pane settings to their defaults.
            </summary>
            <remarks>
            <p class="body">
            The defaults used for each setting are the same defaults with which Microsoft Excel creates a blank worksheet.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.FrozenPaneSettings.FrozenColumns">
            <summary>
            Gets or sets the number of columns frozen at the left of the worksheet.
            </summary>
            <remarks>
            <p class="body">
            The frozen columns will always remain in view, regardless of the horizontal scroll position of 
            the worksheet.
            </p>
            <p class="note">
            <B>Note:</B> If the number of frozen columns specified is more than the amount of visible columns 
            in the worksheet, the worksheet may not scroll correctly.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value is not a valid column count (0 to <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelColumnCount"/> or 
            <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007ColumnCount"/>, depending on the workbook's 
            <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/>).
            </exception>
            <value>The number of columns frozen at the left of the worksheet.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.FrozenPaneSettings.FrozenRows">
            <summary>
            Gets or sets the number of rows frozen at the top of the worksheet.
            </summary>
            <remarks>
            <p class="body">
            The frozen rows will always remain in view, regardless of the vertical scroll position of 
            the worksheet.
            </p>
            <p class="note">
            <B>Note:</B> If the number of frozen rows specified is more than the amount of visible rows 
            in the worksheet, the worksheet may not scroll correctly.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value is not a valid row count (0 to <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelRowCount"/> or 
            <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007RowCount"/>, depending on the workbook's 
            <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/>).
            </exception>
            <value>The number of rows frozen at the top of the worksheet.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.HiddenColumnCollection">
            <summary>
            A collection of hidden <see cref="T:Infragistics.Documents.Excel.WorksheetColumn"/> instances.
            </summary>
            <remarks>
            <p class="body">
            The columns in this collection do not necessarily have their <see cref="P:Infragistics.Documents.Excel.RowColumnBase.Hidden"/> property
            set to True. This collection applies to a <see cref="P:Infragistics.Documents.Excel.HiddenColumnCollection.Worksheet"/>, but belongs to a <see cref="T:Infragistics.Documents.Excel.CustomView"/>.
            When the CustomView which owns this collection is applied, the columns in this collection will have their
            <see cref="P:Infragistics.Documents.Excel.RowColumnBase.Hidden"/> property set to True. All other columns in the associated worksheet will
            be made visible.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetHiddenColumns(Infragistics.Documents.Excel.Worksheet,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.HiddenColumnCollection.Add(Infragistics.Documents.Excel.WorksheetColumn)">
            <summary>
            Adds a column to the collection.
            </summary>
            <remarks>
            <p class="body">
            This collection does not allow duplicate values. If the specified column already exists in the collection,
            nothing will happen. This collection also keeps itself sorted, so the column added will not necessarily be
            added at the end of the collection.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="column"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="column"/> does not belong to the same worksheet this collection is associated with.
            </exception>
            <param name="column">The column to be added to the hidden columns collection.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.HiddenColumnCollection.Clear">
            <summary>
            Clears all columns from the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.HiddenColumnCollection.Contains(Infragistics.Documents.Excel.WorksheetColumn)">
            <summary>
            Determines whether the specified column exists in the collection.
            </summary>
            <param name="column">The column to search for in the collection.</param>
            <returns>
            True if the column exists in the collection; False otherwise or if the specified column is null.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.HiddenColumnCollection.Remove(Infragistics.Documents.Excel.WorksheetColumn)">
            <summary>
            Removes the specified column from the collection if it exists.
            </summary>
            <param name="column">The column to removed from the collection.</param>
            <returns>
            True if the column existed in the collection and was removed; False otherwise or if the 
            specified column is null.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.HiddenColumnCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the column at the specified index in the collection.
            </summary>
            <param name="index">The zero-based index of the column in the collection.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or <paramref name="index"/> is greater than or 
            equal to <see cref="P:Infragistics.Documents.Excel.HiddenColumnCollection.Count"/>.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.HiddenColumnCollection.Count">
            <summary>
            Gets the number of columns in the collection.
            </summary>
            <value>The number of columns in the collection.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.HiddenColumnCollection.Item(System.Int32)">
            <summary>
            Gets the column at the specified index.
            </summary>
            <param name="index">The zero-based index of the column to get.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or <paramref name="index"/> is greater than or 
            equal to <see cref="P:Infragistics.Documents.Excel.HiddenColumnCollection.Count"/>.
            </exception>
            <value>The column at the specified index.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.HiddenColumnCollection.Worksheet">
            <summary>
            Gets the worksheet associated with this collection.
            </summary>
            <value>The worksheet associated with this collection.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.HiddenRowCollection">
            <summary>
            A collection of hidden <see cref="T:Infragistics.Documents.Excel.WorksheetRow"/> instances.
            </summary>
            <remarks>
            <p class="body">
            The rows in this collection do not necessarily have their <see cref="P:Infragistics.Documents.Excel.RowColumnBase.Hidden"/> property
            set to True. This collection applies to a <see cref="P:Infragistics.Documents.Excel.HiddenRowCollection.Worksheet"/>, but belongs to a <see cref="T:Infragistics.Documents.Excel.CustomView"/>.
            When the CustomView which owns this collection is applied, the rows in this collection will have their
            <see cref="P:Infragistics.Documents.Excel.RowColumnBase.Hidden"/> property set to True. All other rows in the associated worksheet will
            be made visible.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetHiddenRows(Infragistics.Documents.Excel.Worksheet,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.HiddenRowCollection.Add(Infragistics.Documents.Excel.WorksheetRow)">
            <summary>
            Adds a row to the collection.
            </summary>
            <remarks>
            <p class="body">
            This collection does not allow duplicate values. If the specified row already exists in the collection,
            nothing will happen. This collection also keeps itself sorted, so the row added will not necessarily be
            added at the end of the collection.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="row"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="row"/> does not belong to the same worksheet this collection is associated with.
            </exception>
            <param name="row">The row to be added to the hidden rows collection.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.HiddenRowCollection.Clear">
            <summary>
            Clears all rows from the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.HiddenRowCollection.Contains(Infragistics.Documents.Excel.WorksheetRow)">
            <summary>
            Determines whether the specified row exists in the collection.
            </summary>
            <param name="row">The row to search for in the collection.</param>
            <returns>
            True if the row exists in the collection; False otherwise or if the specified row is null.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.HiddenRowCollection.Remove(Infragistics.Documents.Excel.WorksheetRow)">
            <summary>
            Removes the specified row from the collection if it exists.
            </summary>
            <param name="row">The row to removed from the collection.</param>
            <returns>
            True if the row existed in the collection and was removed; False otherwise or if the 
            specified row is null.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.HiddenRowCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the row at the specified index in the collection.
            </summary>
            <param name="index">The zero-based index of the row in the collection.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or <paramref name="index"/> is greater than or 
            equal to <see cref="P:Infragistics.Documents.Excel.HiddenRowCollection.Count"/>.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.HiddenRowCollection.Count">
            <summary>
            Gets the number of rows in the collection.
            </summary>
            <value>The number of rows in the collection.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.HiddenRowCollection.Item(System.Int32)">
            <summary>
            Gets the row at the specified index.
            </summary>
            <param name="index">The zero-based index of the row to get.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or <paramref name="index"/> is greater than or 
            equal to <see cref="P:Infragistics.Documents.Excel.HiddenRowCollection.Count"/>.
            </exception>
            <value>The row at the specified index.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.HiddenRowCollection.Worksheet">
            <summary>
            Gets the worksheet associated with this collection.
            </summary>
            <value>The worksheet associated with this collection.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.SheetCollection">
            <summary>
            A collection of sheets in a workbook.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.Sheet"/>
            <seealso cref="T:Infragistics.Documents.Excel.Worksheet"/>
            <seealso cref="T:Workbook.Worksheets"/>
            <seealso cref="T:Workbook.Sheets"/>
        </member>
        <member name="E:Infragistics.Documents.Excel.SheetCollection.CollectionChanged">
            <summary>
            Occurs after items in the collection have been added or removed
            </summary>
        </member>
        <member name="E:Infragistics.Documents.Excel.SheetCollection.PropertyChanged">
            <summary>
            Occurs after a property value has changed
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.SheetCollection.Add(System.String,Infragistics.Documents.Excel.SheetType)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Sheet"/> and adds it to the collection.
            </summary>
            <remarks>
            <p class="body">
            If the workbook originally had no sheets, the newly added sheet will become the selected sheet of 
            the workbook.  This can be changed after more sheets are added by setting the <see cref="P:Infragistics.Documents.Excel.WindowOptions.SelectedSheet"/> 
            of the Workbook.
            </p>
            </remarks>
            <param name="name">The name to give the new Sheet.</param>
            <param name="type">An enumeration indicating the type of sheet to create</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name"/> is null or empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name"/> contains the invalid characters: ':', '\', '/', '?', '*', '[', or ']'.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name"/> exceeds 31 characters in length.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name"/> is being used as the name of another sheet (sheet names are case-insensitively compared).
            </exception>
            <returns>The Sheet created with the specified name.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.SheetCollection.Clear">
            <summary>
            Clears all sheets from the collection.
            </summary>
            <remarks>
            <p class="body">
            If there are any <see cref="T:Infragistics.Documents.Excel.NamedReference"/> instances in the <see cref="P:Infragistics.Documents.Excel.Workbook.NamedReferences"/> collection
            with a worksheet for a scope, they will be removed from the <see cref="T:Infragistics.Documents.Excel.Workbook"/>.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.SheetCollection.Contains(Infragistics.Documents.Excel.Sheet)">
            <summary>
            Determines whether a sheet is in the collection.
            </summary>
            <param name="sheet">The sheet to locate in the collection.</param>
            <returns>True if the sheet is found; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.SheetCollection.Exists(System.String)">
            <summary>
            Determines whether a sheet with the specified name exists in the collection.
            </summary>
            <param name="name">The name of the sheet to search for. The name is compared case-insensitively.</param>
            <returns>True if a sheet with the specified name is found; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.SheetCollection.IndexOf(Infragistics.Documents.Excel.Sheet)">
            <summary>
            Gets the index of the specified sheet in the collection.
            </summary>
            <param name="sheet">The sheet of which to get the index.</param>
            <returns>The index of the specified sheet in the collection.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.SheetIndex"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.SheetCollection.Remove(Infragistics.Documents.Excel.Sheet)">
            <summary>
            Removes the specified sheet from the collection.
            </summary>
            <param name="sheet">The sheet to remove from the collection.</param>
            <remarks>
            <p class="body">
            If there are any <see cref="T:Infragistics.Documents.Excel.NamedReference"/> instances in the <see cref="P:Infragistics.Documents.Excel.Workbook.NamedReferences"/> collection
            with the worksheet to remove as their scope, they will be removed from the <see cref="T:Infragistics.Documents.Excel.Workbook"/>.
            </p>
            </remarks>
            <returns>
            True if the sheet was successfully removed from the collection; 
            False if the sheet did not exist in the collection.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.SheetCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the sheet at the specified index from the collection.
            </summary>
            <param name="index">The index of the sheet to remove from the collection.</param>
            <remarks>
            <p class="body">
            If there are any <see cref="T:Infragistics.Documents.Excel.NamedReference"/> instances in the <see cref="P:Infragistics.Documents.Excel.Workbook.NamedReferences"/> collection
            with the worksheet to remove as their scope, they will be removed from the <see cref="T:Infragistics.Documents.Excel.Workbook"/>.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or <paramref name="index"/> is greater than or equal to <see cref="P:Infragistics.Documents.Excel.SheetCollection.Count"/>.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.SheetCollection.Count">
            <summary>
            Gets the number of sheets in the collection.
            </summary>
            <value>The number of sheets in the collection.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.SheetCollection.Item(System.Int32)">
            <summary>
            Gets the sheet at the specified index.
            </summary>
            <param name="index">The zero-based index of the sheet to get.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or <paramref name="index"/> is greater than or equal to <see cref="P:Infragistics.Documents.Excel.SheetCollection.Count"/>.
            </exception>
            <value>The sheet at the specified index.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.SheetCollection.Item(System.String)">
            <summary>
            Gets the sheet with the specified name.
            </summary>
            <remarks>
            <p class="body">
            Sheet names are compared case-insensitively.
            </p>
            </remarks>
            <param name="name">The name of the sheet to get.</param>
            <exception cref="T:System.InvalidOperationException">
            A sheet with the specified name does not exist in the collection. 
            </exception>
            <value>The sheet with the specified name.</value>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.Name"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.NamedReference">
            <summary>
            Represents a named reference defined in the workbook.
            </summary>
            <remarks>
            <p class="body">
            Named references allow for names to be used in formulas instead of complex formulas or cell references.
            For example, instead of using the formula =SUM(E1:E20), a named reference with a name of 'Sales' can be 
            defined to point to the range of E1:E20 (the named reference's formula would be defined like this: 
            =Sheet1!$E$1:$E$20). Then the original formula could be expressed as =SUM(Sales).
            </p>
            <p class="body">
            Each named reference has an associated scope, which can either be the <see cref="P:Infragistics.Documents.Excel.NamedReference.Workbook"/> 
            to which the named reference belongs or one of the <see cref="T:Infragistics.Documents.Excel.Worksheet"/> instances in the Workbook. The scope 
            determines how the name must be referenced in formulas for different cells. A scope of the workbook means
            the named reference must be accessed by a formula in any cell of the workbook by specifying only the name.
            A scope of the worksheet means formulas used in other worksheets must reference the name by first 
            specifying the worksheet scope, such as =SUM( Sheet2!Sales ). If the formula is in the same worksheet as 
            the scope of the named reference, the formula can reference the name with or without the worksheet name.
            </p>
            <p class="body">
            Named references from external workbooks must always be referenced with the scope first. If the named 
            reference's scope is the external workbook, the name is accessed by specifying the workbook file name
            followed by the name, such as in the following formula: ='C:\ExternalWorkbook.xls'!SalesTax. If the named
            reference has a scope of a worksheet in the workbook, it is referenced by specifying the file name, 
            worksheet, and name: ='C:\[ExternalWorkbook.xls]Sheet1'!SalesTax.
            </p>
            <p class="body">
            Named references with different scopes can have the same names, but if two named references have the same
            scope, they must have case-insensitively unique names.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReference.ToString">
            <summary>
            Gets the string representation of the named reference.
            </summary>
            <returns>The string representation of the named reference.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReference.SetFormula(System.String)">
            <summary>
            Sets the formula for a named reference.
            </summary>
            <remarks>
            <p class="body">
            The formula will be parsed using the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> of the <see cref="P:Infragistics.Documents.Excel.NamedReference.Workbook"/> 
            to which the NamedReference is applied. If the NamedReference has been removed from its collection, the A1 reference mode 
            will be used to parse the formula.
            </p>
            </remarks>
            <param name="formula">The string containing the formula value.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="formula"/> is null or empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="formula"/> is not a valid formula. The inner exception will contain the <see cref="T:Infragistics.Documents.Excel.FormulaParseException"/>
            describing the reason the formula was not valid.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.Formula"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReference.SetFormula(System.String,Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>
            Sets the formula for a named reference.
            </summary>
            <param name="formula">The string containing the formula value.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the formula.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="formula"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="formula"/> is not a valid formula. The inner exception will contain the <see cref="T:Infragistics.Documents.Excel.FormulaParseException"/>
            describing the reason the formula was not valid.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.Formula"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReference.SetFormula(System.String,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>
            Sets the formula for a named reference.
            </summary>
            <param name="formula">The string containing the formula value.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the formula.</param>
            <param name="culture">The culture used to parse the formula.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="formula"/> is null or empty.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="formula"/> is not a valid formula. The inner exception will contain the <see cref="T:Infragistics.Documents.Excel.FormulaParseException"/>
            describing the reason the formula was not valid.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.Formula"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.NamedReference.Formula">
            <summary>
            Gets the formula which defines the named reference.
            </summary>
            <value>The formula which defines the named reference.</value>
            <seealso cref="M:Infragistics.Documents.Excel.NamedReference.SetFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.NamedReference.SetFormula(System.String,Infragistics.Documents.Excel.CellReferenceMode)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.NamedReference.IsSimpleReferenceFormula">
            <summary>
            Gets the value indicating whether the <see cref="P:Infragistics.Documents.Excel.NamedReference.Formula"/> is a simple formula referring to a single cell, a single region, 
            or multiple regions in the same workbook as the named reference.
            </summary>
            <remarks>
            <p class="body">
            If the reference is surrounded by parentheses or whitespace or the named reference has some other complex formula this will 
            return false.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/> referenced by the <see cref="P:Infragistics.Documents.Excel.NamedReference.Formula"/>.
            </summary>
            <remarks>
            <p class="body">
            If named reference is a reference to one or more regions, this will return null.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.IsSimpleReferenceFormula"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion"/> referenced by the <see cref="P:Infragistics.Documents.Excel.NamedReference.Formula"/>.
            </summary>
            <remarks>
            <p class="body">
            If the named reference is a reference to a single cell or multiple regions, this will return null.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.IsSimpleReferenceFormula"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions">
            <summary>
            Gets the array of <see cref="T:Infragistics.Documents.Excel.WorksheetRegion"/> instances referenced by the <see cref="P:Infragistics.Documents.Excel.NamedReference.Formula"/>.
            </summary>
            <remarks>
            <p class="body">
            If the named reference is a reference to a single cell or region, this will return null.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.IsSimpleReferenceFormula"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.NamedReferenceBase">
            <summary>
            Abstract base class for a named reference defined in the workbook.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.NamedReferenceBase.Comment">
            <summary>
            Gets or sets the comment associated with the named reference or table.
            </summary>
            <exception cref="T:System.ArgumentException">
            The value assigned is greater than 255 characters in length.
            </exception>
            <value>The comment associated with the named reference or table.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.NamedReferenceBase.Name">
            <summary>
            Gets or sets the name of the reference.
            </summary>
            <remarks>
            <p class="body">
            See the overview on <see cref="P:Infragistics.Documents.Excel.NamedReferenceBase.Scope"/> for details on how to access a named reference by name in formulas.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            The value assigned is null or empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value assigned is longer than 255 characters.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value assigned is not a valid named reference. The name must begin with a letter, underscore (_), or a backslash (\).
            All other characters in the name must be letters, numbers, periods, underscores (_), or backslashes (\).
            The name cannot be a an A1 cell reference (1 to 3 letters followed by 1 to 6 numbers). In addition, the name
            cannot be 'r', 'R', 'c', or 'C' or start with a row or column reference in R1C1 cell reference mode 
            ('R' followed by 1 to 6 numbers or 'C' followed by 1 to 6 numbers).
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value assigned is the name of another named reference with the same Scope. 
            Names are compared case-insensitively.
            </exception>
            <value>The name of the reference.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.NamedReferenceBase.Scope">
            <summary>
            Gets the scope of the named reference.
            </summary>
            <remarks>
            <p class="body">
            This can either be the workbook which the named reference belongs to or one of the worksheets 
            in the workbook.
            </p>
            <p class="body">
            The scope determines how formulas need to preface a name in order to use the named reference.
            </p>
            <p class="body">
            If the scope is the workbook, formulas in any cell in the workbook can reference the named reference
            by specifying just the name or the workbook's file name, an exclamation point, and the name:
            <list type="bullet">
            <item>=MyWorkbookName</item>
            <item>='C:\MyWorkbook.xls'!MyWorkbookName</item>
            </list>
            When cells in other workbook's want to reference the named reference, they must use the second format
            by first specifying the file name when the workbook-scoped named reference exists.
            </p>
            <p class="body">
            If the scope is a worksheet, formulas in cells of the worksheet can reference the named reference
            by specifying just the name. In addition, they can fully qualify the named reference with the worksheet name
            and, optionally, the workbook file name:
            <list type="bullet">
            <item>=MyWorksheetName</item>
            <item>=Sheet1!MyWorksheetName</item>
            <item>='C:\[MyWorkbook.xls]Sheet1'!MyWorksheetName</item>
            </list>
            Formulas in cells of other worksheets in the same workbook can use the named reference as well, but they must 
            specify the worksheet name and, optionally, the workbook file name:
            <list type="bullet">
            <item>=Sheet2!OtherWorksheetName</item>
            <item>='C:\[MyWorkbook.xls]Sheet2'!OtherWorksheetName</item>
            </list>
            Formulas in cells of other workbooks can also used the named reference, but they must specify the workbook file
            name, worksheet name, and named reference name.
            </p>
            </remarks>
            <value>The scope of the named reference.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.NamedReferenceCollection">
            <summary>
            A collection of <see cref="T:Infragistics.Documents.Excel.NamedReference"/> instances in a workbook.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.NamedReference"/>
            <seealso cref="T:Workbook.NamedReferences"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReferenceCollection.Add(System.String,System.String)">
            <summary>
            Adds a named reference with a scope of the collection's associated <see cref="P:Infragistics.Documents.Excel.NamedReferenceCollection.Workbook"/> to the collection.
            </summary>
            <remarks>
            <p class="body">
            The <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> of the owning <see cref="P:Infragistics.Documents.Excel.NamedReferenceCollection.Workbook"/> will be used to parse the formula.
            </p>
            </remarks>
            <param name="name">The name to give the named reference.</param>
            <param name="formula">The formula to give the named reference.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name"/> is null or empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name"/> is longer than 255 characters.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name"/> is invalid. The name must begin with a letter, underscore (_), or a backslash (\).
            All other characters in the name must be letters, numbers, periods, underscores (_), or backslashes (\).
            The name cannot be a an A1 cell reference (1 to 3 letters followed by 1 to 6 numbers). In addition, the name
            cannot be 'r', 'R', 'c', or 'C' or start with a row or column reference in R1C1 cell reference mode 
            ('R' followed by 1 to 6 numbers or 'C' followed by 1 to 6 numbers).
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="name"/> is used by another named reference which also has a scope of the workbook. 
            Named reference names are compared case-insensitively.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="formula"/> is null or empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="formula"/> is not a valid formula. The inner exception will contain the <see cref="T:Infragistics.Documents.Excel.FormulaParseException"/>
            describing the reason the formula was not valid.
            </exception>
            <returns>The named reference which was added to the collection.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReferenceBase.Scope"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReferenceCollection.Add(System.String,System.String,Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>
            Adds a named reference with a scope of the collection's associated <see cref="P:Infragistics.Documents.Excel.NamedReferenceCollection.Workbook"/> to the collection.
            </summary>
            <param name="name">The name to give the named reference.</param>
            <param name="formula">The formula to give the named reference.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the formula.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name"/> is null or empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name"/> is longer than 255 characters.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name"/> is invalid. The name must begin with a letter, underscore (_), or a backslash (\).
            All other characters in the name must be letters, numbers, periods, underscores (_), or backslashes (\).
            The name cannot be a an A1 cell reference (1 to 3 letters followed by 1 to 6 numbers). In addition, the name
            cannot be 'r', 'R', 'c', or 'C' or start with a row or column reference in R1C1 cell reference mode 
            ('R' followed by 1 to 6 numbers or 'C' followed by 1 to 6 numbers).
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="name"/> is used by another named reference which also has a scope of the workbook. 
            Named reference names are compared case-insensitively.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="formula"/> is null or empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="formula"/> is not a valid formula. The inner exception will contain the <see cref="T:Infragistics.Documents.Excel.FormulaParseException"/>
            describing the reason the formula was not valid.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <returns>The named reference which was added to the collection.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReferenceBase.Scope"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReferenceCollection.Add(System.String,System.String,Infragistics.Documents.Excel.Worksheet)">
            <summary>
            Adds a named reference with a scope of a worksheet to the collection.
            </summary>
            <remarks>
            <p class="body">
            The <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> of the owning <see cref="P:Infragistics.Documents.Excel.NamedReferenceCollection.Workbook"/> will be used to parse the formula.
            </p>
            </remarks>
            <param name="name">The name to give the named reference.</param>
            <param name="formula">The formula to give the named reference.</param>
            <param name="worksheet">The scope of the named reference.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name"/> is null or empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name"/> is longer than 255 characters.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name"/> is invalid. The name must begin with a letter, underscore (_), or a backslash (\).
            All other characters in the name must be letters, numbers, periods, underscores (_), or backslashes (\).
            The name cannot be a an A1 cell reference (1 to 3 letters followed by 1 to 6 numbers). In addition, the name
            cannot be 'r', 'R', 'c', or 'C' or start with a row or column reference in R1C1 cell reference mode 
            ('R' followed by 1 to 6 numbers or 'C' followed by 1 to 6 numbers).
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="name"/> is used by another named reference which also has a scope of 
            the specified <paramref name="worksheet"/>. Named reference names are compared case-insensitively.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="formula"/> is null or empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="formula"/> is not a valid formula. The inner exception will contain the <see cref="T:Infragistics.Documents.Excel.FormulaParseException"/>
            describing the reason the formula was not valid.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheet"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="worksheet"/> does not belong to the workbook owning this collection.
            </exception>
            <returns>The named reference which was added to the collection.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReferenceBase.Scope"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReferenceCollection.Add(System.String,System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.Worksheet)">
            <summary>
            Adds a named reference with a scope of a worksheet to the collection.
            </summary>
            <param name="name">The name to give the named reference.</param>
            <param name="formula">The formula to give the named reference.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the formula.</param>
            <param name="worksheet">The scope of the named reference.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name"/> is null or empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name"/> is longer than 255 characters.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name"/> is invalid. The name must begin with a letter, underscore (_), or a backslash (\).
            All other characters in the name must be letters, numbers, periods, underscores (_), or backslashes (\).
            The name cannot be a an A1 cell reference (1 to 3 letters followed by 1 to 6 numbers). In addition, the name
            cannot be 'r', 'R', 'c', or 'C' or start with a row or column reference in R1C1 cell reference mode 
            ('R' followed by 1 to 6 numbers or 'C' followed by 1 to 6 numbers).
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="name"/> is used by another named reference which also has a scope of 
            the specified <paramref name="worksheet"/>. Named reference names are compared case-insensitively.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="formula"/> is null or empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="formula"/> is not a valid formula. The inner exception will contain the <see cref="T:Infragistics.Documents.Excel.FormulaParseException"/>
            describing the reason the formula was not valid.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheet"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="worksheet"/> does not belong to the workbook owning this collection.
            </exception>
            <returns>The named reference which was added to the collection.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReferenceBase.Scope"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReferenceCollection.Clear">
            <summary>
            Clears all named references from the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReferenceCollection.Contains(Infragistics.Documents.Excel.NamedReference)">
            <summary>
            Determines whether a named reference is in the collection.
            </summary>
            <param name="namedReference">The named reference to locate in the collection.</param>
            <returns>True if the named reference is found; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReferenceCollection.Find(System.String)">
            <summary>
            Finds a named reference in the collection with a scope of the collection's associated <see cref="T:Infragistics.Documents.Excel.Workbook"/>.
            </summary>
            <remarks>
            <p class="body">
            Named reference names are compared case-insensitively.
            </p>
            </remarks>
            <param name="name">The name of the named reference to find.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name"/> is null or empty.
            </exception>
            <returns>The named reference with the specified name or null if the named reference was not found.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReferenceCollection.Find(System.String,Infragistics.Documents.Excel.Worksheet)">
            <summary>
            Finds a named reference in the collection with a scope of the specified worksheet.
            </summary>
            <remarks>
            <p class="body">
            Named reference names are compared case-insensitively.
            </p>
            </remarks>
            <param name="name">The name of the named reference to find.</param>
            <param name="worksheetScope">The worksheet that the named reference found must have a scope of.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name"/> is null or empty.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheetScope"/> is null.
            </exception>
            <returns>The named reference with the specified name or null if the named reference was not found.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReferenceCollection.FindAll(System.String)">
            <summary>
            Finds all named references in the collection with the specified name.
            </summary>
            <remarks>
            <p class="body">
            Named reference names are compared case-insensitively.
            </p>
            </remarks>
            <param name="name">The name of the named references to find.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name"/> is null or empty.
            </exception>
            <returns>An array of <see cref="T:Infragistics.Documents.Excel.NamedReference"/> instances with the specified name.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReferenceCollection.Remove(Infragistics.Documents.Excel.NamedReference)">
            <summary>
            Removes the specified named reference from the collection.
            </summary>
            <param name="namedReference">The named reference to remove fro the collection.</param>
            <returns>True if the named reference existed in the collection and was removed; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReferenceCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the named reference at the specified index in the collection.
            </summary>
            <param name="index">The zero-based index of the named reference in the collection.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or <paramref name="index"/> is greater than or 
            equal to <see cref="P:Infragistics.Documents.Excel.NamedReferenceCollection.Count"/>.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.NamedReferenceCollection.Count">
            <summary>
            Gets the number of named references in the collection.
            </summary>
            <value>The number of named references in the collection.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.NamedReferenceCollection.Item(System.Int32)">
            <summary>
            Gets the named reference at the specified index.
            </summary>
            <param name="index">The zero-based index of the named reference to get.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or <paramref name="index"/> is greater than or 
            equal to <see cref="P:Infragistics.Documents.Excel.NamedReferenceCollection.Count"/>.
            </exception>
            <value>The named reference at the specified index.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.NamedReferenceCollection.Workbook">
            <summary>
            Gets the workbook associated with this collection.
            </summary>
            <value>The workbook associated with this collection.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.HorizontalPageBreak">
            <summary>
            Represents a horizontal page break in a <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.HorizontalPageBreaks"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.HorizontalPageBreak.#ctor(System.Int32)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.HorizontalPageBreak"/> instance.
            </summary>
            <param name="firstRowOnPage">The 0-based index of the first row on the page after this break.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.HorizontalPageBreak.#ctor(System.Int32,Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.HorizontalPageBreak"/> instance.
            </summary>
            <param name="firstRowOnPage">The 0-based index of the first row on the page after this break.</param>
            <param name="printArea">The print area in which the page break should occur or null to break in the entire sheet.</param>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="printArea"/> is not null and the <paramref name="firstRowOnPage"/> is outside the print area
            or the top row index of the print area.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.HorizontalPageBreak.FirstRowOnPage">
            <summary>
            Gets the 0-based index of the first row on the page after this break.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PageBreak">
            <summary>
            Base class for horizontal and vertical page breaks in a <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.ClearPageBreaks"/>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetCell)"/>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetColumn)"/>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetRow)"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.HorizontalPageBreaks"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.VerticalPageBreaks"/>
            <seealso cref="T:Infragistics.Documents.Excel.HorizontalPageBreak"/>
            <seealso cref="T:Infragistics.Documents.Excel.VerticalPageBreak"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.PageBreak.Equals(System.Object)">
            <summary>
            Determines whether this <see cref="T:Infragistics.Documents.Excel.PageBreak"/> is equal to the specified object.
            </summary>
            <param name="obj">The object to test.</param>
            <returns>True if the object is the same type as this PageBreak and has the same data; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.PageBreak.GetHashCode">
            <summary>
            Gets the hash code for the <see cref="T:Infragistics.Documents.Excel.PageBreak"/>.
            </summary>
            <returns>A hash code for the instance.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.PageBreak.PrintArea">
            <summary>
            Gets the print area in which the page break occurs.
            </summary>
            <value>
            A <seealso cref="T:Infragistics.Documents.Excel.WorksheetRegion"/> instance that is the print area where the page break occurs or null if the 
            page break occurs across the entire sheet.
            </value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.PageBreakCollection`1">
            <summary>
            Base class for the collections of horizontal and vertical page breaks on a <see cref="P:Infragistics.Documents.Excel.PageBreakCollection`1.Worksheet"/>.
            </summary>
            <typeparam name="T">The type of page break the collection contains.</typeparam>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.HorizontalPageBreaks"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.VerticalPageBreaks"/>
            <seealso cref="T:Infragistics.Documents.Excel.HorizontalPageBreakCollection"/>
            <seealso cref="T:Infragistics.Documents.Excel.VerticalPageBreakCollection"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.PageBreakCollection`1.Add(`0)">
            <summary>
            Adds a page break to the <see cref="P:Infragistics.Documents.Excel.PageBreakCollection`1.Worksheet"/>.
            </summary>
            <param name="pageBreak">The page break to add to the Worksheet.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="pageBreak"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="pageBreak"/> overlaps with another page break already in the collection.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetCell)"/>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetColumn)"/>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetRow)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.PageBreakCollection`1.Clear">
            <summary>
            Clears the collection of page breaks.
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.ClearPageBreaks"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.PageBreakCollection`1.Contains(`0)">
            <summary>
            Determines whether the specified page break exists on the <see cref="P:Infragistics.Documents.Excel.PageBreakCollection`1.Worksheet"/>.
            </summary>
            <param name="pageBreak">The page break to test.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="pageBreak"/> is null.
            </exception>
            <returns>True if the page break is on the Worksheet; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.PageBreakCollection`1.IndexOf(`0)">
            <summary>
            Gets the 0-based index of the specified page break.
            </summary>
            <param name="pageBreak">The page break for which the index should be obtained.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="pageBreak"/> is null.
            </exception>
            <returns>The 0-based index of the page break or -1 if the page break is no tin the collection.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.PageBreakCollection`1.Remove(`0)">
            <summary>
            Removes the specified page break from the <see cref="P:Infragistics.Documents.Excel.PageBreakCollection`1.Worksheet"/>.
            </summary>
            <param name="pageBreak">The page break which should be removed.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="pageBreak"/> is null.
            </exception>
            <returns>True if the page break was contained on the Worksheet before removal; False otherwise.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.ClearPageBreaks"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.PageBreakCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the page break at the specified index.
            </summary>
            <param name="index">The 0-based index of the page break to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Occurs when <paramref name="index"/> is less than zero or greater than or equal to the number of page breaks in the collection.
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.ClearPageBreaks"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PageBreakCollection`1.Count">
            <summary>
            Gets the number of page breaks in this collection.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.PageBreakCollection`1.Item(System.Int32)">
            <summary>
            Gets the page break at the specified index.
            </summary>
            <param name="index">The index of the page break to get.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Occurs when <paramref name="index"/> is less than 0 or greater than of equal to <see cref="P:Infragistics.Documents.Excel.PageBreakCollection`1.Count"/>.
            </exception>
            <returns>A <see cref="T:Infragistics.Documents.Excel.PageBreak"/>-derived instance.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.HorizontalPageBreakCollection">
            <summary>
            A collection of horizontal page breaks on a <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.HorizontalPageBreaks"/>
            <seealso cref="T:Infragistics.Documents.Excel.HorizontalPageBreak"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.VerticalPageBreakCollection">
            <summary>
            A collection of horizontal page breaks on a <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.VerticalPageBreaks"/>
            <seealso cref="T:Infragistics.Documents.Excel.VerticalPageBreak"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.VerticalPageBreak">
            <summary>
            Represents a vertical page break in a <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.VerticalPageBreaks"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.VerticalPageBreak.#ctor(System.Int32)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.VerticalPageBreak"/> instance.
            </summary>
            <param name="firstColumOnPage">The 0-based index of the first column on the page after this break.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.VerticalPageBreak.#ctor(System.Int32,Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.VerticalPageBreak"/> instance.
            </summary>
            <param name="firstColumOnPage">The 0-based index of the first column on the page after this break.</param>
            <param name="printArea">The print area in which the page break should occur or null to break in the entire sheet.</param>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="printArea"/> is not null and the <paramref name="firstColumOnPage"/> is outside the print area
            or the left column index of the print area.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.VerticalPageBreak.FirstColumnOnPage">
            <summary>
            Gets the 0-based index of the first column on the page after this break.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PaneSettingsBase">
            <summary>
            Abstract base class for classes which control pane settings.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.FrozenPaneSettings"/>
            <seealso cref="T:Infragistics.Documents.Excel.UnfrozenPaneSettings"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.PaneSettingsBase.Reset">
            <summary>
            Resets the pane settings to their defaults.
            </summary>
            <remarks>
            <p class="body">
            The defaults used for each setting are the same defaults with which Microsoft Excel creates a blank worksheet.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.PaneSettingsBase.ResetCore">
            <summary>
            Resets the pane settings to their defaults.
            </summary>
            <remarks>
            <p class="body">
            The defaults used for each setting are the same defaults with which Microsoft Excel creates a blank worksheet.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.PaneSettingsBase.FirstColumnInRightPane">
            <summary>
            Gets or sets the first visible column in the right pane(s) of the worksheet. 
            </summary>
            <remarks>
            <p class="body">
            This affects the scroll position for the right pane(s) of the worksheet and 
            is only used if the worksheet is split vertically.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value is outside the valid column range (0 to one less than <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelColumnCount"/> or 
            <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007ColumnCount"/>, depending on the workbook's 
            <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/>).
            </exception>
            <value>The zero-based index of the first visible column in the right pane(s).</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.PaneSettingsBase.FirstRowInBottomPane">
            <summary>
            Gets or sets the first visible row in the bottom pane(s) of the worksheet. 
            </summary>
            <remarks>
            <p class="body">
            This affects the scroll position for the bottom pane(s) of the worksheet and 
            is only used if the worksheet is split horizontally.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value is outside the valid row range (0 to one less than <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelRowCount"/> or 
            <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007RowCount"/>, depending on the workbook's 
            <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/>).
            </exception>
            <value>The zero-based index of the first visible row in the bottom pane(s).</value>
        </member>
        <member name="E:Infragistics.Documents.Excel.PaneSettingsBase.PropertyChanged">
            <summary>
            Occurs after a property value has changed
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PredefinedShapes.DiamondShape">
            <summary>
            Represents the diamond shape.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.PredefinedShapes.DiamondShape.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.DiamondShape"/> instance.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PredefinedShapes.EllipseShape">
            <summary>
            Represents the ellipse shape.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.PredefinedShapes.EllipseShape.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.EllipseShape"/> instance.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PredefinedShapes.HeartShape">
            <summary>
            Represents the heart shape.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.PredefinedShapes.HeartShape.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.HeartShape"/> instance.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PredefinedShapes.IrregularSeal1Shape">
            <summary>
            Represents the irregular seal 1 shape.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.PredefinedShapes.IrregularSeal1Shape.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.IrregularSeal1Shape"/> instance.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PredefinedShapes.IrregularSeal2Shape">
            <summary>
            Represents the irregular seal 2 shape.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.PredefinedShapes.IrregularSeal2Shape.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.IrregularSeal2Shape"/> instance.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PredefinedShapes.LightningBoltShape">
            <summary>
            Represents the lightning bolt shape.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.PredefinedShapes.LightningBoltShape.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.LightningBoltShape"/> instance.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PredefinedShapes.LineShape">
            <summary>
            Represents the line shape.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.PredefinedShapes.LineShape.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.LineShape"/> instance.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PredefinedShapes.PentagonShape">
            <summary>
            Represents the pentagon shape.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.PredefinedShapes.PentagonShape.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.PentagonShape"/> instance.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PredefinedShapes.RectangleShape">
            <summary>
            Represents the rectangle shape.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.PredefinedShapes.RectangleShape.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.RectangleShape"/> instance.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PredefinedShapes.RightTriangleShape">
            <summary>
            Represents the right triangle shape.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.PredefinedShapes.RightTriangleShape.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.RightTriangleShape"/> instance.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PredefinedShapes.StraightConnector1Shape">
            <summary>
            Represents the straight connector 1 shape.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.PredefinedShapes.StraightConnector1Shape.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.StraightConnector1Shape"/> instance.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PrintAreasCollection">
            <summary>
            Gets the collection of print areas in a <see cref="T:Infragistics.Documents.Excel.Worksheet"/> or a worksheet's print settings in a <see cref="T:Infragistics.Documents.Excel.CustomView"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.PrintAreasCollection.Add(Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>
            Adds a print area to the collection.
            </summary>
            <param name="printArea">The print area to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="printArea"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="printArea"/> overlaps with another print area in the collection.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.PrintAreasCollection.Clear">
            <summary>
            Clears all print areas from the collection.
            </summary>
            <remarks>
            <p class="body">
            If any page breaks are contained in a print area, they will be removed from their collection.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.HorizontalPageBreaks"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.VerticalPageBreaks"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.PrintAreasCollection.Contains(Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>
            Determines whether the specified print area is in the collection.
            </summary>
            <param name="printArea">The print area to search for in the collection.</param>
            <returns>True if the print area is in the collection; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.PrintAreasCollection.Remove(Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>
            Removes the specified print area from the collection.
            </summary>
            <param name="printArea">The print area to remove from the collection.</param>
            <remarks>
            <p class="body">
            If any page breaks are contained in the removed print area, they will be removed from their collection.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="printArea"/> is null.
            </exception>
            <returns>True if the print area was found and removed; False otherwise.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.HorizontalPageBreaks"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.VerticalPageBreaks"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.PrintAreasCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the print area at the specified index from the collection.
            </summary>
            <param name="index">The index of the print area to remove from the collection.</param>
            <remarks>
            <p class="body">
            If any page breaks are contained in the removed print area, they will be removed from their collection.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Occurs when <paramref name="index"/> is less than 0 or greater than or equal to the size of the collection.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.HorizontalPageBreaks"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.VerticalPageBreaks"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintAreasCollection.Count">
            <summary>
            Gets the number of print areas in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintAreasCollection.Item(System.Int32)">
            <summary>
            Gets the print area at the specified index.
            </summary>
            <param name="index">The index of the print area to get.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Occurs when <paramref name="index"/> is less than 0 or greater than or equal to the size of the collection.
            </exception>
            <returns>A <see cref="T:Infragistics.Documents.Excel.WorksheetRegion"/> instance representing a print area in the <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.PrintOptionsBase">
            <summary>
            Base class which exposes the various print options available for a sheet which can be saved with both a 
            sheet and its custom view.
            </summary>
            <remarks>
            <p class="body">
            This class provides a way to control how a sheet is printed.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.PrintOptions"/>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetPrintOptions(Infragistics.Documents.Excel.Worksheet,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.PrintOptionsBase.Reset">
            <summary>
            Resets the print options to their default settings.
            </summary>
            <remarks>
            <p class="body">
            The defaults used for each setting are the same defaults with which Microsoft Excel creates a blank worksheet.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptionsBase.AlignHeadersAndFootersWithMargins">
            <summary>
            Gets or sets the value indicating whether to align header and footer margins with page margins.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.Header"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.Footer"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.HeaderMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.FooterMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.LeftMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.RightMargin"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptionsBase.BottomMargin">
            <summary>
            Gets or sets the margin at the bottom of each printed page of the worksheet, specified in inches.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value is outside the valid margin range of 0 and 100 inches.
            </exception>
            <value>The margin at the bottom of each printed page of the worksheet, specified in inches.</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.FooterMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.HeaderMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.LeftMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.RightMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.TopMargin"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptionsBase.DraftQuality">
            <summary>
            Gets or sets the value indicating whether the printed pages should be printed using draft quality.
            </summary>
            <value>The value indicating whether the printed pages should be printed using draft quality.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptionsBase.Footer">
            <summary>
            Gets or sets the footer for each page of the printed worksheet.
            </summary>
            <remarks>
            <p class="body">
            The '&amp;' character in the header and footer is a special character. Depending on what is after it, 
            the formatting of the text can be controlled or dynamic text can be inserted. Below is a list of 
            the available commands:
            <list type="table">
            	<listheader>
            		<term>Section commands</term>
            	</listheader>
            	<item>
            		<term>&amp;L</term>
            		<description>
            			The following text will appear in the left section. The formatting of new sections is 
            			always the default formatting, regardless of the formatting of the previous section.
            		</description>
            	</item>
            	<item>
            		<term>&amp;C</term>
            		<description>
            			The following text will appear in the center section. The formatting of new sections is 
            			always the default formatting, regardless of the formatting of the previous section.
            		</description>
            	</item>
            	<item>
            		<term>&amp;R</term>
            		<description>
            			The following text will appear in the right section. The formatting of new sections is 
            			always the default formatting, regardless of the formatting of the previous section.
            		</description>
            	</item>
            </list>
            <list type="table">
            	<listheader>
            		<term>Replacement commands</term>
            	</listheader>
            	<item>
            		<term>&amp;&amp;</term>
            		<description>Insert the '&amp;' character.</description>
            	</item>
            	<item>
            		<term>&amp;A</term>
            		<description>Insert the current worksheet name.</description>
            	</item>
            	<item>
            		<term>&amp;D</term>
            		<description>Insert the current date.</description>
            	</item>
            	<item>
            		<term>&amp;F</term>
            		<description>Insert the current file name.</description>
            	</item>
            	<item>
            		<term>&amp;G</term>
            		<description>Insert an image (<b>Note:</b> This command is currently not supported).</description>
            	</item>
            	<item>
            		<term>&amp;N</term>
            		<description>Insert the  number of pages the worksheet will need to print.</description>
            	</item>
            	<item>
            		<term>&amp;P</term>
            		<description>Insert the current page number.</description>
            	</item>
            	<item>
            		<term>&amp;T</term>
            		<description>Insert the current time.</description>
            	</item>
            	<item>
            		<term>&amp;Z</term>
            		<description>Insert the current file path (without the file name).</description>
            	</item>
            </list>
            <list type="table">
            	<listheader>
            		<term>Formatting commands</term>
            	</listheader>
            	<item>
            		<term>&amp;B</term>
            		<description>Toggle bold.</description>
            	</item>
            	<item>
            		<term>&amp;E</term>
            		<description>Toggle double underlining.</description>
            	</item>
            	<item>
            		<term>&amp;I</term>
            		<description>Toggle italics.</description>
            	</item>
            	<item>
            		<term>&amp;S</term>
            		<description>Toggle strikethrough.</description>
            	</item>
            	<item>
            		<term>&amp;U</term>
            		<description>Toggle underlining.</description>
            	</item>
            	<item>
            		<term>&amp;X</term>
            		<description>Toggle superscript.</description>
            	</item>
            	<item>
            		<term>&amp;Y</term>
            		<description>Toggle subscript.</description>
            	</item>
            	<item>
            		<term>&amp;&lt;FontSize&gt;</term>
            		<description>
            			Sets a new font size for the following text. The size is expressed as a positive integer. 
            			If a number is to follow this command in the header, it must be separated by a space.
            		</description>
            	</item>
            	<item>
            		<term>&amp;"&lt;FontName&gt;"</term>
            		<description>
            			Sets a new font for the following text. If the font name is not recognized, the default 
            			font will be used.
            		</description>
            	</item>
            	<item>
            		<term>&amp;"&lt;FontName&gt;,&lt;FontStyle&gt;"</term>
            		<description>
            			Sets the new font and font style for the following text. The font style is usually "Regular", 
            			"Bold", "Italic", or "Bold Italic", but	can be other styles depending on the font. The 
            			available font styles can be seen in the font dialog when a font is selected.
            		</description>
            	</item>
            </list>
            </p>
            <p class="body">
            The header or footer string could look like this: &amp;L&amp;"Arial,Bold"&amp;D&amp;CPage &amp;P of 
            &amp;N on &amp;A&amp;R&amp;14&amp;F.
            </p>
            </remarks>
            <value>The footer for each page of the worksheet.</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.Header"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.FooterMargin"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptionsBase.FooterMargin">
            <summary>
            Gets or sets the footer margin for each printed page of the worksheet, specified in inches.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value is outside the valid margin range of 0 and 100 inches.
            </exception>
            <value>The footer margin for each printed page of the worksheet, specified in inches.</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.Footer"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.BottomMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.HeaderMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.LeftMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.RightMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.TopMargin"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptionsBase.Header">
            <summary>
            Gets or sets the header for each page of the printed worksheet.
            </summary>
            <remarks>
            <p class="body">
            The '&amp;' character in the header and footer is a special character. Depending on what is after it, 
            the formatting of the text can be controlled or dynamic text can be inserted. Below is a list of 
            the available commands:
            <list type="table">
            	<listheader>
            		<term>Section commands</term>
            	</listheader>
            	<item>
            		<term>&amp;L</term>
            		<description>
            			The following text will appear in the left section. The formatting of new sections is 
            			always the default formatting, regardless of the formatting of the previous section.
            		</description>
            	</item>
            	<item>
            		<term>&amp;C</term>
            		<description>
            			The following text will appear in the center section. The formatting of new sections is 
            			always the default formatting, regardless of the formatting of the previous section.
            		</description>
            	</item>
            	<item>
            		<term>&amp;R</term>
            		<description>
            			The following text will appear in the right section. The formatting of new sections is 
            			always the default formatting, regardless of the formatting of the previous section.
            		</description>
            	</item>
            </list>
            <list type="table">
            	<listheader>
            		<term>Replacement commands</term>
            	</listheader>
            	<item>
            		<term>&amp;&amp;</term>
            		<description>Insert the '&amp;' character.</description>
            	</item>
            	<item>
            		<term>&amp;A</term>
            		<description>Insert the current worksheet name.</description>
            	</item>
            	<item>
            		<term>&amp;D</term>
            		<description>Insert the current date.</description>
            	</item>
            	<item>
            		<term>&amp;F</term>
            		<description>Insert the current file name.</description>
            	</item>
            	<item>
            		<term>&amp;G</term>
            		<description>Insert an image (<b>Note:</b> This command is currently not supported).</description>
            	</item>
            	<item>
            		<term>&amp;N</term>
            		<description>Insert the  number of pages the worksheet will need to print.</description>
            	</item>
            	<item>
            		<term>&amp;P</term>
            		<description>Insert the current page number.</description>
            	</item>
            	<item>
            		<term>&amp;T</term>
            		<description>Insert the current time.</description>
            	</item>
            	<item>
            		<term>&amp;Z</term>
            		<description>Insert the current file path (without the file name).</description>
            	</item>
            </list>
            <list type="table">
            	<listheader>
            		<term>Formatting commands</term>
            	</listheader>
            	<item>
            		<term>&amp;B</term>
            		<description>Toggle bold.</description>
            	</item>
            	<item>
            		<term>&amp;E</term>
            		<description>Toggle double underlining.</description>
            	</item>
            	<item>
            		<term>&amp;I</term>
            		<description>Toggle italics.</description>
            	</item>
            	<item>
            		<term>&amp;S</term>
            		<description>Toggle strikethrough.</description>
            	</item>
            	<item>
            		<term>&amp;U</term>
            		<description>Toggle underlining.</description>
            	</item>
            	<item>
            		<term>&amp;X</term>
            		<description>Toggle superscript.</description>
            	</item>
            	<item>
            		<term>&amp;Y</term>
            		<description>Toggle subscript.</description>
            	</item>
            	<item>
            		<term>&amp;&lt;FontSize&gt;</term>
            		<description>
            			Sets a new font size for the following text. The size is expressed as a positive integer. 
            			If a number is to follow this command in the header, it must be separated by a space.
            		</description>
            	</item>
            	<item>
            		<term>&amp;"&lt;FontName&gt;"</term>
            		<description>
            			Sets a new font for the following text. If the font name is not recognized, the default 
            			font will be used.
            		</description>
            	</item>
            	<item>
            		<term>&amp;"&lt;FontName&gt;,&lt;FontStyle&gt;"</term>
            		<description>
            			Sets the new font and font style for the following text. The font style is usually "Regular", 
            			"Bold", "Italic", or "Bold Italic", but	can be other styles depending on the font. The 
            			available font styles can be seen in the font dialog when a font is selected.
            		</description>
            	</item>
            </list>
            </p>
            <p class="body">
            The header or footer string could look like this: &amp;L&amp;"Arial,Bold"&amp;D&amp;CPage &amp;P of 
            &amp;N on &amp;A&amp;R&amp;14&amp;F.
            </p>
            </remarks>
            <value>The header for each page of the worksheet.</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.Footer"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.HeaderMargin"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptionsBase.HeaderMargin">
            <summary>
            Gets or sets the header margin for each printed page of the worksheet, specified in inches.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value is outside the valid margin range of 0 and 100 inches.
            </exception>
            <value>The header margin for each printed page of the worksheet, specified in inches.</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.Header"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.BottomMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.FooterMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.LeftMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.RightMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.TopMargin"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptionsBase.LeftMargin">
            <summary>
            Gets or sets the margin at the left of each printed page of the worksheet, specified in inches.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value is outside the valid margin range of 0 and 100 inches.
            </exception>
            <value>The margin at the left of each printed page of the worksheet, specified in inches.</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.BottomMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.FooterMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.HeaderMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.RightMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.TopMargin"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptionsBase.NumberOfCopies">
            <summary>
            Gets or sets the number of copies to print.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value is outside the valid range of 1 and 65535.
            </exception>
            <value>The number of copies to print.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptionsBase.Orientation">
            <summary>
            Gets or sets the orientation for each page of the printed worksheet.
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The assigned value is not defined in the <see cref="P:Infragistics.Documents.Excel.PrintOptionsBase.Orientation"/> enumeration.
            </exception>
            <value>The orientation for each page of the printed worksheet.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptionsBase.OrientationResolved">
            <summary>
            Returns the resolved orientation for each page of the printed worksheet.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptionsBase.PageNumbering">
            <summary>
            Gets or sets the method with which pages are numbered.
            </summary>
            <remarks>
            <p class="body">
            If this is set to a value of UseStartPageNumber, the first page is numbered using the <see cref="P:Infragistics.Documents.Excel.PrintOptionsBase.StartPageNumber"/>.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The assigned value is not defined in the <see cref="P:Infragistics.Documents.Excel.PrintOptionsBase.PageNumbering"/> enumeration.
            </exception>
            <value>The method with which pages are numbered.</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.StartPageNumber"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptionsBase.PaperSize">
            <summary>
            Gets or sets the paper size for each printed page of the worksheet.
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The assigned value is not defined in the <see cref="P:Infragistics.Documents.Excel.PrintOptionsBase.PaperSize"/> enumeration.
            </exception>
            <value>The paper size for each printed page of the worksheet.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptionsBase.PrintErrors">
            <summary>
            Gets or sets the way error values of cells are printed.
            </summary>
            <remarks>
            <p class="body">
            A cell can have an error value if its <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Value"/> is set directly to
            an <see cref="T:Infragistics.Documents.Excel.ErrorValue"/> or if it is set to a <see cref="T:Infragistics.Documents.Excel.Formula"/> that evaluates to an
            error.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The assigned value is not defined in the <see cref="P:Infragistics.Documents.Excel.PrintOptionsBase.PrintErrors"/> enumeration.
            </exception>
            <value>The way error values of cells are printed.</value>
            <seealso cref="T:Infragistics.Documents.Excel.ErrorValue"/>
            <seealso cref="T:Infragistics.Documents.Excel.Formula"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptionsBase.PrintInBlackAndWhite">
            <summary>
            Gets or sets the value indicating whether the worksheet should be printed in black and white.
            </summary>
            <value>The value indicating whether the worksheet should be printed in black and white.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptionsBase.PrintNotes">
            <summary>
            Gets or sets the way cell comments are printed.
            </summary>
            <remarks>
            <p class="body">
            If this is set to a value of PrintAsDisplayed, the comments will only print if they are displayed on the worksheet.
            If comments are hidden but indicators are shown, neither the indicators nor the comments will print.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The assigned value is not defined in the <see cref="P:Infragistics.Documents.Excel.PrintOptionsBase.PrintNotes"/> enumeration.
            </exception>
            <value>The way cell notes are printed.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Comment"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetCellComment"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptionsBase.Resolution">
            <summary>
            Gets or sets the horizontal print resolution in DPI.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value assigned is outside the valid range of 0 and 65535.
            </exception>
            <value>The horizontal print resolution in DPI.</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.VerticalResolution"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptionsBase.RightMargin">
            <summary>
            Gets or sets the margin at the right of each printed page of the worksheet, specified in inches.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value is outside the valid margin range of 0 and 100 inches.
            </exception>
            <value>The margin at the right of each printed page of the worksheet, specified in inches.</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.BottomMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.FooterMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.HeaderMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.LeftMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.TopMargin"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptionsBase.ScaleHeadersAndFootersWithDocument">
            <summary>
            Gets or sets the value indicating whether to scale the headers and footers with the document scaling.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.Header"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.Footer"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.ScalingFactor"/>
            <seealso cref="T:Infragistics.Documents.Excel.ScalingType"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptionsBase.StartPageNumber">
            <summary>
            Gets or sets the page number for the first printed page of the worksheet.
            </summary>
            <remarks>
            <p class="body">
            For this value to be used, <see cref="P:Infragistics.Documents.Excel.PrintOptionsBase.PageNumbering"/> must be set to a value of UseStartPageNumber.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value is outside the valid range of -32765 and 32767.
            </exception>
            <value>The page number for the first printed page of the worksheet.</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.PageNumbering"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptionsBase.TopMargin">
            <summary>
            Gets or sets the margin at the top of each printed page of the worksheet, specified in inches.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value is outside the valid margin range of 0 and 100 inches.
            </exception>
            <value>The margin at the top of each printed page of the worksheet, specified in inches.</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.BottomMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.FooterMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.HeaderMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.LeftMargin"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.RightMargin"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptionsBase.VerticalResolution">
            <summary>
            Gets or sets the vertical print resolution in DPI.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value assigned is outside the valid range of 0 and 65535.
            </exception>
            <value>The vertical print resolution in DPI.</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptionsBase.Resolution"/>
        </member>
        <member name="E:Infragistics.Documents.Excel.PrintOptionsBase.PropertyChanged">
            <summary>
            Occurs after a property value has changed
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PrintOptions">
            <summary>
            Class which exposes the various print options available for a worksheet which can be saved with both a 
            worksheet and a custom view.
            </summary>
            <remarks>
            <p class="body">
            This class provides a way to control how a worksheet is printed.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.PrintOptions"/>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetPrintOptions(Infragistics.Documents.Excel.Worksheet,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.PrintOptions.ClearPageBreaks">
            <summary>
            Clears all page breaks from the <see cref="T:Infragistics.Documents.Excel.PrintOptions"/>.
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.PageBreakCollection`1.Clear"/>
            <seealso cref="M:Infragistics.Documents.Excel.PageBreakCollection`1.Remove(`0)"/>
            <seealso cref="M:Infragistics.Documents.Excel.PageBreakCollection`1.RemoveAt(System.Int32)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetCell)">
            <summary>
            Inserts a horizontal and/or vertical page break before the specified cell.
            </summary>
            <param name="cell">The cell at which to insert the page break(s).</param>
            <remarks>
            <p class="body">
            If the cell is not contained in one of the print areas in the <see cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas"/> collection, the page breaks added will be as follows:
            If the cell is at the top-left corner of the <see cref="T:Infragistics.Documents.Excel.Worksheet"/>, an exception will be thrown. If the cell is on the left edge of the 
            Worksheet, a horizontal page break will be inserted above the cell. If the cell is on the top edge of the Worksheet, a vertical page break 
            will be inserted to the left of the cell. If the cell is anywhere else in the Worksheet, a horizontal page break will be inserted above the 
            cell and a vertical page break will be inserted to the left of the cell.
            </p>
            <p class="body">
            If the cell is contained in one of the print areas in the <see cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas"/> collection, the page breaks added will be as follows:
            If the cell is at the top-left corner of the print area, no page breaks will be inserted. If the cell is on the left edge of the print area, 
            a horizontal page break will be inserted above the cell. If the cell is on the top edge of the print area, a vertical page break will be 
            inserted to the left of the cell. If the cell is anywhere else in the print area, a horizontal page break will be inserted above the cell
            and a vertical page break will be inserted to the left of the cell.
            </p>
            <p class="body">
            When page breaks are inserted in a print area, they will only extend to the edges of the print area.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="cell"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="cell"/> is at the top-left corner of the <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.HorizontalPageBreaks"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.VerticalPageBreaks"/>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.ClearPageBreaks"/>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetColumn)"/>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetRow)"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetColumn)">
            <summary>
            Inserts a vertical page break to the left of the specified column.
            </summary>
            <param name="column">The column at which to insert the page break.</param>
            <remarks>
            <p class="body">
            If the column is not contained in one of the print areas in the <see cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas"/> collection, the page breaks added will be as follows:
            If the column is at the left edge of the <see cref="T:Infragistics.Documents.Excel.Worksheet"/>, an exception will be thrown. If the column is anywhere else in the Worksheet, 
            a vertical page break will be inserted to the left of the column.
            </p>
            <p class="body">
            If the column is contained in one of the print areas in the <see cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas"/> collection, the page breaks added will be as follows:
            If the column is at the left edge of the print area, no page break will be inserted. If the column is anywhere else in the print area, a 
            vertical page break will be inserted to the left of the column.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="column"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="column"/> is at the left edge of the <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.VerticalPageBreaks"/>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.ClearPageBreaks"/>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetCell)"/>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetRow)"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetRow)">
            <summary>
            Inserts a horizontal page break above the specified row.
            </summary>
            <param name="row">The row at which to insert the page break.</param>
            <remarks>
            <p class="body">
            If the row is not contained in one of the print areas in the <see cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas"/> collection, the page breaks added will be as follows:
            If the row is at the top edge of the <see cref="T:Infragistics.Documents.Excel.Worksheet"/>, an exception will be thrown. If the row is anywhere else in the Worksheet, 
            a horizontal page break will be inserted above the row.
            </p>
            <p class="body">
            If the row is contained in one of the print areas in the <see cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas"/> collection, the page breaks added will be as follows:
            If the row is at the top edge of the print area, no page break will be inserted. If the row is anywhere else in the print area, a 
            horizontal page break will be inserted above the row.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="row"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="row"/> is at the top edge of the <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.HorizontalPageBreaks"/>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.ClearPageBreaks"/>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetCell)"/>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetColumn)"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.PrintOptions.Reset">
            <summary>
            Resets the print options to their default settings.
            </summary>
            <remarks>
            <p class="body">
            The defaults used for each setting are the same defaults with which Microsoft Excel creates a blank worksheet.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.CenterHorizontally">
            <summary>
            Gets or sets the value indicating whether the printed pages should be centered horizontally.
            </summary>
            <value>The value indicating whether the printed pages should be centered horizontally.</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.CenterVertically"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.CenterVertically">
            <summary>
            Gets or sets the value indicating whether the printed pages should be centered vertically.
            </summary>
            <value>The value indicating whether the printed pages should be centered vertically.</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.CenterHorizontally"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.ColumnsToRepeatAtLeft">
            <summary>
            Gets or sets the range of columns which should be printed on every page.
            </summary>
            <exception cref="T:System.ArgumentException">
            Occurs when the value specified is not null and its <seealso cref="P:Infragistics.Documents.Excel.RepeatTitleRange.EndIndex"/> value is greater than or equal 
            to the number of columns in the <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.RowsToRepeatAtTop"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.HorizontalPageBreaks">
            <summary>
            Gets the collection of horizontal page breaks in the <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.HorizontalPageBreak"/>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.ClearPageBreaks"/>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetCell)"/>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetColumn)"/>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetRow)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.MaxPagesHorizontally">
            <summary>
            Gets or sets the maximum number of pages allowed in the horizontal direction to print the worksheet.
            </summary>
            <remarks>
            <p class="body">
            A value of zero indicates no maximum is used in the horizontal direction. As many pages as needed will be used.
            </p>
            <p class="note">
            <B>Note:</B> For MaxPagesHorizontally and <see cref="P:Infragistics.Documents.Excel.PrintOptions.MaxPagesVertically"/> to affect the way the worksheet is printed,
            <see cref="P:Infragistics.Documents.Excel.PrintOptions.ScalingType"/> must be set to a value of FitToPages. However, if the the ScalingType is different 
            and these values aren't used, they will still be saved with the worksheet.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value assigned is outside the valid range of 0 and 32767.
            </exception>
            <value>The maximum number of pages allowed in the horizontal direction to print the worksheet.</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.MaxPagesVertically"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.ScalingType"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.MaxPagesVertically">
            <summary>
            Gets or sets the maximum number of pages allowed in the vertical direction to print the worksheet.
            </summary>
            <remarks>
            <p class="body">
            A value of zero indicates no maximum is used in the vertical direction. As many pages as needed will be used.
            </p>
            <p class="note">
            <B>Note:</B> For <see cref="P:Infragistics.Documents.Excel.PrintOptions.MaxPagesHorizontally"/> and MaxPagesVertically to affect the way the worksheet is printed,
            <see cref="P:Infragistics.Documents.Excel.PrintOptions.ScalingType"/> must be set to a value of FitToPages. However, if the the ScalingType is different 
            and these values aren't used, they will still be saved with the worksheet.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value assigned is outside the valid range of 0 and 32767.
            </exception>
            <value>The maximum number of pages allowed in the vertical direction to print the worksheet.</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.MaxPagesHorizontally"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.ScalingType"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.PageOrder">
            <summary>
            Gets or sets the order in which to print pages for multiple page worksheets.
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The assigned value is not defined in the <see cref="P:Infragistics.Documents.Excel.PrintOptions.PageOrder"/> enumeration.
            </exception>
            <value>The order in which to print pages for multiple page worksheets.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas">
            <summary>
            Gets the collection of print areas in the <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.PrintGridlines">
            <summary>
            Gets or sets the value which indicates whether to print the worksheet gridlines.
            </summary>
            <value>The value which indicates whether to print the worksheet gridlines.</value>
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.ShowGridlines"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.PrintRowAndColumnHeaders">
            <summary>
            Gets or sets the value indicating whether to print row and column headers.
            </summary>
            <remarks>
            <p class="body">
            The row and column headers show the identifier of the row or column.
            </p>
            </remarks>
            <value>The value indicating whether to print row and column headers.</value>
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.ShowRowAndColumnHeaders"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.RowsToRepeatAtTop">
            <summary>
            Gets or sets the range of rows which should be printed on every page.
            </summary>
            <exception cref="T:System.ArgumentException">
            Occurs when the value specified is not null and its <seealso cref="P:Infragistics.Documents.Excel.RepeatTitleRange.EndIndex"/> value is greater than or equal 
            to the number of rows in the <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.ColumnsToRepeatAtLeft"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.ScalingFactor">
            <summary>
            Gets or sets the scaling factor to use when printing the worksheet.
            </summary>
            <remarks>
            <p class="body">
            The scaling factor is similar to magnifications in that is it stored as a percentage of the normal scaling. 
            A value of 100 indicates normal scaling whereas a value of 200 indicates the worksheet is scaled to twice its
            normal size.
            </p>
            <p class="note">
            <B>Note:</B> For ScalingFactor to affect the way the worksheet is printed, <see cref="P:Infragistics.Documents.Excel.PrintOptions.ScalingType"/> must be 
            set to a value of UseScalingFactor.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value is outside the valid range of 10 and 400.
            </exception>
            <value>The scaling factor to use when printing the worksheet.</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.ScalingType"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInNormalView"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInPageBreakView"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInPageLayoutView"/>
            <seealso cref="P:Infragistics.Documents.Excel.CustomViewDisplayOptions.MagnificationInCurrentView"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.ScalingType">
            <summary>
            Gets or sets the method for scaling the worksheet when it is printed.
            </summary>
            <remarks>
            <p class="body">
            If this is set to a value of UseScalingFactor, <see cref="P:Infragistics.Documents.Excel.PrintOptions.ScalingFactor"/> is used to uniformly scale
            the worksheet on the printed pages.
            </p>
            <p class="body">
            If this is set to a value of FitToPages, <see cref="P:Infragistics.Documents.Excel.PrintOptions.MaxPagesHorizontally"/> and <see cref="P:Infragistics.Documents.Excel.PrintOptions.MaxPagesVertically"/>
            are used to set the maximum number of pages to fit the printed worksheet into in both directions.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The assigned value is not defined in the <see cref="P:Infragistics.Documents.Excel.PrintOptions.ScalingType"/> enumeration.
            </exception>
            <value>The method for scaling the worksheet when it is printed.</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.MaxPagesHorizontally"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.MaxPagesVertically"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.ScalingFactor"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.VerticalPageBreaks">
            <summary>
            Gets the collection of vertical page breaks in the <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.VerticalPageBreak"/>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.ClearPageBreaks"/>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetCell)"/>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetColumn)"/>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetRow)"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetProtectedSelectionMode">
            <summary>
            Enumeration used to indicate which cells may be selected when the Worksheet is protected.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetProtection.SelectionMode"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetProtectedSelectionMode.AllCells">
            <summary>
            All cells including locked cells may be selected.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetProtectedSelectionMode.UnlockedCells">
            <summary>
            Only cells that are unlocked may be selected via the keyboard or mouse. Note a cell that is locked may be selected if a range selection is created between 2 unlocked cells.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetProtectedSelectionMode.NoCells">
            <summary>
            The selection cannot be change.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookProtection">
            <summary>
            Provides information about the types of changes that are disabled when the associated Workbook is protected.
            </summary>
            <p class="body">The properties of this class are read-only (e.g. <see cref="P:Infragistics.Documents.Excel.WorkbookProtection.AllowEditStructure"/>). The state 
            of these properties are set when the Workbook is protected (e.g. using the <see cref="M:Infragistics.Documents.Excel.Workbook.Protect(System.Boolean,System.Boolean)"/> 
            method.</p>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasProtectionPassword"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IsProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.Protection"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Protect(System.Boolean,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Protect(System.String,System.Boolean,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Protect(System.Security.SecureString,System.Boolean,System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Unprotect(System.Security.SecureString)"/> 
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookProtection.AllowEditStructure">
            <summary>
            Returns a boolean indicating if the sheets displayed may be modified when the Workbook is protected.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookProtection.AllowEditWindows">
            <summary>
            Returns a boolean indicating if the Workbook windows may be modified when the Workbook is protected.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetProtectedRangeCollection">
            <summary>
            A collection of <see cref="T:Infragistics.Documents.Excel.WorksheetProtectedRange"/> instances in a <see cref="T:Infragistics.Documents.Excel.Worksheet"/>
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtectedRangeCollection.Count">
            <summary>
            Gets the number of ranges in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtectedRangeCollection.Item(System.Int32)">
            <summary>
            Gets the range at the specified index in the collection.
            </summary>
            <param name="index">The zero-based index of the range to get.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or <paramref name="index"/> is greater than or equal to <see cref="P:Infragistics.Documents.Excel.WorksheetProtectedRangeCollection.Count"/>.
            </exception>
            <value>The range at the specified index.</value>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetProtectedRangeCollection.Add(Infragistics.Documents.Excel.WorksheetProtectedRange)">
            <summary>
            Adds the specified range to the collection.
            </summary>
            <param name="item">The range to be added</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetProtectedRangeCollection.Clear">
            <summary>
            Clears all ranges from the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetProtectedRangeCollection.Contains(Infragistics.Documents.Excel.WorksheetProtectedRange)">
            <summary>
            Determines whether a range is in the collection.
            </summary>
            <param name="range">The range to locate in the collection.</param>
            <returns>True if the range is found; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetProtectedRangeCollection.GetEnumerator">
            <summary>
            Gets an enumerator which can iterator all ranges in the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetProtectedRangeCollection.Insert(System.Int32,Infragistics.Documents.Excel.WorksheetProtectedRange)">
            <summary>
            Inserts the specified range in the collection.
            </summary>
            <param name="index">The 0-based index in the collection where the range should be inserted.</param>
            <param name="range">The range to insert in the collection.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetProtectedRangeCollection.Remove(Infragistics.Documents.Excel.WorksheetProtectedRange)">
            <summary>
            Removes the specified range from the collection.
            </summary>
            <param name="range">The range to remove from the collection.</param>
            <returns>
            True if the range was successfully removed from the collection; 
            False if the range did not exist in the collection.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetProtectedRangeCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the range at the specified index from the collection.
            </summary>
            <param name="index">The index of the range to remove from the collection.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or <paramref name="index"/> is greater than or equal to <see cref="P:Infragistics.Documents.Excel.WorksheetProtectedRangeCollection.Count"/>.
            </exception>
        </member>
        <member name="T:Infragistics.Documents.Excel.SheetProtection">
            <summary>
            Provides information about the types of changes that are disabled when the associated Sheet is protected.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.HasProtectionPassword"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.IsProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.SheetProtection"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.Security.SecureString)"/> 
        </member>
        <member name="E:Infragistics.Documents.Excel.SheetProtection.PropertyChanged">
            <summary>
            Occurs after a property value has changed
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetProtection">
            <summary>
            Provides information about the types of changes that are disabled when the associated Worksheet is protected.
            </summary>
            <remarks>
            <p class="body">When a Worksheet is protected, the contents of unprotected cells may be edited by the end-user. One way to unprotect a 
            cell is to change the <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Locked"/> property to false. Such cells may be edited by all users. Another way to 
            unprotect cells is using the <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowedEditRanges"/>. This is a collection of <see cref="T:Infragistics.Documents.Excel.WorksheetProtectedRange"/> instances that 
            define a range of cells that is optionally protected by another password. For any other cells, the Worksheet would need to be unprotected first. 
            A Worksheet may be programatically unprotected using the <see cref="M:Infragistics.Documents.Excel.Sheet.Unprotect"/> method or conditionally based on matching a specified 
            password using the <see cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.String)"/> method.</p>
            <p class="body">The <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.SelectionMode"/> property is used to control which cells the end user may select when the Worksheet has been 
            protected. This property may be set before or after protecting a Worksheet.</p>
            <p class="body">Many of the other properties of this class are read-only (e.g. <see cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowDeletingColumns"/>). The state 
            of these properties are optionally set when the Worksheet is protected (e.g. using the <see cref="M:Infragistics.Documents.Excel.Worksheet.Protect(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/> 
            method.</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.HasProtectionPassword"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.IsProtected"/>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Protection"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.Protect(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.Protect(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.Protect(System.Security.SecureString,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sheet.Unprotect(System.Security.SecureString)"/> 
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtection.AllowDeletingColumns">
            <summary>
            Returns a boolean indicating if the deletion of columns is allowed in a protected worksheet.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowDeletingRows"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowInsertingColumns"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowInsertingRows"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtection.AllowDeletingRows">
            <summary>
            Returns a boolean indicating if the deletion of rows is allowed in a protected worksheet.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowDeletingColumns"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowInsertingColumns"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowInsertingRows"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtection.AllowedEditRanges">
            <summary>
            Returns a collection of <see cref="T:Infragistics.Documents.Excel.WorksheetProtectedRange"/> instances that define which locked ranges of cells may be edited in a protected worksheet.
            </summary>
            <remarks>
            <p class="body">When a Worksheet is protected the only cells that may be edited are those whose <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Locked"/> property 
            has been set to false. All other cells are not editable by default. One can make additional cells or ranges of cells editable via this collection. 
            The <see cref="T:Infragistics.Documents.Excel.WorksheetProtectedRange"/> instances specify the range to which it applies and optionally a password that may be used to unlock that range.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtection.AllowEditObjects">
            <summary>
            Returns a boolean indicating if objects such as shapes, comments, charts and controls may be created or changed when the worksheet is protected.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtection.AllowEditScenarios">
            <summary>
            Returns a boolean indicating if existing scenarios are protected when the worksheet is protected.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtection.AllowFiltering">
            <summary>
            Returns a boolean indicating if the user may use an auto filter created before the worksheet was protected.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtection.AllowFormattingCells">
            <summary>
            Returns a boolean indicating if the user may change the formatting of cells in a protected worksheet.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtection.AllowFormattingColumns">
            <summary>
            Returns a boolean indicating if the user may change column information such as its width or visibility in a protected worksheet.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtection.AllowFormattingRows">
            <summary>
            Returns a boolean indicating if the user may change row information such as its height or visibility in a protected worksheet.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtection.AllowInsertingColumns">
            <summary>
            Returns a boolean indicating if the user may insert columns in a protected worksheet.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowDeletingColumns"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowDeletingRows"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowInsertingRows"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtection.AllowInsertingHyperlinks">
            <summary>
            Returns a boolean indicating if the user may insert hyperlinks in unlocked cells in a protected worksheet.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtection.AllowInsertingRows">
            <summary>
            Returns a boolean indicating if the user may insert rows in a protected worksheet.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowDeletingColumns"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowInsertingColumns"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetProtection.AllowDeletingRows"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtection.AllowSorting">
            <summary>
            Returns a boolean indicating if the sorting is allowed in a protected worksheet.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtection.AllowUsingPivotTables">
            <summary>
            Returns a boolean indicating if the user can change pivot tables in a protected worksheet.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetProtection.SelectionMode">
            <summary>
            Returns or sets an enumeration used to indicate how cell selection should be affected when the associated Worksheet is protected.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.RepeatTitleRange">
            <summary>
            Represents a range of contiguous rows or columns which should be repeated at the top or left or printed pages of the <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.ColumnsToRepeatAtLeft"/>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.RowsToRepeatAtTop"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.RepeatTitleRange.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.RepeatTitleRange"/> instance.
            </summary>
            <param name="startIndex">The index of the first row or column in the range.</param>
            <param name="endIndex">The index of the last row or column in the range.</param>
            <remarks>
            <p class="body">
            The order of the <paramref name="startIndex"/> and <paramref name="endIndex"/> does not matter. In other words, if startIndex is greater 
            than endIndex, they will be swapped when they are stored.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            Occurs when either <paramref name="startIndex"/> or <paramref name="endIndex"/> is less than 0.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.Index"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.RepeatTitleRange.Equals(System.Object)">
            <summary>
            Determines whether the specified value equals this <see cref="T:Infragistics.Documents.Excel.RepeatTitleRange"/>.
            </summary>
            <param name="obj">The value to test for equality.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.RepeatTitleRange.GetHashCode">
            <summary>
            Gtes the hash code for the <see cref="T:Infragistics.Documents.Excel.RepeatTitleRange"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.RepeatTitleRange.ToString">
            <summary>
            Gets the string representation of the range.
            </summary>
            <returns>The string representation of the range.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.RepeatTitleRange.EndIndex">
            <summary>
            Gets the index of the last row or column in the range.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.Index"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.RepeatTitleRange.StartIndex">
            <summary>
            Gets the index of the first row or column in the range.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.Index"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.ExcelResourceCustomizer">
            <summary>
            Class used to provide the ability to customize resource strings.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.GetCustomizedString(System.String)">
            <summary>
            Gets the customized string identified by the specified string resource name.
            </summary>
            <param name="name">Name of the string resource that was customized.</param>
            <returns>The customized string or null if the resource wasn't customized.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.ResetAllCustomizedStrings"/>
            <seealso cref="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.ResetCustomizedString(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.SetCustomizedString(System.String,System.String)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.ResetAllCustomizedStrings">
            <summary>
            Clears all strings customized by calls to <see cref="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.SetCustomizedString(System.String,System.String)"/> method.
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.SetCustomizedString(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.ResetCustomizedString(System.String)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.ResetCustomizedString(System.String)">
            <summary>
            Resets a customized string identified by the specified string resource name so that it will load from the resource file.
            </summary>
            <param name="name">Name of the string resource to customize.</param>
            <seealso cref="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.SetCustomizedString(System.String,System.String)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.SetCustomizedString(System.String,System.String)">
            <summary>
            Sets a customized string identified by the specified string resource name.
            </summary>
            <param name="name">Name of the string resource to customize.</param>
            <param name="customizedText">The customized string. If null this has the same effect as calling <see cref="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.ResetCustomizedString(System.String)"/>.</param>
            <seealso cref="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.ResetAllCustomizedStrings"/>
            <seealso cref="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.ResetCustomizedString(System.String)"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.RowColumnCollectionBase`1">
            <summary>
            Base class for row collection and column collection.
            </summary>
            <typeparam name="T">The type of item contained in the collection.</typeparam>
        </member>
        <member name="T:Infragistics.Documents.Excel.ShapeFill">
            <summary>
            Abstract base class for the fill of a shape.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.Fill"/>
            <seealso cref="T:Infragistics.Documents.Excel.ShapeFillSolid"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ShapeFill.FromColor(System.Drawing.Color)">
            <summary>
            Creates an instance to describe a solid fill outline.
            </summary>
            <param name="solidColor">The color of the fill to create.</param>
            <returns>A <see cref="T:Infragistics.Documents.Excel.ShapeFillSolid"/> instance with the specified color.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ShapeFill.FromColorInfo(Infragistics.Documents.Excel.WorkbookColorInfo)">
            <summary>
            Creates an instance to describe a solid fill outline.
            </summary>
            <param name="solidColorInfo">The <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> describing the color of the fill to create.</param>
            <returns>A <see cref="T:Infragistics.Documents.Excel.ShapeFillSolid"/> instance with the specified color.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.ShapeFillSolid">
            <summary>
            Represents a shape fill with a solid color.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.Fill"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ShapeFillSolid.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.ShapeFillSolid"/> instance.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ShapeFillSolid.#ctor(System.Drawing.Color)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.ShapeFillSolid"/> instance.
            </summary>
            <param name="color">The color of the fill.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.ShapeFillSolid.#ctor(Infragistics.Documents.Excel.WorkbookColorInfo)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.ShapeFillSolid"/> instance.
            </summary>
            <param name="colorInfo">The <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> describing the color of the fill.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.ShapeFillSolid.Color">
            <summary>
            Gets or sets the color of the fill.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ShapeFillSolid.ColorInfo">
            <summary>
            Gets or sets the <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> describing the color of the fill.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ShapeOutline">
            <summary>
            Abstract base class for the outline of a shape.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.Outline"/>
            <seealso cref="T:Infragistics.Documents.Excel.ShapeOutlineSolid"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ShapeOutline.FromColor(System.Drawing.Color)">
            <summary>
            Creates an instance to describe a solid color outline.
            </summary>
            <param name="solidColor">The color of the outline to create.</param>
            <returns>A <see cref="T:Infragistics.Documents.Excel.ShapeOutlineSolid"/> instance with the specified color.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ShapeOutline.FromColorInfo(Infragistics.Documents.Excel.WorkbookColorInfo)">
            <summary>
            Creates an instance to describe a solid color outline.
            </summary>
            <param name="solidColorInfo">The <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> describing the color of the outline to create.</param>
            <returns>A <see cref="T:Infragistics.Documents.Excel.ShapeOutlineSolid"/> instance with the specified color.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.ShapeOutlineSolid">
            <summary>
            Represents a shape outline with a solid color.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.Outline"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.ShapeOutlineSolid.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.ShapeOutlineSolid"/> instance.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ShapeOutlineSolid.#ctor(System.Drawing.Color)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.ShapeOutlineSolid"/> instance.
            </summary>
            <param name="color">The color of the outline.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.ShapeOutlineSolid.#ctor(Infragistics.Documents.Excel.WorkbookColorInfo)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.ShapeFillSolid"/> instance.
            </summary>
            <param name="colorInfo">The <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> describing the color of the outline.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.ShapeOutlineSolid.Color">
            <summary>
            Gets or sets the color of the outline.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.ShapeOutlineSolid.ColorInfo">
            <summary>
            Gets or sets the <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> describing the color of the outline.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Sorting.CustomListSortCondition">
            <summary>
            Represents a sort condition which will sort cells based on a custom, ordered list of values.
            </summary>
            <remarks>
            <p class="body">
            When the sort direction is ascending, the data range is sorted with the cells in the custom list appearing first, in the order they 
            appear in the list, followed by the other cells in the same relative order they had to each other before the sort. When the sort direction 
            is descending, the cells not in the list will appear first in the data region and they will appear in the same relative order they 
            had before the sort. They will be followed by the other cells in the reverse order of the list.
            </p>
            <p class="body">
            The list of values specified on this sort condition are string values. If a cell being sorted has a string value, that value is used to
            sort the cell. Otherwise, the cell text is used. For example, if the cell's value is 0.01, but it is formatted as a percentage cell,
            the text used to sort it with this sort condition will be "1%" and not "0.01". When using the cell text, if the format string for the 
            cell includes padding characters which are repeated across the cells, they will not be included in the cell text used for comparison.
            </p>
            <p class="body">
            When matching values from a cell to values in the custom list, strings are compared case-sensitively or case-insensitively based 
            on the <see cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.CaseSensitive"/> setting.
            </p>
            <p class="body">
            If the cell text contains any repeated padding characters, they are ignored when comparing strings.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.CaseSensitive"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.SortConditions"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortCondition.SortDirection"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetText(Infragistics.Documents.Excel.TextFormatMode)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32,Infragistics.Documents.Excel.TextFormatMode)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.CustomListSortCondition.#ctor(System.String[])">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Sorting.CustomListSortCondition"/> instance.
            </summary>
            <param name="list">The list of values in the order in which they should be sorted.</param>
            <remarks>
            <p class="body">
            When the sort direction is ascending, the data range is sorted with the cells in the custom list appearing first, in the order they 
            appear in the list, followed by the other cells in the same relative order they had to each other before the sort. When the sort direction 
            is descending, the cells not in the list will appear first in the data region and they will appear in the same relative order they 
            had before the sort. They will be followed by the other cells in the reverse order of the list.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.CustomListSortCondition.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Sorting.CustomListSortCondition"/> instance.
            </summary>
            <param name="list">The list of values in the order in which they should be sorted.</param>
            <remarks>
            <p class="body">
            When the sort direction is ascending, the data range is sorted with the cells in the custom list appearing first, in the order they 
            appear in the list, followed by the other cells in the same relative order they had to each other before the sort. When the sort direction 
            is descending, the cells not in the list will appear first in the data region and they will appear in the same relative order they 
            had before the sort. They will be followed by the other cells in the reverse order of the list.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.CustomListSortCondition.#ctor(Infragistics.Documents.Excel.Sorting.SortDirection,System.String[])">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Sorting.CustomListSortCondition"/> instance.
            </summary>
            <param name="sortDirection">The direction with which to sort the data.</param>
            <param name="list">The list of values in the order in which they should be sorted.</param>
            <remarks>
            <p class="body">
            When the sort direction is ascending, the data range is sorted with the cells in the custom list appearing first, in the order they 
            appear in the list, followed by the other cells in the same relative order they had to each other before the sort. When the sort direction 
            is descending, the cells not in the list will appear first in the data region and they will appear in the same relative order they 
            had before the sort. They will be followed by the other cells in the reverse order of the list.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="sortDirection"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Sorting.SortDirection"/> enumeration.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.CustomListSortCondition.#ctor(Infragistics.Documents.Excel.Sorting.SortDirection,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Sorting.CustomListSortCondition"/> instance.
            </summary>
            <param name="sortDirection">The direction with which to sort the data.</param>
            <param name="list">The list of values in the order in which they should be sorted.</param>
            <remarks>
            <p class="body">
            When the sort direction is ascending, the data range is sorted with the cells in the custom list appearing first, in the order they 
            appear in the list, followed by the other cells in the same relative order they had to each other before the sort. When the sort direction 
            is descending, the cells not in the list will appear first in the data region and they will appear in the same relative order they 
            had before the sort. They will be followed by the other cells in the reverse order of the list.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="list"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="list"/> contains no items.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="sortDirection"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Sorting.SortDirection"/> enumeration.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.CustomListSortCondition.Equals(System.Object)">
            <summary>
            Determines whether the <see cref="T:Infragistics.Documents.Excel.Sorting.CustomListSortCondition"/> is equal to the specified object.
            </summary>
            <param name="obj">The object to test for equality.</param>
            <returns>True if the object is equal to this instance; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.CustomListSortCondition.GetHashCode">
            <summary>
            Gets the hash code for the <see cref="T:Infragistics.Documents.Excel.Sorting.CustomListSortCondition"/>.
            </summary>
            <returns>A number which can be used to hash this instance.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sorting.CustomListSortCondition.List">
            <summary>
            Gets the ordered list of values by which to sort.
            </summary>
            <remarks>
            <p class="body">
            The list of values specified on this sort condition are string values. If a cell being sorted has a string value, that value is used to
            sort the cell. Otherwise, the cell text is used. For example, if the cell's value is 0.01, but it is formatted as a percentage cell,
            the text used to sort it with this sort condition will be "1%" and not "0.01". When using the cell text, if the format string for the 
            cell includes padding characters which are repeated across the cells, they will not be included in the cell text used for comparison.
            </p>
            <p class="body">
            When matching values from a cell to values in the custom list, strings are compared case-sensitively or case-insensitively based 
            on the <see cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.CaseSensitive"/> setting.
            </p>
            <p class="body">
            If the cell text contains any repeated padding characters, they are ignored when comparing strings.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.CaseSensitive"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetText(Infragistics.Documents.Excel.TextFormatMode)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32,Infragistics.Documents.Excel.TextFormatMode)"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Sorting.SortDirection">
            <summary>
            Represents the various sort directions which can be used with a <see cref="T:Infragistics.Documents.Excel.Sorting.SortCondition"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortCondition.SortDirection"/>
        </member>
        <member name="F:Infragistics.Documents.Excel.Sorting.SortDirection.Ascending">
            <summary>
            Sort values in an ascending manner.
            </summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Sorting.SortDirection.Descending">
            <summary>
            Sort values in an descending manner.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Sorting.FillSortCondition">
            <summary>
            Represents a sort condition which will sort cells based on their background fill.
            </summary>
            <remarks>
            <p class="body">
            This sort condition specifies a single <see cref="T:Infragistics.Documents.Excel.CellFill"/>. Cells of this color will be moved to the beginning of the data range 
            for the ascending sort direction and moved to the end of the data range for the descending sort direction. All matching cells will 
            be kept in their same relative order to each other. In addition, all non-matching cells will be kept in their same relative order to 
            each other.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.SortConditions"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortCondition.SortDirection"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.FillSortCondition.#ctor(Infragistics.Documents.Excel.CellFill)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Sorting.FillSortCondition"/> instance.
            </summary>
            <param name="fill">The <see cref="T:Infragistics.Documents.Excel.CellFill"/> by which the cells should be sorted.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="fill"/> is null.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.FillSortCondition.#ctor(Infragistics.Documents.Excel.CellFill,Infragistics.Documents.Excel.Sorting.SortDirection)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Sorting.FillSortCondition"/> instance.
            </summary>
            <param name="fill">The <see cref="T:Infragistics.Documents.Excel.CellFill"/> by which the cells should be sorted.</param>
            <param name="sortDirection">The direction by which to sort the cells.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="fill"/> is null.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="sortDirection"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Sorting.SortDirection"/> enumeration.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.FillSortCondition.Equals(System.Object)">
            <summary>
            Determines whether the <see cref="T:Infragistics.Documents.Excel.Sorting.FillSortCondition"/> is equal to the specified object.
            </summary>
            <param name="obj">The object to test for equality.</param>
            <returns>True if the object is equal to this instance; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.FillSortCondition.GetHashCode">
            <summary>
            Gets the hash code for the <see cref="T:Infragistics.Documents.Excel.Sorting.FillSortCondition"/>.
            </summary>
            <returns>A number which can be used to hash this instance.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sorting.FillSortCondition.Fill">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.CellFill"/> by which the cells should be sorted.
            </summary>
            <remarks>
            <p class="body">
            Cells with this fill will be moved to the beginning of the data range for the ascending sort direction and moved to the end 
            of the data range for the descending sort direction. All matching cells will be kept in their same relative order to each other. 
            In addition, all non-matching cells will be kept in their same relative order to each other.
            </p>
            </remarks>
            <value>The CellFill by which the cells should be sorted.</value>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortCondition.SortDirection"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.CellFormat"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Sorting.FontColorSortCondition">
            <summary>
            Represents a sort condition which will sort cells based on their fonts colors.
            </summary>
            <remarks>
            <p class="body">
            This sort condition specifies a single color. Cells of this color will be moved to the beginning of the data range for the ascending
            sort direction and moved to the end of the data range for the descending sort direction. All matching cells will be kept in their same 
            relative order to each other. In addition, all non-matching cells will be kept in their same relative order to each other.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.SortConditions"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortCondition.SortDirection"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.FontColorSortCondition.#ctor(Infragistics.Documents.Excel.WorkbookColorInfo)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Sorting.FontColorSortCondition"/> instance.
            </summary>
            <param name="fontColorInfo">The color by which the cells should be sorted.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="fontColorInfo"/> is null.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.FontColorSortCondition.#ctor(Infragistics.Documents.Excel.WorkbookColorInfo,Infragistics.Documents.Excel.Sorting.SortDirection)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Sorting.FontColorSortCondition"/> instance.
            </summary>
            <param name="fontColorInfo">
            A <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> which describes the color by which the cells should be sorted.
            </param>
            <param name="sortDirection">The direction by which to sort the cells.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="fontColorInfo"/> is null.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="sortDirection"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Sorting.SortDirection"/> enumeration.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.FontColorSortCondition.Equals(System.Object)">
            <summary>
            Determines whether the <see cref="T:Infragistics.Documents.Excel.Sorting.FontColorSortCondition"/> is equal to the specified object.
            </summary>
            <param name="obj">The object to test for equality.</param>
            <returns>True if the object is equal to this instance; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.FontColorSortCondition.GetHashCode">
            <summary>
            Gets the hash code for the <see cref="T:Infragistics.Documents.Excel.Sorting.FontColorSortCondition"/>.
            </summary>
            <returns>A number which can be used to hash this instance.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sorting.FontColorSortCondition.FontColorInfo">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> which describes the color by which the cells should be sorted.
            </summary>
            <remarks>
            <p class="body">
            Cells of this color will be moved to the beginning of the data range for the ascending sort direction and moved to the end 
            of the data range for the descending sort direction. All matching cells will be kept in their same relative order to each other. 
            In addition, all non-matching cells will be kept in their same relative order to each other.
            </p>
            </remarks>
            <value>The WorkbookColorInfo which describes the color by which the cells should be sorted.</value>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortCondition.SortDirection"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.CellFormat"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Font"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorkbookFont.ColorInfo"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Sorting.IconSortCondition">
            <summary>
            Represents a sort condition which will sort cells based on a specific conditioanl formmat icon.
            </summary>
            <remarks>
            <p class="body">
            This sort condition specifies a single icon. Cells with this icon will be moved to the beginning of the data range for the ascending
            sort direction and moved to the end of the data range for the descending sort direction. All matching cells will be kept in their same 
            relative order to each other. In addition, all non-matching cells will be kept in their same relative order to each other.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.SortConditions"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortCondition.SortDirection"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.IconSortCondition.#ctor(Infragistics.Documents.Excel.FormatConditionIconSet,System.Nullable{System.Int32})">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Sorting.IconSortCondition"/> instance.
            </summary>
            <param name="iconSet">The set of icons.</param>
            <param name="iconIndex">The zero-based index of the icon in the iconset by which the cells should be sorted or null for 'NoCellIcon'.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.IconSortCondition.#ctor(Infragistics.Documents.Excel.FormatConditionIconSet,System.Nullable{System.Int32},Infragistics.Documents.Excel.Sorting.SortDirection)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Sorting.IconSortCondition"/> instance.
            </summary>
            <param name="iconSet">The set of icons.</param>
            <param name="iconIndex">The zero-based index of the icon in the iconset by which the cells should be sorted or null for 'NoCellIcon'.</param>
            <param name="sortDirection">The direction of the sort.</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="iconSet"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.FormatConditionIconSet"/> enumeration.
            <paramref name="sortDirection"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Sorting.SortDirection"/> enumeration.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sorting.IconSortCondition.IconIndex">
            <summary>
            The icon set (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sorting.IconSortCondition.IconSet">
            <summary>
            The icon's index in the associated icon set or null for 'NoCellIcon' (read-only).
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Sorting.ISortable">
            <summary>
            A type representing a range of cells which can be sorted.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sorting.ISortable.Index">
            <summary>
            Gets the index of the sort-able item in its owner.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Sorting.OrderedSortCondition">
            <summary>
            Represents an ordered sort condition, which can sort data in either an ascending or descending manner.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.SortConditions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.OrderedSortCondition.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Sorting.OrderedSortCondition"/> instance with the ascending sort direction.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.OrderedSortCondition.#ctor(Infragistics.Documents.Excel.Sorting.SortDirection)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Sorting.OrderedSortCondition"/> instance.
            </summary>
            <param name="sortDirection">The direction with which to sort the data.</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="sortDirection"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Sorting.SortDirection"/> enumeration.
            </exception>
        </member>
        <member name="T:Infragistics.Documents.Excel.Sorting.SortCondition">
            <summary>
            Abstract base class for the sort conditions which describe how to sort data in a region.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.SortConditions"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.SortCondition"/>
            <seealso cref="T:Infragistics.Documents.Excel.Sorting.OrderedSortCondition"/>
            <seealso cref="T:Infragistics.Documents.Excel.Sorting.CustomListSortCondition"/>
            <seealso cref="T:Infragistics.Documents.Excel.Sorting.FontColorSortCondition"/>
            <seealso cref="T:Infragistics.Documents.Excel.Sorting.FillSortCondition"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortCondition.Equals(System.Object)">
            <summary>
            Determines whether the <see cref="T:Infragistics.Documents.Excel.Sorting.SortCondition"/> is equal to the specified object.
            </summary>
            <param name="obj">The object to test for equality.</param>
            <returns>True if the object is equal to this instance; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortCondition.GetHashCode">
            <summary>
            Gets the hash code for the <see cref="T:Infragistics.Documents.Excel.Sorting.SortCondition"/>.
            </summary>
            <returns>A number which can be used to hash this instance.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sorting.SortCondition.SortDirection">
            <summary>
            Gets the value which indicates the sort direction represented by the sort condition.
            </summary>
            <value>Either SortDirection.Ascending or SortDirection.Descending.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1">
            <summary>
            An ordered collection of sort conditions which are applied to a sort-able regions in a worksheet.
            </summary>
            <remarks>
            <p class="body">
            The sort conditions in the collection are applied in order to the data.
            </p>
            <p class="note">
            <B>Note:</B> The collection can hold a maximum of 64 sort condition.
            </p>
            </remarks>
            <typeparam name="T">
            A type which logically contains data and can have sort condition applied to that data.
            </typeparam>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.SortConditions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Add(`0,Infragistics.Documents.Excel.Sorting.SortCondition)">
            <summary>
            Adds a sort condition to the collection.
            </summary>
            <param name="sortableItem">The sort-able item over which the sort condition will be applied.</param>
            <param name="sortCondition">The sort condition to apply to the sort-able item.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sortableItem"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sortCondition"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="sortableItem"/> is already has a sort condition applied to it in the collection.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            There are already 64 sort conditions in the collection.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,Infragistics.Documents.Excel.Sorting.SortCondition}})">
            <summary>
            Adds a range of sort conditions to the collection.
            </summary>
            <param name="entries">An enumberable of entries which contain the sort-able item over which the sort condition will be applied and the sort condition to apply to the sort-able item.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="entries"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            If any sort condition is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            If any sortable item is already has a sort condition applied to it in the collection.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            There are already 64 sort conditions in the collection.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Clear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Contains(`0)">
            <summary>
            Determines whether the specified sort-able item is in the collection.
            </summary>
            <param name="sortableItem">The sort-able item to find in the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sortableItem"/> is null.
            </exception>
            <returns>True if the sort-able item is in the collection; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Contains(Infragistics.Documents.Excel.Sorting.SortCondition)">
            <summary>
            Determines whether the specified sort condition is in the collection.
            </summary>
            <param name="sortCondition">The sort condition to find in the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sortCondition"/> is null.
            </exception>
            <returns>True if the sort condition is in the collection; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.IndexOf(`0)">
            <summary>
            Gets the index of the specified sort-able item in the collection.
            </summary>
            <param name="sortableItem">The sort-able item to find in the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sortableItem"/> is null.
            </exception>
            <returns>
            The 0-based index of the specified sort-able item in the collection or -1 if the item is not in the collection.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.IndexOf(Infragistics.Documents.Excel.Sorting.SortCondition)">
            <summary>
            Gets the index of the specified sort condition in the collection.
            </summary>
            <param name="sortCondition">The sort condition to find in the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sortCondition"/> is null.
            </exception>
            <returns>
            The 0-based index of the specified sort condition in the collection or -1 if the item is not in the collection.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Insert(System.Int32,`0,Infragistics.Documents.Excel.Sorting.SortCondition)">
            <summary>
            Inserts a sort condition into the collection.
            </summary>
            <param name="index">The 0-based index where the sort condition should be inserted.</param>
            <param name="sortableItem">The sort-able item over which the sort condition will be applied.</param>
            <param name="sortCondition">The sort condition to apply to the sort-able item.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than <see cref="P:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Count"/>.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sortableItem"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sortCondition"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="sortableItem"/> is already has a sort condition applied to it in the collection.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            There are already 64 sort conditions in the collection.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,Infragistics.Documents.Excel.Sorting.SortCondition}})">
            <summary>
            Inserts a range of sort conditions into the collection.
            </summary>
            <param name="index">The 0-based index where the sort condition should be inserted.</param>
            <param name="entries">An enumberable of entries which contain the sort-able item over which the sort condition will be applied and the sort condition to apply to the sort-able item.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than <see cref="P:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Count"/>.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="entries"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            If any sort condition is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            If any sortable item is already has a sort condition applied to it in the collection.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            There are already 64 sort conditions in the collection.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Remove(`0)">
            <summary>
            Removes a sort-able item from the collection.
            </summary>
            <param name="sortableItem">The sort-able item to remove from the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sortableItem"/> is null.
            </exception>
            <returns>True if the sort-able item was found and removed; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Remove(Infragistics.Documents.Excel.Sorting.SortCondition)">
            <summary>
            Removes a sort condition from the collection.
            </summary>
            <param name="sortCondition">The sort condition to remove from the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sortCondition"/> is null.
            </exception>
            <returns>True if the sort condition was found and removed; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the sort condition at the specified index.
            </summary>
            <param name="index">The 0-based index of the sort condition to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than or equal to <see cref="P:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Count"/>.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.ReplaceAll(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,Infragistics.Documents.Excel.Sorting.SortCondition}})">
            <summary>
            Clears the existing sort conditions from the collection and replaces them with new entries in a single atomic operation.
            </summary>
            <param name="entries">An enumberable of entries which contain the sort-able item over which the sort condition will be applied and the sort condition to apply to the sort-able item.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="entries"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            If any sort condition is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            If any sortable item is already has a sort condition applied to it in the collection.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            There are more than 64 sort conditions.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Count">
            <summary>
            Gets the number of sort conditions in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Item(System.Int32)">
            <summary>
            Gets or sets the pair of item and sort condition at the specified index.
            </summary>
            <param name="index">The index at which to get the pair of item and sort condition.</param>
            <exception cref="T:System.ArgumentNullException">
            The Key or Value of the assigned value is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The Key of the assigned value already in the collection at a different index.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Item(`0)">
            <summary>
            Gets or sets the sort condition for the specified sort-able item.
            </summary>
            <param name="sortableItem">The sort-able item for which to get or set the sort condition.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sortableItem"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The sort-able item is not already in the collection and there are already 64 sort conditions in the collection.
            </exception>
        </member>
        <member name="T:Infragistics.Documents.Excel.Sorting.SortSettings`1">
            <summary>
            Represents the settings which apply to sorting a region of values.
            </summary>
            <typeparam name="T">
            A type which logically contains data and can have sort condition applied to that data.
            </typeparam>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.SortSettings"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.CaseSensitive">
            <summary>
            Gets or sets the value which indicates whether strings should be compared case-sensitively when they are sorted.
            </summary>
            <remarks>
            <p class="body">
            This is only applicable to sort conditions which sort strings.
            </p>
            </remarks>
            <value>True to sort strings case-sensitively; False to ignore case.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.SortConditions">
            <summary>
            Gets the collection of sort conditions to use when sorting the region of data.
            </summary>
            <remarks>
            <p class="body">
            If these settings are used in a <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/>, each sort condition in the collection applies to a 
            <see cref="T:Infragistics.Documents.Excel.WorksheetTableColumn"/>.
            </p>
            <p class="body">
            This collection is ordered based on precedence. The first sort condition in the collection has the highest sort precedence.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.SortCondition"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.Sorting.RelativeIndexSortSettings">
            <summary>
            Represents the settings which apply to sorting a region of values based on indices relative to either the Worksheet's <see cref="P:Infragistics.Documents.Excel.Worksheet.FilterSettings"/> or <see cref="P:Infragistics.Documents.Excel.Worksheet.SortSettings"/> region.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.RelativeIndexSortSettings.InitializeRegion">
            <summary>
            Initializes the region to null
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Sorting.WorksheetSortSettings">
            <summary>
            Exposes methods to identify a region in the wroksheet and to apply sort criteria to that region.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.SortSettings">Worksheet.SortSettings</seealso>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.WorksheetSortSettings.InitializeRegion">
            <summary>
            Initializes the region to null
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sorting.WorksheetSortSettings.Region">
            <summary>
            Returns the region that the filter settings is applied to (read-only).
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.Sorting.WorksheetSortSettings.SetRegion(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sorting.WorksheetSortSettings.SetRegion(System.String,Infragistics.Documents.Excel.CellReferenceMode)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sorting.WorksheetSortSettings.SortType">
            <summary>
            Determines whether columns or rows will be sorted within the region. 'Rows' is the default.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> when this property is changed all existing sort conditions will be cleared so this property should be set before sort conditions are added.</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.WorksheetSortSettings.ClearRegion">
            <summary>
            Clears the region as well as any existing sort criteria
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.Sorting.WorksheetSortSettings.SetRegion(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sorting.WorksheetSortSettings.SetRegion(System.String,Infragistics.Documents.Excel.CellReferenceMode)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.WorksheetSortSettings.ReapplySortConditions">
            <summary>
            Re-sorts all data cells in the region based on the sort conditions.
            </summary>
            <p class="body">
            Sort conditions are not constantly evaluated as data within the region changes. Sort conditions are applied to the region only when 
            they are are added or removed via the SortConditions collection or when 
            the ReapplySortCondition method is called.</p>
            <p class="body">
            If there are no sort conditions, this method will not do anything to the data.
            </p>
            <p class="note">
            <B>Note:</B> When the sort conditions are reevaluated, only visible data is sorted. If any rows in the data area of the region are
            hidden, the data from those rows will not be sorted.
            </p>
            <p class="note">
            <B>Note:</B> When the sort conditions are reevaluated, the cells are moved, but not the rows. Therefore, data outside the region
            but in rows which intersect the region's area will not be moved. If any moved cells within the region contain formulas, the 
            relative references to other cells will be shifted as much as the cell moves. For example, assume cell B5 is in the region and it has 
            a formula which references cell C10. If, due to sorting, the cell is shifted down to B12, the reference will also be shifted by 
            the same amount and the formula will now reference cell C17. However, updates like this will not be made to formulas referencing 
            the moved cells. So a formula referencing a moved cell will reference the new cell which replaces it after the sort is applied.
            </p>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.SortConditions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.WorksheetSortSettings.SetRegion(System.String)">
            <summary>
            Sets the region where the filter settings should be applied
            </summary>
            <param name="address">The address of the new region.</param>
            <remarks>
            <p class="body">The <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode"/> of the workbook will be used to parse the region address.</p>
            <p class="note"><b>Note:</b> setting the region will clear any applied filters or sort criteria.</p>  
            </remarks>
            <exception cref="T:System.InvalidOperationException">If the region intersects with a table of other reserved area in the worksheet.</exception>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.WorksheetSortSettings.Region"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sorting.WorksheetSortSettings.SetRegion(System.String,Infragistics.Documents.Excel.CellReferenceMode)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sorting.WorksheetSortSettings.ClearRegion"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.WorksheetSortSettings.SetRegion(System.String,Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>
            Sets the region where the filter settings should be applied
            </summary>
            <param name="address">The address of the new region.</param>
            <param name="cellReferenceMode">The reference to use the parse the address.</param>
            <remarks>
            <p class="note"><b>Note:</b> setting the region will clear any applied filters or sort criteria.</p>  
            </remarks>
            <exception cref="T:System.InvalidOperationException">If the region intersects with a table of other reserved area in the worksheet.</exception>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.WorksheetSortSettings.Region"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sorting.WorksheetSortSettings.SetRegion(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sorting.WorksheetSortSettings.ClearRegion"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.RelativeIndex">
            <summary>
            Represents an index relative to a region
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.FilterSettings"/>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.SortSettings"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.RelativeIndex.#ctor(System.Int32)">
            <summary>
            Constructs an instance of a RelativeIndex
            </summary>
            <param name="index">The zero-based releative index</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.RelativeIndex.Equals(System.Object)">
            <summary>
            Checks for equality
            </summary>
            <param name="obj">The object to compare</param>
            <returns>true is equal</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.RelativeIndex.GetHashCode">
            <summary>
            Calculates a number suitable for hasing
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.RelativeIndex.ToString">
            <summary>
            Returns the Index.ToString()
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.RelativeIndex.Index">
            <summary>
            Returns the relative index (read only)
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.RelativeIndex.CompareTo(Infragistics.Documents.Excel.RelativeIndex)">
            <summary>
            Compares this instance of a <see cref="T:Infragistics.Documents.Excel.RelativeIndex"/> to another.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.Sparklines.Sparkline">
            <summary>
            Represents a sparkline cell
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sparklines.Sparkline.#ctor">
            <summary>
            Creates a new instance of a sparkline
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.Sparkline.DataRegion">
            <summary>
            The region containing the data for the sparkline (read-only)
            </summary>
            <value>The data region if it is located on a worksheet within the same workbook, otherwise null.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.Sparkline.DataRegionName">
            <summary>
            A striing that describes the region containing the data for the sparkline (read-only)
            </summary>
            <value>Should always be non-null.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.Sparkline.Location">
            <summary>
            The cell location of the sparkline (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Sparklines.SparklineCollection">
            <summary>
            A collection of <see cref="T:Infragistics.Documents.Excel.Sparklines.Sparkline"/>s exposed from a <see cref="T:Infragistics.Documents.Excel.Sparklines.SparklineGroup"/>
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineCollection.Count">
            <summary>
            Returns the total number of items in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineCollection.Item(System.Int32)">
            <summary>
            Indexer
            </summary>
            <param name="index">The zer-based index of an item</param>
            <returns>The item at the specified index</returns>
            <exception cref="T:System.IndexOutOfRangeException">If the index is negative or greater than or equal to <see cref="P:Infragistics.Documents.Excel.Sparklines.SparklineCollection.Count"/></exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sparklines.SparklineCollection.Add(System.Int32,System.Int32,System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})">
            <summary>
            Adds a new <see cref="T:Infragistics.Documents.Excel.Sparklines.SparklineGroup"/> with no sparklines 
            </summary>
            <param name="row">The zero-based row of the sparkline cell.</param>
            <param name="column">The zero-based column of the sparkline cell.</param>
            <param name="dataRegion">A string describing the data region.</param>
            <param name="cellReferenceMode">An optional <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> to use to parse the dataRegion. If null it defaults to the workbook's mode.</param>
            <returns>The added sparkine</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sparklines.SparklineCollection.Clear">
            <summary>
            Clears all items from the collection
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sparklines.SparklineCollection.Contains(Infragistics.Documents.Excel.Sparklines.Sparkline)">
            <summary>
            Returns true if the collection contains the item
            </summary>
            <param name="sparkline">The sparkline to check</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sparklines.SparklineCollection.GetEnumerator">
            <summary>
            Returns an enumerator for the sparklines in the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sparklines.SparklineCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator for the sparklines in the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sparklines.SparklineCollection.IndexOf(Infragistics.Documents.Excel.Sparklines.Sparkline)">
            <summary>
            Gets the index of the item in the collection
            </summary>
            <param name="sparkline"></param>
            <returns>The index or -1 if the item is not in the collection</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sparklines.SparklineCollection.Remove(Infragistics.Documents.Excel.Sparklines.Sparkline)">
            <summary>
            Removes a sparkline from the collection
            </summary>
            <param name="sparkline">The sparkline to remove.</param>
            <returns>true if successful, otherwise false</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sparklines.SparklineCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a sparkline from the collection
            </summary>
            <param name="index">The zero-based index of the sparkline to remove.</param>
            <exception cref="T:System.IndexOutOfRangeException">if the index is less than 0 or not less than the count.</exception>
        </member>
        <member name="T:Infragistics.Documents.Excel.Sparklines.SparklineGroup">
            <summary>
            Represents a group of <see cref="T:Infragistics.Documents.Excel.Sparklines.Sparkline"/>s
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.ColorAxis">
            <summary>
            Determines the color of the axis
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> this property is ignored unless the <see cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.DateAxis"/> property is explicity set to true.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Color can't be set to null.</exception>
            <exception cref="T:System.ArgumentException">Color can't be set to 'Auto'.</exception>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.DateAxis"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.ColorFirstPoint">
            <summary>
            Determines the color of the first point
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> this property is ignored unless the <see cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.FirstPoint"/> property is explicity set to true.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Color can't be set to null.</exception>
            <exception cref="T:System.ArgumentException">Color can't be set to 'Auto'.</exception>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.FirstPoint"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.ColorHighPoint">
            <summary>
            Determines the color of the high point
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> this property is ignored unless the <see cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.HighPoint"/> property is explicity set to true.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Color can't be set to null.</exception>
            <exception cref="T:System.ArgumentException">Color can't be set to 'Auto'.</exception>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.HighPoint"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.ColorLastPoint">
            <summary>
            Determines the color of the last point
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> this property is ignored unless the <see cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.LastPoint"/> property is explicity set to true.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Color can't be set to null.</exception>
            <exception cref="T:System.ArgumentException">Color can't be set to 'Auto'.</exception>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.LastPoint"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.ColorLowPoint">
            <summary>
            Determines the color of the low point
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> this property is ignored unless the <see cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.LowPoint"/> property is explicity set to true.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Color can't be set to null.</exception>
            <exception cref="T:System.ArgumentException">Color can't be set to 'Auto'.</exception>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.LowPoint"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.ColorMarkers">
            <summary>
            Determines the color of the markers
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> this property is ignored unless the <see cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.Markers"/> property is explicity set to true.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Color can't be set to null.</exception>
            <exception cref="T:System.ArgumentException">Color can't be set to 'Auto'.</exception>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.Markers"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.ColorNegativePoints">
            <summary>
            Determines the color of the negative point
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> this property is ignored unless the <see cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.NegativePoints"/> property is explicity set to true.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Color can't be set to null.</exception>
            <exception cref="T:System.ArgumentException">Color can't be set to 'Auto'.</exception>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.NegativePoints"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.ColorSeries">
            <summary>
            Determines the default color for the series
            </summary>
            <exception cref="T:System.ArgumentNullException">Color can't be set to null.</exception>
            <exception cref="T:System.ArgumentException">Color can't be set to 'Auto'.</exception>
            <value>The color to use for the series.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.DateAxis">
            <summary>
            Determines whether to use a date axis
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.ColorAxis"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.DateRange"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sparklines.SparklineGroup.SetDateRange(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.DateRange">
            <summary>
            The date range (read-only)
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> this property is ignored unless the <see cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.DateAxis"/> property is explicity set to true.</para>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.DateAxis"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.DateRangeFormula"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sparklines.SparklineGroup.SetDateRange(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.DateRangeFormula">
            <summary>
            The date range formula (read-only)
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> this property is ignored unless the <see cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.DateAxis"/> property is explicity set to true.</para>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.DateAxis"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.DateRangeFormula"/>
            <seealso cref="M:Infragistics.Documents.Excel.Sparklines.SparklineGroup.SetDateRange(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.DisplayBlanksAs">
            <summary>
            Determines how blanks will be displayed
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.DisplayHidden">
            <summary>
            Determines whether values from cells that are hidden will be displayed
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.DisplayXAxis">
            <summary>
            Determines if the x-axis will be displayed
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.FirstPoint">
            <summary>
            Determines if the first point is displayed differently.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.ColorFirstPoint"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.Guid">
            <summary>
            A unique identifier for this group (read-only).
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> this property is optional but if one group contains a guid then all groups in the collection nust also have guids generated for them.</para>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroupCollection.GenerateGuidsForGroups"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.HighPoint">
            <summary>
            Determines if the high point is displayed differently.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.ColorHighPoint"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.LastPoint">
            <summary>
            Determines if the last point is displayed differently.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.ColorLastPoint"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.LineWeight">
            <summary>
            Determines the weight of a line in points.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">if the value is less than zero or greather than 1584.</exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.LowPoint">
            <summary>
            Determines if the low point is displayed differently.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.ColorLowPoint"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.Markers">
            <summary>
            Determines if markers are displayed.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.ColorMarkers"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.NegativePoints">
            <summary>
            Determines if the negative points are displayed differently.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.ColorNegativePoints"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.RightToLeft">
            <summary>
            Determines if the sparkline goes from right to left.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.Sparklines">
            <summary>
            The collection of sparklines in the group (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.Type">
            <summary>
            The type of sparkline
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.VerticalAxisMax">
            <summary>
            A custom maximum value for the Y axis.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> if <see cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.VerticalAxisMaxType"/> property is not set to 'Custom' then this property is ignored.</para>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.VerticalAxisMaxType"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.VerticalAxisMaxType">
            <summary>
            Determines how the maximum value for the Y axis is calculated.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> if this property is set to 'Custom' then the <see cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.VerticalAxisMax"/> value will be used.</para>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.VerticalAxisMax"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.VerticalAxisMin">
            <summary>
            A custom minimum value for the Y axis.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> if <see cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.VerticalAxisMinType"/> property is not set to 'Custom' then this property is ignored.</para>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.VerticalAxisMinType"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.VerticalAxisMinType">
            <summary>
            Determines how the minimum value for the Y axis is calculated.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> if this property is set to 'Custom' then the <see cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.VerticalAxisMin"/> value will be used.</para>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.VerticalAxisMin"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.Worksheet">
            <summary>
            Returns a reference to the associated worksheet.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.Workbook">
            <summary>
            Returns a reference to the associated workbook.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sparklines.SparklineGroup.SetDateRange(System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})">
            <summary>
            Assigns a new <see cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.DateRange"/>.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> <see cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.DateRange"/> is ignored unless the <see cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.DateAxis"/> property is explicity set to true.</para>
            </remarks>
            <param name="dateRange">The string representation of the formula.</param>
            <param name="cellReferenceMode">An optional <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> to use to parse the dateRange. If null it defaults to the workbook's mode.</param>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.DateRange"/>
        </member>
        <member name="E:Infragistics.Documents.Excel.Sparklines.SparklineGroup.PropertyChanged">
            <summary>
            Occurs after a property value has changed
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Sparklines.SparklineGroupCollection">
            <summary>
            A collection of <see cref="T:Infragistics.Documents.Excel.Sparklines.SparklineGroup"/>s exposed from a <see cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroupCollection.Worksheet"/>
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroupCollection.Count">
            <summary>
            Returns the total number of items in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroupCollection.GenerateGuidsForGroups">
            <summary>
            Determines if guids will be generated for groups.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> if any group has a guid then all of them must also have guids. Therefore, when this property is set to true all
            groups in the collection, including groups that are subsequently added, will have guids generated for them. Also note that this property can not be set to false 
            if the collection contains any group with a guid.</para>
            </remarks>
            <exception cref="T:System.ArgumentException">Can't set GenerateGuidsForGroups to false if the collection contains groups that already have guids generated.</exception>
            <seealso cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroup.Guid"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sparklines.SparklineGroupCollection.Item(System.Int32)">
            <summary>
            Indexer
            </summary>
            <param name="index">The zer-based index of an item</param>
            <returns>The item at the specified index</returns>
            <exception cref="T:System.IndexOutOfRangeException">If the index is negative or greater than or equal to <see cref="P:Infragistics.Documents.Excel.Sparklines.SparklineGroupCollection.Count"/></exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sparklines.SparklineGroupCollection.Add(Infragistics.Documents.Excel.SparklineType,System.String,System.String,System.Action{Infragistics.Documents.Excel.Sparklines.SparklineGroup},System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})">
            <summary>
            Adds a new <see cref="T:Infragistics.Documents.Excel.Sparklines.SparklineGroup"/> 
            </summary>
            <param name="type">The type of the group.</param>
            <param name="locationRange">The aggregated location for the sparklines in the group.</param>
            <param name="dataRange">The aggreagated data range for all the sparklines in the group.</param>
            <param name="groupInitializer">An optional callback for initializing the group before it is added to the collection.</param>
            <param name="cellReferenceMode">An optional <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> to use to parse the location and data ranges. If null it defaults to the workbook's mode.</param>
            <returns>The added group</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sparklines.SparklineGroupCollection.Clear">
            <summary>
            Clears all items from the collection
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sparklines.SparklineGroupCollection.Contains(Infragistics.Documents.Excel.Sparklines.SparklineGroup)">
            <summary>
            Returns true if the collection contains the item
            </summary>
            <param name="group">The group to check</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sparklines.SparklineGroupCollection.GetEnumerator">
            <summary>
            Returns an enumerator for the SparklineGroups in the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sparklines.SparklineGroupCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator for the SparklineGroups in the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sparklines.SparklineGroupCollection.IndexOf(Infragistics.Documents.Excel.Sparklines.SparklineGroup)">
            <summary>
            Gets the index of the item in the collection
            </summary>
            <param name="group"></param>
            <returns>The index or -1 if the item is not in the collection</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sparklines.SparklineGroupCollection.Remove(Infragistics.Documents.Excel.Sparklines.SparklineGroup)">
            <summary>
            Removes a group from the collection
            </summary>
            <param name="group">The group to remove.</param>
            <returns>true if successful, otherwise false</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sparklines.SparklineGroupCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a group from the collection
            </summary>
            <param name="index">The zero-based index of the group to remove.</param>
            <exception cref="T:System.IndexOutOfRangeException">if the index is less than 0 or not less than the count.</exception>
        </member>
        <member name="T:Infragistics.Documents.Excel.CustomTableStyleCollection">
            <summary>
            A collection of custom <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle"/> instances which can be applied to a <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> in the 
            <see cref="P:Infragistics.Documents.Excel.CustomTableStyleCollection.Workbook"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomTableStyleCollection.Add(Infragistics.Documents.Excel.WorksheetTableStyle)">
            <summary>
            Adds a custom <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle"/> to the collection.
            </summary>
            <param name="style">The custom table style to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="style"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="style"/> is a standard table style.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="style"/> is already in a CustomTableStyleCollection.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="style"/> has a name which matches one of the other custom table styles in the collection.
            Names are compared case-insensitively.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.IsCustom"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.Name"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomTableStyleCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
            <remarks>
            <p class="body">
            If any <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> instances in the workbook have their style removed due to this operation, their style 
            will be set to the <see cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle"/>.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomTableStyleCollection.Contains(Infragistics.Documents.Excel.WorksheetTableStyle)">
            <summary>
            Determines whether the specified <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle"/> is contained in the collection.
            </summary>
            <param name="style">The table style to find in the collection.</param>
            <returns>True if the style is in the collection; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomTableStyleCollection.IndexOf(Infragistics.Documents.Excel.WorksheetTableStyle)">
            <summary>
            Gets the index of the specified style in the collection.
            </summary>
            <param name="style">The style to find in the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="style"/> is null.
            </exception>
            <returns>
            The 0-based index of the specified style in the collection or -1 if the style is not in the collection.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomTableStyleCollection.Remove(Infragistics.Documents.Excel.WorksheetTableStyle)">
            <summary>
            Removes the specified <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle"/> from the collection.
            </summary>
            <remarks>
            <p class="body">
            If any <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> instances in the workbook have their style removed due to this operation, their style 
            will be set to the <see cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle"/>.
            </p>
            </remarks>
            <param name="style">The table style to remove from the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="style"/> is null.
            </exception>
            <returns>True if the style was in the collection and therefore removed; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomTableStyleCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle"/> at the specified index.
            </summary>
            <remarks>
            <p class="body">
            If any <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> instances in the workbook have their style removed due to this operation, their style 
            will be set to the <see cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle"/>.
            </p>
            </remarks>
            <param name="index">The index of the table style to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than or equal to <see cref="P:Infragistics.Documents.Excel.CustomTableStyleCollection.Count"/>.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomTableStyleCollection.Count">
            <summary>
            Gets the number of custom <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle"/> instances in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomTableStyleCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle"/> at the specified index.
            </summary>
            <param name="index">The index at which to get the WorksheetTableStyle.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than or equal to <see cref="P:Infragistics.Documents.Excel.CustomTableStyleCollection.Count"/>.
            </exception>
            <returns>The WorksheetTableStyle instance at the specified index.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomTableStyleCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle"/> with the specified name.
            </summary>
            <remarks>
            <p class="body">
            Table style names are compared case-insensitively.
            </p>
            </remarks>
            <param name="name">The name of the WorksheetTableStyle to find.</param>
            <returns>
            The WorksheetTableStyle instance with the specified name or null if a table style with that name does not exist.
            </returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.StandardTableStyleCollection">
            <summary>
            A collection of standard <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle"/> instances which can be applied to a <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> in a 
            <see cref="T:Infragistics.Documents.Excel.Workbook"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.StandardTableStyleCollection.Count">
            <summary>
            Gets the number of custom <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle"/> instances in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.StandardTableStyleCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle"/> at the specified index.
            </summary>
            <param name="index">The index at which to get the WorksheetTableStyle.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than or equal to <see cref="P:Infragistics.Documents.Excel.StandardTableStyleCollection.Count"/>.
            </exception>
            <returns>The WorksheetTableStyle instance at the specified index.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.StandardTableStyleCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle"/> with the specified name.
            </summary>
            <remarks>
            <p class="body">
            Table style names are compared case-insensitively.
            </p>
            </remarks>
            <param name="name">The name of the WorksheetTableStyle to find.</param>
            <returns>
            The WorksheetTableStyle instance with the specified name or null if a table style with that name does not exist.
            </returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetTable">
            <summary>
            Represents a region of cells formatted as a table.
            </summary>
            <remarks>
            <p class="body">
            Tables assist in managing and analyzing a range of related data. This management can be done separately from the rest of the
            data in the worksheet.
            </p>
            <p class="body">
            A table can have one or more columns sorted and filtered. There are various sorting and filtering criteria that can be applied 
            to the columns. The types pertaining to filtering can be found in the Infragistics.Documents.Excel.Filtering namespace and a filter
            can be applied to a column by setting the <see cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/> property. The types pertaining to sorting can
            be found in the Infragistics.Documents.Excel.Sorting namespace and a column can be sorted by setting the 
            <see cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.SortCondition"/> or by populating the 
            <see cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.SortConditions"/> collection on the <see cref="P:Infragistics.Documents.Excel.WorksheetTable.SortSettings"/>.
            </p>
            <p class="body">
            A table can contain calculated columns which dynamically determine their value based on a formula. A 
            <see cref="T:Infragistics.Documents.Excel.WorksheetTableColumn"/> can be made a calculated column by setting the <see cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.ColumnFormula"/>.
            </p>
            <p class="body">
            A table can also contain a totals row which display total information about the table. This can be shown by setting 
            <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsTotalsRowVisible"/> to True. When the totals row is displayed, each column can display text or a calculated value in the
            totals row, by setting either the <see cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalLabel"/> or <see cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalFormula"/>,
            respectively.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Tables"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.FormatAsTable(System.Boolean)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.FormatAsTable(System.Boolean,Infragistics.Documents.Excel.WorksheetTableStyle)"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.AssociatedTable"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedTable(System.Int32)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTable.ToString">
            <summary>
            Gets the string representation of the table.
            </summary>
            <returns>The string representation of the table.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTable.ClearFilters">
            <summary>
            Clears all filters from the columns in the table.
            </summary>
            <remarks>
            <p class="body">
            If any filters are present and removed when this is called, all hidden rows in the data area of the table will be unhidden.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.ReapplyFilters"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTable.ClearSortConditions">
            <summary>
            Clears all sort conditions from the columns in the table.
            </summary>
            <remarks>
            <p class="note">
            <b>Note:</b> Just as in Microsoft Excel, clearing the sort conditions will not revert the table back to its original unsorted 
            state. The table will remain in its last sorted order.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.SortSettings"/>
            <see cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.SortConditions"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.SortCondition"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTable.DeleteColumns(System.Int32,System.Int32)">
            <summary>
            Deletes one or more columns from the table
            </summary>
            <param name="tableColumnIndex">The deletion start relative to the first column in the table.</param>
            <param name="count">The number of columns to delete.</param>
            <exception cref="T:System.InvalidOperationException">If the operation is not allowed, e.g. if it would cause data to be shifted off the worksheet.</exception>
            <exception cref="T:System.IndexOutOfRangeException">If index is negative.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If count is less than 1 or greater than or equal all the columns in the table.</exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTable.DeleteDataRows(System.Int32,System.Int32)">
            <summary>
            Deletes one or more data rows from the table
            </summary>
            <param name="dataRowIndex">The deletion start relative to the first row in the <see cref="P:Infragistics.Documents.Excel.WorksheetTable.DataAreaRegion"/>.</param>
            <param name="count">The number of rows to delete.</param>
            <exception cref="T:System.InvalidOperationException">If the operation is not allowed, e.g. if it would cause data to be shifted off the worksheet.</exception>
            <exception cref="T:System.IndexOutOfRangeException">If index is negative.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If count is less than 1 or greater than or equal all the rows (excluding header and total rows) in the table.</exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTable.InsertColumns(System.Int32,System.Int32)">
            <summary>
            Inserts one or more columns into the table
            </summary>
            <param name="tableColumnIndex">The insertion point relative to the first column in the table.</param>
            <param name="count">The number of columns to insert</param>
            <exception cref="T:System.InvalidOperationException">If the operation is not allowed, e.g. if it would cause data to be shifted off the worksheet.</exception>
            <exception cref="T:System.IndexOutOfRangeException">If index is negative.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If count is less than 1.</exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTable.InsertDataRows(System.Int32,System.Int32)">
            <summary>
            Inserts one or more data rows into the table
            </summary>
            <param name="dataRowIndex">The insertion point relative to the first row in the <see cref="P:Infragistics.Documents.Excel.WorksheetTable.DataAreaRegion"/>.</param>
            <param name="count">The number of columns to insert</param>
            <exception cref="T:System.InvalidOperationException">If the operation is not allowed, e.g. if it would cause data to be shifted off the worksheet.</exception>
            <exception cref="T:System.IndexOutOfRangeException">If index is negative.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If count is less than 1.</exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTable.ReapplyFilters">
            <summary>
            Re-filters all data cells in the table based on the filters from the columns in the table.
            </summary>
            <remarks>
            <p class="body">
            Filters are not constantly evaluated as data within the table changes. Filters are applied to the table only when they are 
            added or removed on a column in the table or when the ReapplyFilters method is called.
            </p>
            <p class="body">
            If no columns in the table have filters set, this method will not do anything to the data.
            </p>
            <p class="note">
            <B>Note:</B> When the filters are reevaluated, the rows of any cells which don't meet the filter criteria of their column will 
            be hidden. When a row is filtered out, the entire row is hidden from the worksheet, so any data outside the table but in the 
            same row will also be hidden.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.ClearFilters"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTable.ReapplySortConditions">
            <summary>
            Re-sorts all data cells in the table based on the sort conditions from the columns in the table.
            </summary>
            <p class="body">
            Sort conditions are not constantly evaluated as data within the table changes. Sort conditions are applied to the table only when 
            they are are added or removed on a column in the table or when the ReapplySortCondition method is called.
            </p>
            <p class="body">
            If no columns in the table have sort conditions set, this method will not do anything to the data.
            </p>
            <p class="note">
            <B>Note:</B> When the sort conditions are reevaluated, only visible data is sorted. If any rows in the data area of the table are
            hidden, the data from those rows will not be sorted.
            </p>
            <p class="note">
            <B>Note:</B> When the sort conditions are reevaluated, the cells are moved, but not the rows. Therefore, data outside the table
            but in rows which intersect the table's data area will not be moved. If any moved cells within the tables contain formulas, the 
            relative references to other cells will be shifted as much as the cell moves. For example, assume cell B5 is in a table and it has 
            a formula which references cell C10. If, due to sorting, the cell is shifted down to B12, the reference will also be shifted by 
            the same amount and the formula will now reference cell C17. However, updates like this will not be made to formulas referencing 
            the moved cells. So a formula referencing a moved cell will reference the new cell which replaces it after the sort is applied.
            </p>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.SortSettings"/>
            <see cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.SortConditions"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.SortCondition"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTable.Resize(System.String)">
            <summary>
            Resizes the table to a new range of data on the worksheet.
            </summary>
            <param name="headerAndDataRegionAddress">
            The address of the new region of headers (if currently visible) and data for the table, which must contain at least one data row, 
            and overlap and have the same top as the current table region.
            </param>
            <remarks>
            <p class="body">
            If the totals row is visible, it will be placed below the last data row automatically. If the totals row is currently inside
            the new table region, it will be moved out to below the new data rows, which will be shifted up by one row. 
            </p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            Occurs when the <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> has previously been removed from the worksheet.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="headerAndDataRegionAddress"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="headerAndDataRegionAddress"/> is not a valid name or a valid cell or region address in the 
            workbook's cell reference mode.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Occurs when <paramref name="headerAndDataRegionAddress"/> is a relative R1C1 address. The overload taking an origin cell must 
            be used to resolve relative R1C1 references.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the top of the <paramref name="headerAndDataRegionAddress"/> does is not the same as the top of the table.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="headerAndDataRegionAddress"/> does not contain at least one data row for the table.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="headerAndDataRegionAddress"/> does not overlap the current table region.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Occurs when the there is a merged cell, array formula, data table, or another table in the new region.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTable.Resize(System.String,Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>
            Resizes the table to a new range of data on the worksheet.
            </summary>
            <param name="headerAndDataRegionAddress">
            The address of the new region of headers (if currently visible) and data for the table, which must contain at least one data row,
            and overlap and have the same top as the current table region.
            </param>
            <param name="cellReferenceMode">The cell reference mode to use to parse the region address.</param>
            <remarks>
            <p class="body">
            If the totals row is visible, it will be placed below the last data row automatically. If the totals row is currently inside
            the new table region, it will be moved out to below the new data rows, which will be shifted up by one row. 
            </p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            Occurs when the <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> has previously been removed from the worksheet.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="headerAndDataRegionAddress"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="headerAndDataRegionAddress"/> is not a valid name or a valid cell or region address in the 
            workbook's cell reference mode.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Occurs when <paramref name="headerAndDataRegionAddress"/> is a relative R1C1 address. The overload taking an origin cell must 
            be used to resolve relative R1C1 references.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the top of the <paramref name="headerAndDataRegionAddress"/> does is not the same as the top of the table.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="headerAndDataRegionAddress"/> does not contain at least one data row for the table.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="headerAndDataRegionAddress"/> does not overlap the current table region.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Occurs when the there is a merged cell, array formula, data table, or another table in the new region.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTable.Resize(Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>
            Resizes the table to a new range of data on the worksheet.
            </summary>
            <param name="headerAndDataRegion">
            The new region of headers (if currently visible) and data for the table, which must contain at least one data row, and overlap 
            and have the same top as the current table region.
            </param>
            <remarks>
            <p class="body">
            If the totals row is visible, it will be placed below the last data row automatically. If the totals row is currently inside
            the new table region, it will be moved out to below the new data rows, which will be shifted up by one row. 
            </p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            Occurs when the <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> has previously been removed from the worksheet.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="headerAndDataRegion"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="headerAndDataRegion"/> from a different worksheet or has been previously shifted off the table's worksheet.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the top of the <paramref name="headerAndDataRegion"/> does is not the same as the top of the table.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="headerAndDataRegion"/> does not contain at least one data row for the table.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="headerAndDataRegion"/> does not overlap the current table region.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Occurs when the there is a merged cell, array formula, data table, or another table in the new region.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.AreaFormats">
            <summary>
            Gets the collection of formats used for each area of the <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/>.
            </summary>
            <remarks>
            <p class="body">
            The available areas of the table which can have a format set are the whole table, header, data, and totals areas.
            </p>
            <p class="body">
            Applying a format to an area will apply the format to all cells in that area.
            </p>
            <p class="body">
            If any area formats on the tables are set when the table is resized to give it more columns, the area formats of the new columns 
            will be initialized with the area formats from the table.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.AreaFormats"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTableStyle"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.Resize(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.Resize(Infragistics.Documents.Excel.WorksheetRegion)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.Columns">
            <summary>
            Gets the collection of columns in the table.
            </summary>
            <remarks>
            <p class="body">
            Each column is represented by a <see cref="T:Infragistics.Documents.Excel.WorksheetTableColumn"/> instance and contains various settings for controlling 
            the contents, formatting, sorting, and filtering of the column.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTableColumn"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.DataAreaRegion">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion"/> which represents the region of cells in the data area of the table.
            </summary>
            <remarks>
            <p class="body">
            The data area of the table can be changed by using one of the Resize overloads.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.Resize(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.Resize(Infragistics.Documents.Excel.WorksheetRegion)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.DisplayBandedColumns">
            <summary>
            Gets or sets the value which indicates whether the alternate column format should be applied to the appropriate columns of the 
            <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/>.
            </summary>
            <remarks>
            <p class="body">
            The column formats are defined by the <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle"/> applied to the WorksheetTable. These are stored in the
            <see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats"/> collection and keyed by the <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyleArea"/>.ColumnStripe and
            WorksheetTableStyleArea.AlternateColumnStripe values. If there is no area format applied for the AlternateColumnStripe value,
            this property has no effect on the display of the table.
            </p>
            <p class="body">
            If this value is True and there is an area format for the alternate column stripe, the stripe widths are defined by the 
            <see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.ColumnStripeWidth"/> and <see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AlternateColumnStripeWidth"/> values.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Style"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTableStyleArea"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.ColumnStripeWidth"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AlternateColumnStripeWidth"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.DisplayBandedRows">
            <summary>
            Gets or sets the value which indicates whether the alternate row format should be applied to the appropriate rows of the 
            <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/>.
            </summary>
            <remarks>
            <p class="body">
            The row formats are defined by the <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle"/> applied to the WorksheetTable. These are stored in the
            <see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats"/> collection and keyed by the <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyleArea"/>.RowStripe and
            WorksheetTableStyleArea.AlternateRowStripe values. If there is no area format applied for the AlternateRowStripe value,
            this property has no effect on the display of the table.
            </p>
            <p class="body">
            If this value is True and there is an area format for the alternate row stripe, the stripe widths are defined by the 
            <see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.RowStripeHeight"/> and <see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AlternateRowStripeHeight"/> values.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Style"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTableStyleArea"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.RowStripeHeight"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AlternateRowStripeHeight"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.DisplayFirstColumnFormatting">
            <summary>
            Gets or sets the value which indicates whether the first column format should be applied to the appropriate column of the 
            <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/>.
            </summary>
            <remarks>
            <p class="body">
            The first column format is defined by the <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle"/> applied to the WorksheetTable. It is stored in the
            <see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats"/> collection and keyed by the <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyleArea"/>.FirstColumn 
            value. If there is no area format applied for the FirstColumn value, this property has no effect on the display of the table.
            </p>
            <p class="body">
            If there is only one column in the table and both the first and last column formatting should be applied, the last column format
            will take precedence.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.DisplayLastColumnFormatting"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Style"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTableStyleArea"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.DisplayLastColumnFormatting">
            <summary>
            Gets or sets the value which indicates whether the last column format should be applied to the appropriate column of the 
            <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/>.
            </summary>
            <remarks>
            <p class="body">
            The last column format is defined by the <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle"/> applied to the WorksheetTable. It is stored in the
            <see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats"/> collection and keyed by the <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyleArea"/>.LastColumn 
            value. If there is no area format applied for the LastColumn value, this property has no effect on the display of the table.
            </p>
            <p class="body">
            If there is only one column in the table and both the first and last column formatting should be applied, the last column format
            will take precedence.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.DisplayFirstColumnFormatting"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Style"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTableStyleArea"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.HeaderRowRegion">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion"/> which represents the region of cells in the header row of the table.
            </summary>
            <value>
            A WorksheetRegion which represents the region of cells in the header row of the table or null if the header row is not visible.
            </value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.IsHeaderRowVisible"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.Resize(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.Resize(Infragistics.Documents.Excel.WorksheetRegion)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible">
            <summary>
            Gets or sets the value indicating whether to allow filtering and show filter buttons in the table headers.
            </summary>
            <remarks>
            <p class="body">
            If <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsHeaderRowVisible"/> is False, this property must be False and setting it to True will cause an error.
            If <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsHeaderRowVisible"/> is set to True, this property will also be set to True automatically.
            </p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            The value assigned is True and <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsHeaderRowVisible"/> is False.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.IsHeaderRowVisible"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.IsHeaderRowVisible">
            <summary>
            Gets or sets the value which indicates whether the row containing column headers should be displayed. 
            </summary>
            <remarks>
            <p class="body">
            When the header row is visible, the cell above each column of data will contain the <see cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Name"/>
            value. Therefore, all header cells always contain a string value. Additionally, they will all be unique.
            </p>
            </remarks>
            <value>True if the row containing column headers is visible; False if it is hidden.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Name"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.IsTotalsRowVisible">
            <summary>
            Gets or sets the value which indicates whether the row containing column totals should be displayed. 
            </summary>
            <remarks>
            <p class="body">
            When the totals row is visible, the cell below each column of data will contain either a calculated value, a text value, or nothing.
            To display a calculated value in the cell, set the <see cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalFormula"/>. To display a text label, set the
            <see cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalLabel"/>. If both are set, the calculated value takes precedence.
            </p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            The value is set to True and the table occupies the last row of the worksheet.
            </exception>
            <value>True if the row containing column totals is visible; False if it is hidden.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalFormula"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalLabel"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.SortSettings">
            <summary>
            Gets the settings which determine how the data within the table should be sorted.
            </summary>
            <remarks>
            <p class="note">
            <B>Note:</B> Sort conditions are not constantly evaluated as data within the table changes. Sort conditions are applied to the table 
            only when they are are added or removed on a column in the table or when the <see cref="M:Infragistics.Documents.Excel.WorksheetTable.ReapplySortConditions"/> method is called.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.ReapplySortConditions"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.SortCondition"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.Style">
            <summary>
            Gets or sets the style to use on the <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/>.
            </summary>
            <remarks>
            <p class="body">
            The <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle"/> defines formats to use in various areas of the table. These formats are used as defaults
            for cells which don't have their formatting properties already set.
            </p>
            <p class="body">
            The area formats specified in the WorksheetTableStyle are differential formats. In other words, only the properties that are set 
            to non-default values will be applied to the appropriate cells. An area format can define only a background color or only font 
            information and that format will be applied to the cells while all other formatting properties on the cells will be maintained.
            </p>
            <p class="body">
            If this value is set to null, the Style will be set to the <see cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle"/>.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            The value specified is not in the <see cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles"/> or <see cref="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles"/> 
            collections.
            </exception>
            <value>The <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle"/> instance which defines the various default table area formats.</value>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.TotalsRowRegion">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion"/> which represents the region of cells in the totals row of the table.
            </summary>
            <value>
            A WorksheetRegion which represents the region of cells in the totals row of the table or null if the totals row is not visible.
            </value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.IsTotalsRowVisible"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.Resize(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.Resize(Infragistics.Documents.Excel.WorksheetRegion)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.WholeTableRegion">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion"/> which represents the region of cells in the whole table, including the header and totals rows, 
            if visible.
            </summary>
            <remarks>
            <p class="body">
            The table region can be changed by using one of the Resize overloads.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.Resize(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.Resize(Infragistics.Documents.Excel.WorksheetRegion)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.Worksheet">
            <summary>
            Gets the <see cref="P:Infragistics.Documents.Excel.WorksheetTable.Worksheet"/> to which the table belongs.
            </summary>
            <value>The Worksheet to which the table belongs or null if the table has been removed from the Worksheet.</value>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Tables"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetTableAreaFormatsCollection`1">
            <summary>
            A collection of formats for areas of a <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/>.
            </summary>
            <typeparam name="TArea">
            An enumeration defining the various table areas which can contain formats.
            </typeparam>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.AreaFormats"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.AreaFormats"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableAreaFormatsCollection`1.HasFormat(`0)">
            <summary>
            Determines whether the area has a non-default format applied.
            </summary>
            <param name="area">The area of which to test the format.</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="area"/> is not defined.
            </exception>
            <returns>True if the area has a non-default format applied; False otherwise.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableAreaFormatsCollection`1.Count">
            <summary>
            Gets the number of area formats in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableAreaFormatsCollection`1.Item(`0)">
            <summary>
            Gets the format for the specified area.
            </summary>
            <param name="area">The area for which to get the format.</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="area"/> is not defined.
            </exception>
            <value>
            An <see cref="T:Infragistics.Documents.Excel.IWorksheetCellFormat"/> instance describing the appearance of the specified area.
            </value>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetTableCollection">
            <summary>
            The collection of <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> instances on a <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Tables"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableCollection.Add(System.String,System.Boolean,Infragistics.Documents.Excel.WorksheetTableStyle)">
            <summary>
            Formats a region as a table and adds an associated <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> to the collection.
            </summary>
            <param name="region">The region to format as a table.</param>
            <param name="tableHasHeaders">
            A value which indicates whether the top row of the region contains the headers for the table.
            </param>
            <param name="tableStyle">
            The <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle"/> to apply to the table or null to use the <see cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle"/>.
            </param>
            <remarks>
            <p class="body">
            When the table is created, the specified <paramref name="tableStyle"/> will be applied to the <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Style"/> 
            value.
            </p>
            <p class="body">
            When the table is created, the column names will be taken from the cells in the header row if <paramref name="tableHasHeaders"/> 
            is True. If it is False, the column names will be generated and the cells for the header row will be inserted into the worksheet.
            </p>
            <p class="body">
            The column names are unique within the owning WorksheetTable. If, when the table is created, there are two or more columns with 
            the same name, the second and subsequent duplicate column names will have a number appended to make them unique. If any cells in 
            the header row have a non-string value, their value will be changed to a string (the current display text of the cell). If any 
            cells in the header row have no value, they will be given a generated column name.
            </p>
            <p class="body">
            If the region partially contains any merged cell regions, they will be removed from the worksheet and the table region will be expanded 
            to include all cells from the merged region.
            </p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            The owning worksheet has been removed from its workbook.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="region"/> is null or empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="region"/> is not a valid region address in the workbook's cell reference mode.
            </exception>
            <exception cref="T:System.ArgumentException">
            The specified <paramref name="tableStyle"/> does not exist in the <see cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles"/> or 
            <see cref="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles"/> collections.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The region contains one or more cells from another <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The region contains one or more cells which have a multi-cell <see cref="T:Infragistics.Documents.Excel.ArrayFormula"/> applied.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The region contains one or more cells which are part of a <see cref="T:Infragistics.Documents.Excel.WorksheetDataTable"/>.
            </exception>
            <returns>The <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> created the represent the formatted table for the region.</returns>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTable"/>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Tables"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Name"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Style"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.IsHeaderRowVisible"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.FormatAsTable(System.Boolean,Infragistics.Documents.Excel.WorksheetTableStyle)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableCollection.Clear">
            <summary>
            Clears the collection and removes all tables from the worksheet.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableCollection.Contains(Infragistics.Documents.Excel.WorksheetTable)">
            <summary>
            Determines whether the specified <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> is in the collection.
            </summary>
            <param name="table">The WorksheetTable to find in the collection.</param>
            <returns>True if the WorksheetTable is in the collection; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableCollection.Exists(System.String)">
            <summary>
            Determines whether a <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> with the specified name is in the collection.
            </summary>
            <param name="name">The name of the WorksheetTable to find.</param>
            <remarks>
            <p class="body">
            Table names are compared case-insensitively.
            </p>
            </remarks>
            <returns>True if a WorksheetTable with the specified name is in the collection; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableCollection.IndexOf(Infragistics.Documents.Excel.WorksheetTable)">
            <summary>
            Gets the index of the specified <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> in the collection.
            </summary>
            <param name="table">The WorksheetTable to find in the collection.</param>
            <returns>
            The 0-based index of the specified WorksheetTable in the collection or -1 if the item is not in the collection.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableCollection.Remove(Infragistics.Documents.Excel.WorksheetTable,System.Boolean)">
            <summary>
            Removes the <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> from the collection.
            </summary>
            <param name="table">The WorksheetTable to remove from the collection.</param>
            <param name="convertToRange">True to apply the table style formatting to the cells</param>
            <returns>True if the WorksheetTable was found and removed; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableCollection.RemoveAt(System.Int32,System.Boolean)">
            <summary>
            Removes the <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> at the specified index.
            </summary>
            <param name="index">The 0-based index of the WorksheetTable to remove.</param>
            <param name="convertToRange">True to apply the table style formatting to the cells</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than or equal to <see cref="P:Infragistics.Documents.Excel.WorksheetTableCollection.Count"/>.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableCollection.Count">
            <summary>
            Gets the number of tables in the collection.
            </summary>
            <value>The number of tables in the collection.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> at the specified index.
            </summary>
            <param name="index">The zero-based index of the WorksheetTable to get.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or <paramref name="index"/> is greater than or equal to <see cref="P:Infragistics.Documents.Excel.WorksheetTableCollection.Count"/>.
            </exception>
            <value>The WorksheetTable at the specified index.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> with the specified name.
            </summary>
            <remarks>
            <p class="body">
            Worksheet names are compared case-insensitively.
            </p>
            </remarks>
            <param name="name">The name of the WorksheetTable to get.</param>
            <exception cref="T:System.InvalidOperationException">
            A WorksheetTable with the specified name does not exist in the collection. 
            </exception>
            <value>The WorksheetTable with the specified name.</value>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReferenceBase.Name"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetTableColumn">
            <summary>
            Represents a column in a <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/>.
            </summary>
            <remarks>
            <p class="body">
            Each column contains various settings for controlling the contents, formatting, sorting, and filtering within it.
            </p>
            </remarks>
            <see cref="P:Infragistics.Documents.Excel.WorksheetTable.Columns"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyAverageFilter(Infragistics.Documents.Excel.Filtering.AverageFilterType)">
            <summary>
            Applies an <see cref="T:Infragistics.Documents.Excel.Filtering.AverageFilter"/> to the column.
            </summary>
            <param name="type">The value indicating whether to filter in values below or above the average of the data range.</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="type"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.AverageFilterType"/> enumeration.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible"/> value of the owning table is False. 
            Filters cannot be applied when the header row or filter button is hidden.
            </exception>
            <exception cref="T:System.InvalidOperationException">If column was removed from the table.</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.AverageFilter"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyCustomFilter(Infragistics.Documents.Excel.Filtering.CustomFilterCondition)">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.CustomFilter"/> to the column.
            </summary>
            <param name="condition">The condition which must pass for the data to be filtered in.</param>
            <remarks>
            <p class="note">
            <b>Note:</b> If the filter condition value is longer than 255 characters in length and the workbook is saved in one of 
            the 2003 formats, the correct rows will be hidden in the saved file, but the filter will be missing from the column.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="condition"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible"/> value of the owning table is False. 
            Filters cannot be applied when the header row or filter button is hidden.
            </exception>
            <exception cref="T:System.InvalidOperationException">If column was removed from the table.</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.CustomFilter"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyCustomFilter(Infragistics.Documents.Excel.Filtering.CustomFilterCondition,Infragistics.Documents.Excel.Filtering.CustomFilterCondition,Infragistics.Documents.Excel.Filtering.ConditionalOperator)">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.CustomFilter"/> to the column.
            </summary>
            <param name="condition1">The first condition used to filter the data.</param>
            <param name="condition2">The second condition used to filter the data.</param>
            <param name="conditionalOperator">
            The operator which defines how to logically combine <paramref name="condition1"/> and <paramref name="condition2"/>.
            </param>
            <remarks>
            <p class="body">
            If <paramref name="condition2"/> is null, the <paramref name="conditionalOperator"/> value is irrelevant.
            </p>
            <p class="note">
            <b>Note:</b> If one of the filter condition values is longer than 255 characters in length and the workbook is saved in one of 
            the 2003 formats, the correct rows will be hidden in the saved file, but the filter will be missing from the column.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="condition1"/> is null.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="conditionalOperator"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.ConditionalOperator"/> enumeration.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible"/> value of the owning table is False. 
            Filters cannot be applied when the header row or filter button is hidden.
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.CustomFilter"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyDatePeriodFilter(Infragistics.Documents.Excel.Filtering.DatePeriodFilterType,System.Int32)">
            <summary>
            Applies an <see cref="T:Infragistics.Documents.Excel.Filtering.DatePeriodFilter"/> to the column.
            </summary>
            <param name="type">The type of date period to filter in.</param>
            <param name="value">The 1-based value of the month or quarter to filter in.</param>
            <remarks>
            <p class="body">
            If the <paramref name="type"/> is Month, a <paramref name="value"/> of 1 indicates January, 2 indicates February, and so on. 
            If type is Quarter, a value of 1 indicates Quarter 1, and so on.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="type"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.DatePeriodFilterType"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="type"/> is Quarter and <paramref name="value"/> is less than 1 or greater than 4 or
            type is Month and value is less than 1 or greater than 12.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible"/> value of the owning table is False. 
            Filters cannot be applied when the header row or filter button is hidden.
            </exception>
            <exception cref="T:System.InvalidOperationException">If column was removed from the table.</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.DatePeriodFilter"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFillFilter(Infragistics.Documents.Excel.CellFill)">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.FillFilter"/> to the column.
            </summary>
            <param name="fill">A <see cref="T:Infragistics.Documents.Excel.CellFill"/> by which the cells should be filtered.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="fill"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible"/> value of the owning table is False. 
            Filters cannot be applied when the header row or filter button is hidden.
            </exception>
            <exception cref="T:System.InvalidOperationException">If column was removed from the table.</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FillFilter"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,System.String[])">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/> to the column.
            </summary>
            <param name="includeBlanks">The value which indicates whether blank cells should be filtered in.</param>
            <param name="displayValues">The collection of case-insensitively unique cell text values which should be filtered in.</param>
            <remarks>
            <p class="note">
            <b>Note:</b> If any text values are longer than 255 characters in length and the workbook is saved in one of the 2003 formats,
            the correct rows will be hidden in the saved file, but the filter may be missing from the column or reapplying the filter
            may hide some of the matching cells.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="displayValues"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            A value in the <paramref name="displayValues"/> collection is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Multiple values from the <paramref name="displayValues"/> collection are case-insensitively equal.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="includeBlanks"/> is False and <paramref name="displayValues"/> has no items. At least one value must be allowed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible"/> value of the owning table is False. 
            Filters cannot be applied when the header row or filter button is hidden.
            </exception>
            <exception cref="T:System.InvalidOperationException">If column was removed from the table.</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetText(Infragistics.Documents.Excel.TextFormatMode)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32,Infragistics.Documents.Excel.TextFormatMode)"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/> to the column.
            </summary>
            <param name="includeBlanks">The value which indicates whether blank cells should be filtered in.</param>
            <param name="displayValues">The collection of case-insensitively unique cell text values which should be filtered in.</param>
            <remarks>
            <p class="note">
            <b>Note:</b> If any text values are longer than 255 characters in length and the workbook is saved in one of the 2003 formats,
            the correct rows will be hidden in the saved file, but the filter may be missing from the column or reapplying the filter
            may hide some of the matching cells.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="displayValues"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            A value in the <paramref name="displayValues"/> collection is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Multiple values from the <paramref name="displayValues"/> collection are case-insensitively equal.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="includeBlanks"/> is False and <paramref name="displayValues"/> has no items. At least one value must be allowed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible"/> value of the owning table is False. 
            Filters cannot be applied when the header row or filter button is hidden.
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetText(Infragistics.Documents.Excel.TextFormatMode)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32,Infragistics.Documents.Excel.TextFormatMode)"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,System.Collections.Generic.IEnumerable{Infragistics.Documents.Excel.Filtering.FixedDateGroup})">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/> to the column.
            </summary>
            <param name="includeBlanks">The value which indicates whether blank cells should be filtered in.</param>
            <param name="dateGroups">The collection of fixed date groups which should be filtered in.</param>
            <remarks>
            <p class="note">
            <b>Note:</b> If any text values are longer than 255 characters in length and the workbook is saved in one of the 2003 formats,
            the correct rows will be hidden in the saved file, but the filter may be missing from the column or reapplying the filter
            may hide some of the matching cells.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="dateGroups"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            A FixedDateGroup in the <paramref name="dateGroups"/> collection is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Multiple items in <paramref name="dateGroups"/> are equal to each other.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="includeBlanks"/> is False and <paramref name="dateGroups"/> has no items. At least one value must be allowed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible"/> value of the owning table is False. 
            Filters cannot be applied when the header row or filter button is hidden.
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,Infragistics.Documents.Excel.Filtering.CalendarType,Infragistics.Documents.Excel.Filtering.FixedDateGroup[])">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/> to the column.
            </summary>
            <param name="includeBlanks">The value which indicates whether blank cells should be filtered in.</param>
            <param name="calendarType">The calendar type used to interpret values in the <paramref name="dateGroups"/> collection.</param>
            <param name="dateGroups">The collection of fixed date groups which should be filtered in.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="dateGroups"/> is null.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="calendarType"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.CalendarType"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            A FixedDateGroup in the <paramref name="dateGroups"/> collection is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Multiple items in <paramref name="dateGroups"/> are equal to each other.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="includeBlanks"/> is False and <paramref name="dateGroups"/> has no items. At least one value must be allowed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible"/> value of the owning table is False. 
            Filters cannot be applied when the header row or filter button is hidden.
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,Infragistics.Documents.Excel.Filtering.CalendarType,System.Collections.Generic.IEnumerable{Infragistics.Documents.Excel.Filtering.FixedDateGroup})">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/> to the column.
            </summary>
            <param name="includeBlanks">The value which indicates whether blank cells should be filtered in.</param>
            <param name="calendarType">The calendar type used to interpret values in the <paramref name="dateGroups"/> collection.</param>
            <param name="dateGroups">The collection of fixed date groups which should be filtered in.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="dateGroups"/> is null.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="calendarType"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.CalendarType"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            A FixedDateGroup in the <paramref name="dateGroups"/> collection is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Multiple items in <paramref name="dateGroups"/> are equal to each other.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="includeBlanks"/> is False and <paramref name="dateGroups"/> has no items. At least one value must be allowed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible"/> value of the owning table is False. 
            Filters cannot be applied when the header row or filter button is hidden.
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFontColorFilter(System.Drawing.Color)">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.FontColorFilter"/> to the column.
            </summary>
            <param name="fontColor">The font color by which the cells should be filtered.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="fontColor"/> is empty.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible"/> value of the owning table is False. 
            Filters cannot be applied when the header row or filter button is hidden.
            </exception>
            <exception cref="T:System.InvalidOperationException">If column was removed from the table.</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FontColorFilter"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFontColorFilter(Infragistics.Documents.Excel.WorkbookColorInfo)">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.FontColorFilter"/> to the column.
            </summary>
            <param name="fontColorInfo">
            A <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo"/> which describes the font color by which the cells should be filtered.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="fontColorInfo"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible"/> value of the owning table is False. 
            Filters cannot be applied when the header row or filter button is hidden.
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FontColorFilter"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyIconFilter(Infragistics.Documents.Excel.FormatConditionIconSet,System.Nullable{System.Int32})">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.IconFilter"/> to the column.
            </summary>
            <param name="iconSet">The icon set containing the icon.</param>
            <exception cref="T:System.ArgumentException">If the icon set is not valid.</exception>
            <param name="iconIndex">The zero-based index of the icon in the set or null for 'NoCellIcon'.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If the index is less than zero or greater than or equal to the number of icons in the icon set..</exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible"/> value of the owning table is False. 
            Filters cannot be applied when the header row or filter button is hidden.
            </exception>
            <exception cref="T:System.InvalidOperationException">If column was removed from the table.</exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="iconSet"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.FormatConditionIconSet"/> enumeration.
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.IconFilter"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter"/>
            <seealso cref="M:Infragistics.Documents.Excel.ConditionalFormatting.ConditionalFormatCollection.AddIconSetCondition(System.String,Infragistics.Documents.Excel.FormatConditionIconSet)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyRelativeDateRangeFilter(Infragistics.Documents.Excel.Filtering.RelativeDateRangeOffset,Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration)">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter"/> to the column.
            </summary>
            <param name="offset">
            The offset of relative filter. This combined with the <paramref name="duration"/> determines the full range of accepted dates.
            </param>
            <param name="duration">The duration of the full range of accepted dates.</param>
            <remarks>
            <p class="body">
            The RelativeDateRangeFilter allows you to filter in dates which are in the previous, current, or next time period 
            relative to the date when the filter was applied. The time periods available are day, week, month, quarter, year.
            So when using the previous filter type with a day duration, a 'yesterday' filter is created. Or when using a current 
            filter type with a year duration, a 'this year' filter is created. However, these filters compare the data against 
            the date when the filter was created. So a 'this year' filter created in 1999 will filter in all cells containing 
            dates in 1999, even if the workbook is opened in 2012.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="offset"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeOffset"/> enumeration.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="duration"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration"/> enumeration.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible"/> value of the owning table is False. 
            Filters cannot be applied when the header row or filter button is hidden.
            </exception>
            <exception cref="T:System.InvalidOperationException">If column was removed from the table.</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyTopOrBottomFilter">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter"/> to the column which will filter in the top 10 values in the list of sorted values.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible"/> value of the owning table is False. 
            Filters cannot be applied when the header row or filter button is hidden.
            </exception>
            <exception cref="T:System.InvalidOperationException">If column was removed from the table.</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyTopOrBottomFilter(Infragistics.Documents.Excel.Filtering.TopOrBottomFilterType,System.Int32)">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter"/> to the column.
            </summary>
            <param name="type">The type of the filter.</param>
            <param name="value">The number or percentage of value of values which should be filtered in.</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="type"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilterType"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="value"/> is less than 1 or greater than 500.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible"/> value of the owning table is False. 
            Filters cannot be applied when the header row or filter button is hidden.
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyYearToDateFilter">
            <summary>
            Applies a <see cref="T:Infragistics.Documents.Excel.Filtering.YearToDateFilter"/> to the column.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible"/> value of the owning table is False. 
            Filters cannot be applied when the header row or filter button is hidden.
            </exception>
            <exception cref="T:System.InvalidOperationException">If column was removed from the table.</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.YearToDateFilter"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter">
            <summary>
            Removes the filter from the column if one is applied.
            </summary>
            <exception cref="T:System.InvalidOperationException">If column was removed from the table.</exception>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyAverageFilter(Infragistics.Documents.Excel.Filtering.AverageFilterType)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyCustomFilter(Infragistics.Documents.Excel.Filtering.CustomFilterCondition)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyCustomFilter(Infragistics.Documents.Excel.Filtering.CustomFilterCondition,Infragistics.Documents.Excel.Filtering.CustomFilterCondition,Infragistics.Documents.Excel.Filtering.ConditionalOperator)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyDatePeriodFilter(Infragistics.Documents.Excel.Filtering.DatePeriodFilterType,System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFillFilter(Infragistics.Documents.Excel.CellFill)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,System.String[])"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,System.Collections.Generic.IEnumerable{System.String})"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,System.Collections.Generic.IEnumerable{Infragistics.Documents.Excel.Filtering.FixedDateGroup})"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,Infragistics.Documents.Excel.Filtering.CalendarType,System.Collections.Generic.IEnumerable{Infragistics.Documents.Excel.Filtering.FixedDateGroup})"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFontColorFilter(System.Drawing.Color)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFontColorFilter(Infragistics.Documents.Excel.WorkbookColorInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyRelativeDateRangeFilter(Infragistics.Documents.Excel.Filtering.RelativeDateRangeOffset,Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyTopOrBottomFilter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyTopOrBottomFilter(Infragistics.Documents.Excel.Filtering.TopOrBottomFilterType,System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyYearToDateFilter"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.SetColumnFormula(Infragistics.Documents.Excel.Formula,System.Boolean)">
            <summary>
            Sets the formula to use in the data cells in the column.
            </summary>
            <param name="formula">The formula for the data cells of the column or null to remove the current column formula.</param>
            <param name="overwriteExistingValues">
            True to overwrite the existing cells values and apply the formula to all data cells in the column. 
            False to only apply the formula to the cells with no value set.
            </param>
            <remarks>
            <p class="body">
            If any relative cell or region references are in the specified formula, it will be assumed that the actual formula is being applied to 
            the first data cell in the column. When the formula is applied to other cells in the column, the relative references will be offset by
            the appropriate amount.
            </p>
            <p class="body">
            When the column formula is set and the table is resized to give it more rows, the new cells in the column will have the column formula 
            applied to them.
            </p>
            <p class="body">
            If there was a different column formula applied previously and it was applied to any of the cells in the column, setting it to a 
            different formula will overwrite the formulas on those cells, regardless of the value of <paramref name="overwriteExistingValues"/>.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            <exception cref="T:System.InvalidOperationException">If column was removed from the table.</exception>
            <paramref name="formula"/> is already applied to something else, such as a cell or table column.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.ColumnFormula"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.AreaFormats">
            <summary>
            Gets the collection of formats used for each area of the column.
            </summary>
            <remarks>
            <p class="body">
            The available areas of the column which can have a format set are the header, data, and totals areas.
            </p>
            <p class="body">
            Applying a format to an area will apply the format to all cells in that area.
            </p>
            <p class="body">
            If any area formats on the columns are set when the table is resized to give it more rows, the new cells in the column will 
            get the new format applied.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.AreaFormats"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.Resize(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.Resize(Infragistics.Documents.Excel.WorksheetRegion)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.ColumnFormula">
            <summary>
            Gets the formula associated with the data area of the column.
            </summary>
            <remarks>
            <p class="body">
            When the column formula is set and the table is resized to give it more rows, the new cells in the column will have the column formula 
            applied to them.
            </p>
            </remarks>
            <value>A <see cref="T:Infragistics.Documents.Excel.Formula"/> instance representing the formula for the data area of the column or null if no formula is applied.</value>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.SetColumnFormula(Infragistics.Documents.Excel.Formula)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.DataAreaRegion">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion"/> which represents the region of cells in the data area of the column.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter">
            <summary>
            Gets the filter applied to the column.
            </summary>
            <remarks>
            <p class="body">
            Filters are not constantly evaluated as data within the table changes. Filters are applied to the table only when they are 
            added or removed on a column in the table or when the <see cref="M:Infragistics.Documents.Excel.WorksheetTable.ReapplyFilters"/> method is called.
            </p>
            <p class="note">
            <B>Note:</B> When the filters are reevaluated, the rows of any cells which don't meet the filter criteria of their column will 
            be hidden. When a row is filtered out, the entire row is hidden from the worksheet, so any data outside the table but in the 
            same row will also be hidden.
            </p>
            </remarks>
            <value>
            A <see cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter"/>-derived instance if a filter is applied or null if the column is not filtered.
            </value>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyAverageFilter(Infragistics.Documents.Excel.Filtering.AverageFilterType)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyCustomFilter(Infragistics.Documents.Excel.Filtering.CustomFilterCondition)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyCustomFilter(Infragistics.Documents.Excel.Filtering.CustomFilterCondition,Infragistics.Documents.Excel.Filtering.CustomFilterCondition,Infragistics.Documents.Excel.Filtering.ConditionalOperator)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyDatePeriodFilter(Infragistics.Documents.Excel.Filtering.DatePeriodFilterType,System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFontColorFilter(System.Drawing.Color)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFontColorFilter(Infragistics.Documents.Excel.WorkbookColorInfo)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,System.String[])"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,System.Collections.Generic.IEnumerable{System.String})"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,System.Collections.Generic.IEnumerable{Infragistics.Documents.Excel.Filtering.FixedDateGroup})"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,Infragistics.Documents.Excel.Filtering.CalendarType,System.Collections.Generic.IEnumerable{Infragistics.Documents.Excel.Filtering.FixedDateGroup})"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyRelativeDateRangeFilter(Infragistics.Documents.Excel.Filtering.RelativeDateRangeOffset,Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyTopOrBottomFilter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyTopOrBottomFilter(Infragistics.Documents.Excel.Filtering.TopOrBottomFilterType,System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyYearToDateFilter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.ClearFilters"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.ReapplyFilters"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.HeaderCell">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/> which represents the header cell for the column.
            </summary>
            <value>
            A WorksheetCell which represents the header cell for the column or null if the header row is not visible in the table.
            </value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.IsHeaderRowVisible"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.Index">
            <summary>
            Gets the 0-based index of the column in the owning <see cref="P:Infragistics.Documents.Excel.WorksheetTable.Columns"/> collection.
            </summary>
            <value>
            The 0-based index of the column in its collection or -1 if the column has been removed from the table.
            </value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Columns"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.Name">
            <summary>
            Gets or sets the name of the column.
            </summary>
            <remarks>
            <p class="body">
            If the header row is visible in the <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/>, the name of the column will be displayed in the cell of the 
            column in the header row.
            </p>
            <p class="body">
            When the WorksheetTable is created, the column names will be taken from the cells in the header row. If the table does not 
            contain a header row, the column names will be generated.
            </p>
            <p class="body">
            The column names are unique within the owning WorksheetTable. If, when the table is created, there are two or more columns with 
            the same name, the second and subsequent duplicate column names will have a number appended to make them unique. If any cells in 
            the header row have a non-string value, their value will be changed to a string (the current display text of the cell). If any 
            cells in the header row have no value, they will be given a generated column name.
            </p>
            <p class="body">
            If the Name property is set to a null or empty string, a column name will be generated. If the value is set to a column name which
            already exists in the table, the column with the higher index will have a number appended to its name so all column names can stay 
            unique.
            </p>
            </remarks>
            <value>The unique name of the column within the owning WorksheetTable.</value>
            <exception cref="T:System.InvalidOperationException">From the setter if column was removed from the table.</exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.IsHeaderRowVisible"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.SortCondition">
            <summary>
            Gets or sets the sort condition used to sort the column in the table.
            </summary>
            <remarks>
            <p class="body">
            When a sort condition is set on the column, the SortConditions collection on the <see cref="P:Infragistics.Documents.Excel.WorksheetTable.SortSettings"/> will be cleared 
            and the new sort condition will be added. To sort by multiple columns, the sort conditions must be added to the SortConditions collection 
            instead of set on the column. However, if a sort condition is cleared with this property, just the sort condition for the column will be 
            removed from the SortConditions collection. All other SortConditions will remain in the collection.
            </p>
            <p class="note">
            <B>Note:</B> Sort conditions are not constantly evaluated as data within the table changes. Sort conditions are applied to the table 
            only when they are are added or removed on a column in the table or when the <see cref="M:Infragistics.Documents.Excel.WorksheetTable.ReapplySortConditions"/> method 
            is called.
            </p>
            </remarks>
            <value>The <see cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.SortCondition"/>-derived instance used to sort the column or null of the column is not sorted.</value>
            <exception cref="T:System.InvalidOperationException">From the setter if column was removed from the table.</exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.SortSettings"/>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.SortConditions"/>
            <seealso cref="T:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.ClearSortConditions"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.ReapplySortConditions"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.Table">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> to which the column belongs.
            </summary>
            <value>
            The WorksheetTable to which the column belongs or null if the column has been removed from the table.
            </value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalCell">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/> which represents the total cell for the column.
            </summary>
            <value>
            A WorksheetCell which represents the total cell for the column or null if the totals row is not visible in the table.
            </value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.IsTotalsRowVisible"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalFormula">
            <summary>
            Gets or sets the formula to use in the total cell of the column.
            </summary>
            <remarks>
            <p class="body">
            The total formula can be set regardless of whether or not the totals row is visible. If the totals row is hidden, the
            formula will not be applied anywhere. When the totals row is visible, it will be applied to the total cell of the column.
            </p>
            <p class="body">
            Setting the TotalFormula to a non-null value will clear the <see cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalLabel"/>, and vice versa.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            The value is already applied to something else, such as a cell or table column.
            </exception>
            <exception cref="T:System.InvalidOperationException">From the setter if column was removed from the table.</exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalLabel"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.IsTotalsRowVisible"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalLabel">
            <summary>
            Gets or sets the text label to use in the total cell of the column.
            </summary>
            <remarks>
            <p class="body">
            The total label can be set regardless of whether or not the totals row is visible. If the totals row is hidden, the
            label will not be displayed anywhere. When the totals row is visible, it will be set as the value of the total cell of the column.
            </p>
            <p class="body">
            Setting the <see cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalFormula"/> to a non-null value will clear the TotalLabel, and vice versa.
            </p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">From the setter if column was removed from the table.</exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalFormula"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.IsTotalsRowVisible"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.WholeColumnRegion">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion"/> which represents the region of cells in the whole column, including the header and total cells, 
            if visible.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetTableColumnCollection">
            <summary>
            A read-only collection of all <see cref="T:Infragistics.Documents.Excel.WorksheetTableColumn"/> instances which exist in a <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Columns"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumnCollection.Contains(Infragistics.Documents.Excel.WorksheetTableColumn)">
            <summary>
            Determines whether the specified <see cref="T:Infragistics.Documents.Excel.WorksheetTableColumn"/> is in the collection.
            </summary>
            <param name="column">The column to find in the collection.</param>
            <returns>True if the specified column is in the collection; False otherwise.</returns>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTableColumn"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumnCollection.IndexOf(Infragistics.Documents.Excel.WorksheetTableColumn)">
            <summary>
            Gets the index of the specified <see cref="T:Infragistics.Documents.Excel.WorksheetTableColumn"/> in the collection.
            </summary>
            <param name="column">The WorksheetTableColumn to find in the collection.</param>
            <returns>
            The 0-based index of the specified WorksheetTableColumn in the collection or -1 if the item is not in the collection.
            </returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumnCollection.Count">
            <summary>
            Gets the number of <see cref="T:Infragistics.Documents.Excel.WorksheetTableColumn"/> instances in the collection.
            </summary>
            <value>The number of columns in the collection.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumnCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorksheetTableColumn"/> at the specified index.
            </summary>
            <param name="index">The 0-based index of the column to get.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than or equal to the number of columns in the collection.
            </exception>
            <returns>The WorksheetTableColumn at the specified index.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumnCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorksheetTableColumn"/> with the specified name or null if it doesn't exist.
            </summary>
            <param name="name">The name of the column to get.</param>
            <remarks>
            <p class="body">
            Column names are compared case-insensitively.
            </p>
            </remarks>
            <returns>The WorksheetTableColumn with the specified name or null a column with the specified name doesn't exist.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Name"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetTableStyle">
            <summary>
            Represents a style which can be applied to a <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Style"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableStyle.#ctor(System.String)">
            <summary>
            Creates a custom <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle"/> instance.
            </summary>
            <param name="name">The name of the new style.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name"/> is null or empty.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableStyle.Clone(System.String)">
            <summary>
            Duplicates the style and returns a deep copy.
            </summary>
            <param name="name">The name to give to the cloned style.</param>
            <remarks>
            <p class="body">
            A cloned style must be added to the <see cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles"/> collection before it can be applied to a 
            <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/>.
            </p>
            <p class="body">
            The only value not cloned from the style is the <see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.IsCustom"/> value. Cloning a standard style creates a custom style with 
            the same style settings which can then be changed.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name"/> is null or empty.
            </exception>
            <returns>The clone of the style.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableStyle.AlternateColumnStripeWidth">
            <summary>
            Gets or sets the number of columns which will span each alternate column stripe. 
            </summary>
            <remarks>
            <p class="body">
            The stripe sizes must be between 1 and 9, inclusive.
            </p>
            <p class="body">
            The column stripes are assigned from left to right in the table, first assigning the column stripe, then the alternate column 
            stripe, then repeating.
            </p>
            <p class="body">
            The alternate column stripe format is defined in the <see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats"/> collection and keyed by the 
            <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyleArea"/>.AlternateColumnStripe value.
            </p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            The value is set and <see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.IsCustom"/> is False, indicating that the style is a read-only, standard table style.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value assigned is less than 1 or greater than 9.
            </exception>
            <value>The number of columns which will span each alternate column stripe.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.ColumnStripeWidth"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableStyle.AlternateRowStripeHeight">
            <summary>
            Gets or sets the number of rows which will span each alternate row stripe. 
            </summary>
            <remarks>
            <p class="body">
            The stripe sizes must be between 1 and 9, inclusive.
            </p>
            <p class="body">
            The row stripes are assigned from top to bottom in the table, first assigning the row stripe, then the alternate row
            stripe, then repeating.
            </p>
            <p class="body">
            The alternate row stripe format is defined in the <see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats"/> collection and keyed by the 
            <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyleArea"/>.AlternateRowStripe value.
            </p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            The value is set and <see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.IsCustom"/> is False, indicating that the style is a read-only, standard table style.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value assigned is less than 1 or greater than 9.
            </exception>
            <value>The number of rows which will span each alternate row stripe.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.RowStripeHeight"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats">
            <summary>
            Gets the collection of formats used for each area of a <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> to which the style is applied.
            </summary>
            <remarks>
            <p class="body">
            The area formats specified are differential formats. In other words, only the properties that are set to non-default values will be
            applied to the appropriate cells. An area format can define only a background color or only font information and that format will be 
            applied to the cells while all other formatting properties on the cells will be maintained.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.AreaFormats"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.AreaFormats"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableStyle.ColumnStripeWidth">
            <summary>
            Gets or sets the number of columns which will span each column stripe. 
            </summary>
            <remarks>
            <p class="body">
            The stripe sizes must be between 1 and 9, inclusive.
            </p>
            <p class="body">
            The column stripes are assigned from left to right in the table, first assigning the column stripe, then the alternate column 
            stripe, then repeating.
            </p>
            <p class="body">
            The column stripe format is defined in the <see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats"/> collection and keyed by the 
            <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyleArea"/>.ColumnStripe value.
            </p>
            </remarks>
            <value>The number of columns which will span each column stripe.</value>
            <exception cref="T:System.InvalidOperationException">
            The value is set and <see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.IsCustom"/> is False, indicating that the style is a read-only, standard table style.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value assigned is less than 1 or greater than 9.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AlternateColumnStripeWidth"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableStyle.IsCustom">
            <summary>
            Gets the value indicating whether the style is a custom style.
            </summary>
            <value>True id this is a custom table style; False if this is a read-only, standard table style.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableStyle.Name">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The value is set and <see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.IsCustom"/> is False, indicating that the style is a read-only, standard table style.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value assigned is null, empty, or greater than 255 characters in length.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value assigned matches the name of another custom style in the owning <see cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles"/> collection.
            Table names are compared case-insensitively.
            </exception>
            <value>The name of the style.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableStyle.RowStripeHeight">
            <summary>
            Gets or sets the number of rows which will span each row stripe. 
            </summary>
            <remarks>
            <p class="body">
            The stripe sizes must be between 1 and 9, inclusive.
            </p>
            <p class="body">
            The row stripes are assigned from top to bottom in the table, first assigning the row stripe, then the alternate row
            stripe, then repeating.
            </p>
            <p class="body">
            The row stripe format is defined in the <see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats"/> collection and keyed by the 
            <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyleArea"/>.RowStripe value.
            </p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            The value is set and <see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.IsCustom"/> is False, indicating that the style is a read-only, standard table style.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value assigned is less than 1 or greater than 9.
            </exception>
            <value>The number of rows which will span each row stripe.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AlternateRowStripeHeight"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.UnfrozenPaneSettings">
            <summary>
            Class which controls the way unfrozen panes are arranged and used for a worksheet.
            </summary>
            <remarks>
            <p class="note">
            <B>Note:</B> Frozen and unfrozen panes cannot be used simultaneously, so depending whether the panes are 
            frozen or unfrozen, these settings may not be used or saved.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.PanesAreFrozen"/>
            <seealso cref="T:Infragistics.Documents.Excel.FrozenPaneSettings"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.UnfrozenPaneSettings.ResetCore">
            <summary>
            Resets the unfrozen pane settings to their defaults.
            </summary>
            <remarks>
            <p class="body">
            The defaults used for each setting are the same defaults with which Microsoft Excel creates a blank worksheet.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.UnfrozenPaneSettings.FirstColumnInLeftPane">
            <summary>
            Gets or sets the first visible column in the left pane(s) of the worksheet. 
            </summary>
            <remarks>
            <p class="body">
            This affects the scroll position for the left pane(s) of the worksheet and is used regardless of whether or not the 
            worksheet is split vertically.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value is outside the valid column range (0 to one less than <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelColumnCount"/> or 
            <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007ColumnCount"/>, depending on the workbook's 
            <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/>).
            </exception>
            <value>The zero-based index of the first visible column in the left pane(s).</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.UnfrozenPaneSettings.FirstRowInTopPane">
            <summary>
            Gets or sets the first visible row in the top pane(s) of the worksheet. 
            </summary>
            <remarks>
            <p class="body">
            This affects the scroll position for the top pane(s) of the worksheet and is used regardless of whether or not 
            the worksheet is split horizontally.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value is outside the valid row range (0 to one less than <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelRowCount"/> or 
            <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007RowCount"/>, depending on the workbook's 
            <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/>).
            </exception>
            <value>The zero-based index of the first visible row in the top pane(s).</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.UnfrozenPaneSettings.LeftPaneWidth">
            <summary>
            Gets or sets the width of the left pane in twips (1/20th of a point).
            </summary>
            <remarks>
            <p class="body">
            If this value is zero, the left pane occupies the entire visible area of the worksheet.
            Otherwise, the left pane occupies the specified width and the right pane occupies
            the remaining area of the worksheet.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when the width specified is outside the valid width range (0 to 65535).
            </exception>
            <value>The width of the left pane, or zero if there is no horizontal pane split.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.UnfrozenPaneSettings.TopPaneHeight">
            <summary>
            Gets or sets the height of the top pane in twips (1/20th of a point).
            </summary>
            <remarks>
            <p class="body">
            If this value is zero, the top pane occupies the entire visible area of the worksheet.
            Otherwise, the top pane occupies the specified height and the bottom pane occupies
            the remaining area of the worksheet.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when the height specified is outside the valid height range (0 to 65535).
            </exception>
            <value>The height of the top pane, or zero if there is no vertical pane split.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.UnknownShape">
            <summary>
            Represents an unsupported shape which has been loaded from a workbook file.
            </summary>
            <remarks>
            <p class="body">
            This class is used for round-tripping purposes, so unsupported shapes which have been
            loaded can be saved back out with the workbook.  The class allows the unsupported shapes 
            to be identified in shape collections so they can be removed. This shape will become 
            obsolete in future versions when all shape types are supported.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.UnknownShape.ClearUnknownData">
            <summary>
            Throws an exception because all data in an unknown shape is unknown, and clearing that data would leave 
            no data with the shape.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            This method is called on an <see cref="T:Infragistics.Documents.Excel.UnknownShape"/> instance.
            </exception>
        </member>
        <member name="T:Infragistics.Documents.Excel.WindowOptions">
            <summary>
            Abstract base class which exposes the various workbook window options available which can be saved with 
            both a workbook and a custom view.
            </summary>
            <remarks>
            <p class="body">
            This class provides a way to control how a workbook is displayed when it is viewed in Microsoft Excel.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.CustomViewWindowOptions"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorkbookWindowOptions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WindowOptions.Reset">
            <summary>
            Resets the window options to their default settings.
            </summary>
            <remarks>
            <p class="body">
            The defaults used for each setting are the same defaults with which Microsoft Excel creates a blank workbook.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.WindowOptions.ObjectDisplayStyle">
            <summary>
            Gets or sets the way the objects and shapes are displayed in the workbook.
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The assigned value is not defined in the <see cref="P:Infragistics.Documents.Excel.WindowOptions.ObjectDisplayStyle"/> enumeration.
            </exception>
            <value>The way the objects and shapes are displayed in the workbook.</value>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetShape"/>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Shapes"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WindowOptions.ScrollBars">
            <summary>
            Gets or sets the scroll bars shown in the workbook window.
            </summary>
            <remarks>
            <p class="body">
            The vertical scroll bar occupies the entire height of the application if it is visible.
            </p>
            <p class="body">
            The horizontal scroll bar occupies the width of the application not used by the worksheet
            tab bar, if it is visible. Otherwise, it occupies the entire width of the application.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The assigned value is not defined in the <see cref="P:Infragistics.Documents.Excel.WindowOptions.ScrollBars"/> enumeration.
            </exception>
            <value>The scroll bars shown in the workbook window.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WindowOptions.TabBarWidth"/>
            <seealso cref="P:Infragistics.Documents.Excel.WindowOptions.TabBarVisible"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WindowOptions.SelectedSheet">
            <summary>
            Gets or sets the selected worksheet of the workbook.
            </summary>
            <remarks>
            <p class="body">
            If this is an instance of <see cref="T:Infragistics.Documents.Excel.CustomViewWindowOptions"/> and the SelectedWorksheet value is null, the 
            workbook's selected worksheet will not be changed when the associated <see cref="T:Infragistics.Documents.Excel.CustomView"/> is applied.
            </p>
            <p class="note">
            <B>Note:</B> If the selected worksheet does not have its <see cref="P:Infragistics.Documents.Excel.DisplayOptionsBase.Visibility"/> set to Visible
            when the workbook is saved, another worksheet will be selected.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            The assigned value is null and this is an instance of <see cref="T:Infragistics.Documents.Excel.WorkbookWindowOptions"/> whose associated 
            <see cref="P:Infragistics.Documents.Excel.WindowOptions.Workbook"/> has at least one <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            The assigned value does not belong to the workbook associated with this instance of <see cref="T:Infragistics.Documents.Excel.WindowOptions"/>.
            </exception>
            <value>The selected worksheet of the workbook.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WindowOptions.SelectedWorksheet">
            <summary>
            Gets or sets the selected worksheet of the workbook.
            </summary>
            <remarks>
            <p class="body">
            If this is an instance of <see cref="T:Infragistics.Documents.Excel.CustomViewWindowOptions"/> and the SelectedWorksheet value is null, the 
            workbook's selected worksheet will not be changed when the associated <see cref="T:Infragistics.Documents.Excel.CustomView"/> is applied.
            </p>
            <p class="note">
            <B>Note:</B> If the selected worksheet does not have its <see cref="P:Infragistics.Documents.Excel.DisplayOptionsBase.Visibility"/> set to Visible
            when the workbook is saved, another worksheet will be selected.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            The assigned value is null and this is an instance of <see cref="T:Infragistics.Documents.Excel.WorkbookWindowOptions"/> whose associated 
            <see cref="P:Infragistics.Documents.Excel.WindowOptions.Workbook"/> has at least one <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            The assigned value does not belong to the workbook associated with this instance of <see cref="T:Infragistics.Documents.Excel.WindowOptions"/>.
            </exception>
            <value>The selected worksheet of the workbook.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WindowOptions.TabBarVisible">
            <summary>
            Gets or sets the value indicating whether the worksheet tab bar is visible.
            </summary>
            <remarks>
            <p class="body">
            If the value is False, the <see cref="P:Infragistics.Documents.Excel.WindowOptions.TabBarWidth"/> will not be used, but it will still 
            be serialized with the workbook.
            </p>
            </remarks>
            <value>The value indicating whether the worksheet tab bar is visible.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WindowOptions.TabBarWidth"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookWindowOptions.FirstVisibleTabIndex"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WindowOptions.TabBarWidth">
            <summary>
            Gets or sets the width of the worksheet tab bar, expressed in 1/1000ths of the application width.
            </summary>
            <remarks>
            <p class="body">
            This value is only used if <see cref="P:Infragistics.Documents.Excel.WindowOptions.TabBarVisible"/> is True. Regardless of whether the tab bar is 
            visible, the width value is always saved with the workbook.
            </p>
            <p class="body">
            A value of 1000 indicates the worksheet tab bar occupies the entire width of the application, while
            a value of 0 indicates the worksheet tab bar has no width.
            </p>
            <p class="body">
            All space not occupied by the worksheet tab bar will be used by the horizontal scroll bar, if it is visible.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value assigned is outside the valid range of 0 and 1000.
            </exception>
            <value>The width of the worksheet tab bar, expressed in 1/1000ths of the application width.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WindowOptions.TabBarVisible"/>
            <seealso cref="P:Infragistics.Documents.Excel.WindowOptions.ScrollBars"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookWindowOptions.FirstVisibleTabIndex"/>
        </member>
        <member name="E:Infragistics.Documents.Excel.WindowOptions.PropertyChanged">
            <summary>
            Occurs after a property value has changed
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ChartDeserializationCache">
            <summary>
            Stores the deserialized style, color style, format scheme,
            and chart data from the theme, chart style, color, and chart
            parts.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookColorPalette">
            <summary>
            Represents the color palette used when the saved file is opened in Microsoft Excel 2003 and earlier versions. 
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.Palette"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorPalette.Contains(System.Drawing.Color)">
            <summary>
            Determines whether the specified color is in the color palette.
            </summary>
            <param name="color">The color to find in the palette.</param>
            <returns>Determines whether an equivalent color is in the palette.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorPalette.GetIndexOfNearestColor(System.Drawing.Color)">
            <summary>
            Gets the index of the closest color in the color palette, which will be seen when the file is opened in Microsoft Excel 2003 
            and older versions.
            </summary>
            <param name="color">The color to match in the palette.</param>
            <returns>A 0-based index into the collection of the closest color available in the palette.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorPalette.Reset">
            <summary>
            Resets the palette back to the default colors for Microsoft Excel.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookColorPalette.IsCustom"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookColorPalette.Count">
            <summary>
            Gets the number of colors in the palette, which is always 56.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookColorPalette.Item(System.Int32)">
            <summary>
            Gets or sets a color in the palette.
            </summary>
            <remarks>
            <p class="body">
            When a color is set in the palette, <see cref="P:Infragistics.Documents.Excel.WorkbookColorPalette.IsCustom"/> will return True. The palette can than be reset with the 
            <see cref="M:Infragistics.Documents.Excel.WorkbookColorPalette.Reset"/> method.
            </p>
            <p class="body">
            Colors added to the palette must be opaque.
            </p>
            </remarks>
            <param name="index">The index of the color to get or set in the palette.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than 55.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value assigned is an empty color, a system color, or is not opaque.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookColorPalette.IsCustom"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorkbookColorPalette.Reset"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookColorPalette.IsCustom">
            <summary>
            Gets the value which indicates whether the palette has been cusotmized.
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.WorkbookColorPalette.Reset"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookOptionsBase">
            <summary>
            Abstract base class for <see cref="T:Infragistics.Documents.Excel.WorkbookLoadOptions"/> or <see cref="T:Infragistics.Documents.Excel.WorkbookSaveOptions"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookOptionsBase.PackageFactory">
            <summary>
            Gets or sets an IPackageFactory which can be used to create or open an IPackage in a stream.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookSaveOptions">
            <summary>
            Contains the options related to saving a workbook to a file or stream.
            </summary>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Save(System.String,Infragistics.Documents.Excel.WorkbookSaveOptions)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Save(System.IO.Stream,Infragistics.Documents.Excel.WorkbookSaveOptions)"/> 
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookSaveOptions.#ctor(Infragistics.Documents.Core.Packaging.IPackageFactory)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.WorkbookSaveOptions"/> instance.
            </summary>
            <param name="packageFactory">An IPackageFactory which can be used to create an IPackage in a stream.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookSaveFilter.GetAllocatedRowCount(Infragistics.Documents.Excel.Worksheet)">
            <summary>
            Used to determine how many rows have been allocated.
            </summary>
            <param name="worksheet">The worksheet whose information is being requested</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookSaveFilter.GetMaxRowCount(Infragistics.Documents.Excel.Worksheet)">
            <summary>
            Used to determine the total number of rows in the range being saved. The start index should not assumed to be 0 so the value returned is not the index after the last item.
            </summary>
            <param name="worksheet">The worksheet whose information is being requested</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookSaveFilter.GetRows(Infragistics.Documents.Excel.Worksheet,System.Boolean)">
            <summary>
            Returns an enumerable that can be used to traverse the rows to save.
            </summary>
            <param name="worksheet">The worksheet whose information is being requested</param>
            <param name="forceRowAllocation">False to only return allocated rows; true to return all rows in the range being save.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DefaultWorkbookSaveFilter.GetMaxRowCount(Infragistics.Documents.Excel.Worksheet)">
            <returns></returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookStyle">
            <summary>
            Represents a complex format which can be applied to a cell's format.
            </summary>
            <remarks>
            <p class="body">
            When a style is applied to a cell by setting its CellFormat.Style property, the cell's format will pick up subsequent
            changes to the format properties set by the style when it was applied. This will continue to happen until those format
            properties are set to other values on the cell format.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Style"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.Styles"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookStyle.Reset">
            <summary>
            Resets the style to its original state.
            </summary>
            <remarks>
            <p class="body">
            If this is a user defined style, the format of the style will be reset so that it provides no formatting properties. 
            If this is a built in style, this format will revert back to its preset state if it has previously been changed.
            </p>
            </remarks>
            <see cref="P:Infragistics.Documents.Excel.WorkbookStyle.IsBuiltIn"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookStyle.IsBuiltIn">
            <summary>
            Gets the value indicating whether the style is a built in style in Microsoft Excel.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookStyle.Name">
            <summary>
            Gets or sets the name of the workbook style.
            </summary>
            <remarks>
            <p class="body">
            The style names must be case-insensitively unique and the names for built in styles cannot be changed.
            </p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            The value is assigned and the style is a built.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value assigned is null or empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value assigned is longer than 255 characters.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value assigned matches the name of another style in the collection.
            </exception>
            <value>The name of the workbook style.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookStyle.IsBuiltIn"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookStyle.StyleFormat">
            <summary>
            Gets the cell format which applies to the workbook style.
            </summary>
            <value>The cell format which applies to the workbook style.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookStyleCollection">
            <summary>
            A collection of workbook styles, or complex formats which can be easily applied to cells in Microsoft Excel.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.WorkbookStyle"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookStyleCollection.AddUserDefinedStyle(System.String)">
            <summary>
            Adds new user defined style to the workbook.
            </summary>
            <param name="name">The name which will identify the style in Microsoft Excel.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name"/> is null or empty.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name"/> is longer than 255 characters.
            </exception>
            <exception cref="T:System.ArgumentException">
            A style already exists with the a name of <paramref name="name"/>. Names are compared case-insensitively.
            </exception>
            <returns>The added user defined style as a <see cref="T:Infragistics.Documents.Excel.WorkbookStyle"/> instance.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookStyleCollection.AddUserDefinedStyle(Infragistics.Documents.Excel.IWorksheetCellFormat,System.String)">
            <summary>
            Adds new user defined style to the workbook.
            </summary>
            <param name="styleFormat">A cell format of the style.</param>
            <param name="name">The name which will identify the style in Microsoft Excel.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name"/> is null or empty.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name"/> is longer than 255 characters.
            </exception>
            <exception cref="T:System.ArgumentException">
            A style already exists with the a name of <paramref name="name"/>. Names are compared case-insensitively.
            </exception>
            <returns>The added user defined style as a <see cref="T:Infragistics.Documents.Excel.WorkbookStyle"/> instance.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookStyleCollection.Clear">
            <summary>
            Clears all styles, other than the Normal style, from the collection.
            </summary>
            <see cref="M:Infragistics.Documents.Excel.WorkbookStyleCollection.AddUserDefinedStyle(System.String)"/>
            <see cref="M:Infragistics.Documents.Excel.WorkbookStyleCollection.AddUserDefinedStyle(Infragistics.Documents.Excel.IWorksheetCellFormat,System.String)"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookStyleCollection.NormalStyle"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookStyleCollection.Contains(Infragistics.Documents.Excel.WorkbookStyle)">
            <summary>
            Determines whether a style is in the collection.
            </summary>
            <param name="style">The style to locate in the collection.</param>
            <returns>True if the style is found; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookStyleCollection.Remove(Infragistics.Documents.Excel.WorkbookStyle)">
            <summary>
            Removes the specified style from the collection.
            </summary>
            <param name="style">The style to remove from the collection.</param>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="style"/> is the Normal style.
            </exception>
            <returns>
            True if the style was successfully removed; False if the style was not 
            in the collection.
            </returns>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookStyleCollection.NormalStyle"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookStyleCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the style at the specified index from the collection.
            </summary>
            <param name="index">The zero-based index of the style in the collection.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or <paramref name="index"/> is greater than or equal to <see cref="P:Infragistics.Documents.Excel.WorkbookStyleCollection.Count"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The style to remove at <paramref name="index"/> is the Normal style.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookStyleCollection.NormalStyle"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookStyleCollection.Reset">
            <summary>
            Resets the collection to its original state by clearing all styles and adding in preset built in styles.
            </summary>
            <see cref="M:Infragistics.Documents.Excel.WorkbookStyleCollection.AddUserDefinedStyle(System.String)"/>
            <see cref="M:Infragistics.Documents.Excel.WorkbookStyleCollection.AddUserDefinedStyle(Infragistics.Documents.Excel.IWorksheetCellFormat,System.String)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookStyleCollection.Count">
            <summary>
            Gets the number of styles in the collection.
            </summary>
            <value>The number of styles in the collection.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookStyleCollection.Item(System.Int32)">
            <summary>
            Gets the style at the specified index.
            </summary>
            <param name="index">The zero-based index of the style to get.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or <paramref name="index"/> is greater than or equal to <see cref="P:Infragistics.Documents.Excel.WorkbookStyleCollection.Count"/>.
            </exception>
            <value>The style at the specified index.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookStyleCollection.Item(System.String)">
            <summary>
            Gets the style with the specified name.
            </summary>
            <param name="name">The name of the style to get.</param>
            <remarks>
            <p class="body">
            Style names are compared case-insensitively.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name"/> is null.
            </exception>
            <value>The style with the specified name or null if no style with that name exists.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookStyleCollection.NormalStyle">
            <summary>
            Gets the default style for the workbook.
            </summary>
            <remarks>
            <p class="body">
            The normal style is the parent style for all cell and differential formats in the workbook, unless another parent style is specified.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Style"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookWindowOptions">
            <summary>
            Represents the window options which are saved with the workbook.
            </summary>
            <remarks>
            <p class="body">
            The properties explicitly defined on this class and not inherited from the base class, 
            <see cref="T:Infragistics.Documents.Excel.WindowOptions"/>, are options that can be saved with a workbook, but 
            not with a custom view.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.WindowOptions"/>
            <seealso cref="T:Infragistics.Documents.Excel.CustomViewWindowOptions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookWindowOptions.Reset">
            <summary>
            Resets the window options to their default settings.
            </summary>
            <remarks>
            <p class="body">
            The defaults used for each setting are the same defaults with which Microsoft Excel creates a blank workbook.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookWindowOptions.BoundsInTwips">
            <summary>
            Gets or sets the bounds of the workbook's MDI child window in twips (1/20th of a point).
            </summary>
            <remarks>
            <p class="note">
            <b>Note:</b> This setting cannot be saved with a <see cref="T:Infragistics.Documents.Excel.CustomView"/> in the Excel file. It can only be saved
            with a <see cref="T:Infragistics.Documents.Excel.Workbook"/>. Therefore, there is no corresponding property in <see cref="T:Infragistics.Documents.Excel.CustomViewWindowOptions"/> and
            a newly created CustomView will not be initialized with the setting from this property.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            The width or height of the value assigned are less than zero.
            </exception>
            <value>The bounds of the workbook's MDI child window in twips (1/20th of a point).</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookWindowOptions.FirstVisibleTabIndex">
            <summary>
            Gets or sets the index of the first visible tab in the worksheet tab bar.
            </summary>
            <remarks>
            <p class="body">
            If the worksheet tab bar is not visible, this value will not be used, but it is still saved with the workbook.
            </p>
            <p class="note">
            <b>Note:</b> This setting cannot be saved with a <see cref="T:Infragistics.Documents.Excel.CustomView"/> in the Excel file. It can only be saved
            with a <see cref="T:Infragistics.Documents.Excel.Workbook"/>. Therefore, there is no corresponding property in <see cref="T:Infragistics.Documents.Excel.CustomViewWindowOptions"/> and
            a newly created CustomView will not be initialized with the setting from this property.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value assigned is less than zero.
            </exception>
            <value>The index of the first visible tab in the worksheet tab bar.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WindowOptions.TabBarVisible"/>
            <seealso cref="P:Infragistics.Documents.Excel.WindowOptions.TabBarWidth"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookWindowOptions.Minimized">
            <summary>
            Gets or sets the value indicating whether the workbook's MDI child window is minimized in Microsoft Excel.
            </summary>
            <remarks>
            <p class="note">
            <b>Note:</b> This setting cannot be saved with a <see cref="T:Infragistics.Documents.Excel.CustomView"/> in the Excel file. It can only be saved
            with a <see cref="T:Infragistics.Documents.Excel.Workbook"/>. Therefore, there is no corresponding property in <see cref="T:Infragistics.Documents.Excel.CustomViewWindowOptions"/> and
            a newly created CustomView will not be initialized with the setting from this property.
            </p>
            </remarks>
            <value>The value indicating whether the workbook's MDI child window is minimized in Microsoft Excel.</value>
            <seealso cref="P:Infragistics.Documents.Excel.CustomViewWindowOptions.Maximized"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetCell">
            <summary>
            Represents a cell in a Microsoft Excel worksheet.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.Equals(System.Object)">
            <summary>
            Determines whether the specified object is another <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/> instance which refers 
            to the same location on the same worksheet as this cell.
            </summary>
            <param name="obj">The instance to check for equality.</param>
            <returns>True if the cells refer to the same location on the same worksheet; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.GetHashCode">
            <summary>
            Gets the hash code of the <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>.
            </summary>
            <returns>The hash code of the <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.ToString">
            <summary>
            Gets the string representation of the address of the cell.
            </summary>
            <returns>The string representation of the address of the cell.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.ApplyFormula(System.String)">
            <summary>
            Applies a formula to the cell.
            </summary>
            <remarks>
            <p class="body">
            <paramref name="value"/> is parsed based on the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> of the <see cref="T:Infragistics.Documents.Excel.Workbook"/>
            to which the cell belongs. If the cell's <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Worksheet"/> has been removed from its parent collection,
            the A1 CellReferenceMode will be used to parse the formula.
            </p>
            <p class="note">
            <B>Note:</B> it is slightly faster to use the <see cref="M:Infragistics.Documents.Excel.WorksheetRow.ApplyCellFormula(System.Int32,System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})"/> method, which does not 
            create a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/> instance internally. However, if a reference to the WorksheetCell instance 
            already exists, using this method is equivalent to using the WorksheetRow.ApplyCellFormula method.
            </p>
            </remarks>
            <param name="value">The formula to parse and apply to the cell.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="value"/> is not a valid formula.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The cell is part of an array formula or data table which is not confined to just the cell.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Formula"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.ApplyCellFormula(System.Int32,System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.ClearComment">
            <summary>
            Removes the comment associated with the cell.
            </summary>
            <remarks>
            <p class="note">
            <B>Note:</B> it is slightly faster to use the <see cref="M:Infragistics.Documents.Excel.WorksheetRow.SetCellComment(System.Int32,Infragistics.Documents.Excel.WorksheetCellComment)"/> method and pass in null as the 
            comment parameter, which does not create a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/> instance internally. However, if a reference to the 
            WorksheetCell instance already exists, using this method is equivalent to using the WorksheetRow.SetCellComment method and
            passing in null as the comment parameter.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Comment"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.HasComment"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.SetCellComment(System.Int32,Infragistics.Documents.Excel.WorksheetCellComment)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.GetBoundsInTwips">
            <summary>
            Gets the bounds of the cell in twips (1/20th of a point).
            </summary>
            <remarks>
            <p class="body">
            The bounds returned by this method are only valid with the current configuration of the worksheet.
            If any rows or columns before the cell are resized, these bounds will no longer reflect the 
            position of the cell.
            </p>
            <p class="note">
            <B>Note:</B> it is slightly faster to use the <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellBoundsInTwips(System.Int32)"/> method, which 
            does not create a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/> instance internally. However, if a reference to the WorksheetCell instance 
            already exists, using this method is equivalent to using the WorksheetRow.GetBoundsInTwips method.
            </p>
            </remarks>
            <returns>The bounds of the cell on its worksheet.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellBoundsInTwips(System.Int32)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.GetBoundsInTwips(Infragistics.Documents.Excel.PositioningOptions)">
            <summary>
            Gets the bounds of the cell in twips (1/20th of a point).
            </summary>
            <remarks>
            <p class="body">
            The bounds returned by this method are only valid with the current configuration of the worksheet.
            If any rows or columns before the cell are resized, these bounds will no longer reflect the 
            position of the cell.
            </p>
            <p class="note">
            <B>Note:</B> it is slightly faster to use the <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellBoundsInTwips(System.Int32,Infragistics.Documents.Excel.PositioningOptions)"/> method, 
            which does not create a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/> instance internally. However, if a reference to the WorksheetCell instance 
            already exists, using this method is equivalent to using the WorksheetRow.GetBoundsInTwips method.
            </p>
            </remarks>
            <param name="options">The options to use when getting the bounds of the cell.</param>
            <returns>The bounds of the cell on its worksheet.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellBoundsInTwips(System.Int32,Infragistics.Documents.Excel.PositioningOptions)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.GetCellAddressString(Infragistics.Documents.Excel.WorksheetRow,System.Int32,Infragistics.Documents.Excel.CellReferenceMode,System.Boolean)">
            <summary>
            Gets the string representation of the address of the cell.
            </summary>
            <param name="worksheetRow">The WorksheetRow of the cell.</param>
            <param name="columnIndex">The index of the column of the cell.</param>
            <param name="cellReferenceMode">The mode used to generate cell references.</param>
            <param name="includeWorksheetName">The value indicating whether to include the worksheet name in the cell address.</param>
            <returns>The string representation of the address of the cell.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.GetCellAddressString(Infragistics.Documents.Excel.WorksheetRow,System.Int32,Infragistics.Documents.Excel.CellReferenceMode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets the string representation of the address of the cell.
            </summary>
            <param name="worksheetRow">The WorksheetRow of the cell.</param>
            <param name="columnIndex">The index of the column of the cell.</param>
            <param name="cellReferenceMode">The mode used to generate cell references.</param>
            <param name="includeWorksheetName">The value indicating whether to include the worksheet name in the cell address.</param>
            <param name="useRelativeColumn">The value indicating whether to use a relative column address.</param>
            <param name="useRelativeRow">The value indicating whether to use a relative row address.</param>
            <returns>The string representation of the address of the cell.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.GetHyperlink">
            <summary>
            Gets the effective hyperlink on the cell.
            </summary>
            <remarks>
            <p class="body">
            If multiple hyperlinks are applied to the cell, the last one in the <see cref="P:Infragistics.Documents.Excel.Worksheet.Hyperlinks"/> 
            collection will be used.
            </p>
            <p class="body">
            If the cell has one or more hyperlinks in the <see cref="P:Infragistics.Documents.Excel.Worksheet.Hyperlinks"/> collection as well 
            as a formula containing a HYPERLINK function, the last hyperlink from the collection will be used.
            </p>
            <p class="body">
            If the cell has a hyperlink due to the HYPERLINK function being used in a formula, the returned value will be sealed.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Hyperlinks"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetHyperlink"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.IsSealed"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.GetText">
            <summary>
            Gets the text displayed in the cell.
            </summary>
            <remarks>
            <p class="body">
            The display text is based on the value of the cell and the format string applied to the cell.
            </p>
            <p class="note">
            <B>Note:</B> it is slightly faster to use the <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32)"/> method, which does not 
            create a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/> instance internally. However, if a reference to the WorksheetCell instance 
            already exists, using this property is equivalent to using the WorksheetRow.GetText method.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Value"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FormatString"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.GetText(Infragistics.Documents.Excel.TextFormatMode)">
            <summary>
            Gets the text of the cell.
            </summary>
            <param name="textFormatMode">The format mode to use when getting the cell text.</param>
            <remarks>
            <p class="body">
            The text is based on the value of the cell and the format string applied to the cell.
            </p>
            <p class="note">
            <B>Note:</B> it is slightly faster to use the <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32,Infragistics.Documents.Excel.TextFormatMode)"/> method, which does not 
            create a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/> instance internally. However, if a reference to the WorksheetCell instance 
            already exists, using this property is equivalent to using the WorksheetRow.GetText method.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="textFormatMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.TextFormatMode"/> enumeration.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Value"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FormatString"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.GetResolvedCellFormat">
            <summary>
            Gets the resolved cell formatting for this cell.
            </summary>
            <remarks>
            <p class="body">
            If any cell format properties are the default values on the cell, the values from the owning row's cell format will be used.
            If those are default, then the values from the owning column's cell format will be used. Otherwise, the workbook default values
            will be used.
            </p>
            <p class="note">
            <B>Note:</B> it is slightly faster to use the <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetResolvedCellFormat(System.Int32)"/> method, which does not 
            create a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/> instance internally. However, if a reference to the WorksheetCell instance 
            already exists, using this method is equivalent to using the WorksheetRow.GetResolvedCellFormat method.
            </p>
            </remarks>
            <returns>A format object describing the actual formatting that will be used when displayed this cell in Microsoft Excel.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.CellFormat"/>
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.CellFormat"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetResolvedCellFormat(System.Int32)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.IsCellTypeSupported(System.Type)">
            <summary>
            Returns True if a particular type of value can be exported to excel.
            </summary>
            <param name="cellType">The type to test.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="cellType"/> is null.
            </exception>
            <returns>True if the type is supported as a cell value, False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.ToString(Infragistics.Documents.Excel.CellReferenceMode,System.Boolean)">
            <summary>
            Gets the string representation of the address of the cell.
            </summary>
            <param name="cellReferenceMode">The mode used to generate cell references.</param>
            <param name="includeWorksheetName">The value indicating whether to include the worksheet name in the cell address.</param>
            <returns>The string representation of the address of the cell.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.ToString(Infragistics.Documents.Excel.CellReferenceMode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets the string representation of the address of the cell.
            </summary>
            <param name="cellReferenceMode">The mode used to generate cell references.</param>
            <param name="includeWorksheetName">The value indicating whether to include the worksheet name in the cell address.</param>
            <param name="useRelativeColumn">The value indicating whether to use a relative column address.</param>
            <param name="useRelativeRow">The value indicating whether to use a relative row address.</param>
            <returns>The string representation of the address of the cell.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.ValidateValue">
            <summary>
            Returns a boolean indicating if the value of the cell is valid considering the associated <see cref="P:Infragistics.Documents.Excel.WorksheetCell.DataValidationRule"/>
            </summary>
            <returns>Returns false if the cell has an associated <see cref="P:Infragistics.Documents.Excel.WorksheetCell.DataValidationRule"/> and the current <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Value"/> does not pass the validation defined by that rule; otherwise true is returned.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Value"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.DataValidationRule"/>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DataValidationRules"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.AssociatedDataTable">
            <summary>
            Gets the data table to which the cell belongs.
            </summary>
            <remarks>
            <p class="body">
            The cells in the left-most column and top-most row of the data table will return null for the associated data table.
            </p>
            <p class="body">
            If a data table is associated with the cell, getting the <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Value"/> will return the calculated value for the cell.
            </p>
            <p class="note">
            <B>Note:</B> it is slightly faster to use the <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedDataTable(System.Int32)"/> method, which does not 
            create a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/> instance internally. However, if a reference to the WorksheetCell instance 
            already exists, using this property is equivalent to using the WorksheetRow.GetCellAssociatedDataTable method.
            </p>
            </remarks>
            <value>The data table to which the cell belongs or null if the cell does not belong to a data table.</value>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DataTables"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetDataTableCollection.Add(Infragistics.Documents.Excel.WorksheetRegion,Infragistics.Documents.Excel.WorksheetCell,Infragistics.Documents.Excel.WorksheetCell)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedDataTable(System.Int32)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.AssociatedMergedCellsRegion">
            <summary>
            Gets the merged cells region which contains the cell, or null if the cell is not merged.
            </summary>
            <remarks>
            <p class="note">
            <B>Note:</B> it is slightly faster to use the <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedMergedCellsRegion(System.Int32)"/> method, which does not 
            create a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/> instance internally. However, if a reference to the WorksheetCell instance 
            already exists, using this property is equivalent to using the WorksheetRow.GetCellAssociatedMergedCellsRegion method.
            </p>
            </remarks>
            <value>The merged cells region which contains the cell, or null if the cell is not merged.</value>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedMergedCellsRegion(System.Int32)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.AssociatedTable">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> to which this cell belongs.
            </summary>
            <remarks>
            <p class="body">
            A cell belongs to a table if it exists in any area of the table. It can be a header cell, total cell, or a cell in the data area.
            </p>
            <p class="note">
            <B>Note:</B> it is slightly faster to use the <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedTable(System.Int32)"/> method, which does not 
            create a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/> instance internally. However, if a reference to the WorksheetCell instance 
            already exists, using this property is equivalent to using the WorksheetRow.GetCellAssociatedTable method.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTable"/>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Tables"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.CellFormat">
            <summary>
            Gets the cell formatting for this cell.
            </summary>
            <remarks>
            <p class="body">
            Use this property to set cell formatting specific to the cell. If you will be applying the format to numerous cells, 
            see the <see cref="M:Infragistics.Documents.Excel.Workbook.CreateNewWorksheetCellFormat"/> method for performance considerations.
            </p>
            <p class="body">
            If this cell belongs to a merged cell region, getting the CellFormat will get the CellFormat of the associated merged 
            cell region.
            </p>
            <p class="note">
            <B>Note:</B> it is slightly faster to use the <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellFormat(System.Int32)"/> method, which does not 
            create a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/> instance internally. However, if a reference to the WorksheetCell instance 
            already exists, using this property is equivalent to using the WorksheetRow.GetCellFormat method.
            </p>
            </remarks>
            <value>The cell formatting for this cell.</value>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetResolvedCellFormat"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellFormat(System.Int32)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.HasCellFormat">
            <summary>
            Gets the value which indicates whether the cell's format has been initialized yet.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.CellFormat"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.ColumnIndex">
            <summary>
            Gets the column index of the cell.
            </summary>
            <value>The column index of the cell.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.Comment">
            <summary>
            Gets or sets the comment applied to the cell.
            </summary>
            <remarks>
            <p class="note">
            <B>Note:</B> it is slightly faster to use the <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellComment(System.Int32)"/> or 
            <see cref="M:Infragistics.Documents.Excel.WorksheetRow.SetCellComment(System.Int32,Infragistics.Documents.Excel.WorksheetCellComment)"/> methods, which do not create <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/> instances internally. However, 
            if a reference to the WorksheetCell instance already exists, using this property is equivalent to using the 
            WorksheetRow.GetCellComment or WorksheetRow.SetCellComment methods.
            </p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            The value applied only has only one anchor cell set. It should have both or neither anchor cells set.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value has its <see cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerCell"/> and <see cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerCell"/> 
            anchors set but they are from different worksheets.
            </exception>
            <value>The comment applied to the cell.</value>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellComment(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.SetCellComment(System.Int32,Infragistics.Documents.Excel.WorksheetCellComment)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.DataValidationRule">
            <summary>
            Gets or sets the data validation rule for the <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>.
            </summary>
            <exception cref="T:System.ArgumentException">
            Occurs when the value specified is already applied to cells in another worksheet.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the value specified is invalid based on its rule type's requirements.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DataValidationRules"/>
            <seealso cref="T:Infragistics.Documents.Excel.AnyValueDataValidationRule"/>
            <seealso cref="T:Infragistics.Documents.Excel.ListDataValidationRule"/>
            <seealso cref="T:Infragistics.Documents.Excel.CustomDataValidationRule"/>
            <seealso cref="T:Infragistics.Documents.Excel.OneConstraintDataValidationRule"/>
            <seealso cref="T:Infragistics.Documents.Excel.TwoConstraintDataValidationRule"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.HasComment">
            <summary>
            Get the value indicating whether the cell has an associated comment.
            </summary>
            <remarks>
            <p class="note">
            <B>Note:</B> it is slightly faster to use the <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellComment(System.Int32)"/> method and check for a non null 
            return value, which does not create a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/> instance internally. However, if a reference to the 
            WorksheetCell instance already exists, using this property is equivalent to using the WorksheetRow.GetCellComment method 
            and checking for a non null return value.
            </p>
            </remarks>
            <value>True if the cell has an associated comment; False otherwise.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Comment"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellComment(System.Int32)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.Formula">
            <summary>
            Gets the formula which has been applied to the cell.
            </summary>
            <remarks>
            <p class="body">
            If a formula has been applied to the cell, getting the <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Value"/> will return the calculated value of the formula.
            </p>
            <p class="note">
            <B>Note:</B> it is slightly faster to use the <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellFormula(System.Int32)"/> method, which does not 
            create a <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/> instance internally. However, if a reference to the WorksheetCell instance 
            already exists, using this property is equivalent to using the WorksheetRow.GetCellFormula method.
            </p>
            </remarks>
            <value>The formula which has been applied to the cell or null if no formula has been applied.</value>
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetCell)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion[])"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.ApplyFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyArrayFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellFormula(System.Int32)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.RowIndex">
            <summary>
            Gets the row index of the cell.
            </summary>
            <value>The row index of the cell.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.Value">
            <summary>
            Gets or sets the value of the cell.
            </summary>
            <remarks>
            <p class="body">
            If this cell belongs to a merged cell region and it is the top-left cell of the region, getting and setting the value 
            will get and set the value of the associated merged cell region. Getting the value of other cells in a merged cell region
            will always return null. Setting the value of other cells in a merged cell region will have no effect.
            </p>
            <p class="body">
            If a formula has been applied to the cell or a data table is associated with the cell, getting the Value will return the 
            calculated value of the cell.
            </p>
            <p class="body">
            The types supported for the value are:
            <BR/>
            <ul>
            <li class="taskitem"><span class="taskitemtext">System.Byte</span></li>
            <li class="taskitem"><span class="taskitemtext">System.SByte</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Int16</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Int64</span></li>
            <li class="taskitem"><span class="taskitemtext">System.UInt16</span></li>
            <li class="taskitem"><span class="taskitemtext">System.UInt64</span></li>
            <li class="taskitem"><span class="taskitemtext">System.UInt32</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Int32</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Single</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Double</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Boolean</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Char</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Enum</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Decimal</span></li>
            <li class="taskitem"><span class="taskitemtext">System.DateTime</span></li>
            <li class="taskitem"><span class="taskitemtext">System.String</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Text.StringBuilder</span></li>
            <li class="taskitem"><span class="taskitemtext">System.DBNull</span></li>
            <li class="taskitem"><span class="taskitemtext"><see cref="T:Infragistics.Documents.Excel.ErrorValue"/></span></li>
            <li class="taskitem"><span class="taskitemtext"><see cref="T:Infragistics.Documents.Excel.FormattedString"/></span></li>
            </ul>
            </p>
            <p class="note">
            <B>Note:</B> it is slightly faster to use the <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellValue(System.Int32)"/> or <see cref="M:Infragistics.Documents.Excel.WorksheetRow.SetCellValue(System.Int32,System.Object)"/> 
            methods, which do not create <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/> instances internally. However, if a reference to the WorksheetCell instance 
            already exists, using this property is equivalent to using the WorksheetRow.GetCellComment or WorksheetRow.SetCellComment methods.
            </p>
            </remarks>
            <exception cref="T:System.NotSupportedException">
            The assigned value's type is not supported and can't be exported to Excel.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value assigned is a <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Formula"/>. Instead, <see cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetCell)"/> 
            should be called on the Formula, passing in the cell.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value assigned is a <see cref="T:Infragistics.Documents.Excel.WorksheetDataTable"/>. Instead, the <see cref="P:Infragistics.Documents.Excel.WorksheetDataTable.CellsInTable"/>
            should be set to a region containing the cell.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value assigned is a FormattedString which is the value another cell or merged cell region.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value is assigned and this cell is part of an <see cref="T:Infragistics.Documents.Excel.ArrayFormula"/> or WorksheetDataTable.
            </exception>
            <value>The value of the cell.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.AssociatedMergedCellsRegion"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.IsCellTypeSupported(System.Type)"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegion.Value"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Formula"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.AssociatedDataTable"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellValue(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.SetCellValue(System.Int32,System.Object)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.Worksheet">
            <summary>
            Gets the worksheet to which the cell belongs.
            </summary>
            <value>The worksheet to which the cell belongs.</value>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.op_Equality(Infragistics.Documents.Excel.WorksheetCell,Infragistics.Documents.Excel.WorksheetCell)">
            <summary>
            Determines whether two cell instances are equivalent.
            </summary>
            <returns>True if the cells refer to the same location on the same worksheet; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.op_Inequality(Infragistics.Documents.Excel.WorksheetCell,Infragistics.Documents.Excel.WorksheetCell)">
            <summary>
            Determines whether two cell instances are not equivalent.
            </summary>
            <returns>False if the cells refer to the same location on the same worksheet; True otherwise.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetCellComment">
            <summary>
            Represents a comment for a cell.
            </summary>
            <remarks>
            <p class="body">
            Comments cannot be added to a worksheet's or a shape group's shapes collection. Instead, they must be set directly on the cell 
            with the cell's <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Comment"/> property.
            </p>
            <p class="body">
            It is not required that the anchors of this shape be initialized before setting it as the comment of a cell. If the 
            <see cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerCell"/> and <see cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerCell"/> anchors are both null when
            the comment is applied to a cell, default anchor cells will be used based on the cell.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCellComment.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Documents.Excel.WorksheetCellComment"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCellComment.Sheet">
            <summary>
            Gets the worksheet on which the shape resides.
            </summary>
            <value>The worksheet on which the shape resides.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCellComment.Author">
            <summary>
            Gets or sets the author of the comment.
            </summary>
            <remarks>
            <p class="body">
            This information is not displayed in the Microsoft Excel UI and is for informational purposes only.
            </p>
            </remarks>
            <value>The author of the comment.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCellComment.Cell">
            <summary>
            Gets the cell to which the comment is applied.
            </summary>
            <value>The cell to which the comment is applied.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Comment"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCellComment.Text">
            <summary>
            Gets or sets the formatted text of the comment.
            </summary>
            <remarks>
            <p class="body">
            Getting the value of this property will always return a non-null value. If null is set on the property, it will subsequently 
            return an empty formatted string.
            </p>
            </remarks>
            <value>The formatted text of the comment.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetCellCollection">
            <summary>
            A collection of cells in a row.
            </summary>
            <remarks>
            <p class="body">
            Cells in this collection are lazily created (they are only created and added to the collection when they are accessed).
            If this collection is enumerated, it only enumerates the cells which were already accessed.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetRow.Cells"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCellCollection.MaxCount">
            <summary>
            Gets the maximum number of items allowed in this collection.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCellCollection.Item(System.Int32)">
            <summary>
            Gets the cell at the specified column index in the owning row.
            </summary>
            <remarks>
            <p class="note">
            <b>Note:</b> Iterating the collection will not create all cells. It will only iterate the cells which have already 
            been used.  To create and iterate all cells in the worksheet use a For loop, iterating from 0 to one less than 
            the maximum column count, and pass in each index to the collection's indexer.
            </p>
            </remarks>
            <param name="index">The zero-based column index of the cell to get.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <exception cref="T:System.InvalidOperationException">If the row was removed from the worksheet.</exception>
            <paramref name="index"/> is greater than or equal to <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelColumnCount"/>
            or <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007ColumnCount"/>, depending on the <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/>.
            </exception>
            <value>The cell at the specified column index in the owning row.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetColumn">
            <summary>
            Represents a column in a Microsoft Excel worksheet.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetColumn.Index">
            <summary>
            Gets the 0-based index of the column in the worksheet.
            </summary>
            <value>The 0-based index of the column in the worksheet.</value>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetColumn.AutoFitWidth">
            <summary>
            Sets the <see cref="P:Infragistics.Documents.Excel.WorksheetColumn.Width"/> to the extent required to display the contents of this column.
            </summary>
            <exception cref="T:System.InvalidOperationException">The column is not associated with a <see cref="T:Infragistics.Documents.Excel.Worksheet"/> such as when the column has been deleted or the Worksheet is not associated with a <see cref="T:Infragistics.Documents.Excel.Workbook"/> such as when the Worksheet has been deleted.</exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetColumn.AutoFitWidth(System.Int32,System.Int32)">
            <summary>
            Sets the width to the extent required to display all of the contents for the specified range of rows.
            </summary>
            <param name="startRowIndex">A 0-based index of the first row whose contents are to be calculated</param>
            <param name="endRowIndex">A 0-based index of the last row whose contents are to be calculated</param>
            <exception cref="T:System.InvalidOperationException">The column is not associated with a <see cref="T:Infragistics.Documents.Excel.Worksheet"/> such as when the column has been deleted or the Worksheet is not associated with a <see cref="T:Infragistics.Documents.Excel.Workbook"/> such as when the Worksheet has been deleted.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="startRowIndex"/> must be greater than or equal to 0, less than or equal to the <paramref name="endRowIndex"/> and less than or equal to the Count of the Rows in the Worksheet. Similarly the <paramref name="endRowIndex"/> must be greater than or equal to the <paramref name="startRowIndex"/> and less than the <see cref="P:Infragistics.Documents.Excel.WorksheetRowCollection.MaxCount"/> of the Worksheet's <see cref="P:Infragistics.Documents.Excel.Worksheet.Rows"/> collection which depends upon the <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/></exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetColumn.CalculateAutoFitWidth">
            <summary>
            Returns the width required for the column to display all of its contents.
            </summary>
            <returns>The width needed for the column to display all of its contents. The value is the same units as used for the <see cref="P:Infragistics.Documents.Excel.WorksheetColumn.Width"/> property.</returns>
            <exception cref="T:System.InvalidOperationException">The column is not associated with a <see cref="T:Infragistics.Documents.Excel.Worksheet"/> such as when the column has been deleted or the Worksheet is not associated with a <see cref="T:Infragistics.Documents.Excel.Workbook"/> such as when the Worksheet has been deleted.</exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetColumn.CalculateAutoFitWidth(System.Int32,System.Int32)">
            <summary>
            Returns the width required for the column to display all of the contents for the specified range of rows.
            </summary>
            <param name="startRowIndex">A 0-based index of the first row whose contents are to be calculated</param>
            <param name="endRowIndex">A 0-based index of the last row whose contents are to be calculated</param>
            <returns>The width needed for the column to display the contents of the rows in the specified range. The value is the same units as used for the <see cref="P:Infragistics.Documents.Excel.WorksheetColumn.Width"/> property.</returns>
            <exception cref="T:System.InvalidOperationException">The column is not associated with a <see cref="T:Infragistics.Documents.Excel.Worksheet"/> such as when the column has been deleted or the Worksheet is not associated with a <see cref="T:Infragistics.Documents.Excel.Workbook"/> such as when the Worksheet has been deleted.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="startRowIndex"/> must be greater than or equal to 0, less than or equal to the <paramref name="endRowIndex"/> and less than or equal to the Count of the Rows in the Worksheet. Similarly the <paramref name="endRowIndex"/> must be greater than or equal to the <paramref name="startRowIndex"/> and less than the <see cref="P:Infragistics.Documents.Excel.WorksheetRowCollection.MaxCount"/> of the Worksheet's <see cref="P:Infragistics.Documents.Excel.Worksheet.Rows"/> collection which depends upon the <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/></exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetColumn.GetWidth(Infragistics.Documents.Excel.WorksheetColumnWidthUnit)">
            <summary>
            Gets the column width in the specified units, or NaN if the column has the default width.
            </summary>
            <remarks>
            <p class="body">
            If <paramref name="units"/> is Character256th, the value returned will be the same as the value of the <see cref="P:Infragistics.Documents.Excel.WorksheetColumn.Width"/> 
            property, with one exception: if the column has the default width, this method will return NaN and Width will return -1.
            </p>
            </remarks>
            <param name="units">The units in which the width should be returned.</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="units"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorksheetColumnWidthUnit"/> enumeration.
            </exception>
            <returns>The column width in the specified units, or NaN if the column has the default width.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetColumn.Width"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetColumn.SetWidth(System.Double,Infragistics.Documents.Excel.WorksheetColumnWidthUnit)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.GetDefaultColumnWidth(Infragistics.Documents.Excel.WorksheetColumnWidthUnit)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetColumn.SetWidth(System.Double,Infragistics.Documents.Excel.WorksheetColumnWidthUnit)">
            <summary>
            Sets the column width in the specified units.
            </summary>
            <param name="value">The width to set on the column, expressed in the specified <paramref name="units"/>.</param>
            <param name="units">The units in which the <paramref name="value"/> is expressed.</param>
            <remarks>
            <p class="body">
            Setting a value of NaN will reset the column width so that the column uses the default column width of the worksheet.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            <paramref name="value"/> is infinity.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="units"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.WorksheetColumnWidthUnit"/> enumeration.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the column was removed from the worksheet.</exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetColumn.Width"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetColumn.GetWidth(Infragistics.Documents.Excel.WorksheetColumnWidthUnit)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.SetDefaultColumnWidth(System.Double,Infragistics.Documents.Excel.WorksheetColumnWidthUnit)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetColumn.Width">
            <summary>
            Gets or sets the column width including padding, in 256ths of the '0' digit character width in the workbook's default font.
            </summary>
            <remarks>
            <p class="body">
            If the width of the column is less than zero, the <see cref="P:Infragistics.Documents.Excel.Worksheet.DefaultColumnWidth"/> of the
            owning worksheet will be used as the column's width.
            </p>
            <p class="body">
            The value assigned must be between -1 and 65535. Invalid values will be automatically adjusted to valid values.
            </p>
            <p class="body">
            Setting or getting this property is equivalent to calling <see cref="M:Infragistics.Documents.Excel.WorksheetColumn.SetWidth(System.Double,Infragistics.Documents.Excel.WorksheetColumnWidthUnit)"/> or <see cref="M:Infragistics.Documents.Excel.WorksheetColumn.GetWidth(Infragistics.Documents.Excel.WorksheetColumnWidthUnit)"/> using the 
            <see cref="T:Infragistics.Documents.Excel.WorksheetColumnWidthUnit"/> value of Character256th.
            </p>
            </remarks>
            <value>
            The column width including padding, in 256ths of the '0' digit character width in the workbook's default font.
            </value>
            <exception cref="T:System.InvalidOperationException">From the setter if the column was removed from the worksheet.</exception>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetColumn.GetWidth(Infragistics.Documents.Excel.WorksheetColumnWidthUnit)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetColumn.SetWidth(System.Double,Infragistics.Documents.Excel.WorksheetColumnWidthUnit)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.CharacterWidth256thsToPixels(System.Double)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.PixelsToCharacterWidth256ths(System.Double)"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetColumnCollection">
            <summary>
            A collection of columns in a worksheet.
            </summary>
            <remarks>
            <p class="body">
            Columns in this collection are lazily created (they are only created and added to the collection when they are accessed).
            Therefore, if this collection is enumerated, it only enumerates the columns which were already accessed.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetColumn"/>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Columns"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetColumnCollection.MaxCount">
            <summary>
            Gets the maximum number of items allowed in this collection.
            </summary>  
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetColumnCollection.Insert(System.Int32,System.Int32)">
            <summary>
            Inserts one or more columns into the collection
            </summary>
            <param name="index">the insertion point</param>
            <param name="count">The number of columns to insert</param>
            <exception cref="T:System.InvalidOperationException">If the operation is not allowed, e.g. if it would cause data to be shifted off the worksheet.</exception>
            <exception cref="T:System.IndexOutOfRangeException">If index is negative.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If count is less than 1.</exception>
            <remarks>
            <para class="note"><b>Note:</b> An equal number of columns will be removed (i.e. bumped) off the end of the collection.</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetColumnCollection.Remove(System.Int32,System.Int32)">
            <summary>
            Removes one or more columns from the collection
            </summary>
            <param name="index">the index of the first column to remove point</param>
            <param name="count">The number of columns to remove</param>
            <exception cref="T:System.InvalidOperationException">If the operation is not allowed, e.g. if it the range intersects with a protected region.</exception>
            <exception cref="T:System.IndexOutOfRangeException">If index is negative.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If count is less than 1.</exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetColumnCollection.Item(System.Int32)">
            <summary>
            Gets the column at the specified index.
            </summary>
            <remarks>
            <p class="note">
            <b>Note:</b> Iterating the collection will not create all columns. It will only iterate the columns which have already 
            been used.  To create and iterate all columns in the worksheet use a For loop, iterating from 0 to one less than 
            the maximum column count, and pass in each index to the collection's indexer.
            </p>
            </remarks>
            <param name="index">The zero-based index of the column to get.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="index"/> is greater than or equal to <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelColumnCount"/>
            or <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007ColumnCount"/>, depending on the <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/>.
            </exception>
            <value>The column at the specified index.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetDataTable">
            <summary>
            Represents a data table for a range of cells.
            </summary>
            <remarks>
            <p class="body">
            Data tables are a way to show the results of one or more formulas by trying many different values in the variables
            of the formulas at the same time, and showing the different results in a table.  An excellent example of a data table
            application would be for a multiplication table.  A multiplication table shows results for the formula =X*Y.  However, 
            it shows many different results for the formula, where each result is determined by using different values for X and Y.
            These results are displayed in a table, where each cell in the table shows the formula's result for specific values of 
            X and Y, which are labeled in the row and column headers, respectively.  Therefore, each cell in a row will use the 
            same X value, and each cell in a column will use the same Y value.  
            </p>
            <p class="body">
            The multiplication table is known as a two-variable data table. Two-variable data tables are characterized by having a 
            single formula and values in the row and column headers of the table.  The formula is entered into the top-left cell of 
            the data table and usually references at least two cells outside the data table, known as the column-input and row-input 
            cells.  When the formula is evaluated for a specific cell in the data table, the reference to the column-input cell in the
            formula is replaced with the value in the cell's row header (this may seem backwards, but the values in the row headers 
            run down the left column of the data table, which is why they are used for the column-input cell), and the reference to 
            the row-input cell is replaced with the value in the cell's column header.
            </p>
            <p class="body">
            Another type of data table is the one-variable data table.  A one-variable data table can be a column-oriented or 
            a row-oriented data table.  A column-oriented data table has data in the cells of the left column and formulas in the 
            cells of the top row (anything in the top-left cell of the data table is ignored in this type of data table).  Usually, 
            the formulas in the top row all reference the same cell outside the data table, known as the column-input cell.  When a 
            cell in the table is evaluated, the formula in its column header is used, with the reference to the column-input cell
            replaced by the value in cell's row header.
            </p>
            <p class="body">
            A row-oriented one-variable data table is formed like a column-oriented data table, except the values run along the top 
            row, the formulas run down the left column, and the cell referenced by all formulas is known as the row-input cell.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDataTable.CellsInTable">
            <summary>
            Gets or sets the region of cells in the data table.
            </summary>
            <remarks>
            <p class="body">
            Any interior cells (cells not in the left-most column or top row) in this region will have their values removed 
            when this is set. If any interior cells have array formulas with a region that crosses outside the data
            table, an error will occur. However, if the array formula's region is confined to cells in the 
            interior of the data table, the array formula will have <see cref="M:Infragistics.Documents.Excel.ArrayFormula.ClearCellRange"/>
            called on it, which will remove it from all its cells. Similarly, if an existing data table's interior cells
            contain some of the interior cells in this region as well as some external cells, an error will occur.
            However, if all interior cells of the existing data table are contained in the interior cells of the new
            region specified here, the existing data table will be removed from the worksheet.
            </p>
            <p class="body">
            After the cells in the table have been specified, the interior cells' values cannot be modified.
            </p>
            <p class="note">
            <B>Note:</B> The <see cref="P:Infragistics.Documents.Excel.WorksheetDataTable.RowInputCell"/> and <see cref="P:Infragistics.Documents.Excel.WorksheetDataTable.ColumnInputCell"/> cannot be with the region.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            The value assigned is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value is assigned after the data table has been removed from the worksheet.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value assigned is a region from a worksheet other than the data table's worksheet.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The region specified contains the RowInputCell or the ColumnInputCell.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            One or more of the interior cells of the value assigned (all cells except the left-most column and top row) is an 
            interior cell of another data table or is a cell in an array formula, and the entire range of that other 
            entity extends outside the interior cells of the value assigned.
            </exception>
            <exception cref="T:System.ArgumentException">
            The assigned value is only one row tall or one column wide. The cells in the table must be at least two rows by two columns.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The assigned value contains merged regions which are not confined to the left-most column or top row. No merged regions
            can exist in the interior cells of the data table and no merged regions can exist in the left-most column or top row
            and extend outside the data table region.
            </exception>
            <value>The region of cells in the data table.</value>
            <seealso cref="T:Infragistics.Documents.Excel.ArrayFormula"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDataTable.ColumnInputCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDataTable.RowInputCell"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDataTable.ColumnInputCell">
            <summary>
            Gets or sets the cell used as the column-input cell in the data table.
            </summary>
            <remarks>
            <p class="body">
            This represents the cell reference in all formulas of the data table to replace with row header values.
            If this and the <see cref="P:Infragistics.Documents.Excel.WorksheetDataTable.RowInputCell"/> are non-null, the data table is a two-variable data table.
            Otherwise, if only one is non-null, this is a one-variable data table.
            </p>
            <p class="note">
            <B>Note:</B> The RowInputCell and ColumnInputCell cannot be within the <see cref="P:Infragistics.Documents.Excel.WorksheetDataTable.CellsInTable"/> region.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            The assigned value does not belong to the same worksheet as the data table.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value is assigned after the data table has been removed from the worksheet.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value assigned is within the CellsInTable region.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The assigned value is null and RowInputCell is null. At least one input cell must be non-null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The assigned value is the same as RowInputCell. The input cells cannot be the same cell.
            </exception>
            <value>The cell used as the column-input cell in the data table.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDataTable.CellsInTable"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDataTable.RowInputCell"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDataTable.RowInputCell">
            <summary>
            Gets or sets the cell used as the row-input cell in the data table.
            </summary>
            <remarks>
            <p class="body">
            This represents the cell reference in all formulas of the data table to replace with column header values.
            If this and the <see cref="P:Infragistics.Documents.Excel.WorksheetDataTable.ColumnInputCell"/> are non-null, the data table is a two-variable data table.
            Otherwise, if only one is non-null, this is a one-variable data table.
            </p>
            <p class="note">
            <B>Note:</B> The RowInputCell and ColumnInputCell cannot be within the <see cref="P:Infragistics.Documents.Excel.WorksheetDataTable.CellsInTable"/> region.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            The assigned value does not belong to the same worksheet as the data table.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value is assigned after the data table has been removed from the worksheet.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value assigned is within the CellsInTable region.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The assigned value is null and ColumnInputCell is null. At least one input cell must be non-null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The assigned value is the same as ColumnInputCell. The input cells cannot be the same cell.
            </exception>
            <value>The cell used as the row-input cell in the data table.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDataTable.CellsInTable"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDataTable.ColumnInputCell"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDataTable.Worksheet">
            <summary>
            Gets the worksheet on which this data table resides.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetDataTableCollection">
            <summary>
            A collection of <see cref="T:Infragistics.Documents.Excel.WorksheetDataTable"/> instances on a worksheet.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetDataTableCollection.Add(Infragistics.Documents.Excel.WorksheetRegion,Infragistics.Documents.Excel.WorksheetCell,Infragistics.Documents.Excel.WorksheetCell)">
            <summary>
            Creates a new data table and adds it to the collection.
            </summary>
            <remarks>
            <p class="body">
            The input cells specified must be different cell references and at least one must be non-null.
            See the <see cref="T:Infragistics.Documents.Excel.WorksheetDataTable"/> overview for more information on data tables.
            </p>
            </remarks>
            <param name="cellsInTable">The region of cells in the data table.</param>
            <param name="columnInputCell">The cell used as the column-input cell in the data table.</param>
            <param name="rowInputCell">The cell used as the row-input cell in the data table.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="cellsInTable"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="cellsInTable"/> is a region which does not belongs to the worksheet which owns this collection.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="columnInputCell"/> is not null but does not belong to the worksheet which owns this collection.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="rowInputCell"/> is not null but does not belong to the worksheet which owns this collection.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Both <paramref name="columnInputCell"/> and <paramref name="rowInputCell"/> are null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="columnInputCell"/> and <paramref name="rowInputCell"/> are the same cell.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="columnInputCell"/> or <paramref name="rowInputCell"/> are contained in the 
            <paramref name="cellsInTable"/> region.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            One or more of the interior cells of the <paramref name="cellsInTable"/> region (all cells except the left-most column 
            and top row) is an interior cell of another data table or is a cell in an array formula, and the entire 
            range of that other entity extends outside the interior cells of <paramref name="cellsInTable"/>.
            </exception>
            <returns>The newly created data table.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetDataTableCollection.Clear">
            <summary>
            Clears all data tables from the collection.
            </summary>
            <remarks>
            <p class="body">
            Once a data table is removed from the collection, it can no longer be used.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetDataTableCollection.Remove(Infragistics.Documents.Excel.WorksheetDataTable)">
            <summary>
            Removes the specified data table from the collection.
            </summary>
            <remarks>
            <p class="body">
            Once a data table is removed from the collection, it can no longer be used.
            </p>
            </remarks>
            <param name="dataTable">The data table to remove from the collection.</param>
            <returns>
            True if the dataTable was successfully removed; False if the dataTable was not in the collection.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetDataTableCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the data table at the specified index from the collection.
            </summary>
            <remarks>
            <p class="body">
            Once a data table is removed from the collection, it can no longer be used.
            </p>
            </remarks>
            <param name="index">The zero-based index of the data table to remove from the collection.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDataTableCollection.Count">
            <summary>
            Gets the number of data tables in the collection.
            </summary>
            <value>The number of data tables in the collection.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDataTableCollection.Item(System.Int32)">
            <summary>
            Gets the data table at the specified index in the collection.
            </summary>
            <param name="index">The zero-based index of the data table to get.</param>
            <value>The data table at the specified index.</value>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetResizeInfo.OnStarting">
            <summary>
            Invoked when the resize operation is about to begin
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetHyperlink">
            <summary>
            Represents a hyperlink for a cell or region.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Hyperlinks"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetHyperlink"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellHyperlink(System.Int32)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetHyperlink.#ctor(System.String,System.Object,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.WorksheetHyperlink"/> instance.
            </summary>
            <param name="sourceAddress">The address of the cell or region on which the hyperlink should reside.</param>
            <param name="target">
            The target of the hyperlink, which can be a string, <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>, <see cref="T:Infragistics.Documents.Excel.WorksheetRegion"/>, or 
            <see cref="T:Infragistics.Documents.Excel.NamedReference"/> instance. For bookmarks in an external document, separate the sub-address with a #, 
            such as "File.xlsx#Sheet1!C3". For email addresses, use a target string with the format "mailto:joe@company.com" or 
            "mailto:joe@company.com?subject=Email%20Subject".
            </param>
            <param name="displayText">
            The text to display in the cell when the hyperlink is added to a worksheet, or null to use the target text.
            </param>
            <param name="toolTip">
            The text to use in a tool tip when hovering over the source cell or region, or null to use the default tool tip.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="sourceAddress"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="target"/> is not a string, WorksheetCell, WorksheetRegion, or NamedReference instance.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="target"/> is a string longer than 256 characters.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetHyperlink.#ctor(Infragistics.Documents.Excel.WorksheetCell,System.Object,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.WorksheetHyperlink"/> instance.
            </summary>
            <param name="sourceCell">The cell on which the hyperlink should reside.</param>
            <param name="target">
            The target of the hyperlink, which can be a string, <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>, <see cref="T:Infragistics.Documents.Excel.WorksheetRegion"/>, or 
            <see cref="T:Infragistics.Documents.Excel.NamedReference"/> instance. For bookmarks in an external document, separate the sub-address with a #, 
            such as "File.xlsx#Sheet1!C3". For email addresses, use a target string with the format "mailto:joe@company.com" or 
            "mailto:joe@company.com?subject=Email%20Subject".
            </param>
            <param name="displayText">
            The text to display in the cell when the hyperlink is added to a worksheet, or null to use the target text.
            </param>
            <param name="toolTip">
            The text to use in a tool tip when hovering over the source cell or region, or null to use the default tool tip.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="sourceCell"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="target"/> is not a string, WorksheetCell, WorksheetRegion, or NamedReference instance.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="target"/> is a string longer than 256 characters.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="target"/> is a cell, region, or named reference which is not from the same workbook as <paramref name="sourceCell"/>.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetHyperlink.#ctor(Infragistics.Documents.Excel.WorksheetRegion,System.Object,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.WorksheetHyperlink"/> instance.
            </summary>
            <param name="sourceRegion">The region on which the hyperlink should reside.</param>
            <param name="target">
            The target of the hyperlink, which can be a string, <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>, <see cref="T:Infragistics.Documents.Excel.WorksheetRegion"/>, or 
            <see cref="T:Infragistics.Documents.Excel.NamedReference"/> instance. For bookmarks in an external document, separate the sub-address with a #, 
            such as "File.xlsx#Sheet1!C3". For email addresses, use a target string with the format "mailto:joe@company.com" or 
            "mailto:joe@company.com?subject=Email%20Subject".
            </param>
            <param name="displayText">
            The text to display in the cell when the hyperlink is added to a worksheet, or null to use the target text.
            </param>
            <param name="toolTip">
            The text to use in a tool tip when hovering over the source cell or region, or null to use the default tool tip.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="sourceRegion"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="target"/> is not a string, WorksheetCell, WorksheetRegion, or NamedReference instance.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="target"/> is a string longer than 256 characters.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="target"/> is a cell, region, or named reference which is not from the same workbook as <paramref name="sourceRegion"/>.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetHyperlink.ToString">
            <summary>
            Gets the string representation of the hyperlink.
            </summary>
            <returns>The string representation of the hyperlink.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetHyperlink.DisplayText">
            <summary>
            Gets or sets the text to display in the cell when the hyperlink is added to a worksheet, or null to use the target text.
            </summary>
            <remarks>
            <p class="note">
            <b>Note: the display text will only get applied if the target cell has no value or a string value.</b>
            </p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            Occurs when <see cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.IsSealed"/> is True.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the specified value is longer than 2084 characters.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetHyperlink.IsSealed">
            <summary>
            Gets the value indicating whether the hyperlink is sealed and cannot be modified.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetHyperlink.SourceAddress">
            <summary>
            Gets or sets the address of the cell or region on which the hyperlink resides.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Occurs when <see cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.IsSealed"/> is True.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Occurs when the value assigned is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the value assigned cannot be parsed as a cell or region address in the owning workbook's current 
            cell reference mode.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.SourceCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.SourceRegion"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetHyperlink.SourceCell">
            <summary>
            Gets or sets the cell on which the hyperlink resides.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Occurs when <see cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.IsSealed"/> is True.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Occurs when the value assigned is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the value assigned is not on the same worksheet as the hyperlink.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.SourceAddress"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.SourceRegion"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetHyperlink.SourceRegion">
            <summary>
            Gets or sets the region on which the hyperlink resides.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Occurs when <see cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.IsSealed"/> is True.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Occurs when the value assigned is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the value assigned is not on the same worksheet as the hyperlink.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.SourceCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.SourceRegion"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetHyperlink.Target">
            <summary>
            Gets or sets the target of the hyperlink, which can be a string, <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/>, <see cref="T:Infragistics.Documents.Excel.WorksheetRegion"/>, or 
            <see cref="T:Infragistics.Documents.Excel.NamedReference"/> instance. For bookmarks in an external document, separate the sub-address with a #, 
            such as "File.xlsx#Sheet1!C3". For email addresses, use a target string with the format "mailto:joe@company.com" or 
            "mailto:joe@company.com?subject=Email%20Subject".
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Occurs when <see cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.IsSealed"/> is True.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the value assigned is not a string, WorksheetCell, WorksheetRegion, or NamedReference instance.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the specified value is a string longer than 256 characters.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the value assigned is a cell or region which is not from the same workbook as the owning workbook of the hyperlink.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.TargetAddress"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.TargetCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.TargetRegion"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.TargetNamedReference"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetHyperlink.TargetAddress">
            <summary>
            Gets or sets the target address of the hyperlink. For bookmarks in an external document, separate the sub-address with a #, 
            such as "File.xlsx#Sheet1!C3". For email addresses, use a target string with the format "mailto:joe@company.com" or 
            "mailto:joe@company.com?subject=Email%20Subject".
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Occurs when <see cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.IsSealed"/> is True.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the specified value is longer than 256 characters.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.Target"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.TargetCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.TargetRegion"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.TargetNamedReference"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetHyperlink.TargetCell">
            <summary>
            Gets or sets the target cell of the hyperlink.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Occurs when <see cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.IsSealed"/> is True.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the value assigned is a cell which is not from the same workbook as the owning workbook of the hyperlink.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.Target"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.TargetAddress"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.TargetRegion"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.TargetNamedReference"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetHyperlink.TargetNamedReference">
            <summary>
            Gets or sets the target named reference of the hyperlink.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Occurs when <see cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.IsSealed"/> is True.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the value assigned is a named reference which is not from the same workbook as the owning workbook of the hyperlink.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.Target"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.TargetAddress"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.TargetCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.TargetRegion"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetHyperlink.TargetRegion">
            <summary>
            Gets or sets the target region of the hyperlink.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Occurs when <see cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.IsSealed"/> is True.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the value assigned is a region which is not from the same workbook as the owning workbook of the hyperlink.
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.Target"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.TargetAddress"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.TargetCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.TargetNamedReference"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetHyperlink.ToolTip">
            <summary>
            Gets or sets the text to use in a tool tip when hovering over the source cell or region, or null to use the default tool tip.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Occurs when <see cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.IsSealed"/> is True.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the specified value is longer than 256 characters.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetHyperlink.Worksheet">
            <summary>
            Gets the worksheet to which the hyperlink belongs.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetHyperlinkCollection">
            <summary>
            A collection of <see cref="T:Infragistics.Documents.Excel.WorksheetHyperlink"/> instances in a <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Hyperlinks"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetHyperlinkCollection.Add(Infragistics.Documents.Excel.WorksheetHyperlink)">
            <summary>
            Adds the specified hyperlink to the collection.
            </summary>
            <param name="hyperlink">The hyperlink to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when the <paramref name="hyperlink"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="hyperlink"/> already belongs to a <see cref="P:Infragistics.Documents.Excel.Worksheet.Hyperlinks"/> collection.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="hyperlink"/> has a source cell or region from a different worksheet than the owner 
            of the collection.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="hyperlink"/> was created with a string address which cannot be parsed in the cell 
            reference mode of the owning workbook.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetHyperlinkCollection.Clear">
            <summary>
            Clears all hyperlinks from the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetHyperlinkCollection.Contains(Infragistics.Documents.Excel.WorksheetHyperlink)">
            <summary>
            Determines whether a hyperlink is in the collection.
            </summary>
            <param name="hyperlink">The hyperlink to locate in the collection.</param>
            <returns>True if the hyperlink is found; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetHyperlinkCollection.GetEnumerator">
            <summary>
            Gets an enumerator which can iterator all hyperlinks in the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetHyperlinkCollection.Insert(System.Int32,Infragistics.Documents.Excel.WorksheetHyperlink)">
            <summary>
            Inserts the specified hyperlink in the collection.
            </summary>
            <param name="index">The 0-based index in the collection where the hyperlink should be inserted.</param>
            <param name="hyperlink">The hyperlink to insert in the collection.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or <paramref name="index"/> is greater than <see cref="P:Infragistics.Documents.Excel.WorksheetHyperlinkCollection.Count"/>.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Occurs when the <paramref name="hyperlink"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="hyperlink"/> already belongs to a <see cref="P:Infragistics.Documents.Excel.Worksheet.Hyperlinks"/> collection.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="hyperlink"/> has a source cell or region from a different worksheet than the owner 
            of the collection.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="hyperlink"/> was created with a string address which cannot be parsed in the cell 
            reference mode of the owning workbook.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetHyperlinkCollection.Remove(Infragistics.Documents.Excel.WorksheetHyperlink)">
            <summary>
            Removes the specified hyperlink from the collection.
            </summary>
            <param name="hyperlink">The hyperlink to remove from the collection.</param>
            <returns>
            True if the hyperlink was successfully removed from the collection; 
            False if the hyperlink did not exist in the collection.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetHyperlinkCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the hyperlink at the specified index from the collection.
            </summary>
            <param name="index">The index of the hyperlink to remove from the collection.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or <paramref name="index"/> is greater than or equal to <see cref="P:Infragistics.Documents.Excel.WorksheetHyperlinkCollection.Count"/>.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetHyperlinkCollection.Count">
            <summary>
            Gets the number of hyperlinks on the <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetHyperlinkCollection.Item(System.Int32)">
            <summary>
            Gets the hyperlink at the specified index in the collection.
            </summary>
            <param name="index">The zero-based index of the hyperlink to get.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or <paramref name="index"/> is greater than or equal to <see cref="P:Infragistics.Documents.Excel.WorksheetHyperlinkCollection.Count"/>.
            </exception>
            <value>The hyperlink at the specified index.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetImage">
            <summary>
            Represents any image on the worksheet except the background image.
            </summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.ImageBackground"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetImage.#ctor(System.Drawing.Image)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.WorksheetImage"/> instance.
            </summary>
            <param name="image">The image displayed in the worksheet for this shape.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="image"/> is null.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetImage.SetBoundsInTwips(Infragistics.Documents.Excel.Worksheet,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Sets the bounds of the shape in twips (1/20th of a point).
            </summary>
            <remarks>
            <p class="body">
            The shape will only be position at the specified bounds while the worksheet remains in the current configuration.
            If any rows or columns before or within the shape are resized, the shape will no longer be placed at the bounds specified.
            </p>
            <p class="body">
            If <paramref name="maintainAspectRatio"/> is False, this just calls <see cref="M:Infragistics.Documents.Excel.WorksheetShape.SetBoundsInTwips(Infragistics.Documents.Excel.Sheet,System.Drawing.Rectangle)"/> on its 
            base class.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheet"/> is null.
            </exception>
            <param name="worksheet">The worksheet on which the shape should be placed.</param>
            <param name="bounds">The new bounds where the shape should be placed.</param> 
            <param name="maintainAspectRatio">The value indicating whether the image's aspect ratio should be maintained.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetImage.SetBoundsInTwips(Infragistics.Documents.Excel.Worksheet,System.Drawing.Rectangle,System.Boolean,Infragistics.Documents.Excel.PositioningOptions)">
            <summary>
            Sets the bounds of the shape in twips (1/20th of a point).
            </summary>
            <remarks>
            <p class="body">
            The shape will only be position at the specified bounds while the worksheet remains in the current configuration.
            If any rows or columns before or within the shape are resized, the shape will no longer be placed at the bounds specified.
            </p>
            <p class="body">
            If <paramref name="maintainAspectRatio"/> is False, this just calls <see cref="M:Infragistics.Documents.Excel.WorksheetShape.SetBoundsInTwips(Infragistics.Documents.Excel.Sheet,System.Drawing.Rectangle)"/> on its 
            base class.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheet"/> is null.
            </exception>
            <param name="worksheet">The worksheet on which the shape should be placed.</param>
            <param name="bounds">The new bounds where the shape should be placed.</param> 
            <param name="maintainAspectRatio">The value indicating whether the image's aspect ratio should be maintained.</param>
            <param name="options">The options to use when setting the bounds of the shape.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetImage.Image">
            <summary>
            Gets the image displayed in the worksheet for this shape.
            </summary>
            <value>The image displayed in the worksheet for this shape.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetItemCollection`1">
            <summary>
            Abstract base class for collections of the main worksheet elements (rows, columns, and cells).
            </summary>
            <remarks>
            <p class="body">
            Because of the large number of elements on a worksheet, this collection internally creates elements
            when they are requested. Iterating this collection will only iterate the elements which have already
            been created.
            </p>
            </remarks>
            <typeparam name="T">The type of item contained in the collection.</typeparam>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetItemCollection`1.MaxCount">
            <summary>
            Gets the maximum number of items allowed in this collection.
            </summary> 
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetItemPosition.#ctor(System.Int32,System.Int64,System.Int32)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Documents.Excel.WorksheetItemPosition"/>
            </summary>
            <param name="index">Index of the item</param>
            <param name="extent">The extent of the item</param>
            <param name="offset">The offset of the item.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetItemPosition.Equals(System.Object)">
            <summary>
            Compares the specified <see cref="T:Infragistics.Documents.Excel.WorksheetItemPosition"/> to this instance's values.
            </summary>
            <param name="obj">The object to compare to the current instance</param>
            <returns>True if the object is a WorksheetItemPosition with the same <see cref="P:Infragistics.Documents.Excel.WorksheetItemPosition.Index"/>, <see cref="P:Infragistics.Documents.Excel.WorksheetItemPosition.Offset"/> and <see cref="P:Infragistics.Documents.Excel.WorksheetItemPosition.Extent"/>.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetItemPosition.GetHashCode">
            <summary>
            Returns a hash value for the <see cref="T:Infragistics.Documents.Excel.WorksheetItemPosition"/>
            </summary>
            <returns>A hash value for the WorksheetItemPosition</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetItemPosition.ToString">
            <summary>
            Returns a string representation of the <see cref="T:Infragistics.Documents.Excel.WorksheetItemPosition"/>
            </summary>
            <returns>A string representation of the row and column indices.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetItemPosition.op_Equality(Infragistics.Documents.Excel.WorksheetItemPosition,Infragistics.Documents.Excel.WorksheetItemPosition)">
            <summary>
            Compares two <see cref="T:Infragistics.Documents.Excel.WorksheetItemPosition"/> instances to determine if they are equal
            </summary>
            <param name="d1">The first WorksheetItemPosition instance</param>
            <param name="d2">The second WorksheetItemPosition instance</param>
            <returns>True if the objects have the same <see cref="P:Infragistics.Documents.Excel.WorksheetItemPosition.Index"/>, <see cref="P:Infragistics.Documents.Excel.WorksheetItemPosition.Offset"/> and <see cref="P:Infragistics.Documents.Excel.WorksheetItemPosition.Extent"/>; otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetItemPosition.op_Inequality(Infragistics.Documents.Excel.WorksheetItemPosition,Infragistics.Documents.Excel.WorksheetItemPosition)">
            <summary>
            Compares two <see cref="T:Infragistics.Documents.Excel.WorksheetItemPosition"/> instances to determine if they are not equal
            </summary>
            <param name="d1">The first WorksheetItemPosition instance</param>
            <param name="d2">The second WorksheetItemPosition instance</param>
            <returns>True if the objects have a different <see cref="P:Infragistics.Documents.Excel.WorksheetItemPosition.Index"/>, <see cref="P:Infragistics.Documents.Excel.WorksheetItemPosition.Offset"/> and/or <see cref="P:Infragistics.Documents.Excel.WorksheetItemPosition.Extent"/>; otherwise false.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetItemPosition.Extent">
            <summary>
            Returns the extent of the item.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetItemPosition.Index">
            <summary>
            Returns the index of the item.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetItemPosition.Offset">
            <summary>
            Returns the starting point of the item.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetItemPosition.Equals(Infragistics.Documents.Excel.WorksheetItemPosition)">
            <summary>
            Compares the value of this WorksheetItemPosition instance to the specified <see cref="T:Infragistics.Documents.Excel.WorksheetItemPosition"/>.
            </summary>
            <param name="other">The instance of the <see cref="T:Infragistics.Documents.Excel.WorksheetItemPosition"/> to compare</param>
            <returns>True if the specified WorksheetItemPosition has the same <see cref="P:Infragistics.Documents.Excel.WorksheetItemPosition.Index"/>, <see cref="P:Infragistics.Documents.Excel.WorksheetItemPosition.Offset"/> and <see cref="P:Infragistics.Documents.Excel.WorksheetItemPosition.Extent"/>; otherwise false.</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetMergedCellsRegion">
            <summary>
            Represents a merged region of cells, or cells which share a value and format and appear as one cell when 
            viewed in Microsoft Excel.
            </summary>
            <remarks>
            <p class="body">
            Merged cell regions cannot overlap (a cell can only belong to one merged cell region). In addition, 
            <see cref="T:Infragistics.Documents.Excel.ArrayFormula"/> and <see cref="T:Infragistics.Documents.Excel.WorksheetDataTable"/> instances cannot be applied to merged cell
            regions.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetMergedCellsRegion.GetResolvedCellFormat">
            <summary>
            Gets the resolved cell formatting for this merged cell region.
            </summary>
            <remarks>
            <p class="body">
            If any cell format properties are the default values on the merged cell region, the values from the owning row's cell format will be used.
            If those are default, then the values from the owning column's cell format will be used. Otherwise, the workbook default values
            will be used.
            </p>
            </remarks>
            <returns>A format object describing the actual formatting that will be used when displayed this cell in Microsoft Excel.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegion.CellFormat"/>
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.CellFormat"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegion.CellFormat">
            <summary>
            Gets the cell formatting for the merged cell region.
            </summary>
            <value>The cell formatting for the merged cell region.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegion.Comment">
            <summary>
            Gets or sets the comment for the merged cells region.
            </summary>
            <remarks>
            <p class="body">
            The comment of the merged region can also be accessed from the top-left cell of the merged region of cells.
            </p>
            </remarks>
            <value>The comment for the merged cells region.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegion.Formula">
            <summary>
            Gets the formula which has been applied to the merged region.
            </summary>
            <value>The formula which has been applied to the merged region or null if no formula has been applied.</value>
            <see cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetCell)"/>
            <see cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion)"/>
            <see cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion[])"/>
            <see cref="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyFormula(System.String)"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegion.Value">
            <summary>
            Gets or sets the value of the merged cell region.
            </summary>
            <remarks>
            <p class="body">The types supported for the value are:
            <BR/>
            <ul>
            <li class="taskitem"><span class="taskitemtext">System.Byte</span></li>
            <li class="taskitem"><span class="taskitemtext">System.SByte</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Int16</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Int64</span></li>
            <li class="taskitem"><span class="taskitemtext">System.UInt16</span></li>
            <li class="taskitem"><span class="taskitemtext">System.UInt64</span></li>
            <li class="taskitem"><span class="taskitemtext">System.UInt32</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Int32</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Single</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Double</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Boolean</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Char</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Enum</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Decimal</span></li>
            <li class="taskitem"><span class="taskitemtext">System.DateTime</span></li>
            <li class="taskitem"><span class="taskitemtext">System.String</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Text.StringBuilder</span></li>
            <li class="taskitem"><span class="taskitemtext">System.DBNull</span></li>
            <li class="taskitem"><span class="taskitemtext"><see cref="T:Infragistics.Documents.Excel.ErrorValue"/></span></li>
            <li class="taskitem"><span class="taskitemtext"><see cref="T:Infragistics.Documents.Excel.FormattedString"/></span></li>
            </ul>
            </p>
            </remarks>
            <exception cref="T:System.NotSupportedException">
            The assigned value's type is not supported and can't be exported to Excel.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value assigned is a <see cref="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegion.Formula"/>. Instead, <see cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetCell)"/> 
            should be called on the Formula, passing in the cell.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value assigned is a <see cref="T:Infragistics.Documents.Excel.WorksheetDataTable"/>. Instead, the <see cref="P:Infragistics.Documents.Excel.WorksheetDataTable.CellsInTable"/>
            should be set to a region containing the cell.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value assigned is a FormattedString which is the value another cell or merged cell region.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value is assigned and this cell is part of an <see cref="T:Infragistics.Documents.Excel.ArrayFormula"/> or WorksheetDataTable.
            </exception>
            <value>The value of the merged cell region.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Value"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.IsCellTypeSupported(System.Type)"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetMergedCellsRegionCollection">
            <summary>
            A collection of <see cref="T:Infragistics.Documents.Excel.WorksheetMergedCellsRegion"/> instances in a <see cref="T:Infragistics.Documents.Excel.Worksheet"/>.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetMergedCellsRegion"/>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.MergedCellsRegions"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetMergedCellsRegionCollection.Add(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates new merged cell region and adds it to the collection.
            </summary>
            <remarks>
            <p class="body">
            The new merged cell region will take its value from the first cell containing a value, starting at the top-left and going across 
            then down in the region. The value of all other cells will be lost. Similarly, the new region will initialize its cell format 
            from the first cell containing a non-default cell format.
            </p>
            </remarks>
            <param name="firstRow">The index of the first row of the merged cell region.</param>
            <param name="firstColumn">The index of the first column of the merged cell region.</param>
            <param name="lastRow">The index of the last row of the merged cell region.</param>
            <param name="lastColumn">The index of the last row column of the merged cell region.</param>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="firstRow"/> is greater than <paramref name="lastRow"/> or 
            <paramref name="firstColumn"/> is greater than <paramref name="lastColumn"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Any row or column indices specified are outside the valid row or column ranges.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The new merged cell region overlaps with an existing merged cell region.
            </exception>
            <returns>The newly created <see cref="T:Infragistics.Documents.Excel.WorksheetMergedCellsRegion"/>.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetMergedCellsRegionCollection.Clear">
            <summary>
            Clears all merged cell regions from the collection.
            </summary>
            <remarks>
            <p class="body">
            When a merged cell region is removed, the top-left cell in the region will retain the region's value.
            All other cells in the region will have a null value. In addition, all cells in the merged region will
            have the region's cell format when it is removed.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetMergedCellsRegionCollection.IsOverlappingWithMergedRegion(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Checks if any part of specified region is already a part of a merged cell region.
            </summary>
            <param name="firstRow">The index of the first row of the merged cell region.</param>
            <param name="firstColumn">The index of the first column of the merged cell region.</param>
            <param name="lastRow">The index of the last row of the merged cell region.</param>
            <param name="lastColumn">The index of the last row column of the merged cell region.</param>
            <returns>True if any part of specified region is a part of merged cell region; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetMergedCellsRegionCollection.Remove(Infragistics.Documents.Excel.WorksheetMergedCellsRegion)">
            <summary>
            Removes the specified merged cell region from the collection.
            </summary>
            <remarks>
            <p class="body">
            When a merged cell region is removed, the top-left cell in the region will retain the region's value.
            All other cells in the region will have a null value. In addition, all cells in the merged region will
            have the region's cell format when it is removed.
            </p>
            </remarks>
            <param name="region">The merged cell region to remove from the collection.</param>
            <returns>
            True if the merged cell region was successfully removed; False if the merged cell region was not 
            in the collection.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetMergedCellsRegionCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the merged cell region at the specified index from the collection.
            </summary>
            <remarks>
            <p class="body">
            When a merged cell region is removed, the top-left cell in the region will retain the region's value.
            All other cells in the region will have a null value. In addition, all cells in the merged region will
            have the region's cell format when it is removed.
            </p>
            </remarks>
            <param name="index">The zero-based index of the merged cell region in the collection.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or <paramref name="index"/> is greater than or 
            equal to <see cref="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegionCollection.Count"/>.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegionCollection.Count">
            <summary>
            Gets the number of merged cell regions in the collection.
            </summary>
            <value>The number of merged cell regions in the collection.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegionCollection.Item(System.Int32)">
            <summary>
            Gets the merged cell region at the specified index.
            </summary>
            <param name="index">The zero-based index of the merged cell region to get.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or <paramref name="index"/> is greater than or 
            equal to <see cref="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegionCollection.Count"/>.
            </exception>
            <value>The merged cell region at the specified index.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetReferenceCollection">
            <summary>
            A collection of cells or regions which are all on the same <see cref="P:Infragistics.Documents.Excel.WorksheetReferenceCollection.Worksheet"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.#ctor(Infragistics.Documents.Excel.Worksheet)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.WorksheetReferenceCollection"/> instance.
            </summary>
            <param name="worksheet">The worksheet to which the references in the collection will belong.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="worksheet"/> is null.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.#ctor(Infragistics.Documents.Excel.Worksheet,System.String)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.WorksheetReferenceCollection"/> instance.
            </summary>
            <param name="worksheet">The worksheet to which the references in the collection will belong.</param>
            <param name="references">The space delimited list of references to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="worksheet"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Occurs when the <paramref name="references"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the list of reference is not well formed.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.#ctor(Infragistics.Documents.Excel.WorksheetCell)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.WorksheetReferenceCollection"/> instance and initializes it with a cell.
            </summary>
            <param name="cell">The cell with which the collection should be initialized.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="cell"/> is null.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.#ctor(Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.WorksheetReferenceCollection"/> instance and initializes it with a cell.
            </summary>
            <param name="region">The cell with which the collection should be initialized.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when <paramref name="region"/> is null.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.ToString">
            <summary>
            Returns the string value represent the cell and region addresses in the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.GetEnumerator">
            <summary>
            Gets an enumerator which returns all <see cref="T:Infragistics.Documents.Excel.WorksheetRegion"/> and <see cref="T:Infragistics.Documents.Excel.WorksheetCell"/> instances in the collection of references.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.Add(System.String)">
            <summary>
            Adds a list of references to the collection of references.
            </summary>
            <remarks>
            <p class="body">
            The references must be separated by one or more space (' ') characters.
            </p>
            <p class="body">
            The references in the list cannot contain the worksheet name. They are all assumed to be from the worksheet of this collection.
            </p>
            <p class="body">
            If all references are already contained in the collection this call will have no effect on the collection.
            </p>
            </remarks>
            <param name="references">The space delimited list of references to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when the <paramref name="references"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the list of reference is not well formed.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.Add(System.String,Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>
            Adds a list of references to the collection of references.
            </summary>
            <remarks>
            <p class="body">
            The references must be separated by one or more space (' ') characters.
            </p>
            <p class="body">
            The references in the list cannot contain the worksheet name. They are all assumed to be from the worksheet of this collection.
            </p>
            <p class="body">
            If all references are already contained in the collection this call will have no effect on the collection.
            </p>
            </remarks>
            <param name="references">The space delimited list of references to add to the collection.</param>
            <param name="cellReferenceMode">The cell reference mode with which to parse the <paramref name="references"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when the <paramref name="references"/> is null.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the list of reference is not well formed.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.Add(Infragistics.Documents.Excel.WorksheetCell)">
            <summary>
            Adds a cell to the collection of references.
            </summary>
            <remarks>
            <p class="body">
            The cell added to the collection must be from the same <see cref="P:Infragistics.Documents.Excel.WorksheetReferenceCollection.Worksheet"/> as the collection.
            </p>
            <p class="body">
            If the cell is already contained in the collection, or there is a region in the collection which contains the cell, this call
            will have no effect on the collection.
            </p>
            </remarks>
            <param name="cell">The cell to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when the <paramref name="cell"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="cell"/> is from a Worksheet other than the references collection.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.Add(Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>
            Adds a region to the collection of references.
            </summary>
            <remarks>
            <p class="body">
            The region added to the collection must be from the same <see cref="P:Infragistics.Documents.Excel.WorksheetReferenceCollection.Worksheet"/> as the collection.
            </p>
            <p class="body">
            If the region is already contained in the collection, or there is a region in the collection which fully contains the specified region, 
            this call will have no effect on the collection.
            </p>
            </remarks>
            <param name="region">The region to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when the <paramref name="region"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="region"/> is from a Worksheet other than the references collection.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.Clear">
            <summary>
            Clears all references from the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.Contains(Infragistics.Documents.Excel.WorksheetCell)">
            <summary>
            Determines whether the collection contains the specified cell.
            </summary>
            <param name="cell">The cell to search for in the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when the <paramref name="cell"/> is null.
            </exception>
            <returns>
            True if the cell is contained in the collection or a region which contains the cell is contained in the collection; False otherwise.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.Contains(Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>
            Determines whether the collection contains the specified region.
            </summary>
            <param name="region">The region to search for in the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when the <paramref name="region"/> is null.
            </exception>
            <returns>
            True if the region is contained in the collection or a region which fully contains the specified region is contained in the collection; 
            False otherwise.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.Remove(System.String)">
            <summary>
            Removes a list of references from the collection of references.
            </summary>
            <remarks>
            <p class="body">
            The references must be separated by one or more space (' ') characters.
            </p>
            <p class="body">
            The references in the list cannot contain the worksheet name. They are all assumed to be from the worksheet of this collection.
            </p>
            <p class="body">
            If the references are not contained in the collection, this call will have no effect on the collection.
            </p>
            </remarks>
            <param name="references">The space delimited list of references to remove from the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when the <paramref name="references"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the list of reference is not well formed.
            </exception>
            <returns>True if any cells in the references were found and removed. False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.Remove(System.String,Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>
            Removes a list of references from the collection of references.
            </summary>
            <remarks>
            <p class="body">
            The references must be separated by one or more space (' ') characters.
            </p>
            <p class="body">
            The references in the list cannot contain the worksheet name. They are all assumed to be from the worksheet of this collection.
            </p>
            <p class="body">
            If the references are not contained in the collection, this call will have no effect on the collection.
            </p>
            </remarks>
            <param name="references">The space delimited list of references to remove from the collection.</param>
            <param name="cellReferenceMode">The cell reference mode with which to parse the <paramref name="references"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when the <paramref name="references"/> is null.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the list of reference is not well formed.
            </exception>
            <returns>True if any cells in the references were found and removed. False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.Remove(Infragistics.Documents.Excel.WorksheetCell)">
            <summary>
            Removes a cell from the collection of references.
            </summary>
            <remarks>
            <p class="body">
            If the cell is not contained in the collection, this call will have no effect on the collection.
            </p>
            </remarks>
            <param name="cell">The cell to remove from the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when the <paramref name="cell"/> is null.
            </exception>
            <returns>True if the cell was found and removed. False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.Remove(Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>
            Removes a region from the collection of references.
            </summary>
            <remarks>
            <p class="body">
            If the region is not contained in the collection, this call will have no effect on the collection.
            </p>
            </remarks>
            <param name="region">The region to remove from the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            Occurs when the <paramref name="region"/> is null.
            </exception>
            <returns>True if any cells in the region were found and removed. False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.ToString(Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>
            Returns the string value represent the cell and region addresses in the collection.
            </summary>
            <param name="cellReferenceMode">The cell reference mode with which to get the region strings.</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            Occurs when <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetReferenceCollection.CellsCount">
            <summary>
            Gets the number of cells contains in all references in this collection.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetReferenceCollection.Worksheet">
            <summary>
            Gets the worksheet for which this collection contains references.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetRegion">
            <summary>
            Represents a rectangular region of cells on a worksheet.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRegion.#ctor(Infragistics.Documents.Excel.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion"/> class.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheet"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="firstRow"/> is greater than <paramref name="lastRow"/> or 
            <paramref name="firstColumn"/> is greater than <paramref name="lastColumn"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Any row or column indices specified are outside the valid row or column ranges.
            </exception>
            <param name="worksheet">The worksheet on which the region resides.</param>
            <param name="firstRow">The index of the first row of the region.</param>
            <param name="firstColumn">The index of the first column of the region.</param>
            <param name="lastRow">The index of the last row of the region.</param>
            <param name="lastColumn">The index of the last row column of the region.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRegion.Equals(System.Object)">
            <summary>
            Determines whether the specified value equals this <see cref="T:Infragistics.Documents.Excel.WorksheetRegion"/>.
            </summary>
            <param name="obj">The value to test for equality.</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRegion.GetHashCode">
            <summary>
            Gtes the hash code for the <see cref="T:Infragistics.Documents.Excel.WorksheetRegion"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRegion.ToString">
            <summary>
            Gets the string representation of the range of cells in the region.
            </summary>
            <returns>The string representation of the range of cells in the region.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyArrayFormula(System.String)">
            <summary>
            Applies a array formula to the region of cells.
            </summary>
            <remarks>
            <p class="body">
            <paramref name="value"/> is parsed based on the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> of the <see cref="T:Infragistics.Documents.Excel.Workbook"/>
            to which the region belongs. If the region's <see cref="P:Infragistics.Documents.Excel.WorksheetRegion.Worksheet"/> has been removed from its parent collection,
            the A1 CellReferenceMode will be used to parse the formula.
            </p>
            </remarks>
            <param name="value">The array formula to parse and apply to the region.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="value"/> is not a valid formula.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The region contains another array formula or data table which extends outside the region.
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.ArrayFormula"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyFormula(System.String)">
            <summary>
            Applies a formula to the region of cells.
            </summary>
            <remarks>
            <p class="body">
            <paramref name="value"/> is parsed based on the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> of the <see cref="T:Infragistics.Documents.Excel.Workbook"/>
            to which the region belongs. If the region's <see cref="P:Infragistics.Documents.Excel.WorksheetRegion.Worksheet"/> has been removed from its parent collection,
            the A1 CellReferenceMode will be used to parse the formula.
            </p>
            </remarks>
            <param name="value">The formula to parse and apply to the region.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="value"/> is not a valid formula.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The region contains an array formula or data table which extends outside the region.
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.Formula"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRegion.FormatAsTable(System.Boolean)">
            <summary>
            Formats the region as a table and adds an associated <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> to the <see cref="P:Infragistics.Documents.Excel.Worksheet.Tables"/> 
            collection.
            </summary>
            <param name="tableHasHeaders">
            A value which indicates whether the top row of the region contains the headers for the table.
            </param>
            <remarks>
            <p class="body">
            When the table is created, the <see cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle"/> will be applied to the <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Style"/> 
            value.
            </p>
            <p class="body">
            When the table is created, the column names will be taken from the cells in the header row if <paramref name="tableHasHeaders"/> 
            is True. If it is False, the column names will be generated and the cells for the header row will be inserted into the worksheet.
            </p>
            <p class="body">
            The column names are unique within the owning WorksheetTable. If, when the table is created, there are two or more columns with 
            the same name, the second and subsequent duplicate column names will have a number appended to make them unique. If any cells in 
            the header row have a non-string value, their value will be changed to a string (the current display text of the cell). If any 
            cells in the header row have no value, they will be given a generated column name.
            </p>
            <p class="body">
            If the region partially contains any merged cell regions, they will be removed from the worksheet and the table region will be expanded 
            to include all cells from the merged region.
            </p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            The region contains one or more cells from another <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The region contains one or more cells which have a multi-cell <see cref="T:Infragistics.Documents.Excel.ArrayFormula"/> applied.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The region contains one or more cells which are part of a <see cref="T:Infragistics.Documents.Excel.WorksheetDataTable"/>.
            </exception>
            <returns>The <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> created the represent the formatted table for the region.</returns>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTable"/>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Tables"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Name"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.IsHeaderRowVisible"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableCollection.Add(System.String,System.Boolean,Infragistics.Documents.Excel.WorksheetTableStyle)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRegion.FormatAsTable(System.Boolean,Infragistics.Documents.Excel.WorksheetTableStyle)">
            <summary>
            Formats the region as a table and adds an associated <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> to the <see cref="P:Infragistics.Documents.Excel.Worksheet.Tables"/> 
            collection.
            </summary>
            <param name="tableHasHeaders">
            A value which indicates whether the top row of the region contains the headers for the table.
            </param>
            <param name="tableStyle">
            The <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle"/> to apply to the table or null to use the <see cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle"/>.
            </param>
            <remarks>
            <p class="body">
            When the table is created, the specified <paramref name="tableStyle"/> will be applied to the <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Style"/> 
            value.
            </p>
            <p class="body">
            When the table is created, the column names will be taken from the cells in the header row if <paramref name="tableHasHeaders"/> 
            is True. If it is False, the column names will be generated and the cells for the header row will be inserted into the worksheet.
            </p>
            <p class="body">
            The column names are unique within the owning WorksheetTable. If, when the table is created, there are two or more columns with 
            the same name, the second and subsequent duplicate column names will have a number appended to make them unique. If any cells in 
            the header row have a non-string value, their value will be changed to a string (the current display text of the cell). If any 
            cells in the header row have no value, they will be given a generated column name.
            </p>
            <p class="body">
            If the region partially contains any merged cell regions, they will be removed from the worksheet and the table region will be expanded 
            to include all cells from the merged region.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            The specified <paramref name="tableStyle"/> does not exist in the <see cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles"/> or 
            <see cref="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles"/> collections.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The region contains one or more cells from another <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The region contains one or more cells which have a multi-cell <see cref="T:Infragistics.Documents.Excel.ArrayFormula"/> applied.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The region contains one or more cells which are part of a <see cref="T:Infragistics.Documents.Excel.WorksheetDataTable"/>.
            </exception>
            <returns>The <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> created the represent the formatted table for the region.</returns>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTable"/>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Tables"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Name"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles"/>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Style"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.IsHeaderRowVisible"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableCollection.Add(System.String,System.Boolean,Infragistics.Documents.Excel.WorksheetTableStyle)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRegion.GetBoundsInTwips">
            <summary>
            Gets the bounds of the region in twips (1/20th of a point).
            </summary>
            <remarks>
            <p class="body">
            The bounds returned by this method are only valid with the current configuration of the worksheet.
            If any rows or columns before the region are resized, these bounds will no longer reflect the 
            position of the region.
            </p>
            </remarks>
            <returns>The bounds of the region on its worksheet.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRegion.GetBoundsInTwips(Infragistics.Documents.Excel.PositioningOptions)">
            <summary>
            Gets the bounds of the region in twips (1/20th of a point).
            </summary>
            <remarks>
            <p class="body">
            The bounds returned by this method are only valid with the current configuration of the worksheet.
            If any rows or columns before the region are resized, these bounds will no longer reflect the 
            position of the region.
            </p>
            </remarks>
            <param name="options">The options to use when getting the bounds of the region.</param>
            <returns>The bounds of the region on its worksheet.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRegion.ToString(Infragistics.Documents.Excel.CellReferenceMode,System.Boolean)">
            <summary>
            Gets the string representation of the range of cells in the region.
            </summary>
            <param name="cellReferenceMode">The mode used to generate cell references.</param>
            <param name="includeWorksheetName">The value indicating whether to include the worksheet name in the range address.</param>
            <returns>The string representation of the range of cells in the region.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRegion.ToString(Infragistics.Documents.Excel.CellReferenceMode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets the string representation of the range of cells in the region.
            </summary>
            <param name="cellReferenceMode">The mode used to generate cell references.</param>
            <param name="includeWorksheetName">The value indicating whether to include the worksheet name in the range address.</param>
            <param name="useRelativeColumn">The value indicating whether to use a relative column address for the cells in the range.</param>
            <param name="useRelativeRow">The value indicating whether to use a relative row address for the cells in the range.</param>
            <returns>The string representation of the range of cells in the region.</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetRegion.FirstColumn">
            <summary>
            Gets the index of the first column in the region.
            </summary>
            <value>The index of the first column in the region.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetRegion.FirstRow">
            <summary>
            Gets the index of the first row in the region.
            </summary>
            <value>The index of the first row in the region.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetRegion.LastColumn">
            <summary>
            Gets the index of the last column in the region.
            </summary>
            <value>The index of the last column in the region.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetRegion.LastRow">
            <summary>
            Gets the index of the last row in the region.
            </summary>
            <value>The index of the last row in the region.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetRegion.Worksheet">
            <summary>
            Gets the worksheet on which the region resides.
            </summary>
            <value>
            The worksheet on which the region resides or null if the region has been shifted off the worksheet.
            </value>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetRow">
            <summary>
            Represents a row in a Microsoft Excel worksheet.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetRow.Index">
            <summary>
            Gets the 0-based index of the row in the worksheet.
            </summary>
            <value>The 0-based index of the row in the worksheet.</value>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.ApplyCellFormula(System.Int32,System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})">
            <summary>
            Applies a formula to the cell at the specified column index.
            </summary>
            <remarks>
            <p class="body">
            <paramref name="formula"/> is parsed based on the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> of the <see cref="T:Infragistics.Documents.Excel.Workbook"/>
            to which the row belongs. If the row's <see cref="T:Infragistics.Documents.Excel.Worksheet"/> has been removed from its parent collection,
            the A1 CellReferenceMode will be used to parse the formula.
            </p>
            </remarks>
            <param name="columnIndex">The 0-based index of the cell within the <see cref="T:Infragistics.Documents.Excel.WorksheetRow"/>.</param>
            <param name="formula">The formula to parse and apply to the cell.</param>
            <param name="cellReferenceMode">The mode used to interpret cell references in the formula.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex"/> is less than zero or greater than or equal to the number of columns in the worksheet.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="formula"/> is null or empty.
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="formula"/> is not a valid formula.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The cell is part of an array formula or data table which is not confined to just the cell.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.CellReferenceMode"/> enumeration.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the row was removed from the worksheet.</exception>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellFormula(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.ApplyFormula(System.String)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedDataTable(System.Int32)">
            <summary>
            Gets the data table to which the cell at the specified index belongs.
            </summary>
            <param name="columnIndex">The 0-based index of the cell within the <see cref="T:Infragistics.Documents.Excel.WorksheetRow"/>.</param>
            <remarks>
            <p class="body">
            The cells in the left-most column and top-most row of the data table will return null for the associated data table.
            </p>
            <p class="body">
            If a data table is associated with the cell, getting the value of the cell with <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellValue(System.Int32)"/> 
            will return the calculated value for the cell.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex"/> is less than zero or greater than or equal to the number of columns in the worksheet.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the row was removed from the worksheet.</exception>
            <returns>The data table to which the cell belongs or null if the cell does not belong to a data table.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DataTables"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetDataTableCollection.Add(Infragistics.Documents.Excel.WorksheetRegion,Infragistics.Documents.Excel.WorksheetCell,Infragistics.Documents.Excel.WorksheetCell)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellValue(System.Int32)"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.AssociatedDataTable"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedMergedCellsRegion(System.Int32)">
            <summary>
            Gets the merged cells region which contains the cell at the specified index, or null if the cell is not merged.
            </summary>
            <param name="columnIndex">The 0-based index of the cell within the <see cref="T:Infragistics.Documents.Excel.WorksheetRow"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex"/> is less than zero or greater than or equal to the number of columns in the worksheet.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the row was removed from the worksheet.</exception>
            <returns>The merged cells region which contains the cell at the specified index, or null if the cell is not merged.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.AssociatedMergedCellsRegion"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedTable(System.Int32)">
            <summary>
            Gets the <see cref="T:Infragistics.Documents.Excel.WorksheetTable"/> to which the cell at the specified index belongs.
            </summary>
            <param name="columnIndex">The 0-based index of the cell within the <see cref="T:Infragistics.Documents.Excel.WorksheetRow"/>.</param>
            <remarks>
            <p class="body">
            A cell belongs to a table if it exists in any area of the table. It can be a header cell, total cell, or a cell in the data area.
            </p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">If the row was removed from the worksheet.</exception>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTable"/>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Tables"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetCellBoundsInTwips(System.Int32)">
            <summary>
            Gets the bounds of the cell at the specified column index in twips (1/20th of a point).
            </summary>
            <remarks>
            <p class="body">
            The bounds returned by this method are only valid with the current configuration of the worksheet.
            If any rows or columns before the cell are resized, these bounds will no longer reflect the 
            position of the cell.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex"/> is less than zero or greater than or equal to the number of columns in the worksheet.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the row was removed from the worksheet.</exception>
            <returns>The bounds of the cell at the specified column index on its worksheet.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetBoundsInTwips"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetCellBoundsInTwips(System.Int32,Infragistics.Documents.Excel.PositioningOptions)">
            <summary>
            Gets the bounds of the cell at the specified column index in twips (1/20th of a point).
            </summary>
            <remarks>
            <p class="body">
            The bounds returned by this method are only valid with the current configuration of the worksheet.
            If any rows or columns before the cell are resized, these bounds will no longer reflect the 
            position of the cell.
            </p>
            </remarks>
            <param name="columnIndex">The 0-based index of the cell within the <see cref="T:Infragistics.Documents.Excel.WorksheetRow"/>.</param>
            <param name="options">The options to use when getting the bounds of the cell.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex"/> is less than zero or greater than or equal to the number of columns in the worksheet.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the row was removed from the worksheet.</exception>
            <returns>The bounds of the cell at the specified column index on its worksheet.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetBoundsInTwips(Infragistics.Documents.Excel.PositioningOptions)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetCellComment(System.Int32)">
            <summary>
            Gets or sets the comment applied to the cell at the specified column index.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex"/> is less than zero or greater than or equal to the number of columns in the worksheet.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the row was removed from the worksheet.</exception>
            <returns>The comment applied to the cell.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Comment"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32)">
            <summary>
            Gets the display text in the cell at the specified index.
            </summary>
            <param name="columnIndex">The 0-based index of the cell within the <see cref="T:Infragistics.Documents.Excel.WorksheetRow"/>.</param>
            <remarks>
            <p class="body">
            The display text is based on the value of the cell and the format string applied to the cell.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellValue(System.Int32)"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FormatString"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32,Infragistics.Documents.Excel.TextFormatMode)">
            <summary>
            Gets the text in the cell at the specified index.
            </summary>
            <param name="columnIndex">The 0-based index of the cell within the <see cref="T:Infragistics.Documents.Excel.WorksheetRow"/>.</param>
            <param name="textFormatMode">The format mode to use when getting the cell text.</param>
            <remarks>
            <p class="body">
            The text is based on the value of the cell and the format string applied to the cell.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="textFormatMode"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.TextFormatMode"/> enumeration.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the row was removed from the worksheet.</exception>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellValue(System.Int32)"/>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FormatString"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetCellConditionalFormat(System.Int32)">
            <summary>
            Gets the cell conditional format for the cell at the specified column index.
            </summary>
            <param name="columnIndex">The 0-based index of the cell within the <see cref="T:Infragistics.Documents.Excel.WorksheetRow"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex"/> is less than zero or greater than or equal to the number of columns in the worksheet.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the row was removed from the worksheet.</exception>
            <returns>The aggregated condition format for the cell at the specified column index or null if the cell is not contained in any conditional format region.</returns>
            <remarks>
            <para class="note"><b>Note:</b> if the cell is contained in one or more conditional format regions but doesn't match any of the criteria an instance of <see cref="T:Infragistics.Documents.Excel.ConditionalFormatting.CellConditionalFormat"/>
            will still be returned but its <see cref="P:Infragistics.Documents.Excel.ConditionalFormatting.CellConditionalFormat.HasConditionFormatting"/> property will return null. However, if the sell is not contained in any
            conditional format region then this method will return null.</para>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.GetCellConditionalFormat(System.Int32,System.Int32)">Worksheet.GetCellConditionalFormat</seealso>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.ConditionalFormats"/>
            <seealso cref="T:Infragistics.Documents.Excel.ConditionalFormatting.CellConditionalFormat"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetCellFormat(System.Int32)">
            <summary>
            Gets the cell formatting for the cell at the specified column index.
            </summary>
            <param name="columnIndex">The 0-based index of the cell within the <see cref="T:Infragistics.Documents.Excel.WorksheetRow"/>.</param>
            <remarks>
            <p class="body">
            Use this method to set cell formatting specific to the cell. If you will be applying the format to numerous cells, 
            see the <see cref="M:Infragistics.Documents.Excel.Workbook.CreateNewWorksheetCellFormat"/> method for performance considerations.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex"/> is less than zero or greater than or equal to the number of columns in the worksheet.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the row was removed from the worksheet.</exception>
            <returns>The cell formatting for the cell at the specified column index.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetResolvedCellFormat(System.Int32)"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.CellFormat"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.TryGetCellFormat(System.Int32,Infragistics.Documents.Excel.IWorksheetCellFormat@)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetCellFormula(System.Int32)">
            <summary>
            Gets the formula which has been applied to the cell at the specified column index.
            </summary>
            <remarks>
            <p class="body">
            If a formula has been applied to the cell, getting the value with the <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellValue(System.Int32)"/> method will return the 
            calculated value of the formula.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex"/> is less than zero or greater than or equal to the number of columns in the worksheet.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the row was removed from the worksheet.</exception>
            <returns>The formula which has been applied to the cell or null if no formula has been applied.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetCell)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion)"/>
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion[])"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.ApplyCellFormula(System.Int32,System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyFormula(System.String)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyArrayFormula(System.String)"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Formula"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetCellHyperlink(System.Int32)">
            <summary>
            Gets the effective hyperlink on the cell at the specified index.
            </summary>
            <param name="columnIndex">The 0-based index of the cell within the <see cref="T:Infragistics.Documents.Excel.WorksheetRow"/>.</param>
            <remarks>
            <p class="body">
            If multiple hyperlinks are applied to the cell, the last one in the <see cref="P:Infragistics.Documents.Excel.Worksheet.Hyperlinks"/> 
            collection will be used.
            </p>
            <p class="body">
            If the cell has one or more hyperlinks in the <see cref="P:Infragistics.Documents.Excel.Worksheet.Hyperlinks"/> collection as well 
            as a formula containing a HYPERLINK function, the last hyperlink from the collection will be used.
            </p>
            <p class="body">
            If the cell has a hyperlink due to the HYPERLINK function being used in a formula, the returned value will be sealed.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Hyperlinks"/>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetHyperlink"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetHyperlink.IsSealed"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetCellValue(System.Int32)">
            <summary>
            Gets the value of the cell at the specified column index.
            </summary>
            <param name="columnIndex">The 0-based index of the cell within the <see cref="T:Infragistics.Documents.Excel.WorksheetRow"/>.</param>
            <remarks>
            <p class="body">
            If this cell belongs to a merged cell region and it is the top-left cell of the region, getting and setting the value 
            will get and set the value of the associated merged cell region. Getting the value of other cells in a merged cell region
            will always return null. Setting the value of other cells in a merged cell region will have no effect.
            </p>
            <p class="body">
            If a formula has been applied to the cell or a data table is associated with the cell, getting the Value will return the 
            calculated value of the cell.
            </p>
            <p class="body">
            The types supported for the value are:
            <BR/>
            <ul>
            <li class="taskitem"><span class="taskitemtext">System.Byte</span></li>
            <li class="taskitem"><span class="taskitemtext">System.SByte</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Int16</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Int64</span></li>
            <li class="taskitem"><span class="taskitemtext">System.UInt16</span></li>
            <li class="taskitem"><span class="taskitemtext">System.UInt64</span></li>
            <li class="taskitem"><span class="taskitemtext">System.UInt32</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Int32</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Single</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Double</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Boolean</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Char</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Enum</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Decimal</span></li>
            <li class="taskitem"><span class="taskitemtext">System.DateTime</span></li>
            <li class="taskitem"><span class="taskitemtext">System.String</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Text.StringBuilder</span></li>
            <li class="taskitem"><span class="taskitemtext">System.DBNull</span></li>
            <li class="taskitem"><span class="taskitemtext"><see cref="T:Infragistics.Documents.Excel.ErrorValue"/></span></li>
            <li class="taskitem"><span class="taskitemtext"><see cref="T:Infragistics.Documents.Excel.FormattedString"/></span></li>
            </ul>
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex"/> is less than zero or greater than or equal to the number of columns in the worksheet.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the row was removed from the worksheet.</exception>
            <value>The value of the cell.</value>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.SetCellValue(System.Int32,System.Object)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedMergedCellsRegion(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.IsCellTypeSupported(System.Type)"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegion.Value"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellFormula(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedDataTable(System.Int32)"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Value"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetResolvedCellFormat(System.Int32)">
            <summary>
            Gets the resolved cell formatting for the cell at the specified column index.
            </summary>
            <remarks>
            <p class="body">
            If any cell format properties are the default values on the cell, the values from the owning row's cell format will be used.
            If those are default, then the values from the owning column's cell format will be used. Otherwise, the workbook default values
            will be used.
            </p>
            </remarks>
            <param name="columnIndex">The 0-based index of the cell within the <see cref="T:Infragistics.Documents.Excel.WorksheetRow"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex"/> is less than zero or greater than or equal to the number of columns in the worksheet.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the row was removed from the worksheet.</exception>
            <returns>A format object describing the actual formatting that will be used when displayed the cell in Microsoft Excel.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellFormat(System.Int32)"/>
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.CellFormat"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetResolvedCellFormat"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.SetCellComment(System.Int32,Infragistics.Documents.Excel.WorksheetCellComment)">
            <summary>
            Sets the comment applied to the cell at the specified column index.
            </summary>
            <param name="columnIndex">The 0-based index of the cell within the <see cref="T:Infragistics.Documents.Excel.WorksheetRow"/>.</param>
            <param name="comment">The comment to apply to the cell.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex"/> is less than zero or greater than or equal to the number of columns in the worksheet.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value applied only has only one anchor cell set. It should have both or neither anchor cells set.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value has its <see cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerCell"/> and <see cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerCell"/> 
            anchors set but they are from different worksheets.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the row was removed from the worksheet.</exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Comment"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.SetCellValue(System.Int32,System.Object)">
            <summary>
            Sets the value of a cell at the specified column index.
            </summary>
            <param name="columnIndex">The 0-based index of the cell within the <see cref="T:Infragistics.Documents.Excel.WorksheetRow"/>.</param>
            <param name="value">The value to assign to the cell.</param>
            <remarks>
            <p class="body">
            If this cell belongs to a merged cell region and it is the top-left cell of the region, getting and setting the value 
            will get and set the value of the associated merged cell region. Getting the value of other cells in a merged cell region
            will always return null. Setting the value of other cells in a merged cell region will have no effect.
            </p>
            <p class="body">
            If a formula has been applied to the cell or a data table is associated with the cell, getting the Value will return the 
            calculated value of the cell.
            </p>
            <p class="body">
            The types supported for the value are:
            <BR/>
            <ul>
            <li class="taskitem"><span class="taskitemtext">System.Byte</span></li>
            <li class="taskitem"><span class="taskitemtext">System.SByte</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Int16</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Int64</span></li>
            <li class="taskitem"><span class="taskitemtext">System.UInt16</span></li>
            <li class="taskitem"><span class="taskitemtext">System.UInt64</span></li>
            <li class="taskitem"><span class="taskitemtext">System.UInt32</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Int32</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Single</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Double</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Boolean</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Char</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Enum</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Decimal</span></li>
            <li class="taskitem"><span class="taskitemtext">System.DateTime</span></li>
            <li class="taskitem"><span class="taskitemtext">System.String</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Text.StringBuilder</span></li>
            <li class="taskitem"><span class="taskitemtext">System.DBNull</span></li>
            <li class="taskitem"><span class="taskitemtext"><see cref="T:Infragistics.Documents.Excel.ErrorValue"/></span></li>
            <li class="taskitem"><span class="taskitemtext"><see cref="T:Infragistics.Documents.Excel.FormattedString"/></span></li>
            </ul>
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex"/> is less than zero or greater than or equal to the number of columns in the worksheet.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The assigned value's type is not supported and can't be exported to Excel.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value assigned is a <see cref="T:Infragistics.Documents.Excel.Formula"/>. Instead, <see cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetCell)"/> 
            should be called on the Formula, passing in the cell.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value assigned is a <see cref="T:Infragistics.Documents.Excel.WorksheetDataTable"/>. Instead, the <see cref="P:Infragistics.Documents.Excel.WorksheetDataTable.CellsInTable"/>
            should be set to a region containing the cell.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value assigned is a FormattedString which is the value another cell or merged cell region.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The value is assigned and this cell is part of an <see cref="T:Infragistics.Documents.Excel.ArrayFormula"/> or WorksheetDataTable.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the row was removed from the worksheet.</exception>
            <value>The value of the cell.</value>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellValue(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedMergedCellsRegion(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.IsCellTypeSupported(System.Type)"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegion.Value"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellFormula(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedDataTable(System.Int32)"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Value"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.TryGetCellFormat(System.Int32,Infragistics.Documents.Excel.IWorksheetCellFormat@)">
            <summary>
            Gets the cell formatting for the cell at the specified column index if it is allocated.
            </summary>
            <param name="columnIndex">The 0-based index of the cell within the <see cref="T:Infragistics.Documents.Excel.WorksheetRow"/>.</param>
            <param name="cellFormat">[Out] The cell formatting for the cell at the specified column index if it is allocated; null otherwise.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex"/> is less than zero or greater than or equal to the number of columns in the worksheet.
            </exception>
            <exception cref="T:System.InvalidOperationException">If the row was removed from the worksheet.</exception>
            <returns>True if the cell formatting is allocated; False otherwise.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetResolvedCellFormat(System.Int32)"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.CellFormat"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellFormat(System.Int32)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.ValidateCellValue(System.Int32)">
            <summary>
            Returns a boolean indicating if the value of the cell is valid considering its associated <see cref="P:Infragistics.Documents.Excel.WorksheetCell.DataValidationRule"/>
            </summary>
            <param name="columnIndex">The 0-based index of the cell within the <see cref="T:Infragistics.Documents.Excel.WorksheetRow"/>.</param>
            <returns>Returns false if the cell has an associated <see cref="P:Infragistics.Documents.Excel.WorksheetCell.DataValidationRule"/> and the current <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Value"/> does not pass the validation defined by that rule; otherwise true is returned.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellValue(System.Int32)"/>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.SetCellValue(System.Int32,System.Object)"/>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DataValidationRules"/>
            <seealso cref="T:Infragistics.Documents.Excel.DataValidationRule"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.DataValidationRule"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetRow.Cells">
            <summary>
            Gets the collection of cells in the row.
            </summary>
            <remarks>
            <p class="body">
            The collection of cells is a fixed length collection, with the maximum number of cells in the collection being 
            <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelColumnCount"/> or <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007ColumnCount"/>,
            depending on the <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat">Workbook.CurrentFormat</see>.  Internally, the cells 
            are only created and added to the collection when they are requested.
            </p>
            <p class="note">
            <b>Note:</b> Iterating the collection will not create all cells. It will only iterate the cells which have already 
            been used.  To create and iterate all cells in the worksheet use a For loop, iterating from 0 to one less than 
            MaxExcelColumnCount, and pass in each index to the collection's indexer.
            </p>
            </remarks>
            <value>The collection of cells in the row.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetRow.Height">
            <summary>
            Gets or sets the height of the row in twips (1/20th of a point).
            </summary>
            <remarks>
            <p class="body">
            If the height of the row is less than zero, the <see cref="P:Infragistics.Documents.Excel.Worksheet.DefaultRowHeight"/> of the
            owning worksheet will be used as the row's height.
            </p>
            <p class="body">
            The value assigned must be between -1 and 8192. Invalid values will be automatically adjusted to valid values.
            </p>
            </remarks>
            <value>The height of the row in twips (1/20th of a point).</value>
            <exception cref="T:System.InvalidOperationException">From the setter if the row was removed from the worksheet.</exception>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetRowCollection">
            <summary>
            A collection of rows in a worksheet.
            </summary>
            <remarks>
            <p class="body">
            Rows in this collection are lazily created (they are only created and added to the collection when they are accessed).
            If this collection is enumerated, it only enumerates the rows which were already accessed.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetRow"/>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Rows"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetRowCollection.MaxCount">
            <summary>
            Gets the maximum number of items allowed in this collection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRowCollection.Insert(System.Int32,System.Int32)">
            <summary>
            Inserts one or more rows into the collection
            </summary>
            <param name="index">the insertion point</param>
            <param name="count">The number of rows to insert</param>
            <exception cref="T:System.InvalidOperationException">If the operation is not allowed, e.g. if it would cause data to be shifted off the worksheet.</exception>
            <exception cref="T:System.IndexOutOfRangeException">If index is negative.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If count is less than 1.</exception>
            <remarks>
            <para class="note"><b>Note:</b> An equal number of rows will be removed (i.e. bumped) off the end of the collection.</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRowCollection.Remove(System.Int32,System.Int32)">
            <summary>
            Removes one or more rows from the collection
            </summary>
            <param name="index">the index of the first row to remove point</param>
            <param name="count">The number of rows to remove</param>
            <exception cref="T:System.InvalidOperationException">If the operation is not allowed, e.g. if it the range intersects with a protected region.</exception>
            <exception cref="T:System.IndexOutOfRangeException">If index is negative.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If count is less than 1.</exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetRowCollection.Item(System.Int32)">
            <summary>
            Gets the row at the specified index.
            </summary>
            <remarks>
            <p class="note">
            <b>Note:</b> Iterating the collection will not create all rows. It will only iterate the rows which have already 
            been used.  To create and iterate all rows in the worksheet use a For loop, iterating from 0 to one less than 
            the maximum row count, and pass in each index to the collection's indexer.
            </p>
            </remarks>
            <param name="index">The zero-based index of the row to get.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="index"/> is greater than or equal to <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelRowCount"/>
            or <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007RowCount"/>, depending on the <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat"/>.
            </exception>
            <value>The row at the specified index.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetCollection">
            <summary>
            A collection of worksheets in a workbook.
            </summary>
            <seealso cref="T:Infragistics.Documents.Excel.Worksheet"/>
            <seealso cref="T:Workbook.Worksheets"/>
        </member>
        <member name="E:Infragistics.Documents.Excel.WorksheetCollection.CollectionChanged">
            <summary>
            Occurs after items in the collection have been added or removed
            </summary>
        </member>
        <member name="E:Infragistics.Documents.Excel.WorksheetCollection.PropertyChanged">
            <summary>
            Occurs after a property value has changed
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCollection.Add(System.String)">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.Worksheet"/> and adds it to the collection.
            </summary>
            <remarks>
            <p class="body">
            If the workbook originally had no worksheets, the newly added worksheet will become the selected worksheet of 
            the workbook.  This can be changed after more worksheets are added by setting the <see cref="P:Infragistics.Documents.Excel.WindowOptions.SelectedWorksheet"/> 
            of the Workbook.
            </p>
            </remarks>
            <param name="name">The name to give the new Worksheet.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name"/> is null or empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name"/> contains the invalid characters: ':', '\', '/', '?', '*', '[', or ']'.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name"/> exceeds 31 characters in length.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name"/> is being used as the name of another worksheet (worksheet names are case-insensitively compared).
            </exception>
            <returns>The Worksheet created with the specified name.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCollection.Clear">
            <summary>
            Clears all worksheets from the collection.
            </summary>
            <remarks>
            <p class="body">
            If there are any <see cref="T:Infragistics.Documents.Excel.NamedReference"/> instances in the <see cref="P:Infragistics.Documents.Excel.Workbook.NamedReferences"/> collection
            with a worksheet for a scope, they will be removed from the <see cref="T:Infragistics.Documents.Excel.Workbook"/>.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCollection.Contains(Infragistics.Documents.Excel.Worksheet)">
            <summary>
            Determines whether a worksheet is in the collection.
            </summary>
            <param name="worksheet">The worksheet to locate in the collection.</param>
            <returns>True if the worksheet is found; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCollection.Exists(System.String)">
            <summary>
            Determines whether a worksheet with the specified name exists in the collection.
            </summary>
            <param name="name">The name of the worksheet to search for. The name is compared case-insensitively.</param>
            <returns>True if a worksheet with the specified name is found; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCollection.IndexOf(Infragistics.Documents.Excel.Worksheet)">
            <summary>
            Gets the index of the specified worksheet in the collection.
            </summary>
            <param name="worksheet">The worksheet of which to get the index.</param>
            <returns>The index of the specified worksheet in the collection.</returns>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Index"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCollection.Remove(Infragistics.Documents.Excel.Worksheet)">
            <summary>
            Removes the specified worksheet from the collection.
            </summary>
            <param name="worksheet">The worksheet to remove from the collection.</param>
            <remarks>
            <p class="body">
            If there are any <see cref="T:Infragistics.Documents.Excel.NamedReference"/> instances in the <see cref="P:Infragistics.Documents.Excel.Workbook.NamedReferences"/> collection
            with the worksheet to remove as their scope, they will be removed from the <see cref="T:Infragistics.Documents.Excel.Workbook"/>.
            </p>
            </remarks>
            <returns>
            True if the worksheet was successfully removed from the collection; 
            False if the worksheet did not exist in the collection.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the worksheet at the specified index from the collection.
            </summary>
            <param name="index">The index of the worksheet to remove from the collection.</param>
            <remarks>
            <p class="body">
            If there are any <see cref="T:Infragistics.Documents.Excel.NamedReference"/> instances in the <see cref="P:Infragistics.Documents.Excel.Workbook.NamedReferences"/> collection
            with the worksheet to remove as their scope, they will be removed from the <see cref="T:Infragistics.Documents.Excel.Workbook"/>.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or <paramref name="index"/> is greater than or equal to <see cref="P:Infragistics.Documents.Excel.WorksheetCollection.Count"/>.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCollection.Count">
            <summary>
            Gets the number of worksheets in the collection.
            </summary>
            <value>The number of worksheets in the collection.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCollection.Item(System.Int32)">
            <summary>
            Gets the worksheet at the specified index.
            </summary>
            <param name="index">The zero-based index of the worksheet to get.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or <paramref name="index"/> is greater than or equal to <see cref="P:Infragistics.Documents.Excel.WorksheetCollection.Count"/>.
            </exception>
            <value>The worksheet at the specified index.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCollection.Item(System.String)">
            <summary>
            Gets the worksheet with the specified name.
            </summary>
            <remarks>
            <p class="body">
            Worksheet names are compared case-insensitively.
            </p>
            </remarks>
            <param name="name">The name of the worksheet to get.</param>
            <exception cref="T:System.InvalidOperationException">
            A worksheet with the specified name does not exist in the collection. 
            </exception>
            <value>The worksheet with the specified name.</value>
            <seealso cref="P:Infragistics.Documents.Excel.Sheet.Name"/>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetShape">
            <summary>
            Abstract base class for all shapes (atomic or compound) in a worksheet.
            </summary>
            <remarks>
            <p class="body">
            Atomic shapes are singular shape entities, such as an image, a polygon, or text.
            Compound shapes are groupings of shapes, and are represented by <see cref="T:Infragistics.Documents.Excel.WorksheetShapeGroup"/>
            instances.
            </p>
            <p class="body">
            Currently, not all shape information is customizable (such as shape rotation).  However,
            for round-tripping purposes, when a shape is loaded from an Excel file, this 
            information in maintained with the shape.  See <see cref="M:Infragistics.Documents.Excel.WorksheetShape.ClearUnknownData"/> for more
            information about unsupported data.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShape.ClearUnknownData">
            <summary>
            Clears the cached unknown shape data which was read in from a parsed excel file.
            </summary>
            <remarks>
            <p class="body">
            This method will only be needed until all shape information is supported and customizable.
            After all shape data can be controlled, this method will become obsolete. Currently, all
            unsupported data will be stored with the shape for round-tripping purposes.  For example, 
            if an Excel file with complex and unsupported shapes is loaded into a 
            <see cref="T:Infragistics.Documents.Excel.Workbook"/> instance, some cell values are changed, and it is saved to
            the same file, the complex shapes will still exist in the workbook.  However, if a
            loaded shape needs to be modified before it is saved back, this method
            allows for that unsupported data to be removed while all supported data is maintained.
            </p>
            <p class="note">
            <B>Note:</B> This method only clears unsupported data.  In future versions of the product, 
            as more shape data is supported, this method will have different effects on the shape, 
            until eventually all data is supported and this method will have no effect on the shape.
            </p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            This method is called on an <see cref="T:Infragistics.Documents.Excel.UnknownShape"/> instance.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShape.CreatePredefinedShape(Infragistics.Documents.Excel.PredefinedShapeType)">
            <summary>
            Creates a shape which is predefined in Microsoft Excel.
            </summary>
            <param name="shapeType">The type of shape to create.</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="shapeType"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.PredefinedShapeType"/> enumeration.
            </exception>
            <returns>A <see cref="T:Infragistics.Documents.Excel.WorksheetShape"/>-derived instance representing the predefined shape.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShape.GetBoundsInTwips">
            <summary>
            Gets the bounds of the shape in twips (1/20th of a point).
            </summary>
            <remarks>
            <p class="body">
            The bounds returned by this method are only valid with the current configuration of the worksheet.
            If any rows or columns before or within the shape are resized, these bounds will no longer reflect the 
            position of the shape.
            </p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerCell"/> or <see cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerCell"/> are null, in which case the shape has no bounds.
            </exception>
            <returns>The bounds of the shape on its worksheet.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetShape.SetBoundsInTwips(Infragistics.Documents.Excel.Sheet,System.Drawing.Rectangle)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShape.GetBoundsInTwips(Infragistics.Documents.Excel.PositioningOptions)">
            <summary>
            Gets the bounds of the shape in twips (1/20th of a point).
            </summary>
            <remarks>
            <p class="body">
            The bounds returned by this method are only valid with the current configuration of the worksheet.
            If any rows or columns before or within the shape are resized, these bounds will no longer reflect the 
            position of the shape.
            </p>
            </remarks>
            <param name="options">The options to use when getting the bounds of the shape.</param>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerCell"/> or <see cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerCell"/> are null, in which case the shape has no bounds.
            </exception>
            <returns>The bounds of the shape on its worksheet.</returns>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetShape.SetBoundsInTwips(Infragistics.Documents.Excel.Sheet,System.Drawing.Rectangle)"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShape.SetBoundsInTwips(Infragistics.Documents.Excel.Sheet,System.Drawing.Rectangle)">
            <summary>
            Sets the bounds of the shape in twips (1/20th of a point).
            </summary>
            <remarks>
            <p class="body">
            The shape will only be positioned at the specified bounds while the worksheet remains in the current configuration.
            Depending on the <see cref="P:Infragistics.Documents.Excel.WorksheetShape.PositioningMode"/> of the shape, it may change bounds if any rows or columns before or within the shape are resized.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sheet"/> is null.
            </exception>
            <param name="sheet">The worksheet on which the shape should be placed.</param>
            <param name="bounds">The new bounds where the shape should be placed.</param> 
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShape.SetBoundsInTwips(Infragistics.Documents.Excel.Sheet,System.Drawing.Rectangle,Infragistics.Documents.Excel.PositioningOptions)">
            <summary>
            Sets the bounds of the shape in twips (1/20th of a point).
            </summary>
            <remarks>
            <p class="body">
            The shape will only be positioned at the specified bounds while the worksheet remains in the current configuration.
            Depending on the <see cref="P:Infragistics.Documents.Excel.WorksheetShape.PositioningMode"/> of the shape, it may change bounds if any rows or columns before or within the shape are resized.
            </p>
            </remarks>s
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sheet"/> is null.
            </exception>
            <param name="sheet">The sheet on which the shape should be placed.</param>
            <param name="bounds">The new bounds where the shape should be placed.</param> 
            <param name="options">The options to use when setting the bounds of the shape.</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShape.Fill">
            <summary>
            Gets or sets the fill to use in the background of the shape.
            </summary>
            <remarks>
            <p class="note">
            <b>Note:</b> some shapes, such as connectors or groups, cannot have a fill set. For these shapes, the value on this property
            will be ignored and lost when the workbook is saved.
            </p>
            </remarks>
            <value>A <see cref="T:Infragistics.Documents.Excel.ShapeFill"/>-derived instance describing the fill of the shape, or null for no fill.</value>
            <seealso cref="M:Infragistics.Documents.Excel.ShapeFill.FromColor(System.Drawing.Color)"/>
            <seealso cref="T:Infragistics.Documents.Excel.ShapeFillSolid"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.Outline"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerCell">
            <summary>
            Gets or sets the cell where the bottom-right corner of the shape resides.
            </summary>
            <remarks>
            <p class="body">
            This anchor cell, along with the <see cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerCell"/>, determines where the shape will be
            positioned on the worksheet.  In addition, the <see cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerPosition"/> and 
            <see cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerPosition"/> properties allow for finer control of the shape's position.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            The value assigned is a cell whose worksheet is not the same as this shape's worksheet.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The value assigned is null and this shape already exists on a worksheet or group.
            </exception>
            <value>The cell where the bottom-right corner of the shape resides.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerPosition"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerPosition"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerPosition">
            <summary>
            Gets or sets the position in the <see cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerCell"/> of the shape's bottom-right corner,
            expressed in percentages.
            </summary>
            <remarks>
            <p class="body">
            These percentages are expressed as distance across the associated dimension of the cell, starting at the 
            top-left corner of the cell.  For example, (0.0, 0.0) represents the top-left corner of the cell, whereas
            (100.0, 100.0) represents the bottom-right corner of the cell.  (50.0, 10.0) would represent the location 
            in the cell which is centered horizontally, and a tenth of the way down from the top.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Either coordinate of the value assigned is outside the range of 0.0 to 100.0.
            </exception>
            <value>The position in the bottom-right corner cell of the shape's bottom-right corner.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerPosition"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShape.FlippedHorizontally">
            <summary>
            Gets or sets the value which indicates whether the shape is flipped horizontally along the vertical center line.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The value is set to True and this shape doesn't allow flipping or rotating, such as a <see cref="T:Infragistics.Documents.Excel.WorksheetChart"/>.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShape.FlippedVertically">
            <summary>
            Gets or sets the value which indicates whether the shape is flipped vertically along the horizontal center line.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The value is set to True and this shape doesn't allow flipping or rotating, such as a <see cref="T:Infragistics.Documents.Excel.WorksheetChart"/>.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShape.Outline">
            <summary>
            Gets or sets the outline to use for the shape.
            </summary>
            <remarks>
            <p class="note">
            <b>Note:</b> some shapes, such as comments or groups, cannot have a outline set. For these shapes, the value on this property
            will be ignored and lost when the workbook is saved.
            </p>
            </remarks>
            <value>A <see cref="T:Infragistics.Documents.Excel.ShapeOutline"/>-derived instance describing the outline of the shape, or null for no outline.</value>
            <seealso cref="M:Infragistics.Documents.Excel.ShapeOutline.FromColorInfo(Infragistics.Documents.Excel.WorkbookColorInfo)"/>
            <seealso cref="T:Infragistics.Documents.Excel.ShapeOutlineSolid"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.Fill"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShape.PositioningMode">
            <summary>
            Gets or sets the way shapes will be repositioned in excel when cells before or within the shape are resized.
            </summary>
            <remarks>
            <p class="body">
            This value will not be saved for shapes contained in a <see cref="T:Infragistics.Documents.Excel.WorksheetShapeGroup"/>, which inherit their
            positioning mode from their parent group.
            </p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value assigned is not defined in the <see cref="T:Infragistics.Documents.Excel.ShapePositioningMode"/> enumeration.
            </exception>
            <value>The way shapes will be repositioned in excel when cells before or within the shape are resized.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerCell">
            <summary>
            Gets or sets the cell where the top-left corner of the shape resides.
            </summary>
            <remarks>
            <p class="body">
            This anchor cell, along with the <see cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerCell"/>, determines where the shape will be
            positioned on the worksheet.  In addition, the <see cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerPosition"/> and 
            <see cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerPosition"/> properties allow for finer control of the shape's position.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            The value assigned is a cell whose worksheet is not the same as this shape's worksheet.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The value assigned is null and this shape already exists on a worksheet or group.
            </exception>
            <value>The cell where the top-left corner of the shape resides.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerPosition"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerPosition"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerPosition">
            <summary>
            Gets or sets the position in the <see cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerCell"/> of the shape's top-left corner,
            expressed in percentages.
            </summary>
            <remarks>
            <p class="body">
            These percentages are expressed as distance across the associated dimension of the cell, starting at the 
            top-left corner of the cell.  For example, (0.0, 0.0) represents the top-left corner of the cell, whereas
            (100.0, 100.0) represents the bottom-right corner of the cell.  (50.0, 10.0) would represent the location 
            in the cell which is centered horizontally, and a tenth of the way down from the top.
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Either coordinate of the value assigned is outside the range of 0.0 to 100.0.
            </exception>
            <value>The position in the top-left corner cell of the shape's top-left corner.</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerCell"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerPosition"/>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerCell"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShape.Visible">
            <summary>
            Gets or sets the value indicating whether the shape is visible on the worksheet.
            </summary>
            <value>The value indicating whether the shape is visible on the worksheet.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShape.Sheet">
            <summary>
            Gets the worksheet on which the shape resides.
            </summary>
            <value>The worksheet on which the shape resides.</value>
            // MD 9/2/08 - Cell Comments
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShape.Worksheet">
            <summary>
            Gets the worksheet on which the shape resides.
            </summary>
            <value>The worksheet on which the shape resides.</value>
            // MD 9/2/08 - Cell Comments
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetShapeGroup">
            <summary>
            Represents a group of shapes in a worksheet.  This group is also a shape which can be 
            positioned and contained within another group or on a worksheet.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShapeGroup.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.Documents.Excel.WorksheetShapeGroup"/> instance.
            </summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetShapeGroupBase">
            <summary>
            Represents a group of shapes in a worksheet.  This group is also a shape which can be 
            positioned and contained within another group or on a worksheet.
            </summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShapeGroupBase.Shapes">
            <summary>
            Gets the collection of shapes contained in the group.
            </summary>
            <value>The collection of shapes contained in the group.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetShapeCollection">
            <summary>
            A collection of <see cref="T:Infragistics.Documents.Excel.WorksheetShape"/> instances in a <see cref="T:Infragistics.Documents.Excel.Worksheet"/> 
            or <see cref="T:Infragistics.Documents.Excel.WorksheetShapeGroup"/>.
            </summary>
            <seealso cref="T:Worksheet.Shapes"/>
            <seealso cref="T:WorksheetShapeGroup.Shapes"/>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShapeCollection.Add(Infragistics.Documents.Excel.PredefinedShapeType,System.Drawing.Rectangle)">
            <summary>
            Adds a predefined shape to the collection with the specified bounds.
            </summary>
            <param name="shapeType">The type of shape to add to the collection.</param>
            <param name="boundsInTwips">The bounds of the shape on the <see cref="T:Infragistics.Documents.Excel.Worksheet"/> in twips (1/20th of a point).</param>
            <exception cref="T:System.InvalidOperationException">
            This shapes collection belongs to a <see cref="T:Infragistics.Documents.Excel.WorksheetShapeGroup"/> which isn't placed on a Worksheet yet. In this case,
            call <see cref="M:Infragistics.Documents.Excel.WorksheetShapeCollection.Add(Infragistics.Documents.Excel.PredefinedShapeType,Infragistics.Documents.Excel.Sheet,System.Drawing.Rectangle)"/> instead and specify the Worksheet where the group will be added.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="shapeType"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.PredefinedShapeType"/> enumeration.
            </exception>
            <returns>A <see cref="T:Infragistics.Documents.Excel.WorksheetShape"/>-derived instance representing the predefined shape.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShapeCollection.Add(Infragistics.Documents.Excel.PredefinedShapeType,Infragistics.Documents.Excel.Sheet,System.Drawing.Rectangle)">
            <summary>
            Adds a predefined shape to the collection with the specified bounds.
            </summary>
            <param name="shapeType">The type of shape to add to the collection.</param>
            <param name="sheet">The <see cref="P:Infragistics.Documents.Excel.WorksheetShapeCollection.Sheet"/> to which the <paramref name="boundsInTwips"/> relate.</param>
            <param name="boundsInTwips">The bounds of the shape on the <paramref name="sheet"/> in twips (1/20th of a point).</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sheet"/> is null.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="shapeType"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.PredefinedShapeType"/> enumeration.
            </exception>
            <returns>A <see cref="T:Infragistics.Documents.Excel.WorksheetShape"/>-derived instance representing the predefined shape.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShapeCollection.Add(Infragistics.Documents.Excel.PredefinedShapeType,Infragistics.Documents.Excel.WorksheetCell,System.Drawing.PointF,Infragistics.Documents.Excel.WorksheetCell,System.Drawing.PointF)">
            <summary>
            Adds a predefined shape to the collection with the specified anchors.
            </summary>
            <param name="shapeType">The type of shape to add to the collection.</param>
            <param name="topLeftCornerCell">The cell where the top-left corner of the shape resides.</param>
            <param name="topLeftCornerPosition">The position in the <paramref name="topLeftCornerCell"/> of the shape's top-left corner,
            expressed in percentages.</param>
            <param name="bottomRightCornerCell">The cell where the bottom-right corner of the shape resides.</param>
            <param name="bottomRightCornerPosition">the position in the <paramref name="bottomRightCornerCell"/> of the shape's bottom-right 
            corner, expressed in percentages.</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="shapeType"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.PredefinedShapeType"/> enumeration.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="topLeftCornerCell"/> or <paramref name="bottomRightCornerCell"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="topLeftCornerCell"/> and <paramref name="bottomRightCornerCell"/> belong to different worksheets or a worksheet other 
            than the worksheet to which this collection belongs.
            </exception>
            <returns>A <see cref="T:Infragistics.Documents.Excel.WorksheetShape"/>-derived instance representing the predefined shape.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShapeCollection.Add(Infragistics.Documents.Excel.WorksheetShape)">
            <summary>
            Adds a shape to the collection.
            </summary>
            <param name="shape">The shape to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="shape"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="shape"/> has already been added to a worksheet or group.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="shape"/> does not have the <see cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerCell"/> 
            or <see cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerCell"/> set.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Adding <paramref name="shape"/> to this collection will place it on a different worksheet then either its 
            TopLeftCornerCell or BottomRightCornerCell or <paramref name="shape"/> is a <see cref="T:Infragistics.Documents.Excel.WorksheetShapeGroup"/> 
            and adding it to this collection will create a similar situation for one of its descendant shapes.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="shape"/> is a WorksheetShapeGroup and this is the group's collection of shapes.
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShapeCollection.AddChart(Infragistics.Documents.Excel.Charts.ChartType,System.Drawing.Rectangle,System.Action{Infragistics.Documents.Excel.WorksheetChart})">
            <summary>
            Adds a chart to the collection with the specified bounds.
            </summary>
            <param name="chartType">The type of chart to add to the collection.</param>
            <param name="boundsInTwips">The bounds of the shape on the worksheet in twips (1/20th of a point).</param>
            <param name="chartInitializer">An optional callback for initializing the chart before it is added to the collection.</param>
            <exception cref="T:System.ArgumentNullException">if worksheet is null.</exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="chartType"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Charts.ChartType"/> enumeration.
            </exception>
            <exception cref="T:System.InvalidOperationException">if a chart is being added to the Shapes collection of another Chart is null.</exception>
            <exception cref="T:System.InvalidOperationException">if a <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat">Workbook.CurrentFormat</see> doesn't support Chart mofications, e.g. 'Excel97To2003' or 'Excel97To2003Template'.</exception>
            <returns>A <see cref="T:Infragistics.Documents.Excel.WorksheetChart"/>-instance.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShapeCollection.AddChart(Infragistics.Documents.Excel.Charts.ChartType,Infragistics.Documents.Excel.Sheet,System.Drawing.Rectangle,System.Action{Infragistics.Documents.Excel.WorksheetChart})">
            <summary>
            Adds a chart to the collection with the specified bounds.
            </summary>
            <param name="chartType">The type of chart to add to the collection.</param>
            <param name="sheet">The <see cref="P:Infragistics.Documents.Excel.WorksheetShapeCollection.Sheet"/> to which the <paramref name="boundsInTwips"/> relate.</param>
            <param name="boundsInTwips">The bounds of the shape on the <paramref name="sheet"/> in twips (1/20th of a point).</param>
            <param name="chartInitializer">An optional callback for initializing the chart before it is added to the collection.</param>
            <exception cref="T:System.ArgumentNullException">if sheet is null.</exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="chartType"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Charts.ChartType"/> enumeration.
            </exception>
            <exception cref="T:System.InvalidOperationException">if a chart is being added to the Shapes collection of another Chart is null.</exception>
            <exception cref="T:System.InvalidOperationException">if a <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat">Workbook.CurrentFormat</see> doesn't support Chart mofications, e.g. 'Excel97To2003' or 'Excel97To2003Template'.</exception>
            <returns>A <see cref="T:Infragistics.Documents.Excel.WorksheetChart"/>-instance.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShapeCollection.AddChart(Infragistics.Documents.Excel.Charts.ChartType,Infragistics.Documents.Excel.WorksheetCell,System.Drawing.PointF,Infragistics.Documents.Excel.WorksheetCell,System.Drawing.PointF,System.Action{Infragistics.Documents.Excel.WorksheetChart})">
            <summary>
            Adds a chart to the collection with the specified bounds.
            </summary>
            <param name="chartType">The type of chart to add to the collection.</param>
            <param name="topLeftCornerCell">The cell where the top-left corner of the shape resides.</param>
            <param name="topLeftCornerPosition">The position in the <paramref name="topLeftCornerCell"/> of the shape's top-left corner,
            expressed in percentages.</param>
            <param name="bottomRightCornerCell">The cell where the bottom-right corner of the shape resides.</param>
            <param name="bottomRightCornerPosition">the position in the <paramref name="bottomRightCornerCell"/> of the shape's bottom-right 
            corner, expressed in percentages.</param>
            <param name="chartInitializer">An optional callback for initializing the chart before it is added to the collection.</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="chartType"/> is not defined in the <see cref="T:Infragistics.Documents.Excel.Charts.ChartType"/> enumeration.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="topLeftCornerCell"/> or <paramref name="bottomRightCornerCell"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="topLeftCornerCell"/> and <paramref name="bottomRightCornerCell"/> belong to different worksheets or a worksheet other 
            than the worksheet to which this collection belongs.
            </exception>
            <exception cref="T:System.InvalidOperationException">if a chart is being added to the Shapes collection of another Chart is null.</exception>
            <exception cref="T:System.InvalidOperationException">if a <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat">Workbook.CurrentFormat</see> doesn't support Chart mofications, e.g. 'Excel97To2003' or 'Excel97To2003Template'.</exception>
            <returns>A <see cref="T:Infragistics.Documents.Excel.WorksheetChart"/>-instance.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShapeCollection.Clear">
            <summary>
            Clears all shapes from the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShapeCollection.Contains(Infragistics.Documents.Excel.WorksheetShape)">
            <summary>
            Determines whether a shape is in the collection.
            </summary>
            <param name="shape">The shape to locate in the collection.</param>
            <returns>True if the shape is found; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShapeCollection.Remove(Infragistics.Documents.Excel.WorksheetShape)">
            <summary>
            Removes the specified shape from the collection.
            </summary>
            <param name="shape">The shape to remove from the collection.</param>
            <returns>
            True if the shape was successfully removed from the collection; 
            False if the shape did not exist in the collection.
            </returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShapeCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the shape at the specified index from the collection.
            </summary>
            <param name="index">The index of the shape to remove from the collection.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or <paramref name="index"/> is greater than or equal to <see cref="P:Infragistics.Documents.Excel.WorksheetShapeCollection.Count"/>.
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShapeCollection.Count">
            <summary>
            Gets the number of shapes in the collection.
            </summary>
            <value>The number of shapes in the collection.</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShapeCollection.Item(System.Int32)">
            <summary>
            Gets the shape at the specified index in the collection.
            </summary>
            <param name="index">The zero-based index of the shape to get.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero or <paramref name="index"/> is greater than or equal to <see cref="P:Infragistics.Documents.Excel.WorksheetShapeCollection.Count"/>.
            </exception>
            <value>The shape at the specified index.</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetShapeWithText">
            <summary>
            Abstract base class for all shapes that can display text.
            </summary>
            <remarks>
            <p class="body">
            Primitive shapes, such as polygons, and cell comments can display regular text or text with mixed formatting and are derived from this class.
            </p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetCellComment"/>
            <seealso cref="T:Infragistics.Documents.Excel.UnknownShape"/>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShapeWithText.Text">
            <summary>
            Gets or sets the formatted text of the shape.
            </summary>
            <value>The formatted text of the shape.</value>
        </member>
        <member name="T:Infragistics.InfragisticsFeatureAttribute">
            <summary>
            Indicates an exposed type or member which was added as part of a new feature.
            </summary>
        </member>
        <member name="M:Infragistics.InfragisticsFeatureAttribute.#ctor">
            <summary>
            Creates a new <see cref="T:Infragistics.InfragisticsFeatureAttribute"/> instance.
            </summary>
        </member>
        <member name="P:Infragistics.InfragisticsFeatureAttribute.Exclude">
            <summary>
            Gets or sets the value indicating whether member or type should be excluded from the internal feature documentation.
            </summary>
        </member>
        <member name="P:Infragistics.InfragisticsFeatureAttribute.FeatureName">
            <summary>
            Gets or sets a short name description of the feature.
            </summary>
        </member>
        <member name="P:Infragistics.InfragisticsFeatureAttribute.SubFeatureName">
            <summary>
            Gets or sets a more granular sub-feature name description of the feature.
            </summary>
        </member>
        <member name="P:Infragistics.InfragisticsFeatureAttribute.Version">
            <summary>
            Gets or sets the version in which the feature was added.
            </summary>
        </member>
    </members>
</doc>
