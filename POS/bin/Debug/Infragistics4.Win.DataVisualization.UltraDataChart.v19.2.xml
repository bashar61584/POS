<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Infragistics4.Win.DataVisualization.UltraDataChart.v19.2</name>
    </assembly>
    <members>
        <member name="T:Infragistics.Win.DataVisualization.SR">
            <summary>
            Internal class for retrieving information from an assembly's resource file.
            </summary>
            <remarks>
            Any assembly that will share this class must have a default assembly level class
            named "AssemblyRef" which has a const string field named "BaseResourceName". The
            value of this const must be the resolved name of the resource file containing the
            resources for the assembly - specifically the string resources. Note, the resolved
            name is the default namespace for the project with the name of the resx file appended.
            e.g.
            class AssemblyRef
            {
            	// the default assembly here was Infragistics.Shared and the name
            	// of the resx file was string.resx
            	public const string BaseResourceName = "Infragistics.Shared.strings";
            }
            
            Additionally, any assemblies using this class should also add the 
            SatelliteContractVersion attribute to the assembly. This essentially provides a 
            version number which any satellite assemblies will use to associate with
            this assembly. Therefore, if the assembly using this class is rebuilt and
            has its version number incremented, the satellite dlls that been built against
            this dll will still work since it is the satellite contract version that binds
            the two. If you do not add this attribute, the compiler will use the assembly
            version number for the satellite contract version.
            e.g.
            [assembly: System.Resources.SatelliteContractVersion("1.0.5006.0")]
            
            And in case someone has a problem where the resources are not being displayed,
            the best thing to use if the log binding viewer (fuslogvw.exe). However, in
            order to have this work with resources, you need to make a modification to the
            registry. You can also have this log all binding info, including successful binds.
            The following info is straight out of MS's docs for settings this up:
            To log all binds in the viewer 
            	Set the HKLM\Software\Microsoft\Fusion\ForceLog registry value to 1 (the value is a DWORD). 
            	By default, Fuslogvw.exe only logs failed attempts to locate assemblies. You might have a situation where it is useful to view all successful assembly binds. For example, you might want to verify that an assembly is loading from your application directory instead of from the global assembly cache. Setting this registry key forces Fuslogvw.exe to log all assembly binds.
            To log bind failures to satellite assemblies 
            	Set the HKLM\Software\Microsoft\Fusion\LogResourceBinds registry value to 1 (the value is a DWORD). 
            	By default, Fuslogvw.exe does not log failed attempts to locate satellite assemblies. Setting this registry key enables this feature.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SR.GetString(System.String)">
            <summary>
            Returns the resource string using the specified name and default culture.
            </summary>
            <param name="name">Name of the string resource to return.</param>
            <returns>Null if the name is null; otherwise a string from the resource for the default culture.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SR.GetString(System.String,System.Object[])">
            <summary>
            Returns the resource string using the specified resource name and default culture. The string is then formatted using the arguments specified.
            </summary>
            <param name="name">Name of the string resource to return.</param>
            <param name="args">Arguments supplied to the string.Format method when formatting the string.</param>
            <returns>Null if the name is null; otherwise a formatted string using the resource specified.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SR.GetString(System.Globalization.CultureInfo,System.String)">
            <summary>
            Returns the resource string using the culture and name specified.
            </summary>
            <param name="culture">Culture whose resource should loaded. The resource will go through a fallback process to locate the appropriate resources.</param>
            <param name="name">Name of the string resource to return.</param>
            <returns>Null if the name is null; otherwise a localized string for specified culture.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SR.GetString(System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            Returns the resource string using the name and culture specified. The string is then formatted using the arguments specified.
            </summary>
            <param name="culture">Culture whose resource should loaded. The resource will go through a fallback process to locate the appropriate resources.</param>
            <param name="name">Name of the string resource to return.</param>
            <param name="args">Arguments supplied to the string.Format method when formatting the string.</param>
            <returns>Null if the name is null; otherwise a formatted string using the resource specified.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SR.GetBitmap(System.String)">
            <summary>
            Gets a Bitmap from this assembly's resources.
            </summary>
            <param name="name">The resource name of the Bitmap to get.</param>
            <returns>The requested Bitmap.</returns>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.LocalizedCategoryAttribute">
            <summary>
            Internal class for returning a localized category string
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LocalizedCategoryAttribute.#ctor(System.String)">
            <summary>
            Initializes a new <b>LocalizedCategoryAttribute</b>
            </summary>
            <param name="category">Name of the resource containing the localizable category name</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LocalizedCategoryAttribute.GetLocalizedString(System.String)">
            <summary>
            Returns the localized category name
            </summary>
            <param name="value">Name of the category to retreive</param>
            <returns>The localized string value</returns>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.LocalizedDescriptionAttribute">
            <summary>
            Internal class for returning the localized description string
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LocalizedDescriptionAttribute.#ctor(System.String)">
            <summary>
            Creates a new instance of a <b>LocalizedDescriptionAttribute</b>
            </summary>
            <param name="description">Name of the resource containing the localizable description</param>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.UltraWinDataChart.Design.AxisConverter">
            <summary>
            Type converter for objects of type Axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraWinDataChart.Design.AxisConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true for System.String.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraWinDataChart.Design.AxisConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts to System.String.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraWinDataChart.Design.AxisConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            CanConvertFrom
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraWinDataChart.Design.AxisConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            ConvertFrom
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.AxesCollection">
            <summary>
            Represents an observable collection of Axis objects.
            </summary>
            <remarks>
            It is not possible to clear the contents of a AxisCollection collection; the Axis
            objects must be removed one at a time.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxesCollection.#ctor">
            <summary>
            Initializes a default, empty AxisCollection.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxesCollection.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxesCollection.OnCollectionResetting(System.EventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.AxesCollection.CollectionResetting"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:System.EventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.AxesCollection.CollectionResetting"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.AxesCollection.CollectionResetting">
            <summary>
            Occurs just before the current axis collection contents are reset
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.IndexCollection">
            <summary>
            Represents a collection of unique indexes
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CalloutLayer">
            <summary>
            Represents an annotation layer that displays crosshair lines that cross through the closest value of the target series under the cursor.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.TargetSeries">
            <summary>
            Gets or sets the series to target this annotation to. If null, this annotation targets all series simultaneously.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeTargetSeries">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.TargetSeries"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.TargetSeries"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetTargetSeries">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.TargetSeries"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.TargetSeries"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.TargetSeriesId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeTargetSeriesId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.FixupSeriesReferences(Infragistics.Win.DataVisualization.SeriesCollection)">
            <summary>
            Used during Serialization to synchronize the axis instance generated matches with the series instances in the collection.
            </summary>
            <param name="seriesCollection"></param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.#ctor">
            <summary>
            Constructs a CalloutLayer
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.AutoCalloutLabelPrecision">
            <summary>
            Gets or sets the precision to use when values are used for the auto callout labels.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeAutoCalloutLabelPrecision">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.AutoCalloutLabelPrecision"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.AutoCalloutLabelPrecision"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetAutoCalloutLabelPrecision">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.AutoCalloutLabelPrecision"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.AutoCalloutLabelPrecision"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutBackground">
            <summary>
            Gets or sets the brush that specifies how the backgrounds for the callouts of the layer are painted. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeCalloutBackground">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutBackground"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutBackground"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetCalloutBackground">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutBackground"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutBackground"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutCollisionMode">
            <summary>
            Gets or sets the strategy to use for avoiding collisions between the callouts in this layer. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeCalloutCollisionMode">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutCollisionMode"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutCollisionMode"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetCalloutCollisionMode">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutCollisionMode"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutCollisionMode"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutInterpolatedValuePrecision">
            <summary>
            Gets or sets the precision to use displaying values for interpolated crosshair positions.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeCalloutInterpolatedValuePrecision">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutInterpolatedValuePrecision"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutInterpolatedValuePrecision"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetCalloutInterpolatedValuePrecision">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutInterpolatedValuePrecision"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutInterpolatedValuePrecision"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutLeaderBrush">
            <summary>
            Gets or sets the brush that specifies how the leader lines for the callouts of the layer are painted.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeCalloutLeaderBrush">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutLeaderBrush"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutLeaderBrush"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetCalloutLeaderBrush">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutLeaderBrush"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutLeaderBrush"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutOutline">
            <summary>
            Gets or sets the brush that specifies how the outlines for the callouts of the layer are painted.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeCalloutOutline">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutOutline"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutOutline"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetCalloutOutline">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutOutline"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutOutline"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPaddingBottom">
            <summary>
            Gets or sets the bottom padding to use within the callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeCalloutPaddingBottom">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPaddingBottom"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPaddingBottom"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetCalloutPaddingBottom">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPaddingBottom"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPaddingBottom"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPaddingLeft">
            <summary>
            Gets or sets the left padding to use withing the callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeCalloutPaddingLeft">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPaddingLeft"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPaddingLeft"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetCalloutPaddingLeft">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPaddingLeft"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPaddingLeft"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPaddingRight">
            <summary>
            Gets or sets the right padding to use within the callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeCalloutPaddingRight">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPaddingRight"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPaddingRight"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetCalloutPaddingRight">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPaddingRight"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPaddingRight"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPaddingTop">
            <summary>
            Gets or sets the top padding to use within the callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeCalloutPaddingTop">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPaddingTop"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPaddingTop"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetCalloutPaddingTop">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPaddingTop"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPaddingTop"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPositionPadding">
            <summary>
            Gets or sets the padding to add to the callout positioning. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeCalloutPositionPadding">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPositionPadding"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPositionPadding"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetCalloutPositionPadding">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPositionPadding"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutPositionPadding"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutStrokeThickness">
            <summary>
            Gets or sets the stroke thickness for the callout backing. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeCalloutStrokeThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutStrokeThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutStrokeThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetCalloutStrokeThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutStrokeThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutStrokeThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutTextColor">
            <summary>
            Gets or sets the color to use for the callout text. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeCalloutTextColor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutTextColor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutTextColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetCalloutTextColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutTextColor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.CalloutTextColor"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.ContentMemberPath">
            <summary>
            Gets or sets the content mapping property for the callouts.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeContentMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.ContentMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.ContentMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetContentMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.ContentMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.ContentMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.IsAutoCalloutBehaviorEnabled">
            <summary>
            Gets or sets how to select the final value to annotate.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeIsAutoCalloutBehaviorEnabled">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.IsAutoCalloutBehaviorEnabled"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.IsAutoCalloutBehaviorEnabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetIsAutoCalloutBehaviorEnabled">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.IsAutoCalloutBehaviorEnabled"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.IsAutoCalloutBehaviorEnabled"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.IsCalloutOffsettingEnabled">
            <summary>
            Gets or sets whether to allow the callouts to be variable distances from the target points, for suppporting collision modes.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeIsCalloutOffsettingEnabled">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.IsCalloutOffsettingEnabled"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.IsCalloutOffsettingEnabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetIsCalloutOffsettingEnabled">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.IsCalloutOffsettingEnabled"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.IsCalloutOffsettingEnabled"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.IsCustomCalloutStyleEnabled">
            <summary>
            Gets or sets whether to allow for custom callout styles.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeIsCustomCalloutStyleEnabled">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.IsCustomCalloutStyleEnabled"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.IsCustomCalloutStyleEnabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetIsCustomCalloutStyleEnabled">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.IsCustomCalloutStyleEnabled"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.IsCustomCalloutStyleEnabled"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.KeyMemberPath">
            <summary>
            Gets or sets the key mapping property for the callouts.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeKeyMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.KeyMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.KeyMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetKeyMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.KeyMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.KeyMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelFontFamily">
            <summary>
            Returns or sets the font family for the label.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelFontSize"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeLabelFontFamily">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelFontFamily"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelFontFamily"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetLabelFontFamily">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelFontFamily"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelFontFamily"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelFontSize">
            <summary>
            Returns or sets the font size for the label.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelFontFamily"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeLabelFontSize">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelFontSize"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelFontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetLabelFontSize">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelFontSize"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelFontSize"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelMemberPath">
            <summary>
            Gets or sets the label mapping property for the callouts.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeLabelMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetLabelMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelTextStyle">
            <summary>
            Returns or sets the font style for the label.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelFontFamily"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelFontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeLabelTextStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelTextStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetLabelTextStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelTextStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.LabelTextStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.UseValueForAutoCalloutLabels">
            <summary>
            Gets or sets whether to use values, rather than labels for auto callout labels.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeUseValueForAutoCalloutLabels">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.UseValueForAutoCalloutLabels"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.UseValueForAutoCalloutLabels"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetUseValueForAutoCalloutLabels">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.UseValueForAutoCalloutLabels"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.UseValueForAutoCalloutLabels"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.XMemberPath">
            <summary>
            Gets or sets the label mapping property for the callouts.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeXMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.XMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.XMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetXMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.XMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.XMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLayer.YMemberPath">
            <summary>
            Gets or sets the label mapping property for the callouts.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ShouldSerializeYMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.YMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.YMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.ResetYMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLayer.YMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLayer.YMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.InvalidateCalloutContent">
            <summary>
            Invalidates content of callout layer
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.OnCalloutContentUpdating(Infragistics.Win.DataVisualization.CalloutContentUpdatingEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.CalloutLayer.CalloutContentUpdating"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.CalloutContentUpdatingEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.CalloutLayer.CalloutContentUpdating"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.CalloutLayer.CalloutContentUpdating">
            <summary>
            Raised to allow you to decide on the content for an automatically created callout.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.OnCalloutLabelUpdating(Infragistics.Win.DataVisualization.CalloutLabelUpdatingEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.CalloutLayer.CalloutLabelUpdating"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.CalloutLabelUpdatingEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.CalloutLayer.CalloutLabelUpdating"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.CalloutLayer.CalloutLabelUpdating">
            <summary>
            Raised to allow you to decide on the label for an automatically created callout.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.OnCalloutSeriesSelecting(Infragistics.Win.DataVisualization.CalloutSeriesSelectingEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.CalloutLayer.CalloutSeriesSelecting"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.CalloutSeriesSelectingEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.CalloutLayer.CalloutSeriesSelecting"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.CalloutLayer.CalloutSeriesSelecting">
            <summary>
            Raised to allow you to select a target series for a data bound callout.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLayer.OnCalloutStyleUpdating(Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.CalloutLayer.CalloutStyleUpdating"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.CalloutLayer.CalloutStyleUpdating"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.CalloutLayer.CalloutStyleUpdating">
            <summary>
            Event raised when updating style of callout layer
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CategoryHighlightLayer">
            <summary>
            Represents an annotation layer that targets a category axis, or all category axes in the chart. 
            If the axis contains any series that are aligned between major gridlines of the axis (column, waterfall, etc) this will render a shape that fills the current category. 
            Otherwise it will render a band with an adjustable thickness at the closest gridline to the pointer position.
            <remarks>
            Setting UseIterpolation to true will cause the x position in the latter case to become affixed to the x position of the pointer.
            </remarks>
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryHighlightLayer.TargetAxis">
            <summary>
            Gets or sets the axis to target this annotation to. If null, this annotation targets all category axes simultaneously.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryHighlightLayer.ShouldSerializeTargetAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategoryHighlightLayer.TargetAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryHighlightLayer.TargetAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryHighlightLayer.ResetTargetAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryHighlightLayer.TargetAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryHighlightLayer.TargetAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryHighlightLayer.TargetAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryHighlightLayer.ShouldSerializeTargetAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryHighlightLayer.FixupAxisReferences(Infragistics.Win.DataVisualization.AxesCollection)">
            <summary>
            Used during Serialization to synchronize the axis instance generated matches with the axis instances in the collection.
            </summary>
            <param name="axes"></param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryHighlightLayer.#ctor">
            <summary>
            Constructs a CategoryHighlightLayer
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryHighlightLayer.BandHighlightWidth">
            <summary>
            Gets or sets the width to use for the highlight region if drawing a band rather than filling a category.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryHighlightLayer.ShouldSerializeBandHighlightWidth">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategoryHighlightLayer.BandHighlightWidth"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryHighlightLayer.BandHighlightWidth"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryHighlightLayer.ResetBandHighlightWidth">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryHighlightLayer.BandHighlightWidth"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryHighlightLayer.BandHighlightWidth"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryHighlightLayer.UseInterpolation">
            <summary>
            Gets or sets whether to use value interpolation when drawing a line through the best value for the pointer position.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryHighlightLayer.ShouldSerializeUseInterpolation">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategoryHighlightLayer.UseInterpolation"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryHighlightLayer.UseInterpolation"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryHighlightLayer.ResetUseInterpolation">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryHighlightLayer.UseInterpolation"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryHighlightLayer.UseInterpolation"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryHighlightLayer.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer">
            <summary>
            Represents an annotation layer that highlights items in a series that use a category axis 
            either by drawing a banded shape at their position, or by rendering a marker at their position.
            <remarks>
            Depending on the type of series, the default highlight will be affected. To override 
            the type of highlight used, you can set the HighlightType property.
            </remarks>
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.TargetSeries">
            <summary>
            Gets or sets the series to target this annotation to. If null, this annotation targets all series simultaneously.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.ShouldSerializeTargetSeries">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.TargetSeries"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.TargetSeries"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.ResetTargetSeries">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.TargetSeries"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.TargetSeries"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.TargetSeriesId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.ShouldSerializeTargetSeriesId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.FixupSeriesReferences(Infragistics.Win.DataVisualization.SeriesCollection)">
            <summary>
            Used during Serialization to synchronize the axis instance generated matches with the series instances in the collection.
            </summary>
            <param name="seriesCollection"></param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.#ctor">
            <summary>
            Constructs a CategoryItemHightlightLayer
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.BandHighlightWidth">
            <summary>
            Gets or sets the width to use for the highlight region if highlighting items in a grid aligned series (line, spline, etc), with a banded shape.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.ShouldSerializeBandHighlightWidth">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.BandHighlightWidth"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.BandHighlightWidth"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.ResetBandHighlightWidth">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.BandHighlightWidth"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.BandHighlightWidth"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.HighlightType">
            <summary>
            Gets or sets which type of highlight shape to use when highlighting items.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.ShouldSerializeHighlightType">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.HighlightType"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.HighlightType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.ResetHighlightType">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.HighlightType"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.HighlightType"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.SkipUnknownValues">
            <summary>
            Gets or sets whether to skip unknown values when searching for series values.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.ShouldSerializeSkipUnknownValues">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.SkipUnknownValues"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.SkipUnknownValues"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.ResetSkipUnknownValues">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.SkipUnknownValues"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.SkipUnknownValues"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.UseInterpolation">
            <summary>
            Gets or sets whether to use value interpolation when drawing a line through the best value for the pointer position.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.ShouldSerializeUseInterpolation">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.UseInterpolation"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.UseInterpolation"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.ResetUseInterpolation">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.UseInterpolation"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.UseInterpolation"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryItemHighlightLayer.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CategoryToolTipLayer">
            <summary>
            Represents an annotation layer that displays grouped tooltips for series that use a category axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryToolTipLayer.TargetAxis">
            <summary>
            Gets or sets the Axis to target this annotation to. If null, this annotation layer will not render content.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryToolTipLayer.ShouldSerializeTargetAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategoryToolTipLayer.TargetAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryToolTipLayer.TargetAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryToolTipLayer.ResetTargetAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryToolTipLayer.TargetAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryToolTipLayer.TargetAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryToolTipLayer.TargetAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryToolTipLayer.ShouldSerializeTargetAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryToolTipLayer.FixupAxisReferences(Infragistics.Win.DataVisualization.AxesCollection)">
            <summary>
            Used during Serialization to synchronize the axis instance generated matches with the axis instances in the collection.
            </summary>
            <param name="axes"></param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryToolTipLayer.#ctor">
            <summary>
            Constructs a CategoryTooltipLayer.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryToolTipLayer.ToolTipPosition">
            <summary>
            Gets or sets the Position to apply to the tooltip containers.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryToolTipLayer.ShouldSerializeToolTipPosition">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategoryToolTipLayer.ToolTipPosition"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryToolTipLayer.ToolTipPosition"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryToolTipLayer.ResetToolTipPosition">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryToolTipLayer.ToolTipPosition"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryToolTipLayer.ToolTipPosition"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryToolTipLayer.UseInterpolation">
            <summary>
            Gets or sets whether to use value interpolation when drawing the tooltips.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryToolTipLayer.ShouldSerializeUseInterpolation">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategoryToolTipLayer.UseInterpolation"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryToolTipLayer.UseInterpolation"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryToolTipLayer.ResetUseInterpolation">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryToolTipLayer.UseInterpolation"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryToolTipLayer.UseInterpolation"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryToolTipLayer.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CrosshairLayer">
            <summary>
            Represents an annotation layer that displays crosshair lines that cross through the closest value of the target series under the cursor.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.TargetSeries">
            <summary>
            Gets or sets the series to target this annotation to. If null, this annotation targets all series simultaneously.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeTargetSeries">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.TargetSeries"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.TargetSeries"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetTargetSeries">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.TargetSeries"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.TargetSeries"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.TargetSeriesId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeTargetSeriesId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.FixupSeriesReferences(Infragistics.Win.DataVisualization.SeriesCollection)">
            <summary>
            Used during Serialization to synchronize the axis instance generated matches with the series instances in the collection.
            </summary>
            <param name="seriesCollection"></param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.#ctor">
            <summary>
            Constructs a CrosshairLayer
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.HorizontalLineStroke">
            <summary>
            Gets or sets the color to use for the horizontal line. Leave null for an automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeHorizontalLineStroke">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.HorizontalLineStroke"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.HorizontalLineStroke"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetHorizontalLineStroke">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.HorizontalLineStroke"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.HorizontalLineStroke"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.HorizontalLineVisibility">
            <summary>
            Gets or sets whether to display the horizontal line.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeHorizontalLineVisibility">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.HorizontalLineVisibility"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.HorizontalLineVisibility"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetHorizontalLineVisibility">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.HorizontalLineVisibility"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.HorizontalLineVisibility"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.IsAxisAnnotationEnabled">
            <summary>
            Gets or sets whether to draw annotations over the axes where the crosshair meets with them.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeIsAxisAnnotationEnabled">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.IsAxisAnnotationEnabled"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.IsAxisAnnotationEnabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetIsAxisAnnotationEnabled">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.IsAxisAnnotationEnabled"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.IsAxisAnnotationEnabled"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.SkipUnknownValues">
            <summary>
            Gets or sets whether to skip unknown values when searching for series values.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeSkipUnknownValues">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.SkipUnknownValues"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.SkipUnknownValues"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetSkipUnknownValues">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.SkipUnknownValues"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.SkipUnknownValues"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.UseInterpolation">
            <summary>
            Gets or sets whether to use value interpolation when drawing a line through the best value for the cursor position.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeUseInterpolation">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.UseInterpolation"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.UseInterpolation"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetUseInterpolation">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.UseInterpolation"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.UseInterpolation"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.VerticalLineStroke">
            <summary>
            Gets or sets the color to use for vertical line. Leave null for an automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeVerticalLineStroke">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.VerticalLineStroke"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.VerticalLineStroke"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetVerticalLineStroke">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.VerticalLineStroke"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.VerticalLineStroke"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.VerticalLineVisibility">
            <summary>
            Gets or sets whether to display the vertical line.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeVerticalLineVisibility">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.VerticalLineVisibility"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.VerticalLineVisibility"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetVerticalLineVisibility">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.VerticalLineVisibility"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.VerticalLineVisibility"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationBackground">
            <summary>
            Gets or sets the color to use for the x axis annotation backing. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeXAxisAnnotationBackground">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationBackground"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationBackground"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetXAxisAnnotationBackground">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationBackground"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationBackground"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationInterpolatedValuePrecision">
            <summary>
            Gets or sets the precision to use displaying values for interpolated crosshair positions.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeXAxisAnnotationInterpolatedValuePrecision">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationInterpolatedValuePrecision"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationInterpolatedValuePrecision"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetXAxisAnnotationInterpolatedValuePrecision">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationInterpolatedValuePrecision"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationInterpolatedValuePrecision"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationOutline">
            <summary>
            Gets or sets the color to use for the x axis annotation outline. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeXAxisAnnotationOutline">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationOutline"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationOutline"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetXAxisAnnotationOutline">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationOutline"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationOutline"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationPaddingBottom">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeXAxisAnnotationPaddingBottom">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationPaddingBottom"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationPaddingBottom"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetXAxisAnnotationPaddingBottom">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationPaddingBottom"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationPaddingBottom"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationPaddingLeft">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeXAxisAnnotationPaddingLeft">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationPaddingLeft"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationPaddingLeft"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetXAxisAnnotationPaddingLeft">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationPaddingLeft"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationPaddingLeft"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationPaddingRight">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeXAxisAnnotationPaddingRight">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationPaddingRight"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationPaddingRight"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetXAxisAnnotationPaddingRight">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationPaddingRight"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationPaddingRight"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationPaddingTop">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeXAxisAnnotationPaddingTop">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationPaddingTop"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationPaddingTop"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetXAxisAnnotationPaddingTop">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationPaddingTop"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationPaddingTop"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationStrokeThickness">
            <summary>
            Gets or sets the stroke thickness for the x axis annotation backing. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeXAxisAnnotationStrokeThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationStrokeThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationStrokeThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetXAxisAnnotationStrokeThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationStrokeThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationStrokeThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationTextColor">
            <summary>
            Gets or sets the color to use for the x axis annotation text. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeXAxisAnnotationTextColor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationTextColor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationTextColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetXAxisAnnotationTextColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationTextColor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.XAxisAnnotationTextColor"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationBackground">
            <summary>
            Gets or sets the color to use for the y axis annotation backing. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeYAxisAnnotationBackground">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationBackground"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationBackground"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetYAxisAnnotationBackground">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationBackground"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationBackground"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationInterpolatedValuePrecision">
            <summary>
            Gets or sets the precision to use displaying values for interpolated crosshair positions.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeYAxisAnnotationInterpolatedValuePrecision">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationInterpolatedValuePrecision"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationInterpolatedValuePrecision"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetYAxisAnnotationInterpolatedValuePrecision">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationInterpolatedValuePrecision"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationInterpolatedValuePrecision"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationOutline">
            <summary>
            Gets or sets the color to use for the y axis annotation outline. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeYAxisAnnotationOutline">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationOutline"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationOutline"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetYAxisAnnotationOutline">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationOutline"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationOutline"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationPaddingBottom">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeYAxisAnnotationPaddingBottom">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationPaddingBottom"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationPaddingBottom"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetYAxisAnnotationPaddingBottom">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationPaddingBottom"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationPaddingBottom"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationPaddingLeft">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeYAxisAnnotationPaddingLeft">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationPaddingLeft"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationPaddingLeft"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetYAxisAnnotationPaddingLeft">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationPaddingLeft"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationPaddingLeft"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationPaddingRight">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeYAxisAnnotationPaddingRight">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationPaddingRight"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationPaddingRight"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetYAxisAnnotationPaddingRight">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationPaddingRight"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationPaddingRight"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationPaddingTop">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeYAxisAnnotationPaddingTop">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationPaddingTop"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationPaddingTop"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetYAxisAnnotationPaddingTop">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationPaddingTop"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationPaddingTop"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationStrokeThickness">
            <summary>
            Gets or sets the stroke thickness for the y axis annotation backing. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeYAxisAnnotationStrokeThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationStrokeThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationStrokeThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetYAxisAnnotationStrokeThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationStrokeThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationStrokeThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationTextColor">
            <summary>
            Gets or sets the color to use for the y axis annotation text. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ShouldSerializeYAxisAnnotationTextColor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationTextColor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationTextColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.ResetYAxisAnnotationTextColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationTextColor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CrosshairLayer.YAxisAnnotationTextColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CrosshairLayer.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.FinalValueLayer">
            <summary>
            Represents an annotation layer that displays crosshair lines that cross through the closest value of the target series under the cursor.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinalValueLayer.TargetSeries">
            <summary>
            Gets or sets the series to target this annotation to. If null, this annotation targets all series simultaneously.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.ShouldSerializeTargetSeries">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.TargetSeries"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.TargetSeries"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.ResetTargetSeries">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.TargetSeries"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.TargetSeries"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinalValueLayer.TargetSeriesId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.ShouldSerializeTargetSeriesId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.FixupSeriesReferences(Infragistics.Win.DataVisualization.SeriesCollection)">
            <summary>
            Used during Serialization to synchronize the axis instance generated matches with the series instances in the collection.
            </summary>
            <param name="seriesCollection"></param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.#ctor">
            <summary>
            Constructs a FinalValueLayer
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationBackground">
            <summary>
            Gets or sets the color to use for the axis annotation backing. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.ShouldSerializeAxisAnnotationBackground">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationBackground"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationBackground"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.ResetAxisAnnotationBackground">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationBackground"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationBackground"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationInterpolatedValuePrecision">
            <summary>
            Gets or sets the precision to use displaying values for interpolated crosshair positions.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.ShouldSerializeAxisAnnotationInterpolatedValuePrecision">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationInterpolatedValuePrecision"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationInterpolatedValuePrecision"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.ResetAxisAnnotationInterpolatedValuePrecision">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationInterpolatedValuePrecision"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationInterpolatedValuePrecision"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationOutline">
            <summary>
            Gets or sets the color to use for the axis annotation outline. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.ShouldSerializeAxisAnnotationOutline">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationOutline"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationOutline"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.ResetAxisAnnotationOutline">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationOutline"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationOutline"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationPaddingBottom">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.ShouldSerializeAxisAnnotationPaddingBottom">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationPaddingBottom"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationPaddingBottom"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.ResetAxisAnnotationPaddingBottom">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationPaddingBottom"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationPaddingBottom"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationPaddingLeft">
            <summary>
            Gets or sets the left padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.ShouldSerializeAxisAnnotationPaddingLeft">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationPaddingLeft"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationPaddingLeft"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.ResetAxisAnnotationPaddingLeft">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationPaddingLeft"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationPaddingLeft"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationPaddingRight">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.ShouldSerializeAxisAnnotationPaddingRight">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationPaddingRight"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationPaddingRight"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.ResetAxisAnnotationPaddingRight">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationPaddingRight"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationPaddingRight"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationPaddingTop">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.ShouldSerializeAxisAnnotationPaddingTop">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationPaddingTop"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationPaddingTop"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.ResetAxisAnnotationPaddingTop">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationPaddingTop"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationPaddingTop"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationStrokeThickness">
            <summary>
            Gets or sets the stroke thickness for the axis annotation backing. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.ShouldSerializeAxisAnnotationStrokeThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationStrokeThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationStrokeThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.ResetAxisAnnotationStrokeThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationStrokeThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationStrokeThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationTextColor">
            <summary>
            Gets or sets the color to use for the axis annotation text. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.ShouldSerializeAxisAnnotationTextColor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationTextColor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationTextColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.ResetAxisAnnotationTextColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationTextColor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.AxisAnnotationTextColor"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinalValueLayer.FinalValueSelectionMode">
            <summary>
            Gets or sets how to select the final value to annotate.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.ShouldSerializeFinalValueSelectionMode">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.FinalValueSelectionMode"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.FinalValueSelectionMode"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.ResetFinalValueSelectionMode">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.FinalValueSelectionMode"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinalValueLayer.FinalValueSelectionMode"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinalValueLayer.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ItemToolTipLayer">
            <summary>
            Represents an annotation layer that displays tooltips for all target series individually.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ItemToolTipLayer.TargetSeries">
            <summary>
            Gets or sets the series to target this annotation to. If null, this annotation targets all series simultaneously.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ItemToolTipLayer.ShouldSerializeTargetSeries">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ItemToolTipLayer.TargetSeries"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ItemToolTipLayer.TargetSeries"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ItemToolTipLayer.ResetTargetSeries">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ItemToolTipLayer.TargetSeries"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ItemToolTipLayer.TargetSeries"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ItemToolTipLayer.TargetSeriesId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ItemToolTipLayer.ShouldSerializeTargetSeriesId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ItemToolTipLayer.FixupSeriesReferences(Infragistics.Win.DataVisualization.SeriesCollection)">
            <summary>
            Used during Serialization to synchronize the axis instance generated matches with the series instances in the collection.
            </summary>
            <param name="seriesCollection"></param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ItemToolTipLayer.#ctor">
            <summary>
            Constructs an ItemTooltipLayer.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ItemToolTipLayer.SkipUnknownValues">
            <summary>
            Gets or sets whether to skip past unknown values when searching for series values.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ItemToolTipLayer.ShouldSerializeSkipUnknownValues">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ItemToolTipLayer.SkipUnknownValues"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ItemToolTipLayer.SkipUnknownValues"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ItemToolTipLayer.ResetSkipUnknownValues">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ItemToolTipLayer.SkipUnknownValues"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ItemToolTipLayer.SkipUnknownValues"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ItemToolTipLayer.UseInterpolation">
            <summary>
            Gets or sets whether to use value interpolation when drawing the tooltips.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ItemToolTipLayer.ShouldSerializeUseInterpolation">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ItemToolTipLayer.UseInterpolation"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ItemToolTipLayer.UseInterpolation"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ItemToolTipLayer.ResetUseInterpolation">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ItemToolTipLayer.UseInterpolation"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ItemToolTipLayer.UseInterpolation"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ItemToolTipLayer.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.RingSeries">
            <summary>
            Represents one ring in <see cref="T:Infragistics.Win.DataVisualization.UltraDoughnutChart"/> series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeries.SelectedSlices">
            <summary>
            The indexes of the selected slices for this <see cref="T:Infragistics.Win.DataVisualization.RingSeries"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeries.ShouldSerializeSelectedSlices">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeries.SelectedSlices"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeries.SelectedSlices"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeries.ResetSelectedSlices">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeries.SelectedSlices"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeries.SelectedSlices"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeries.ExplodedSlices">
            <summary>
            The indexes of the exploded slices for this <see cref="T:Infragistics.Win.DataVisualization.RingSeries"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeries.ShouldSerializeExplodedSlices">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeries.ExplodedSlices"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeries.ExplodedSlices"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeries.ResetExplodedSlices">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeries.ExplodedSlices"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeries.ExplodedSlices"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeries.SynchronizeCollections">
            <summary>
            Ensure the collections on derived classes are updated.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Win.DataVisualization.RingSeries"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.RingSeriesBase">
            <summary>
            The base class for the series in the <see cref="T:Infragistics.Win.DataVisualization.UltraDoughnutChart"/>.
            </summary>
            <summary>
            Represents a <see cref="T:Infragistics.Win.DataVisualization.UltraDoughnutChart"/> base series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.Chart">
            <summary>
            The <see cref="T:Infragistics.Win.DataVisualization.UltraDoughnutChart"/> associated to this series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.OthersCategoryThreshold">
            <summary>
            Gets or sets the threshold value that determines if slices are grouped into the Others slice.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeOthersCategoryThreshold">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.OthersCategoryThreshold"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.OthersCategoryThreshold"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetOthersCategoryThreshold">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.OthersCategoryThreshold"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.OthersCategoryThreshold"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.DataSource">
            <summary>
            Gets or sets the data source for the ring series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeDataSource">
            <summary>
            Returns whether the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.DataSource"/> property requires serialization.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetDataSource">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.DataSource"/> property to its default value.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.DataMember">
            <summary>
            Gets or sets the data member of the data source from which the RingSeries' categorical items collection is populated.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.DataSource"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeDataMember">
            <summary>
            Returns whether the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.DataMember"/> property requires serialization.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetDataMember">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.DataMember"/> property to its default value.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.Brushes">
            <summary>
            Gets or sets the Brushes property. The brushes property defines the palette from which automatically assigned slice brushes are selected.
            </summary>
            <remarks>
            The brushes property defines the palette from which automatically assigned series brushes are selected.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeBrushes">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.Brushes"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.Brushes"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetBrushes">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.Brushes"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.Brushes"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.Outlines">
            <summary>
            Gets or sets the Outlines property. The Outlines property defines the palette from which automatically assigned slice outlines are selected.
            </summary>
            <remarks>
            The brushes property defines the palette from which automatically assigned series brushes are selected.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeOutlines">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.Outlines"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.Outlines"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetOutlines">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.Outlines"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.Outlines"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.ShowDefaultTooltip">
            <summary>
            Gets or sets whether or not the default tooltip for this <see cref="T:Infragistics.Win.DataVisualization.RingSeriesBase"/> will be shown.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeShowDefaultTooltip">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.ShowDefaultTooltip"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.ShowDefaultTooltip"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetShowDefaultTooltip">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.ShowDefaultTooltip"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.ShowDefaultTooltip"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.SetDataBinding(System.Object,System.String)">
            <summary>
            Sets the datasource and datamember for the control in one atomic operation.
            </summary>
            <param name="dataSource">Data source to bind to.</param>
            <param name="dataMember">Data member.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.Dispose">
            <summary>
            Disposes the object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.SynchronizeCollections">
            <summary>
            Ensure the collections on derived classes are updated.
            </summary>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.RingSeriesBase.TooltipContentUpdating">
            <summary>
            Occurs when the ToolTip for this <see cref="T:Infragistics.Win.DataVisualization.RingSeries"/> is updating the content to be rendered.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontBrush">
            <summary>
            Gets or sets the font brush for the labels.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeFontBrush">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontBrush"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontBrush"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetFontBrush">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontBrush"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontBrush"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontFamily">
            <summary>
            Returns or sets the font family for the labels.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontSize"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeFontFamily">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontFamily"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontFamily"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetFontFamily">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontFamily"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontFamily"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontSize">
            <summary>
            Returns or sets the font size for the labels.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontFamily"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeFontSize">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontSize"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetFontSize">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontSize"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontSize"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontStyle">
            <summary>
            Returns or sets the font style for the labels.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontFamily"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeFontStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetFontStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.FontStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.IsSurfaceInteractionDisabled">
            <summary>
            Gets or sets whether all surface interactions with the plot area should be disabled.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeIsSurfaceInteractionDisabled">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.IsSurfaceInteractionDisabled"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.IsSurfaceInteractionDisabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetIsSurfaceInteractionDisabled">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.IsSurfaceInteractionDisabled"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.IsSurfaceInteractionDisabled"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelExtent">
            <summary>
            Gets or sets the pixel amount by which the labels are offset from the edge of the slices.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeLabelExtent">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelExtent"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelExtent"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetLabelExtent">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelExtent"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelExtent"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelInnerColor">
            <summary>
            Gets or sets the color for labels rendered inside of the pie chart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeLabelInnerColor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelInnerColor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelInnerColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetLabelInnerColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelInnerColor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelInnerColor"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelMemberPath">
            <summary>
            Gets or sets the property name that contains the labels.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeLabelMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetLabelMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelOuterColor">
            <summary>
            Gets or sets the color for labels rendered outside of the pie chart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeLabelOuterColor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelOuterColor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelOuterColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetLabelOuterColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelOuterColor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelOuterColor"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelsPosition">
            <summary>
            Gets or sets the position of chart labels.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeLabelsPosition">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelsPosition"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelsPosition"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetLabelsPosition">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelsPosition"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LabelsPosition"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.LeaderLineMargin">
            <summary>
            Gets or sets the margin between a label and its leader line. The default is 6 pixels.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeLeaderLineMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LeaderLineMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LeaderLineMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetLeaderLineMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LeaderLineMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LeaderLineMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.LeaderLineStyle">
            <summary>
            Gets or sets the style for the leader lines.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeLeaderLineStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LeaderLineStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LeaderLineStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetLeaderLineStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LeaderLineStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LeaderLineStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.LeaderLineType">
            <summary>
            Gets or sets what type of leader lines will be used for the outside end labels.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeLeaderLineType">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LeaderLineType"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LeaderLineType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetLeaderLineType">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LeaderLineType"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LeaderLineType"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.LeaderLineVisibility">
            <summary>
            Gets or sets whether the leader lines are visible.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeLeaderLineVisibility">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LeaderLineVisibility"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LeaderLineVisibility"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetLeaderLineVisibility">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LeaderLineVisibility"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LeaderLineVisibility"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.Legend">
            <summary>
            Gets or sets the legend used for the current chart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeLegend">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.Legend"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.Legend"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetLegend">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.Legend"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.Legend"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.LegendLabelMemberPath">
            <summary>
            Gets or sets the property name that contains the legend labels.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeLegendLabelMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LegendLabelMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LegendLabelMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetLegendLabelMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LegendLabelMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.LegendLabelMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.OthersCategoryStyle">
            <summary>
            Gets or sets the style used for the Others slice.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeOthersCategoryStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.OthersCategoryStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.OthersCategoryStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetOthersCategoryStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.OthersCategoryStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.OthersCategoryStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.OthersCategoryText">
            <summary>
            Gets or sets the label of the Others slice.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeOthersCategoryText">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.OthersCategoryText"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.OthersCategoryText"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetOthersCategoryText">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.OthersCategoryText"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.OthersCategoryText"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.OthersCategoryType">
            <summary>
            Gets or sets whether to use numeric or percent-based threshold value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeOthersCategoryType">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.OthersCategoryType"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.OthersCategoryType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetOthersCategoryType">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.OthersCategoryType"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.OthersCategoryType"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.RadiusFactor">
            <summary>
            Gets or sets the scaling factor of the chart's radius. Value between 0 and 1.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeRadiusFactor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.RadiusFactor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.RadiusFactor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetRadiusFactor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.RadiusFactor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.RadiusFactor"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.SelectedStyle">
            <summary>
            Gets or sets the style used when a slice is selected.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeSelectedStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.SelectedStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.SelectedStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetSelectedStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.SelectedStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.SelectedStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.StartAngle">
            <summary>
            Gets or sets the starting angle of the chart.
            </summary>
            <remarks>
            The default zero value is equivalent to 3 o'clock.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeStartAngle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.StartAngle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.StartAngle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetStartAngle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.StartAngle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.StartAngle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RingSeriesBase.ValueMemberPath">
            <summary>
            Gets or Sets the property name that contains the values.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ShouldSerializeValueMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.ValueMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.ValueMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ResetValueMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.ValueMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RingSeriesBase.ValueMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.ProvideContainer(System.Object)">
            <summary>
            Called by the UI framework to provide a UI container for rendering this control.
            </summary>
            <param name="container">The UI container element.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.OnFormatLabel(Infragistics.Win.DataVisualization.FormatLabelEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.RingSeriesBase.FormatLabel"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.FormatLabelEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.RingSeriesBase.FormatLabel"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.RingSeriesBase.FormatLabel">
            <summary>
            Used to customize the labels for the slices in the chart based on the item in context.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.OnFormatLegendLabel(Infragistics.Win.DataVisualization.FormatLabelEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.RingSeriesBase.FormatLegendLabel"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.FormatLabelEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.RingSeriesBase.FormatLegendLabel"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.RingSeriesBase.FormatLegendLabel">
            <summary>
            Used to format the legend labels for the slices in the chart based on the item in context.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.OnPropertyChanged(System.String)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.RingSeriesBase.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property that was changed</param>
            <seealso cref="T:System.ComponentModel.PropertyChangedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.RingSeriesBase.PropertyChanged"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.RingSeriesBase.PropertyChanged">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesBase.OnPropertyUpdated(Infragistics.Win.DataVisualization.PropertyUpdatedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.RingSeriesBase.PropertyUpdated"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.PropertyUpdatedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.RingSeriesBase.PropertyUpdated"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.RingSeriesBase.PropertyUpdated">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.UltraDoughnutChart">
            <summary>
             Represents concentric circles divided on arcs  depending on data.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.SelectedStyle">
            <summary>
            The style that will be applied to the selected slices.
            </summary>
            <remarks>Note that the SelectedStyle properties set on the <see cref="T:Infragistics.Win.DataVisualization.RingSeries"/> have priority over the ones set on the <see cref="T:Infragistics.Win.DataVisualization.UltraDoughnutChart"/>.</remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDoughnutChart.ShouldSerializeSelectedStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.SelectedStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.SelectedStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDoughnutChart.ResetSelectedStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.SelectedStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.SelectedStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.Series">
            <summary>
            The <see cref="T:Infragistics.Win.DataVisualization.RingSeriesCollection"/> for this <see cref="T:Infragistics.Win.DataVisualization.UltraDoughnutChart"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDoughnutChart.ShouldSerializeSeries">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.Series"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.Series"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDoughnutChart.ResetSeries">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.Series"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.Series"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDoughnutChart.OnHandleCreated(System.EventArgs)">
            <summary>
            Overridden to notify the proxy to create renderers based on the existing layers.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDoughnutChart.Dispose(System.Boolean)">
            <summary>
            Called when the control is disposing.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.Font">
            <summary>
            This property has no effect. Please use the <see cref="P:FontFamily"/>, 
            <see cref="P:FontStyle"/> and <see cref="P:FontSize"/> properties on the respective RingSeries instead.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.ForeColor">
            <summary>
            This property has no effect. Please use <see cref="P:FontBrush"/> property on the respective RingSeries instead.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDoughnutChart.OnSliceClick(Infragistics.Win.DataVisualization.SliceClickEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.UltraDoughnutChart.SliceClick"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.SliceClickEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.UltraDoughnutChart.SliceClick"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.UltraDoughnutChart.SliceClick">
            <summary>
            Raised when the slice is clicked.
            </summary>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.UltraDoughnutChart.HoleDimensionsChnaged">
            <summary>
            Fires when the dimensions of the <see cref="T:Infragistics.Win.DataVisualization.UltraDoughnutChart"/> are changed.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDoughnutChart.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.UltraDoughnutChart"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.AllowSliceExplosion">
            <summary>
            Gets or sets whether the slices can be exploded.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDoughnutChart.ShouldSerializeAllowSliceExplosion">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.AllowSliceExplosion"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.AllowSliceExplosion"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDoughnutChart.ResetAllowSliceExplosion">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.AllowSliceExplosion"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.AllowSliceExplosion"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.AllowSliceSelection">
            <summary>
            Gets or sets whether the slices can be selected.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDoughnutChart.ShouldSerializeAllowSliceSelection">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.AllowSliceSelection"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.AllowSliceSelection"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDoughnutChart.ResetAllowSliceSelection">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.AllowSliceSelection"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.AllowSliceSelection"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.InnerExtent">
            <summary>
            Gets or sets the inner extent of the doughnut chart. It is percent from the outer ring's radius.
            </summary>
            <value>The default value is 40.</value>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDoughnutChart.ShouldSerializeInnerExtent">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.InnerExtent"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.InnerExtent"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDoughnutChart.ResetInnerExtent">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.InnerExtent"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.InnerExtent"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.IsSurfaceInteractionDisabled">
            <summary>
            Gets or sets whether all surface interactions with the plot area should be disabled.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDoughnutChart.ShouldSerializeIsSurfaceInteractionDisabled">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.IsSurfaceInteractionDisabled"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.IsSurfaceInteractionDisabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDoughnutChart.ResetIsSurfaceInteractionDisabled">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.IsSurfaceInteractionDisabled"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.IsSurfaceInteractionDisabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDoughnutChart.ExportVisualData">
            <summary>
            Returns a representation of the chart visuals.
            </summary>
            <returns>An object representing the current chart visuals.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDoughnutChart.Flush">
            <summary>
            Use to force the doughnut chart to finish any deferred work before printing or evaluating its visual.
            </summary>
            <remarks>
            This should only be called if the visual of the doughnut chart needs to be synchronously saved or evaluated. 
            Calling this method too often will hinder the performance of the doughnut chart.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDoughnutChart.GetCenterCoordinates">
            <summary>
            Gets the center coordinates of the doughnut chart's center presenter.
            </summary>
            <returns>A point indicating the the center of the doughnut chart's center presenter</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDoughnutChart.GetHoleRadius">
            <summary>
            Gets the hole radius of the doughnut chart's center presenter.
            </summary>
            <returns>A double indicating the hole radius of the doughnut chart's center presenter.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDoughnutChart.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDoughnutChart.OnHoleDimensionsChanged(Infragistics.Win.DataVisualization.HoleDimensionsChangedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.UltraDoughnutChart.HoleDimensionsChanged"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.HoleDimensionsChangedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.UltraDoughnutChart.HoleDimensionsChanged"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.UltraDoughnutChart.HoleDimensionsChanged">
            <summary>
            Raised when the dimensions (center point or radius) of the doughnut hole change.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDoughnutChart.About">
            <summary>
            Display the about dialog.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.UltraPieChart">
            <summary>
            Represents Infragistics UltraPieChart control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraPieChart.Font">
            <summary>
            This property has no effect. Please use the <see cref="P:FontFamily"/>, 
            <see cref="P:FontStyle"/> and <see cref="P:FontSize"/> properties instead.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraPieChart.ForeColor">
            <summary>
            This property has no effect. Please use <see cref="P:FontBrush"/> instead.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraPieChart.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.UltraPieChart"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraPieChart.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraPieChart.About">
            <summary>
            Display the about dialog.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.UltraScaleLegend">
            <summary>
            Represents a legend that indicates the size and the color scale for a collection of series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraScaleLegend.AutoSize">
            <summary>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraScaleLegend.InitLayout">
            <summary>
            Called after the control has been added to another container.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraScaleLegend.#ctor">
            <summary>
            Creates a new instance of ScaleLegend.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraScaleLegend.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraScaleLegend.About">
            <summary>
            Display the about dialog.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ValueOverlay">
            <summary>
            Represents the class of the value overlay. The value overlay is a line or circle representing a value on an axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ValueOverlay.Axis">
            <summary>
            Gets or sets the axis used by the value overlay.
            </summary>        
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ShouldSerializeAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ValueOverlay.Axis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueOverlay.Axis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ResetAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ValueOverlay.Axis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueOverlay.Axis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ShouldSerializeAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationFormatLabel">
            <summary>
            Occurs prior to rendering to provide formatting for the axis annotation.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.FixupAxisReferences(Infragistics.Win.DataVisualization.AxesCollection)">
            <summary>
            Used during Serialization to synchronize the axis instance generated matches with the axis instances in the collection.
            </summary>
            <param name="axes"></param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Win.DataVisualization.ValueOverlay"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationBackground">
            <summary>
            Gets or sets the color to use for the axis annotation backing. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ShouldSerializeAxisAnnotationBackground">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationBackground"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationBackground"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ResetAxisAnnotationBackground">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationBackground"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationBackground"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationInterpolatedValuePrecision">
            <summary>
            Gets or sets the precision to use displaying values for interpolated positions.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ShouldSerializeAxisAnnotationInterpolatedValuePrecision">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationInterpolatedValuePrecision"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationInterpolatedValuePrecision"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ResetAxisAnnotationInterpolatedValuePrecision">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationInterpolatedValuePrecision"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationInterpolatedValuePrecision"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationOutline">
            <summary>
            Gets or sets the color to use for the axis annotation outline. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ShouldSerializeAxisAnnotationOutline">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationOutline"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationOutline"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ResetAxisAnnotationOutline">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationOutline"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationOutline"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationPaddingBottom">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ShouldSerializeAxisAnnotationPaddingBottom">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationPaddingBottom"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationPaddingBottom"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ResetAxisAnnotationPaddingBottom">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationPaddingBottom"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationPaddingBottom"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationPaddingLeft">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ShouldSerializeAxisAnnotationPaddingLeft">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationPaddingLeft"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationPaddingLeft"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ResetAxisAnnotationPaddingLeft">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationPaddingLeft"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationPaddingLeft"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationPaddingRight">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ShouldSerializeAxisAnnotationPaddingRight">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationPaddingRight"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationPaddingRight"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ResetAxisAnnotationPaddingRight">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationPaddingRight"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationPaddingRight"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationPaddingTop">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ShouldSerializeAxisAnnotationPaddingTop">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationPaddingTop"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationPaddingTop"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ResetAxisAnnotationPaddingTop">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationPaddingTop"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationPaddingTop"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationStrokeThickness">
            <summary>
            Gets or sets the stroke thickness for the axis annotation backing. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ShouldSerializeAxisAnnotationStrokeThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationStrokeThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationStrokeThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ResetAxisAnnotationStrokeThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationStrokeThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationStrokeThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationTextColor">
            <summary>
            Gets or sets the color to use for the axis annotation text. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ShouldSerializeAxisAnnotationTextColor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationTextColor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationTextColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ResetAxisAnnotationTextColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationTextColor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueOverlay.AxisAnnotationTextColor"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ValueOverlay.IsAxisAnnotationEnabled">
            <summary>
            Gets or sets whether to draw annotations over the axes where the crosshair meets with them.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ShouldSerializeIsAxisAnnotationEnabled">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ValueOverlay.IsAxisAnnotationEnabled"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueOverlay.IsAxisAnnotationEnabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ResetIsAxisAnnotationEnabled">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ValueOverlay.IsAxisAnnotationEnabled"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueOverlay.IsAxisAnnotationEnabled"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ValueOverlay.Value">
            <summary>
            Gets or sets the value of the overlay.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ShouldSerializeValue">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ValueOverlay.Value"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueOverlay.Value"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.ResetValue">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ValueOverlay.Value"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueOverlay.Value"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.GetLabel(System.Double)">
            <summary>
            Gets the label for a data item.
            </summary>
            <param name="value">The unscaled value to get a label for.</param>
            <returns>The requested label.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueOverlay.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.RingSeriesCollection">
            <summary>
            Represents a collection of <see cref="T:Infragistics.Win.DataVisualization.RingSeriesBase"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesCollection.ClearItems">
            <summary>
            Clears the items in this collection and the TargetCollection.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesCollection.InsertItem(System.Int32,Infragistics.Win.DataVisualization.RingSeriesBase)">
            <summary>
            Inserts the item in the collection and the TargetCollection.
            </summary>
            <param name="index">The index where to put the item.</param>
            <param name="item">The ring series item to include.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesCollection.RemoveItem(System.Int32)">
            <summary>
            Remove the item at the specified index.
            </summary>
            <param name="index">The index of the item to remove.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesCollection.SetItem(System.Int32,Infragistics.Win.DataVisualization.RingSeriesBase)">
            <summary>
            Sets the item in the collection and the TargetCollection.
            </summary>
            <param name="index">The index where to set the item.</param>
            <param name="item">The ring series item to include.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RingSeriesCollection.MoveItem(System.Int32,System.Int32)">
            <summary>
            Move the item from one index to another.
            </summary>
            <param name="oldIndex">The index from which to remove the item.</param>
            <param name="newIndex">The index on which to set the new item.</param>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.RingSeriesIndexCollection">
            <summary>
            A collection representing indexes of slices in a <see cref="T:Infragistics.Win.DataVisualization.RingSeries"/>
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.DoughnutSliceClickEventHandler">
            <summary>
            Event handler for SliceClick event.
            </summary>
            <param name="sender">Chart control</param>
            <param name="e">Slice parameters</param>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ChartMouseEventArgs">
            <summary>
            Provides data for UltraDataChart mouse button related events. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ChartMouseEventArgs.GetPosition">
            <summary>
            Returns the x- and y- coordinates of the mouse pointer position.
            </summary>
            <returns>The mouse position requested.</returns>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ChartMouseEventArgs.Chart">
            <summary>
            Gets the Chart associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ChartMouseEventArgs.Item">
            <summary>
            Gets the ItemsSource item associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ChartMouseEventArgs.OriginalSource">
            <summary>
            Gets a reference to the object that raised the event.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ChartMouseEventArgs.Series">
            <summary>
            Gets the series associated with the current event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ChartMouseEventArgs.ToString">
            <summary>
            Provides a human readable description of the mouse button event.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.DataChartLegendMouseButtonEventArgs">
            <summary>
            Provides data for legend mouse button related events. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.DataChartLegendMouseButtonEventArgs.GetPosition">
            <summary>
            Returns the x- and y- coordinates of the mouse pointer position.
            </summary>
            <returns>The mouse position requested.</returns>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.DataChartLegendMouseButtonEventArgs.Chart">
            <summary>
            Gets the Chart associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.DataChartLegendMouseButtonEventArgs.Handled">
            <summary>
            Gets or sets a value that indicates the present state of the event handling for a routed 
            event as it travels the route.
            </summary>
            <remarks>
            ChartMouseButton events are not routed events; setting this property effects the underlying
            MouseButtonEvent.
            </remarks>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.DataChartLegendMouseButtonEventArgs.Item">
            <summary>
            Gets the ItemsSource item associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.DataChartLegendMouseButtonEventArgs.LegendItem">
            <summary>
            The legend item that was the target of the mouse event.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.DataChartLegendMouseButtonEventArgs.OriginalSource">
            <summary>
            Gets a reference to the object that raised the event.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.DataChartLegendMouseButtonEventArgs.Series">
            <summary>
            Gets the series associated with the current event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.DataChartLegendMouseButtonEventArgs.ToString">
            <summary>
            Provides a human readable description of the mouse button event.
            </summary>
            <returns>The description.</returns>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.DataChartLegendMouseEventArgs">
            <summary>
            Provides data for legend mouse button related events. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.DataChartLegendMouseEventArgs.GetPosition">
            <summary>
            Returns the x- and y- coordinates of the mouse pointer position.
            </summary>
            <returns>The mouse position requested.</returns>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.DataChartLegendMouseEventArgs.Chart">
            <summary>
            Gets the Chart associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.DataChartLegendMouseEventArgs.Item">
            <summary>
            Gets the ItemsSource item associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.DataChartLegendMouseEventArgs.LegendItem">
            <summary>
            The legend item in context.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.DataChartLegendMouseEventArgs.OriginalSource">
            <summary>
            Gets a reference to the object that raised the event.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.DataChartLegendMouseEventArgs.Series">
            <summary>
            Gets the series associated with the current event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.DataChartLegendMouseEventArgs.ToString">
            <summary>
            Provides a human readable description of the mouse button event.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.DoughnutSliceClickEventArgs">
            <summary>
            Provides data for the SliceClick event
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.DoughnutSliceClickEventArgs.Index">
            <summary>
            Gets the index of the Slice.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.DoughnutSliceClickEventArgs.IsExploded">
            <summary>
            Gets or sets if the slice is part of the ExplodedSlices collection of the <see cref="T:Infragistics.Win.DataVisualization.UltraDoughnutChart"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.DoughnutSliceClickEventArgs.IsSelected">
            <summary>
            Gets or sets if the slice is part of the SelectedSlices collection of the <see cref="T:Infragistics.Win.DataVisualization.UltraDoughnutChart"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.DoughnutSliceClickEventArgs.Series">
            <summary>
            Gets the Series containing the Slice.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.Axis">
            <summary>
            Represents the base class from which all axis types are derived.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.Name">
            <summary>
            Gets or sets the name of the Axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeName">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.Name"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.Name"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetName">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.Name"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.Name"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.SeriesViewer">
            <summary>
            Gets the containing series viewer for this axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.TickStrokeDashArray">
            <summary>
            Gets or sets the TickStrokeDashArray property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeTickStrokeDashArray">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.TickStrokeDashArray"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TickStrokeDashArray"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetTickStrokeDashArray">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.TickStrokeDashArray"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TickStrokeDashArray"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.TitlePosition">
            <summary>
            Gets or sets the TitlePosition property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeTitlePosition">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.TitlePosition"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TitlePosition"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetTitlePosition">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.TitlePosition"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TitlePosition"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.TitleMargin">
            <summary>
            Specifies the space between the Title and other elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeTitleMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.TitleMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TitleMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetTitleMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.TitleMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TitleMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.TitleAngle">
            <summary>
            Gets or Sets the Angle of the Axis Title.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeTitleAngle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.TitleAngle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TitleAngle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetTitleAngle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.TitleAngle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TitleAngle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.TitleFontSize">
            <summary>
            Gets or Sets the Font Size of the Axis Title.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeTitleFontSize">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.TitleFontSize"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TitleFontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetTitleFontSize">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.TitleFontSize"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TitleFontSize"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.TitleFontFamily">
            <summary>
            Gets or Sets the Font Family of the Axis Title.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeTitleFontFamily">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.TitleFontFamily"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TitleFontFamily"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetTitleFontFamily">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.TitleFontFamily"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TitleFontFamily"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.TitleTextColor">
            <summary>
            Gets or sets the color of the Axis Title text.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeTitleTextColor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.TitleTextColor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TitleTextColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetTitleTextColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.TitleTextColor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TitleTextColor"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.TitleHorizontalAlignment">
            <summary>
            Gets or sets the HorizontalAlignment property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeTitleHorizontalAlignment">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.TitleHorizontalAlignment"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TitleHorizontalAlignment"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetTitleHorizontalAlignment">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.TitleHorizontalAlignment"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TitleHorizontalAlignment"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.TitleVerticalAlignment">
            <summary>
            Gets or sets the VerticalAlignment property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeTitleVerticalAlignment">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.TitleVerticalAlignment"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TitleVerticalAlignment"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetTitleVerticalAlignment">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.TitleVerticalAlignment"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TitleVerticalAlignment"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.TitleTextStyle">
            <summary>
            Gets or sets the Font Style applied to the Title's text.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeTitleTextStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.TitleTextStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TitleTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetTitleTextStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.TitleTextStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TitleTextStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.LabelMargin">
            <summary>
            Specifies the space between the Label and other elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeLabelMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.LabelMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.LabelMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetLabelMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.LabelMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.LabelMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.LabelAngle">
            <summary>
            Gets or Sets the Angle of the Axis Label.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeLabelAngle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.LabelAngle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.LabelAngle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetLabelAngle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.LabelAngle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.LabelAngle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.LabelFontSize">
            <summary>
            Gets or Sets the Font Size of the Axis Label.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeLabelFontSize">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.LabelFontSize"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.LabelFontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetLabelFontSize">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.LabelFontSize"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.LabelFontSize"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.LabelFontFamily">
            <summary>
            Gets or Sets the Font Family of the Axis Label.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeLabelFontFamily">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.LabelFontFamily"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.LabelFontFamily"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetLabelFontFamily">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.LabelFontFamily"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.LabelFontFamily"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.LabelsVisible">
            <summary>
            Gets or sets the Visibility property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeLabelsVisible">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.LabelsVisible"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.LabelsVisible"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetLabelsVisible">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.LabelsVisible"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.LabelsVisible"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.LabelLocation">
            <summary>
            Gets or sets the Location property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeLabelLocation">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.LabelLocation"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.LabelLocation"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetLabelLocation">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.LabelLocation"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.LabelLocation"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.LabelExtent">
            <summary>
            Gets or sets the distance between the edge of the control and the label.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeLabelExtent">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.LabelExtent"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.LabelExtent"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetLabelExtent">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.LabelExtent"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.LabelExtent"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.ShowFirstLabel">
            <summary>
            Gets or sets whether the first label is displayed when the zoom level is set to 1.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeShowFirstLabel">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.ShowFirstLabel"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.ShowFirstLabel"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetShowFirstLabel">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.ShowFirstLabel"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.ShowFirstLabel"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.LabelTextColor">
            <summary>
            Gets or sets the color of the Axis Label text.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeLabelTextColor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.LabelTextColor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.LabelTextColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetLabelTextColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.LabelTextColor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.LabelTextColor"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.LabelTextStyle">
            <summary>
            Gets or sets the Font Style applied to the Label's text.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeLabelTextStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.LabelTextStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.LabelTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetLabelTextStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.LabelTextStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.LabelTextStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.LabelHorizontalAlignment">
            <summary>
            Gets or sets the HorizontalAlignment property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeLabelHorizontalAlignment">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.LabelHorizontalAlignment"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.LabelHorizontalAlignment"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetLabelHorizontalAlignment">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.LabelHorizontalAlignment"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.LabelHorizontalAlignment"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.LabelVerticalAlignment">
            <summary>
            Gets or sets the VerticalAlignment property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeLabelVerticalAlignment">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.LabelVerticalAlignment"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.LabelVerticalAlignment"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetLabelVerticalAlignment">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.LabelVerticalAlignment"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.LabelVerticalAlignment"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.Visibility">
            <summary>
            Gets or sets the display state of an Axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeVisibility">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.Visibility"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.Visibility"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetVisibility">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.Visibility"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.Visibility"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.Opacity">
            <summary>
            Gets or sets the Opacity of the Axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeOpacity">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.Opacity"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.Opacity"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetOpacity">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.Opacity"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.Opacity"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.Id">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeId">
            <summary>Returns true unconditionally so that a unique identifier is serialized.</summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.GetScaledValueList(System.Collections.Generic.IList{System.Double},System.Int32,System.Int32,Infragistics.Win.DataVisualization.ScalerParams)">
            <summary>
            Get a list of scaled viewport values from a list of unscaled axis values.
            </summary>
            <param name="unscaledValues">The list of unscaled axis values.</param>
            <param name="count"></param>
            <param name="p">Scaler parameters</param>
            <param name="startIndex"></param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.GetUnscaledValueList(System.Collections.Generic.IList{System.Double},System.Int32,System.Int32,Infragistics.Win.DataVisualization.ScalerParams)">
            <summary>
            Gets a list of unscaled axis values from a list of scaled viewport values.
            </summary>
            <param name="scaledValues">A list containing the scaled viewport values to unscale.</param>
            <param name="p">Scaler parameters</param>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.Axis.FormatLabel">
            <summary>
            Gets or sets a function which takes an object that produces a formatted label for displaying in the chart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.Axis.PropertyChanged"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:System.ComponentModel.PropertyChangedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.Axis.PropertyChanged"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.ActualMajorStroke">
            <summary>
            Gets or sets the ActualMajorStroke property.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.ActualMinorStroke">
            <summary>
            Gets or sets the ActualMinorStroke property.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.ActualStroke">
            <summary>
            Gets or sets the effective stroke used for the axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.Annotations">
            <summary>
            Gets the current annotations for the axis. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.CrossingAxis">
            <summary>
            Gets or sets the CrossingAxis property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeCrossingAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.CrossingAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.CrossingAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetCrossingAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.CrossingAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.CrossingAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.CrossingValue">
            <summary>
            Gets or sets the CrossingValue property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeCrossingValue">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.CrossingValue"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.CrossingValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetCrossingValue">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.CrossingValue"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.CrossingValue"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.EnhancedIntervalMinimumCharacters">
            <summary>
            Gets or sets the mininum desired characters to be displayed for horizontal axes when using advanced label heuristics. -1 will attempt to adjust the interval to precisely fit the horizontal labels.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeEnhancedIntervalMinimumCharacters">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.EnhancedIntervalMinimumCharacters"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.EnhancedIntervalMinimumCharacters"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetEnhancedIntervalMinimumCharacters">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.EnhancedIntervalMinimumCharacters"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.EnhancedIntervalMinimumCharacters"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.ExpectFunctions">
            <summary>
            Gets or sets whether the series should expect that properties in its items source may be functions that need to be
            evaluated to yield their value. This defaults to false, as there will be a subtle performance impact to using this feature.
            This value must be set before assigning an item's source to take effect.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeExpectFunctions">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.ExpectFunctions"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.ExpectFunctions"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetExpectFunctions">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.ExpectFunctions"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.ExpectFunctions"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.IsAngular">
            <summary>
            Gets if the current axis is of angular axis type
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.IsCategory">
            <summary>
            Gets or sets if the current axis is of category axis type
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.IsCategoryDateTime">
            <summary>
            Gets if the current axis is of category date time axis type
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.IsContinuous">
            <summary>
            Gets if the current axis is a continuous rather than a discrete scale
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.IsDateTime">
            <summary>
            Gets or sets if the current axis is of date time axis type
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.IsDisabled">
            <summary>
            Gets or sets the IsDisabled property. If true, the axis will not be rendered.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeIsDisabled">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.IsDisabled"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.IsDisabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetIsDisabled">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.IsDisabled"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.IsDisabled"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.IsInverted">
            <summary>
            Gets or sets the IsInverted property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeIsInverted">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.IsInverted"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.IsInverted"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetIsInverted">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.IsInverted"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.IsInverted"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.IsNumeric">
            <summary>
            Gets or sets if the current axis is of numeric axis type
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.IsRadial">
            <summary>
            Gets or sets if the current axis is of radial axis type
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.IsSorting">
            <summary>
            Gets or sets if the current axis is sorting data items
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.IsVertical">
            <summary>
            Gets if the current axis is a vertical axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.Label">
            <summary>
            Gets or sets the axis label format string.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeLabel">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.Label"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.Label"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetLabel">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.Label"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.Label"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.MajorStroke">
            <summary>
            Gets or sets the MajorStroke property.
            </summary>
            <remarks>Null is treated as auto. Major lines will be displayed or not based on the axis type and series used with it.</remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeMajorStroke">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.MajorStroke"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.MajorStroke"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetMajorStroke">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.MajorStroke"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.MajorStroke"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.MajorStrokeThickness">
            <summary>
            Gets or sets the MajorStrokeThickness property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeMajorStrokeThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.MajorStrokeThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.MajorStrokeThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetMajorStrokeThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.MajorStrokeThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.MajorStrokeThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.MinorStroke">
            <summary>
            Gets or sets the MinorStroke property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeMinorStroke">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.MinorStroke"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.MinorStroke"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetMinorStroke">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.MinorStroke"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.MinorStroke"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.MinorStrokeThickness">
            <summary>
            Gets or sets the MinorStrokeThickness property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeMinorStrokeThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.MinorStrokeThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.MinorStrokeThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetMinorStrokeThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.MinorStrokeThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.MinorStrokeThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.Strip">
            <summary>
            Gets or sets the Strip property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeStrip">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.Strip"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.Strip"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetStrip">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.Strip"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.Strip"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.Stroke">
            <summary>
            Gets or sets the Stroke property.
            </summary>
            <remarks>Null is treated as auto. The axis stroke will be displayed or not based on the axis type and series used with it.</remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeStroke">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.Stroke"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.Stroke"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetStroke">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.Stroke"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.Stroke"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.StrokeThickness">
            <summary>
            Gets or sets the StrokeThickness property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeStrokeThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.StrokeThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.StrokeThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetStrokeThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.StrokeThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.StrokeThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.TickLength">
            <summary>
            Gets or sets the TickLength property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeTickLength">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.TickLength"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TickLength"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetTickLength">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.TickLength"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TickLength"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.TickStroke">
            <summary>
            Gets or sets the TickStroke property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeTickStroke">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.TickStroke"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TickStroke"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetTickStroke">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.TickStroke"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TickStroke"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.TickStrokeThickness">
            <summary>
            Gets or sets the TickStrokeThickness property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeTickStrokeThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.TickStrokeThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TickStrokeThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetTickStrokeThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.TickStrokeThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.TickStrokeThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.Title">
            <summary>
            Gets or sets the Title property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeTitle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.Title"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.Title"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetTitle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.Title"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.Title"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Axis.UseEnhancedIntervalManagement">
            <summary>
            Gets or sets whether to use more advanced heuristics when determining the initial number of labels to render, before resolving collisions, etc.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ShouldSerializeUseEnhancedIntervalManagement">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Axis.UseEnhancedIntervalManagement"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.UseEnhancedIntervalManagement"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetUseEnhancedIntervalManagement">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Axis.UseEnhancedIntervalManagement"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Axis.UseEnhancedIntervalManagement"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ExportVisualData">
            <summary>
            Exports visual information about the series for use by external tools and functionality.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.GetItemValue(System.Object,System.String)">
            <summary>
            Gets a value based on one of the valid member paths for this axis type.
            </summary>
            <param name="item">An item from the data source bound to the axis.</param>
            <param name="memberPathName">The property name of a valid member path for the axis</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.GetScaledValue(System.Double,Infragistics.Win.DataVisualization.ScalerParams)">
            <summary>
            Gets the scaled viewport value from an unscaled axis value.
            </summary>
            <param name="unscaledValue">The unscaled axis value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The scaled viewport value.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.GetScaledValue(System.Double,Infragistics.Win.DataVisualization.Rectangle,Infragistics.Win.DataVisualization.Rectangle)">
            <summary>
            Gets the scaled viewport value from an unscaled axis value.
            </summary>
            <param name="unscaledValue">The unscaled axis value.</param>
            <param name="windowRect">The current window of the chart.</param>
            <param name="viewportRect">The current viewport.</param>
            <returns>The scaled viewport value.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.GetUnscaledValue(System.Double,Infragistics.Win.DataVisualization.ScalerParams)">
            <summary>
            Gets the unscaled axis value from an scaled viewport value.
            </summary>
            <param name="scaledValue">The scaled viewport value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The unscaled axis value.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.GetUnscaledValue(System.Double,Infragistics.Win.DataVisualization.Rectangle,Infragistics.Win.DataVisualization.Rectangle)">
            <summary>
            Gets the unscaled axis value from an scaled viewport value.
            </summary>
            <param name="scaledValue">The scaled viewport value.</param>
            <param name="windowRect">The current window of the chart.</param>
            <param name="viewportRect">The current viewport.</param>
            <returns>The unscaled axis value.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.GetValueLabel(System.Double)">
            <summary>
            Gets the label for a data item.
            </summary>
            <param name="value">The unscaled value to get a label for.</param>
            <returns>The requested label.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.RenderAxis">
            <summary>
            Renders the axis with no animation.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ResetCachedEnhancedInterval">
            <summary>
            If using enhanced interval management and precise interval fitting, this will reset the cached maximum label width, and recalculate using the current labels.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.ScaleValue(System.Double)">
            <summary>
            Scales a value from axis space into screen space.
            </summary>
            <param name="unscaledValue">The unscaled axis value to scale.</param>
            <returns>The scaled value in screen coordinates.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.UpdateRange">
            <summary>
            Updates the axis range.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.UpdateRange(System.Boolean)">
            <summary>
            Updates the axis range.
            </summary>
            <param name="immediate">True if the change should be made immediately, or False if it can be deferred to the next refresh.</param>
            <returns>True if the axis range has changed.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.OnPropertyChanged(System.String)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.Axis.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property that was changed</param>
            <seealso cref="T:System.ComponentModel.PropertyChangedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.Axis.PropertyChanged"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.Axis.PropertyChanged">
            <summary>
            Occurs when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.OnPropertyUpdated(Infragistics.Win.DataVisualization.PropertyUpdatedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.Axis.PropertyUpdated"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.PropertyUpdatedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.Axis.PropertyUpdated"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.Axis.PropertyUpdated">
            <summary>
            Occurs when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.OnRangeChanged(Infragistics.Win.DataVisualization.AxisRangeChangedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.Axis.RangeChanged"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.AxisRangeChangedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.Axis.RangeChanged"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.Axis.RangeChanged">
            <summary>
            Occurs when the axis range changes.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Axis.OnRenderRequested(Infragistics.Win.DataVisualization.RenderRequestedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.Axis.RenderRequested"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.RenderRequestedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.Axis.RenderRequested"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.Axis.RenderRequested">
            <summary>
            This event is raised every time a render has been requested from a series.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.BrushScale">
            <summary>
            Represents a base class for brush scales.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.BrushScale.Brushes">
            <summary>
            Gets or sets the Brushes property.
            </summary>
            <remarks>
            The brushes property defines the palette from over which the brush scale interpolates.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BrushScale.ShouldSerializeBrushes">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.BrushScale.Brushes"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.BrushScale.Brushes"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BrushScale.ResetBrushes">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.BrushScale.Brushes"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.BrushScale.Brushes"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.BrushScale.IsReady">
            <summary>
            Gets the status of the scale 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BrushScale.GetBrush(System.Int32)">
            <summary>
            Gets a brush from the brushes collection by index.
            </summary>
            <returns>Brush for a given index.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BrushScale.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BrushScale.OnPropertyChanged(System.String)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.BrushScale.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property that was changed</param>
            <seealso cref="T:System.ComponentModel.PropertyChangedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.BrushScale.PropertyChanged"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.BrushScale.PropertyChanged">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BrushScale.OnPropertyUpdated(Infragistics.Win.DataVisualization.PropertyUpdatedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.BrushScale.PropertyUpdated"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.PropertyUpdatedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.BrushScale.PropertyUpdated"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.BrushScale.PropertyUpdated">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CategoryAxisBase">
            <summary>
            Represents the base class for all UltraDataChart category-based axes.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryAxisBase.DataSource">
            <summary>
            Gets or sets the data source from which the Axis' categorical items collection is populated.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryAxisBase.DataMember"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAxisBase.ShouldSerializeDataSource">
            <summary>
            Returns whether the <see cref="P:Infragistics.Win.DataVisualization.CategoryAxisBase.DataSource"/> property requires serialization.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAxisBase.ResetDataSource">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryAxisBase.DataSource"/> property to its default value.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryAxisBase.DataMember">
            <summary>
            Gets or sets the data member of the data source from which the Axis' categorical items collection is populated.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryAxisBase.DataSource"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAxisBase.ShouldSerializeDataMember">
            <summary>
            Returns whether the <see cref="P:Infragistics.Win.DataVisualization.CategoryAxisBase.DataMember"/> property requires serialization.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAxisBase.ResetDataMember">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryAxisBase.DataMember"/> property to its default value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAxisBase.SetDataBinding(System.Object,System.String)">
            <summary>
            Sets the datasource and datamember for the control in one atomic operation.
            </summary>
            <param name="dataSource">Data source to bind to.</param>
            <param name="dataMember">Data member.</param>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryAxisBase.Gap">
            <summary>
            Gets or sets the amount of space between adjacent categories for the current axis object.
            </summary>
            <remarks>
            The gap is silently clamped to the range [0, 1] when used.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAxisBase.ShouldSerializeGap">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategoryAxisBase.Gap"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryAxisBase.Gap"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAxisBase.ResetGap">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryAxisBase.Gap"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryAxisBase.Gap"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryAxisBase.ItemsCount">
            <summary>
            Gets the number of items in the current category axis items source.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryAxisBase.Overlap">
            <summary>
            Gets or sets the amount of overlap between adjacent categories for the current axis object.
            </summary>
            <remarks>
            The overlap is silently clamped to the range [-1, 1] when used.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAxisBase.ShouldSerializeOverlap">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategoryAxisBase.Overlap"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryAxisBase.Overlap"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAxisBase.ResetOverlap">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryAxisBase.Overlap"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryAxisBase.Overlap"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryAxisBase.UseClusteringMode">
            <summary>
            Gets or sets whether the category axis should use clustering display mode even if no series are present that would force clustering mode.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAxisBase.ShouldSerializeUseClusteringMode">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategoryAxisBase.UseClusteringMode"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryAxisBase.UseClusteringMode"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAxisBase.ResetUseClusteringMode">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryAxisBase.UseClusteringMode"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryAxisBase.UseClusteringMode"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAxisBase.GetCategoryBoundingBox(Infragistics.Win.DataVisualization.Point,System.Boolean,System.Double)">
            <summary>
            Gets bounding box of this category axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAxisBase.GetCategoryBoundingBoxHelper(Infragistics.Win.DataVisualization.Point,System.Boolean,System.Double,System.Boolean)">
            <summary>
            Gets bounding box of the category axis
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAxisBase.HandleCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the ItemsSource's CollectionChanged event.
            </summary>
            <param name="e">Contextual information about the data that was changed.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAxisBase.NotifyClearItems">
            <summary>
            Used to manually notify the axis that the data source has reset or cleared its items.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAxisBase.NotifyInsertItem(System.Int32,System.Object)">
            <summary>
            Used to manually notify the axis that the data source has had an item inserted. Only necessary if that datasource is not observable.
            </summary>
            <param name="index">The index of the new item</param>
            <param name="newItem">The new item.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAxisBase.NotifyRemoveItem(System.Int32,System.Object)">
            <summary>
            Used to manually notify the axis that the data source has had an item removed.
            </summary>
            <param name="index">The index of the old item.</param>
            <param name="oldItem">The old item.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAxisBase.NotifySetItem(System.Int32,System.Object,System.Object)">
            <summary>
            Used to manually notify the axis that the data source has had an item set.
            </summary>
            <param name="index">The index of the change</param>
            <param name="oldItem">The old item.</param>
            <param name="newItem">The new item.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAxisBase.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAxisBase.UnscaleValue(System.Double)">
            <summary>
            Unscales a value from screen space into axis space.
            </summary>
            <param name="unscaledValue">The scaled value in screen coordinates to unscale into axis space.</param>
            <returns>The unscaled value in axis space.</returns>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.PieChartBase">
            <summary>
            Base class for the <see cref="T:Infragistics.Win.DataVisualization.UltraPieChart"/> implementing most of the functionality.
            </summary>
            <summary>
            Represents the base class for the pie chart.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.Brushes">
            <summary>
            Gets or sets the Brushes that will be used for the slices fill color.
            </summary>
            <remarks>
            The brushes property defines the palette from which automatically assigned series brushes are selected.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeBrushes">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.Brushes"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.Brushes"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetBrushes">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.Brushes"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.Brushes"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.DataMember">
            <summary>
            Gets or sets the data member of the data source from which the PieChart's categorical items collection is populated.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.DataSource"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeDataMember">
            <summary>
            Returns whether the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.DataMember"/> property requires serialization.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetDataMember">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.DataMember"/> property to its default value.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.DataSource">
            <summary>
            Gets or sets the data source for the chart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeDataSource">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.DataSource"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.DataSource"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetDataSource">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.DataSource"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.DataSource"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.ExplodedSlices">
            <summary>
            A collection which determines which slices will be exploded.
            </summary>
            <remarks>
            If the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.AllowSliceExplosion"/> is set to false, this property will have no effect. 
            Otherwise the slices in this collection will be offset from the center with the value of the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.ExplodedRadius"/> property.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeExplodedSlices">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.ExplodedSlices"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.ExplodedSlices"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetExplodedSlices">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.ExplodedSlices"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.ExplodedSlices"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.OthersCategoryThreshold">
            <summary>
            Gets or sets the threshold value that determines if slices are grouped into the Others slice.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeOthersCategoryThreshold">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.OthersCategoryThreshold"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.OthersCategoryThreshold"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetOthersCategoryThreshold">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.OthersCategoryThreshold"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.OthersCategoryThreshold"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.Outlines">
            <summary>
            Gets or sets the Brushes that will be used for the slices outline color.
            </summary>
            <remarks>
            The brushes property defines the palette from which automatically assigned series brushes are selected.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeOutlines">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.Outlines"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.Outlines"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetOutlines">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.Outlines"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.Outlines"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.SelectedItems">
            <summary>
            Gets the currently selected data items. Adding or removing data items from this collection will
            select or deselect the slices associated with those items.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeSelectedItems">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.SelectedItems"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.SelectedItems"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetSelectedItems">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.SelectedItems"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.SelectedItems"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.SelectedSlices">
            <summary>
            A collection which determines which slices will be selected.
            </summary>
            <remarks>
            If the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.AllowSliceSelection"/> is set to false, this property will have no effect. 
            Otherwise the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.SelectedStyle"/> will be applied to the slices in this collection.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeSelectedSlices">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.SelectedSlices"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.SelectedSlices"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetSelectedSlices">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.SelectedSlices"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.SelectedSlices"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.ShowDefaultTooltip">
            <summary>
            Gets or sets whether or not the default tooltip for the <see cref="T:Infragistics.Win.DataVisualization.UltraPieChart"/> will be shown.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeShowDefaultTooltip">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.ShowDefaultTooltip"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.ShowDefaultTooltip"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetShowDefaultTooltip">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.ShowDefaultTooltip"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.ShowDefaultTooltip"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.SetDataBinding(System.Object,System.String)">
            <summary>
            Sets the datasource and datamember for the control in one atomic operation.
            </summary>
            <param name="dataSource">Data source to bind to.</param>
            <param name="dataMember">Data member.</param>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.PieChartBase.TooltipContentUpdating">
            <summary>
            Occurs when the ToolTip for the <see cref="T:Infragistics.Win.DataVisualization.UltraPieChart"/> is updating the content to be rendered.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.AllowSliceExplosion">
            <summary>
            Gets or sets whether the slices can be exploded.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeAllowSliceExplosion">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.AllowSliceExplosion"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.AllowSliceExplosion"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetAllowSliceExplosion">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.AllowSliceExplosion"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.AllowSliceExplosion"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.AllowSliceSelection">
            <summary>
            Gets or sets whether the slices can be selected.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeAllowSliceSelection">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.AllowSliceSelection"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.AllowSliceSelection"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetAllowSliceSelection">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.AllowSliceSelection"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.AllowSliceSelection"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.ExplodedRadius">
            <summary>
            Determines how much the exploded slice is offset from the center. Value between 0 and 1.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeExplodedRadius">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.ExplodedRadius"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.ExplodedRadius"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetExplodedRadius">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.ExplodedRadius"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.ExplodedRadius"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.FontBrush">
            <summary>
            Gets or sets the font brush for the labels.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeFontBrush">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.FontBrush"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.FontBrush"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetFontBrush">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.FontBrush"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.FontBrush"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.FontFamily">
            <summary>
            Returns or sets the font family for the text of the slices.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.FontSize"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.FontStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeFontFamily">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.FontFamily"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.FontFamily"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetFontFamily">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.FontFamily"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.FontFamily"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.FontSize">
            <summary>
            Returns or sets the font size for the text of the slices.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.FontFamily"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.FontStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeFontSize">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.FontSize"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.FontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetFontSize">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.FontSize"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.FontSize"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.FontStyle">
            <summary>
            Returns or sets the font style for the text of the slices.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.FontFamily"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.FontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeFontStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.FontStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.FontStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetFontStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.FontStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.FontStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.InnerExtent">
            <summary>
            Gets or sets the amount of space between the center and the start of the arc. This property should be set between 0 and 1.
            </summary>
            <remarks>
            If InnerExtent is set to a value greater than 1, it will be interpreted as a percentage, effectively divided by 100.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeInnerExtent">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.InnerExtent"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.InnerExtent"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetInnerExtent">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.InnerExtent"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.InnerExtent"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.IsSurfaceInteractionDisabled">
            <summary>
            Gets or sets whether all surface interactions with the plot area should be disabled.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeIsSurfaceInteractionDisabled">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.IsSurfaceInteractionDisabled"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.IsSurfaceInteractionDisabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetIsSurfaceInteractionDisabled">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.IsSurfaceInteractionDisabled"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.IsSurfaceInteractionDisabled"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.LabelExtent">
            <summary>
            Gets or sets the pixel amount by which the labels are offset from the edge of the slices.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeLabelExtent">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.LabelExtent"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.LabelExtent"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetLabelExtent">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.LabelExtent"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.LabelExtent"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.LabelInnerColor">
            <summary>
            Gets or sets the color for labels rendered inside of the pie chart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeLabelInnerColor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.LabelInnerColor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.LabelInnerColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetLabelInnerColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.LabelInnerColor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.LabelInnerColor"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.LabelMemberPath">
            <summary>
            Gets or sets the property name that contains the labels.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeLabelMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.LabelMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.LabelMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetLabelMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.LabelMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.LabelMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.LabelOuterColor">
            <summary>
            Gets or sets the color for labels rendered outside of the pie chart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeLabelOuterColor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.LabelOuterColor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.LabelOuterColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetLabelOuterColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.LabelOuterColor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.LabelOuterColor"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.LabelsPosition">
            <summary>
            Gets or sets the position of chart labels.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeLabelsPosition">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.LabelsPosition"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.LabelsPosition"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetLabelsPosition">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.LabelsPosition"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.LabelsPosition"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.LeaderLineMargin">
            <summary>
            Gets or sets the margin between a label and the end of its leader line. The default is 6 pixels.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeLeaderLineMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.LeaderLineMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.LeaderLineMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetLeaderLineMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.LeaderLineMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.LeaderLineMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.LeaderLineStyle">
            <summary>
            Gets or sets the style for the leader lines.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeLeaderLineStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.LeaderLineStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.LeaderLineStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetLeaderLineStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.LeaderLineStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.LeaderLineStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.LeaderLineType">
            <summary>
            Gets or sets what type of leader lines will be used for the outside end labels.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeLeaderLineType">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.LeaderLineType"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.LeaderLineType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetLeaderLineType">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.LeaderLineType"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.LeaderLineType"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.LeaderLineVisibility">
            <summary>
            Gets or sets whether the leader lines are visible.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeLeaderLineVisibility">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.LeaderLineVisibility"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.LeaderLineVisibility"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetLeaderLineVisibility">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.LeaderLineVisibility"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.LeaderLineVisibility"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.Legend">
            <summary>
            Gets or sets the legend used for the current chart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeLegend">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.Legend"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.Legend"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetLegend">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.Legend"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.Legend"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.LegendLabelMemberPath">
            <summary>
            Gets or sets the property name that contains the legend labels.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeLegendLabelMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.LegendLabelMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.LegendLabelMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetLegendLabelMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.LegendLabelMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.LegendLabelMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.OthersCategoryStyle">
            <summary>
            Gets or sets the style used for the Others slice.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeOthersCategoryStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.OthersCategoryStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.OthersCategoryStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetOthersCategoryStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.OthersCategoryStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.OthersCategoryStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.OthersCategoryText">
            <summary>
            Gets or sets the label of the Others slice.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeOthersCategoryText">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.OthersCategoryText"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.OthersCategoryText"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetOthersCategoryText">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.OthersCategoryText"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.OthersCategoryText"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.OthersCategoryType">
            <summary>
            Gets or sets whether to use numeric or percent-based threshold value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeOthersCategoryType">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.OthersCategoryType"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.OthersCategoryType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetOthersCategoryType">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.OthersCategoryType"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.OthersCategoryType"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.RadiusFactor">
            <summary>
            Gets or sets the scaling factor of the chart's radius. Value between 0 and 1.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeRadiusFactor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.RadiusFactor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.RadiusFactor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetRadiusFactor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.RadiusFactor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.RadiusFactor"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.SelectedItem">
            <summary>
            Gets or sets the currently selected data item.  If a different data item is provided the pie chart
            will select the slice associated with the new item.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeSelectedItem">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.SelectedItem"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.SelectedItem"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetSelectedItem">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.SelectedItem"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.SelectedItem"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.SelectedStyle">
            <summary>
            Gets or sets the style used when a slice is selected.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeSelectedStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.SelectedStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.SelectedStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetSelectedStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.SelectedStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.SelectedStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.SelectionMode">
            <summary>
            Gets or sets which mode to use for selecting slices.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeSelectionMode">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.SelectionMode"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.SelectionMode"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetSelectionMode">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.SelectionMode"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.SelectionMode"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.StartAngle">
            <summary>
            Gets or sets the starting angle of the chart.
            </summary>
            <remarks>
            The default zero value is equivalent to 3 o'clock.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeStartAngle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.StartAngle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.StartAngle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetStartAngle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.StartAngle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.StartAngle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.SweepDirection">
            <summary>
            Gets or sets the rotational direction of the chart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeSweepDirection">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.SweepDirection"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.SweepDirection"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetSweepDirection">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.SweepDirection"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.SweepDirection"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartBase.ValueMemberPath">
            <summary>
            Gets or Sets the property name that contains the values.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ShouldSerializeValueMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.ValueMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.ValueMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ResetValueMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieChartBase.ValueMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieChartBase.ValueMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.ExportVisualData">
            <summary>
            Returns the chart visuals expressed as a PieChartVisualData object.
            </summary>
            <returns>A PieChartVisualData object representing the current chart visuals.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.Flush">
            <summary>
            Use to force the pie chart to finish any deferred work before printing or evaluating its visual.
            </summary>
            <remarks>
            This should only be called if the visual of the pie chart needs to be synchronously saved or evaluated. 
            Calling this method too often will hinder the performance of the pie chart.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.GetContainerRect">
            <summary>
            Gets container size.
            </summary>
            <returns>Rectangle with the dimensions of the container.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.NotifyClearItems(System.Object)">
            <summary>
            Manually notifies the pie chart's data source that the data it has bound to has been cleared and needs to be re-examined.
            This should not be called if the data that the pie chart is bound to is already observable.
            </summary>
            <param name="source_">The data source.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.NotifyContainerResized">
            <summary>
            Notification from the containing object that the container has been resized.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.NotifyInsertItem(System.Object,System.Int32,System.Object)">
            <summary>
            Manually notifies the pie chart's data source that an item has been inserted in the data it is bound to.
            This should not be called if the data that the pie chart is bound to is already observable.
            </summary>
            <param name="source_">The data source.</param>
            <param name="index">The index of the inserted item.</param>
            <param name="newItem">The new item at the designated index.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.NotifyRemoveItem(System.Object,System.Int32,System.Object)">
            <summary>
            Manually notifies the pie chart's data source that an item has been removed in the data it is bound to.
            This should not be called if the data that the grid is bound to is already observable.
            </summary>
            <param name="source_">The data source.</param>
            <param name="index">The index of the removed item.</param>
            <param name="oldItem">The old item at the designated index.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.NotifySetItem(System.Object,System.Int32,System.Object,System.Object)">
            <summary>
            Manually notifies the pie chart's data source that an item has been changed in the data it is bound to.
            This should not be called the data that the pie chart is bound to is already observable.
            </summary>
            <param name="source_">The data source.</param>
            <param name="index">The index of the changed item.</param>
            <param name="oldItem">The old item at the designated index.</param>
            <param name="newItem">The new item at the designated index.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.SimulateLeftClick(Infragistics.Win.DataVisualization.Point)">
            <summary>
            Simulates a mouse click action at the specified point.
            </summary>
            <param name="point">The point to click at.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.StyleUpdated">
            <summary>
            Invoked when style is updated.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.OnFormatLabel(Infragistics.Win.DataVisualization.FormatLabelEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.PieChartBase.FormatLabel"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.FormatLabelEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.PieChartBase.FormatLabel"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.PieChartBase.FormatLabel">
            <summary>
            Used to customize the labels for the slices in the chart based on the item in context.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.OnFormatLegendLabel(Infragistics.Win.DataVisualization.FormatLabelEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.PieChartBase.FormatLegendLabel"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.FormatLabelEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.PieChartBase.FormatLegendLabel"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.PieChartBase.FormatLegendLabel">
            <summary>
            Used to format the legend labels for the slices in the chart based on the item in context.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.OnLabelClick(Infragistics.Win.DataVisualization.LabelClickEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.PieChartBase.LabelClick"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.LabelClickEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.PieChartBase.LabelClick"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.PieChartBase.LabelClick">
            <summary>
            Raised when the slice's label is clicked.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.OnSelectedItemChanged(Infragistics.Win.DataVisualization.SelectedItemChangedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.PieChartBase.SelectedItemChanged"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.SelectedItemChangedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.PieChartBase.SelectedItemChanged"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.PieChartBase.SelectedItemChanged">
            <summary>
            Raised when the SelectedItem property has changed.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.OnSelectedItemChanging(Infragistics.Win.DataVisualization.SelectedItemChangingEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.PieChartBase.SelectedItemChanging"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.SelectedItemChangingEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.PieChartBase.SelectedItemChanging"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.PieChartBase.SelectedItemChanging">
            <summary>
            Raised when the SelectedItem property is changing.  This event is cancelable.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.OnSelectedItemsChanged(Infragistics.Win.DataVisualization.SelectedItemsChangedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.PieChartBase.SelectedItemsChanged"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.SelectedItemsChangedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.PieChartBase.SelectedItemsChanged"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.PieChartBase.SelectedItemsChanged">
            <summary>
            Raised when the SelectedItems collection has changed.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.OnSelectedItemsChanging(Infragistics.Win.DataVisualization.SelectedItemsChangingEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.PieChartBase.SelectedItemsChanging"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.SelectedItemsChangingEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.PieChartBase.SelectedItemsChanging"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.PieChartBase.SelectedItemsChanging">
            <summary>
            Raised when the SelectedItems collection is changing.  This event is cancelable.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieChartBase.OnSliceClick(Infragistics.Win.DataVisualization.SliceClickEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.PieChartBase.SliceClick"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.SliceClickEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.PieChartBase.SliceClick"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.PieChartBase.SliceClick">
            <summary>
            Raised when the slice is clicked.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.UltraItemLegend">
            <summary>
            Represents a legend that displays an item for each point in the series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraItemLegend.#ctor">
            <summary>
            Creates a new instance of the item legend.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraItemLegend.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraItemLegend.About">
            <summary>
            Display the about dialog.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.LegendBase">
            <summary>
            Represents the base class for a legend in UltraDataChart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LegendBase.InitLayout">
            <summary>
            Called after the control has been added to another container.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LegendBase.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control" /> and its child controls and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LegendBase.OnBackgroundImageLayoutChanged(System.EventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.BackgroundImageLayoutChanged event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.LegendBase.ChartOwner">
            <summary>
            Gets the chart that owns the legend.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LegendBase.ShouldSerializeChartOwner">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.LegendBase.ChartOwner"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.LegendBase.ChartOwner"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LegendBase.ResetChartOwner">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.LegendBase.ChartOwner"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.LegendBase.ChartOwner"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.LegendBase.IsFinancial">
            <summary>
            Gets if the legend is a financial legend.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.LegendBase.IsItemwise">
            <summary>
            Gets if the legend is item-wise.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.LegendBase.IsScale">
            <summary>
            Gets if the legend is a scale legend.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.LegendBase.SeriesOwner">
            <summary>
            Gets the series that owns the legend.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LegendBase.ShouldSerializeSeriesOwner">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.LegendBase.SeriesOwner"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.LegendBase.SeriesOwner"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LegendBase.ResetSeriesOwner">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.LegendBase.SeriesOwner"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.LegendBase.SeriesOwner"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LegendBase.ClearLegendItemsForSeries(Infragistics.Controls.Charts.ILegendSeries)">
            <summary>
            Clears all items from the legend for a given series.
            </summary>
            <param name="itemsHost">The host for the items.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LegendBase.ExportSerializedVisualData">
            <summary>
            Returns the legend visuals expressed as a serialized string.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LegendBase.ExportVisualData">
            <summary>
            Returns the legend visuals expressed as a LegendVisualData object.
            </summary>
            <returns>A LegendVisualData object representing the current legend visuals.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LegendBase.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LegendBase.OnPropertyChanged(System.String)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.LegendBase.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property that was changed</param>
            <seealso cref="T:System.ComponentModel.PropertyChangedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.LegendBase.PropertyChanged"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.LegendBase.PropertyChanged">
            <summary>
            Event raised when a property value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LegendBase.OnPropertyUpdated(Infragistics.Win.DataVisualization.PropertyUpdatedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.LegendBase.PropertyUpdated"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.PropertyUpdatedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.LegendBase.PropertyUpdated"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.LegendBase.PropertyUpdated">
            <summary>
            Event raised when a property value is updated.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.StackedFragmentSeries">
            <summary>
            Represents a non-visual child of StackedSeriesBase.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.DashArray">
            <summary>
            Gets or sets a collection of Double values that indicate the pattern of dashes and gaps that
            is used to outline the current series object. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShouldSerializeDashArray">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.DashArray"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.DashArray"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ResetDashArray">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.DashArray"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.DashArray"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.StackedFragmentSeries.TooltipContentUpdating">
            <summary>
            Occurs when the ToolTip for the current series object is updating the content to be rendered.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.#ctor">
            <summary>
            Creates a new instance of StackedFragmentSeries.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ActualAreaFillOpacity">
            <summary>
            Gets the series ActualAreaFillOpacity.  This property only applies for area-like series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ActualBrush">
            <summary>
            Gets the actual brush used by the series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ActualDashArray">
            <summary>
            Gets the actual dash array used by the series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ActualDashCap">
            <summary>
            Gets the actual dash cap used by the series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ActualEndCap">
            <summary>
            Gets the actual end cap used by the series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ActualIsDropShadowEnabled">
            <summary>
            Gets whether drop shadow is actually enabled for this series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ActualLegendItemVisibility">
            <summary>
            Gets the actual visibility of the legend items in the series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ActualMarkerBrush">
            <summary>
            Gets the actual marker brush of the series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ActualMarkerOutline">
            <summary>
            Gets the actual marker outline of the series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ActualMarkerType">
            <summary>
            Gets the actual marker type set used in the series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ActualOpacity">
            <summary>
            Gets the series opacity.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ActualOutline">
            <summary>
            Gets the series outline.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ActualRadiusX">
            <summary>
            Gets the actual corner radius of the series
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ActualRadiusY">
            <summary>
            Gets the actual corner radius of the series
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ActualShadowBlur">
            <summary>
            Gets the actual shadow blur used by the series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ActualShadowColor">
            <summary>
            Gets actual the drop shadow color used by the series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ActualShadowOffsetX">
            <summary>
            Gets the actual drop shadow x-offset applied to the series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ActualShadowOffsetY">
            <summary>
            Gets the actual drop shadow y-offset applied to the series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ActualShowDefaultTooltip">
            <summary>
            Gets a value indicating whether the default tooltip will be shown.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ActualStartCap">
            <summary>
            Gets the series start cap.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ActualThickness">
            <summary>
            Gets or sets the thickness of this stacked fragment.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ActualUseSingleShadow">
            <summary>
            Gets whether drop shadow is actually applied to the whole StackedFragmentSeries visual or to each of the individual shapes forming the StackedFragmentSeries.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ActualVisibility">
            <summary>
            Gets the actual visibility of the stacked fragment.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.AreaFillOpacity">
            <summary>
            Gets or sets the AreaFillOpacity of the stacked fragment. This property only applies for area-like series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShouldSerializeAreaFillOpacity">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.AreaFillOpacity"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.AreaFillOpacity"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ResetAreaFillOpacity">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.AreaFillOpacity"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.AreaFillOpacity"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Brush">
            <summary>
            Gets or sets the brush of the stacked fragment.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShouldSerializeBrush">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Brush"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Brush"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ResetBrush">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Brush"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Brush"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.DashCap">
            <summary>
            Gets or sets the PenLineCap enumeration value that specifies how the current series object's dash ends are drawn. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShouldSerializeDashCap">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.DashCap"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.DashCap"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ResetDashCap">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.DashCap"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.DashCap"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.EndCap">
            <summary>
            The style of the end point of any lines or polylines representing this series.
            </summary>
            <remarks>
            Not every series type has a line at which it would be appropriate to display an end cap, so this property does not affect every series type.  LineSeries, for example, is affected by EndCap, but ColumnSeries is not.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShouldSerializeEndCap">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.EndCap"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.EndCap"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ResetEndCap">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.EndCap"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.EndCap"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.LegendItemVisibility">
            <summary>
            Gets or sets the legend item visibility for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShouldSerializeLegendItemVisibility">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.LegendItemVisibility"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.LegendItemVisibility"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ResetLegendItemVisibility">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.LegendItemVisibility"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.LegendItemVisibility"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.MarkerBrush">
            <summary>
            Gets or sets the brush that specifies how the current series object's marker interiors are painted.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShouldSerializeMarkerBrush">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.MarkerBrush"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.MarkerBrush"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ResetMarkerBrush">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.MarkerBrush"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.MarkerBrush"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.MarkerOutline">
            <summary>
            Gets or sets the brush that specifies how the current series object's marker outlines are painted.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShouldSerializeMarkerOutline">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.MarkerOutline"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.MarkerOutline"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ResetMarkerOutline">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.MarkerOutline"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.MarkerOutline"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.MarkerTemplate">
            <summary>
            Gets or sets the MarkerTemplate for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShouldSerializeMarkerTemplate">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.MarkerTemplate"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.MarkerTemplate"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ResetMarkerTemplate">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.MarkerTemplate"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.MarkerTemplate"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.MarkerType">
            <summary>
            Gets or sets the marker type for the current series object.
            </summary>
            <remarks>
            If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShouldSerializeMarkerType">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.MarkerType"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.MarkerType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ResetMarkerType">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.MarkerType"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.MarkerType"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Name">
            <summary>
            Gets or sets the Name of the stacked fragment.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShouldSerializeName">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Name"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Name"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ResetName">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Name"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Name"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Opacity">
            <summary>
            Gets or sets the Opacity of the stacked fragment.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShouldSerializeOpacity">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Opacity"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Opacity"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ResetOpacity">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Opacity"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Opacity"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Outline">
            <summary>
            Gets or sets the brush to use for the outline of the series.
            </summary>
            <remarks>Some series types, such as LineSeries, do not display outlines.  Therefore, this property does not affect some charts.</remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShouldSerializeOutline">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Outline"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Outline"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ResetOutline">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Outline"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Outline"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ParentOrLocalBrush">
            <summary>
            Gets the resolved brush used between the local series and the parent series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.RadiusX">
            <summary>
            Gets or sets the x-radius of the ellipse that is used to round the corners of the column. This only applies to Bar and Column series.
            </summary>  
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShouldSerializeRadiusX">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.RadiusX"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.RadiusX"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ResetRadiusX">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.RadiusX"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.RadiusX"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.RadiusY">
            <summary>
            Gets or sets the y-radius of the ellipse that is used to round the corners of the column. This only applies to Bar and Column series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShouldSerializeRadiusY">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.RadiusY"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.RadiusY"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ResetRadiusY">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.RadiusY"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.RadiusY"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShowDefaultTooltip">
            <summary>
            Gets or sets a value indicating whether default tooltip will be shown.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShouldSerializeShowDefaultTooltip">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShowDefaultTooltip"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShowDefaultTooltip"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ResetShowDefaultTooltip">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShowDefaultTooltip"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShowDefaultTooltip"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.StartCap">
            <summary>
            The style of the starting point of any lines or polylines representing this series.
            </summary>
            <remarks>
            Not every series type has a line at which it would be appropriate to display a start cap, so this property does not affect every series type.  LineSeries, for example, is affected by StartCap, but ColumnSeries is not.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShouldSerializeStartCap">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.StartCap"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.StartCap"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ResetStartCap">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.StartCap"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.StartCap"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Thickness">
            <summary>
            Gets or sets the width of the current series object's line thickness.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShouldSerializeThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Thickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Thickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ResetThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Thickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Thickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Title">
            <summary>
            Gets or sets the Title property.
            </summary>
            <remarks>
            The legend item control is created according to the Title on-demand by 
            the series object itself.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShouldSerializeTitle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Title"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Title"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ResetTitle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Title"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Title"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ValueMemberPath">
            <summary>
            Gets or sets the value mapping property for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShouldSerializeValueMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ValueMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ValueMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ResetValueMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ValueMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.ValueMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Visibility">
            <summary>
            Gets or sets the Visibility of the stacked fragment.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ShouldSerializeVisibility">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Visibility"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Visibility"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.ResetVisibility">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Visibility"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedFragmentSeries.Visibility"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.OnPropertyChanged(System.String)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.StackedFragmentSeries.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property that was changed</param>
            <seealso cref="T:System.ComponentModel.PropertyChangedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.StackedFragmentSeries.PropertyChanged"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.StackedFragmentSeries.PropertyChanged">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedFragmentSeries.OnPropertyUpdated(Infragistics.Win.DataVisualization.PropertyUpdatedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.StackedFragmentSeries.PropertyUpdated"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.PropertyUpdatedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.StackedFragmentSeries.PropertyUpdated"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.StackedFragmentSeries.PropertyUpdated">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.UltraLegend">
            <summary>
            Represents a legend in a UltraDataChart control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraLegend.Orientation">
            <summary>
            Gets or sets the orientation of the legend items.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraLegend.ShouldSerializeOrientation">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraLegend.Orientation"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraLegend.Orientation"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraLegend.ResetOrientation">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraLegend.Orientation"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraLegend.Orientation"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraLegend.#ctor">
            <summary>
            Initializes a default, empty Legend object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraLegend.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraLegend.About">
            <summary>
            Display the about dialog.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.HorizontalRangeCategorySeries">
            <summary>
            Base class for ranged category series with a category X-axis and a numeric Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.HorizontalRangeCategorySeries.XAxis">
            <summary>
            Gets or sets the effective x-axis for the current CategorySeries object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HorizontalRangeCategorySeries.ShouldSerializeXAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.HorizontalRangeCategorySeries.XAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.HorizontalRangeCategorySeries.XAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HorizontalRangeCategorySeries.ResetXAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.HorizontalRangeCategorySeries.XAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.HorizontalRangeCategorySeries.XAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.HorizontalRangeCategorySeries.YAxis">
            <summary>
            Gets or sets the effective y-axis for the current CategorySeries object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HorizontalRangeCategorySeries.ShouldSerializeYAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.HorizontalRangeCategorySeries.YAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.HorizontalRangeCategorySeries.YAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HorizontalRangeCategorySeries.ResetYAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.HorizontalRangeCategorySeries.YAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.HorizontalRangeCategorySeries.YAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.HorizontalRangeCategorySeries.XAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HorizontalRangeCategorySeries.ShouldSerializeXAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.HorizontalRangeCategorySeries.YAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HorizontalRangeCategorySeries.ShouldSerializeYAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HorizontalRangeCategorySeries.FixupAxisReferences(Infragistics.Win.DataVisualization.AxesCollection)">
            <summary>
            Used during Serialization to synchronize the axis instance generated matches with the axis instances in the collection.
            </summary>
            <param name="axes"></param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HorizontalRangeCategorySeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.HorizontalStackedSeriesBase">
            <summary>
            Base class for stacked series with a category x-axis and a numeric y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.HorizontalStackedSeriesBase.XAxis">
            <summary>
            Gets or sets the effective x-axis for this series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HorizontalStackedSeriesBase.ShouldSerializeXAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.HorizontalStackedSeriesBase.XAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.HorizontalStackedSeriesBase.XAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HorizontalStackedSeriesBase.ResetXAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.HorizontalStackedSeriesBase.XAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.HorizontalStackedSeriesBase.XAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.HorizontalStackedSeriesBase.YAxis">
            <summary>
            Gets or sets the effective y-axis for this series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HorizontalStackedSeriesBase.ShouldSerializeYAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.HorizontalStackedSeriesBase.YAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.HorizontalStackedSeriesBase.YAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HorizontalStackedSeriesBase.ResetYAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.HorizontalStackedSeriesBase.YAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.HorizontalStackedSeriesBase.YAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.HorizontalStackedSeriesBase.XAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HorizontalStackedSeriesBase.ShouldSerializeXAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.HorizontalStackedSeriesBase.YAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HorizontalStackedSeriesBase.ShouldSerializeYAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HorizontalStackedSeriesBase.FixupAxisReferences(Infragistics.Win.DataVisualization.AxesCollection)">
            <summary>
            Used during Serialization to synchronize the axis instance generated matches with the axis instances in the collection.
            </summary>
            <param name="axes"></param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HorizontalStackedSeriesBase.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.Series">
            <summary>
            Represents the base class for all UltraDataChart series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.Name">
            <summary>
            Gets or sets the name of the Series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ShouldSerializeName">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Series.Name"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.Name"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ResetName">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Series.Name"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.Name"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.Legend">
            <summary>
            Gets or sets a legend for the current series object.
            </summary>
            <remarks>
            If the Legend property is not set, the series will use the setting according to the parent UltraDataChart's Legend property.
            <para>
            This property only indicates which Legend to use and will not alone cause the legend to be visible.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ShouldSerializeLegend">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Series.Legend"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.Legend"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ResetLegend">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Series.Legend"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.Legend"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.Visibility">
            <summary>
            Gets or sets the display state of a Series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ShouldSerializeVisibility">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Series.Visibility"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.Visibility"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ResetVisibility">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Series.Visibility"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.Visibility"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.Opacity">
            <summary>
            Gets or sets the Opacity of the Series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ShouldSerializeOpacity">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Series.Opacity"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.Opacity"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ResetOpacity">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Series.Opacity"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.Opacity"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.SeriesViewer">
            <summary>
            Gets the containing series viewer for this series. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.TransitionEasingFunction">
            <summary>
            Gets or sets the easing function used to morph the current series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ShouldSerializeTransitionEasingFunction">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Series.TransitionEasingFunction"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.TransitionEasingFunction"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ResetTransitionEasingFunction">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Series.TransitionEasingFunction"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.TransitionEasingFunction"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.TransitionInEasingFunction">
            <summary>
            Gets or sets the EasingFunction used to morph the current series during the initial transition.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ShouldSerializeTransitionInEasingFunction">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Series.TransitionInEasingFunction"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.TransitionInEasingFunction"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ResetTransitionInEasingFunction">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Series.TransitionInEasingFunction"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.TransitionInEasingFunction"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.Title">
            <summary>
            Gets or sets the Title property.
            </summary><remarks>
            The legend item control is created according to the Title on-demand by 
            the series object itself.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ShouldSerializeTitle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Series.Title"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.Title"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ResetTitle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Series.Title"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.Title"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.DataSource">
            <summary>
            Gets or sets the data source from which the Series' data items collection is populated.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.DataMember"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ShouldSerializeDataSource">
            <summary>
            Returns whether the <see cref="P:Infragistics.Win.DataVisualization.Series.DataSource"/> property requires serialization.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ResetDataSource">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Series.DataSource"/> property to its default value.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.DataMember">
            <summary>
            Gets or sets the data member of the data source from which the Series's data items collection is populated.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.DataSource"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ShouldSerializeDataMember">
            <summary>
            Returns whether the <see cref="P:Infragistics.Win.DataVisualization.Series.DataMember"/> property requires serialization.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ResetDataMember">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Series.DataMember"/> property to its default value.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.Id">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ShouldSerializeId">
            <summary>Returns true unconditionally so that a unique identifier is serialized.</summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.SetDataBinding(System.Object,System.String)">
            <summary>
            Sets the datasource and datamember for the control in one atomic operation.
            </summary>
            <param name="dataSource">Data source to bind to.</param>
            <param name="dataMember">Data member.</param>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.Series.TooltipContentUpdating">
            <summary>
            Occurs when the ToolTip for the current series object is updating the content to be rendered.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.ActualAreaFillOpacity">
            <summary>
            Gets the actual opacity applied to the area fill visual.
            </summary>
            <value>
            A double in the range 0, 1.
            </value>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.ActualBrush">
            <summary>
            Gets the effective brush for the current series object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.ActualHitTestMode">
            <summary>
            Resolved method of hit testing to use when pointing to items in the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.ActualOutline">
            <summary>
            Gets the effective outline for the current series object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.AreaFillOpacity">
            <summary>
            Gets or sets the opacity applied to the area fill visual.
            </summary>
            <value>
            A double in the range 0, 1. The default is NaN.
            </value>
            <remarks>
            This property only applies to series that have area visual.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ShouldSerializeAreaFillOpacity">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Series.AreaFillOpacity"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.AreaFillOpacity"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ResetAreaFillOpacity">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Series.AreaFillOpacity"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.AreaFillOpacity"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.Brush">
            <summary>
            Gets or sets the brush to use for the series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ShouldSerializeBrush">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Series.Brush"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.Brush"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ResetBrush">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Series.Brush"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.Brush"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.ExpectFunctions">
            <summary>
            Gets or sets whether the series should expect that properties in its items source may be functions that need to be
            evaluated to yield their value. This defaults to false, as there will be a subtle performance impact to using this feature.
            This value must be set before assigning an item's source to take effect.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ShouldSerializeExpectFunctions">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Series.ExpectFunctions"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.ExpectFunctions"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ResetExpectFunctions">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Series.ExpectFunctions"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.ExpectFunctions"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.FinalValue">
            <summary>
            The final value of this series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.HasMarkers">
            <summary>
            Returns whether the current series supports visual markers.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.HitTestMode">
            <summary>
            Method of hit testing to use when pointing to items in this series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ShouldSerializeHitTestMode">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Series.HitTestMode"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.HitTestMode"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ResetHitTestMode">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Series.HitTestMode"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.HitTestMode"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.IsAnnotationLayer">
            <summary>
            Gets whether the series is an annotation layer.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.IsAreaOrLine">
            <summary>
            Gets whether the current series shows an area or line shape.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.IsCategory">
            <summary>
            Gets whether the current series is a category type series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.IsDefaultCrosshairBehaviorDisabled">
            <summary>
            Gets whether the default crosshair behavior should be disabled if this series is present.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.IsDefaultTooltipBehaviorDisabled">
            <summary>
            Gets whether the default tooltip behavior should be disabled if this series is present.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.IsFinancial">
            <summary>
            Gets whether the current series is a financial type series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.IsFragment">
            <summary>
            Gets whether the current series is a stack fragment.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.IsGeographic">
            <summary>
            Gets whether the current seires is a geogrpahic series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.IsHighlightingEnabled">
            <summary>
            Gets or sets whether highlighting should be enabled for this series, if this type of series supports highlighting.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ShouldSerializeIsHighlightingEnabled">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Series.IsHighlightingEnabled"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.IsHighlightingEnabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ResetIsHighlightingEnabled">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Series.IsHighlightingEnabled"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.IsHighlightingEnabled"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.IsIndexed">
            <summary>
            Gets if the series uses an index, which can be used to auto-assign it a color.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.IsMarkerlessDisplayPreferred">
            <summary>
            Overridden by derived series classes to indicate when markerless display is preferred or not.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.IsNegativeColorSupported">
            <summary>
            Overridden by derived series classes to indicate when negative colors are supported or not.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.IsPolar">
            <summary>
            Gets whether the current series is a polar type series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.IsRadial">
            <summary>
            Gets whether the current series is a radial type series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.IsRange">
            <summary>
            Gets whether the current series is a range type series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.IsScatter">
            <summary>
            Gets whether the current series is a scatter type series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.IsShape">
            <summary>
            Gets whether the current series is a shape type series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.IsStacked">
            <summary>
            Gets whether the current series is a stacked type series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.IsUsableInLegend">
            <summary>
            Gets if the series should appear in any legends.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.IsValueOverlay">
            <summary>
            Gets whether the series is a value overlay.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.IsVertical">
            <summary>
            Gets whether the current series is oriented vertically.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.LegendItemVisibility">
            <summary>
            Gets or sets the legend item visibility for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ShouldSerializeLegendItemVisibility">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Series.LegendItemVisibility"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.LegendItemVisibility"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ResetLegendItemVisibility">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Series.LegendItemVisibility"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.LegendItemVisibility"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.MouseOverEnabled">
            <summary>
            Gets or sets the whether the chart reacts to mouse move events.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ShouldSerializeMouseOverEnabled">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Series.MouseOverEnabled"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.MouseOverEnabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ResetMouseOverEnabled">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Series.MouseOverEnabled"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.MouseOverEnabled"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.Outline">
            <summary>
            Gets or sets the brush to use for the outline of the series.
            </summary>
            <remarks>Some series types, such as LineSeries, do not display outlines.  Therefore, this property does not affect some charts.</remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ShouldSerializeOutline">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Series.Outline"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.Outline"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ResetOutline">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Series.Outline"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.Outline"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.PercentChange">
            <summary>
            The percent change from the beginning to the end of this series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.Resolution">
            <summary>
            Gets or sets the current series object's rendering resolution.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ShouldSerializeResolution">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Series.Resolution"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.Resolution"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ResetResolution">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Series.Resolution"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.Resolution"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.ShowDefaultTooltip">
            <summary>
            Gets or sets whether default tooltip will be shown.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ShouldSerializeShowDefaultTooltip">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Series.ShowDefaultTooltip"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.ShowDefaultTooltip"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ResetShowDefaultTooltip">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Series.ShowDefaultTooltip"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.ShowDefaultTooltip"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.Thickness">
            <summary>
            Gets or sets the width of the current series object's line thickness.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ShouldSerializeThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Series.Thickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.Thickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ResetThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Series.Thickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.Thickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.TransitionDuration">
            <summary>
            Gets or sets the duration of the current series's morph.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ShouldSerializeTransitionDuration">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Series.TransitionDuration"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.TransitionDuration"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ResetTransitionDuration">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Series.TransitionDuration"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.TransitionDuration"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.TransitionInDuration">
            <summary>
            Gets or sets the duration of the current series's transition in morph.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ShouldSerializeTransitionInDuration">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Series.TransitionInDuration"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.TransitionInDuration"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ResetTransitionInDuration">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Series.TransitionInDuration"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.TransitionInDuration"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.Series.TransitionInSpeedType">
            <summary>
            Gets or sets the duration of the current series's transition in morph.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ShouldSerializeTransitionInSpeedType">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.Series.TransitionInSpeedType"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.TransitionInSpeedType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ResetTransitionInSpeedType">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.Series.TransitionInSpeedType"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.Series.TransitionInSpeedType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ExportVisualData">
            <summary>
            Exports visual information about the series for use by external tools and functionality.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.FromWorldPosition(Infragistics.Win.DataVisualization.Point)">
            <summary>
            Converts a point from world coordinates to coordinates within the viewport of the series.
            </summary>
            <param name="world">The world position from which to convert.</param>
            <returns>The relative position within the current viewport of the series.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetActualMarkerBrush">
            <summary>
            Returns the actual marker brush used by the series if the series has markers.
            </summary>
            <returns>The actual marker brush used by the series, if the series has markers</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetActualMarkerOutlineBrush">
            <summary>
            Returns the actual marker outline brush used by the series if the series has markers.
            </summary>
            <returns>The actual marker outline brush used by the series, if the series has markers</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetEffectiveViewport">
            <summary>
            Gets the effective viewport, adjusted to account for margins and other factors.
            </summary>
            <returns>The effective viewport.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetExactItemIndex(Infragistics.Win.DataVisualization.Point)">
            <summary>
            Gets the precise item index, if possible, based on the closeness to the previous or next whole integer. If the series cannot provide this information, GetExactItemIndex will return the same integer value as GetItemIndex.
            </summary>
            <param name="world">The world position for which to return the index.</param>
            <returns>The double index indicating which whole number index the point is closest to.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetExactItemIndexFromSeriesPixel(Infragistics.Win.DataVisualization.Point)">
            <summary>
            Gets the precise item index, if possible, the closeness to the previous or next whole integer indicating which value is closer. If the series cannot provide this information this will return the same integer value as GetItemIndexFromSeriesPixel.
            </summary>
            <param name="mouse">The pixel position within the series plot area</param>
            <returns>The exact item index, as a double, indicating which whole number index the mouse is closest to, if possible.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetItem(Infragistics.Win.DataVisualization.Point)">
            <summary>
            Gets the item that is the best match for the specified world coordinates.
            </summary>
            <param name="world">The world coordinates to use.</param>
            <returns>The item that is the best match.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetItemFromSeriesPixel(Infragistics.Win.DataVisualization.Point)">
            <summary>
            Gets the item index that is the best match for the specified pixel position within the series plot area.
            </summary>
            <param name="mouse">The pixel position within the series plot area</param>
            <returns>The best matching item index.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetItemIndex(Infragistics.Win.DataVisualization.Point)">
            <summary>
            Gets the item item index associated with the specified world position
            </summary>
            <returns>Item index or -1 if no item is associated with the specified world position.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetItemIndexFromSeriesPixel(Infragistics.Win.DataVisualization.Point)">
            <summary>
            Gets the item index that is the best match for the specified pixel position within the series plot area.
            </summary>
            <param name="mouse">The pixel position within the series plot area</param>
            <returns>The best matching item index.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetItemSpan">
            <summary>
            For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.
            </summary>
            <returns>The width of the items for this series within the categories.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetItemValue(System.Object,System.String)">
            <summary>
            Gets a value based on one of the valid member paths for this series type.
            </summary>
            <param name="item">An item from the data source bound to the series.</param>
            <param name="memberPathName">The property name of a valid member path for the series</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetNextOrExactIndex(Infragistics.Win.DataVisualization.Point,System.Boolean)">
            <summary>
            Getting the next index that is near a given world position, if possible, otherwise NaN.
            </summary>
            <param name="world">The world position to use in searching.</param>
            <param name="skipUnknowns">Should unknown values be skipped when searching.</param>
            <returns>The found index, otherwise, -1.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetPreviousOrExactIndex(Infragistics.Win.DataVisualization.Point,System.Boolean)">
            <summary>
            Getting the previous index that is near a given world position, if possible, otherwise NaN.
            </summary>
            <param name="world">The world position to use in searching.</param>
            <param name="skipUnknowns">Should unknown values be skipped when searching.</param>
            <returns>The found index, otherwise, -1.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetSeriesHighValue(Infragistics.Win.DataVisualization.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available high value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetSeriesHighValueFromSeriesPixel(Infragistics.Win.DataVisualization.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available high value of the series for a given pixel coordinate within the current series plot area. 
            </summary>
            <param name="mouse">The series coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetSeriesHighValuePosition(Infragistics.Win.DataVisualization.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best high value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetSeriesHighValuePositionFromSeriesPixel(Infragistics.Win.DataVisualization.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best high value match for the world position provided. 
            </summary>
            <param name="mouse">The series coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetSeriesLowValue(Infragistics.Win.DataVisualization.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available low value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetSeriesLowValueFromSeriesPixel(Infragistics.Win.DataVisualization.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available low value of the series for a given pixel coordinate within the current series plot area. 
            </summary>
            <param name="mouse">The series coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetSeriesLowValuePosition(Infragistics.Win.DataVisualization.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best low value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetSeriesLowValuePositionFromSeriesPixel(Infragistics.Win.DataVisualization.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best low value match for the world position provided. 
            </summary>
            <param name="mouse">The series coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetSeriesValue(Infragistics.Win.DataVisualization.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available main value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, when searching for the best available value any unknown values will be skipped.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetSeriesValueBoundingBox(Infragistics.Win.DataVisualization.Point)">
            <summary>
            If possible, will return the best available value bounding box within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value bounding box for</param>
            <returns>The bounding box in question, or empty if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetSeriesValueBoundingBoxFromSeriesPixel(Infragistics.Win.DataVisualization.Point)">
            <summary>
            If possible, will return the best available value bounding box within the series that has the best value match for the pixel position provided. 
            </summary>
            <param name="pixelPosition">The pixel coordinates for which to get a value bounding box for</param>
            <returns>The bounding box in question, or empty if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetSeriesValueFromSeriesPixel(Infragistics.Win.DataVisualization.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available main value of the series for a given pixel coordinate within the current series plot area. 
            </summary>
            <param name="mouse">The series coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetSeriesValueMarkerBoundingBox(Infragistics.Win.DataVisualization.Point)">
            <summary>
            If possible, will return the best available value marker bounding box within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinates for which to get a value marker bounding box for</param>
            <returns>The bounding box in question, or empty if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetSeriesValueMarkerBoundingBoxFromSeriesPixel(Infragistics.Win.DataVisualization.Point)">
            <summary>
            If possible, will return the best available value marker bounding box within the series that has the best value match for the pixel position provided. 
            </summary>
            <param name="pixelPosition">The pixel coordinates for which to get a value marker bounding box for</param>
            <returns>The bounding box in question, or empty if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetSeriesValuePosition(Infragistics.Win.DataVisualization.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.GetSeriesValuePositionFromSeriesPixel(Infragistics.Win.DataVisualization.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best value match for the world position provided. 
            </summary>
            <param name="mouse">The series coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.HideToolTips">
            <summary>
            Hides any internal tooltips presented by the series, if any.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.MoveCursorPoint(Infragistics.Win.DataVisualization.Point)">
            <summary>
            Moves the cursor point to the provided world position. Some series may react to the current cursor position.
            </summary>
            <param name="point">The cursor point, in world coordinates.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.RemoveAxes">
            <summary>
            Call to null out the axes of the series;
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.RenderSeries(System.Boolean)">
            <summary>
            Renders the series.
            </summary>
            <param name="animate">True if the change should be animated.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ReplayTransitionIn">
            <summary>
            Replays the assigned transition in animation, if any.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ResolveLegendIndex">
            <summary>
            Resolves the index to use for ordering the legend.
            </summary>
            <returns>The ordering index to use.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ScrollIntoView(System.Object)">
            <summary>
            Requests that the provided item should be brought into view if possible.
            </summary>
            <param name="item">The item to attempt to bring into view.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.SetNegativeColors(Infragistics.Win.DataVisualization.Brush,Infragistics.Win.DataVisualization.Brush)">
            <summary>
            Sets the negative brush and outline properties for this series to the given arguments.
            </summary>
            <param name="negativeBrush">The negative fill brush.</param>
            <param name="negativeOutline">The negative outline brush.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.SimulateHover(Infragistics.Win.DataVisualization.Point)">
            <summary>
            Simulates a pointer hover over the series surface.
            </summary>
            <param name="point">The pointer position relative to the series viewport over which to hover.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.StyleUpdated">
            <summary>
            Called when this series' Style is updated.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.ToWorldPosition(Infragistics.Win.DataVisualization.Point)">
            <summary>
            Converts a point from coordinates within the series plot area to a world position within axis space.
            </summary>
            <param name="seriesPoint">The pixel location within the plot area of the series.</param>
            <returns>The world position of the series point.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.OnPropertyChanged(System.String)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.Series.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property that was changed</param>
            <seealso cref="T:System.ComponentModel.PropertyChangedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.Series.PropertyChanged"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.Series.PropertyChanged">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.OnPropertyUpdated(Infragistics.Win.DataVisualization.PropertyUpdatedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.Series.PropertyUpdated"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.PropertyUpdatedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.Series.PropertyUpdated"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.Series.PropertyUpdated">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Series.OnRenderRequested(Infragistics.Win.DataVisualization.RenderRequestedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.Series.RenderRequested"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.RenderRequestedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.Series.RenderRequested"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.Series.RenderRequested">
            <summary>
            This event is raised every time a render has been requested from a series.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ScatterBase">
            <summary>
            Represents the base class for all UltraDataChart scatter series
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterBase.XAxis">
            <summary>
            Gets or sets the effective x-axis for the current object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterBase.ShouldSerializeXAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterBase.XAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterBase.XAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterBase.ResetXAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterBase.XAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterBase.XAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterBase.YAxis">
            <summary>
            Gets or sets the effective y-axis for the current object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterBase.ShouldSerializeYAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterBase.YAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterBase.YAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterBase.ResetYAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterBase.YAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterBase.YAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterBase.XAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterBase.ShouldSerializeXAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterBase.YAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterBase.ShouldSerializeYAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterBase.FixupAxisReferences(Infragistics.Win.DataVisualization.AxesCollection)">
            <summary>
            Used during Serialization to synchronize the axis instance generated matches with the axis instances in the collection.
            </summary>
            <param name="axes"></param>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterBase.ActualTrendLineBrush">
            <summary>
            Gets the effective TrendLineBrush for this series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterBase.MaximumMarkers">
            <summary>
            Gets or sets the maximum number of markerItems displayed by the current series.
            <para>If more than the specified number of markerItems are visible, the series will automatically
            choose a representative set.</para>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterBase.ShouldSerializeMaximumMarkers">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterBase.MaximumMarkers"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterBase.MaximumMarkers"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterBase.ResetMaximumMarkers">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterBase.MaximumMarkers"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterBase.MaximumMarkers"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLineBrush">
            <summary>
            Gets or sets the brush to use to draw the trend line.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterBase.ShouldSerializeTrendLineBrush">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLineBrush"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLineBrush"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterBase.ResetTrendLineBrush">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLineBrush"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLineBrush"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLinePeriod">
            <summary>
            Gets or sets the moving average period for the current scatter series object.
            </summary>
            <remarks>
            The typical, and initial, value for trend line period is 7.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterBase.ShouldSerializeTrendLinePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLinePeriod"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLinePeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterBase.ResetTrendLinePeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLinePeriod"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLinePeriod"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLineThickness">
            <summary>
            Gets or sets the thickness of the current scatter series object's trend line.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterBase.ShouldSerializeTrendLineThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLineThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLineThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterBase.ResetTrendLineThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLineThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLineThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLineType">
            <summary>
            Gets or sets the trend type for the current scatter series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterBase.ShouldSerializeTrendLineType">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLineType"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLineType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterBase.ResetTrendLineType">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLineType"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLineType"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLineZIndex">
            <summary>
            Gets or sets the Z-Index of the trend line.  Values greater than 1000 will result in the trend line being rendered in front of the series data.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterBase.ShouldSerializeTrendLineZIndex">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLineZIndex"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLineZIndex"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterBase.ResetTrendLineZIndex">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLineZIndex"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterBase.TrendLineZIndex"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterBase.XMemberPath">
            <summary>
            Gets or sets the value mapping property for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterBase.ShouldSerializeXMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterBase.XMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterBase.XMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterBase.ResetXMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterBase.XMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterBase.XMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterBase.YMemberPath">
            <summary>
            Gets or sets the value mapping property for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterBase.ShouldSerializeYMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterBase.YMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterBase.YMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterBase.ResetYMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterBase.YMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterBase.YMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterBase.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.RadialBase">
            <summary>
            Represents the base class for all UltraDataChart radial series
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RadialBase.AngleAxis">
            <summary>
            Gets the effective angle axis for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialBase.ShouldSerializeAngleAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RadialBase.AngleAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RadialBase.AngleAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialBase.ResetAngleAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RadialBase.AngleAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RadialBase.AngleAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RadialBase.ValueAxis">
            <summary>
            Gets or sets the effective value axis for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialBase.ShouldSerializeValueAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RadialBase.ValueAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RadialBase.ValueAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialBase.ResetValueAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RadialBase.ValueAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RadialBase.ValueAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RadialBase.AngleAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialBase.ShouldSerializeAngleAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RadialBase.ValueAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialBase.ShouldSerializeValueAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialBase.FixupAxisReferences(Infragistics.Win.DataVisualization.AxesCollection)">
            <summary>
            Used during Serialization to synchronize the axis instance generated matches with the axis instances in the collection.
            </summary>
            <param name="axes"></param>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RadialBase.ClipSeriesToBounds">
            <summary>
            Gets or sets whether to clip the series to the bounds.
            </summary>
            <remarks>
            Setting this property to true will decrease chart performance.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialBase.ShouldSerializeClipSeriesToBounds">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RadialBase.ClipSeriesToBounds"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RadialBase.ClipSeriesToBounds"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialBase.ResetClipSeriesToBounds">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RadialBase.ClipSeriesToBounds"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RadialBase.ClipSeriesToBounds"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialBase.GetAngleFromWorld(Infragistics.Win.DataVisualization.Point)">
            <summary>
            Gets the angle to the provided world position from the center of the radial series.
            </summary>
            <param name="world">The world position to get the angle for</param>
            <returns>The angle for the world position.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialBase.GetCategoryWidth">
            <summary>
            Returns the width of the category grouping this series is in.
            </summary>
            <returns>The width of the category group.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialBase.GetExactItemIndex(Infragistics.Win.DataVisualization.Point)">
            <summary>
            Gets the precise item index, if possible, based on the closeness to the previous or next whole integer. If the series cannot provide this information, GetExactItemIndex will return the same integer value as GetItemIndex.
            </summary>
            <param name="world">The world position for which to return the index.</param>
            <returns>The double index indicating which whole number index the point is closest to.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialBase.GetOffsetValue">
            <summary>
            Returns the offset value for this series if grouped on a category axis.
            </summary>
            <returns>The offset value</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialBase.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.PolarBase">
            <summary>
            Represents the base class from which all UltraDataChart polar series are derived.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PolarBase.AngleAxis">
            <summary>
            Gets or sets the effective angle axis for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ShouldSerializeAngleAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PolarBase.AngleAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarBase.AngleAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ResetAngleAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PolarBase.AngleAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarBase.AngleAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PolarBase.RadiusAxis">
            <summary>
            Gets or sets the effective radius axis for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ShouldSerializeRadiusAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PolarBase.RadiusAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarBase.RadiusAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ResetRadiusAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PolarBase.RadiusAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarBase.RadiusAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PolarBase.AngleAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ShouldSerializeAngleAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PolarBase.RadiusAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ShouldSerializeRadiusAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.FixupAxisReferences(Infragistics.Win.DataVisualization.AxesCollection)">
            <summary>
            Used during Serialization to synchronize the axis instance generated matches with the axis instances in the collection.
            </summary>
            <param name="axes"></param>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PolarBase.ActualTrendLineBrush">
            <summary>
            Gets the effective TrendLineBrush for this series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PolarBase.AngleMemberPath">
            <summary>
            Gets or sets the path to use to find the angle values for the series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ShouldSerializeAngleMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PolarBase.AngleMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarBase.AngleMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ResetAngleMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PolarBase.AngleMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarBase.AngleMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PolarBase.ClipSeriesToBounds">
            <summary>
            Gets or sets whether to clip the series to the bounds.
            </summary>
            <remarks>
            Setting this to true can effect performance.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ShouldSerializeClipSeriesToBounds">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PolarBase.ClipSeriesToBounds"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarBase.ClipSeriesToBounds"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ResetClipSeriesToBounds">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PolarBase.ClipSeriesToBounds"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarBase.ClipSeriesToBounds"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PolarBase.MaximumMarkers">
            <summary>
            Gets or sets the maximum number of markers displayed by the current series.
            <para>If more than the specified number of markers are visible, the polar series will automatically
            choose a representative set.</para>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ShouldSerializeMaximumMarkers">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PolarBase.MaximumMarkers"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarBase.MaximumMarkers"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ResetMaximumMarkers">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PolarBase.MaximumMarkers"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarBase.MaximumMarkers"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PolarBase.RadiusMemberPath">
            <summary>
            Gets or sets the path to use to get the radius values for the series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ShouldSerializeRadiusMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PolarBase.RadiusMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarBase.RadiusMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ResetRadiusMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PolarBase.RadiusMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarBase.RadiusMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PolarBase.TrendLineBrush">
            <summary>
            Gets or sets the brush that specifies how the current series
            object's trend line is drawn.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ShouldSerializeTrendLineBrush">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PolarBase.TrendLineBrush"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarBase.TrendLineBrush"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ResetTrendLineBrush">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PolarBase.TrendLineBrush"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarBase.TrendLineBrush"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PolarBase.TrendLinePeriod">
            <summary>
            Gets or sets the moving average period for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ShouldSerializeTrendLinePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PolarBase.TrendLinePeriod"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarBase.TrendLinePeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ResetTrendLinePeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PolarBase.TrendLinePeriod"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarBase.TrendLinePeriod"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PolarBase.TrendLineThickness">
            <summary>
            Gets or sets the thickness of the current series object's trend line.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ShouldSerializeTrendLineThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PolarBase.TrendLineThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarBase.TrendLineThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ResetTrendLineThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PolarBase.TrendLineThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarBase.TrendLineThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PolarBase.TrendLineType">
            <summary>
            Gets or sets the trend type for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ShouldSerializeTrendLineType">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PolarBase.TrendLineType"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarBase.TrendLineType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ResetTrendLineType">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PolarBase.TrendLineType"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarBase.TrendLineType"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PolarBase.TrendLineZIndex">
            <summary>
            Sets or Gets the Trendline Z index.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ShouldSerializeTrendLineZIndex">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PolarBase.TrendLineZIndex"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarBase.TrendLineZIndex"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ResetTrendLineZIndex">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PolarBase.TrendLineZIndex"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarBase.TrendLineZIndex"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PolarBase.UseCartesianInterpolation">
            <summary>
            Gets or sets whether Cartesian Interpolation should be used rather than Archimedian 
            spiral based interpolation.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ShouldSerializeUseCartesianInterpolation">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PolarBase.UseCartesianInterpolation"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarBase.UseCartesianInterpolation"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.ResetUseCartesianInterpolation">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PolarBase.UseCartesianInterpolation"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarBase.UseCartesianInterpolation"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.CanUseAsAngleAxis(System.Object)">
            <summary>
            Determine if object can be used as AngleAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.CanUseAsRadiusAxis(System.Object)">
            <summary>
            Determine if object can be used as RadiusAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarBase.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.StackedSeriesBase">
            <summary>
            Represents a base class for stacked series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedSeriesBase.Series">
            <summary>
            Contains one or more stacked fragments.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedSeriesBase.ShouldSerializeSeries">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedSeriesBase.Series"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedSeriesBase.Series"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedSeriesBase.ResetSeries">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedSeriesBase.Series"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedSeriesBase.Series"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedSeriesBase.AutoGenerateSeries">
            <summary>
            Gets or sets whether series should be automatically generated. Reqiures the use of GroupBy as the ItemsSource.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedSeriesBase.ShouldSerializeAutoGenerateSeries">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedSeriesBase.AutoGenerateSeries"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedSeriesBase.AutoGenerateSeries"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedSeriesBase.ResetAutoGenerateSeries">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedSeriesBase.AutoGenerateSeries"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedSeriesBase.AutoGenerateSeries"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedSeriesBase.ReverseLegendOrder">
            <summary>
            Gets or sets whether the order of the fragment series should be reversed in the legend.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedSeriesBase.ShouldSerializeReverseLegendOrder">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedSeriesBase.ReverseLegendOrder"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedSeriesBase.ReverseLegendOrder"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedSeriesBase.ResetReverseLegendOrder">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedSeriesBase.ReverseLegendOrder"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedSeriesBase.ReverseLegendOrder"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedSeriesBase.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedSeriesBase.OnSeriesCreated(Infragistics.Win.DataVisualization.StackedSeriesCreatedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.StackedSeriesBase.SeriesCreated"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.StackedSeriesCreatedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.StackedSeriesBase.SeriesCreated"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.StackedSeriesBase.SeriesCreated">
            <summary>
            Event raised when a new fragment series is automatically generated.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.VerticalAnchoredCategorySeries">
            <summary>
            Represents a vertically laid out category based series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.VerticalAnchoredCategorySeries.XAxis">
            <summary>
            Gets or sets the effective x-axis for the current CategorySeries object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.VerticalAnchoredCategorySeries.ShouldSerializeXAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.VerticalAnchoredCategorySeries.XAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.VerticalAnchoredCategorySeries.XAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.VerticalAnchoredCategorySeries.ResetXAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.VerticalAnchoredCategorySeries.XAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.VerticalAnchoredCategorySeries.XAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.VerticalAnchoredCategorySeries.YAxis">
            <summary>
            Gets or sets the effective y-axis for the current CategorySeries object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.VerticalAnchoredCategorySeries.ShouldSerializeYAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.VerticalAnchoredCategorySeries.YAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.VerticalAnchoredCategorySeries.YAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.VerticalAnchoredCategorySeries.ResetYAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.VerticalAnchoredCategorySeries.YAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.VerticalAnchoredCategorySeries.YAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.VerticalAnchoredCategorySeries.XAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.VerticalAnchoredCategorySeries.ShouldSerializeXAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.VerticalAnchoredCategorySeries.YAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.VerticalAnchoredCategorySeries.ShouldSerializeYAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.VerticalAnchoredCategorySeries.FixupAxisReferences(Infragistics.Win.DataVisualization.AxesCollection)">
            <summary>
            Used during Serialization to synchronize the axis instance generated matches with the axis instances in the collection.
            </summary>
            <param name="axes"></param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.VerticalAnchoredCategorySeries.CanUseAsXAxis(System.Object)">
            <summary>
            Determine if object can be used as XAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.VerticalAnchoredCategorySeries.CanUseAsYAxis(System.Object)">
            <summary>
            Determine if object can be used as YAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.VerticalAnchoredCategorySeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.HorizontalAnchoredCategorySeries">
            <summary>
            Base class for anchored category series with a category x-axis and a numeric y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.HorizontalAnchoredCategorySeries.XAxis">
            <summary>
            Gets or sets the effective x-axis for this series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HorizontalAnchoredCategorySeries.ShouldSerializeXAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.HorizontalAnchoredCategorySeries.XAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.HorizontalAnchoredCategorySeries.XAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HorizontalAnchoredCategorySeries.ResetXAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.HorizontalAnchoredCategorySeries.XAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.HorizontalAnchoredCategorySeries.XAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.HorizontalAnchoredCategorySeries.YAxis">
            <summary>
            Gets or sets the effective y-axis for this series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HorizontalAnchoredCategorySeries.ShouldSerializeYAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.HorizontalAnchoredCategorySeries.YAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.HorizontalAnchoredCategorySeries.YAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HorizontalAnchoredCategorySeries.ResetYAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.HorizontalAnchoredCategorySeries.YAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.HorizontalAnchoredCategorySeries.YAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.HorizontalAnchoredCategorySeries.XAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HorizontalAnchoredCategorySeries.ShouldSerializeXAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.HorizontalAnchoredCategorySeries.YAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HorizontalAnchoredCategorySeries.ShouldSerializeYAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HorizontalAnchoredCategorySeries.FixupAxisReferences(Infragistics.Win.DataVisualization.AxesCollection)">
            <summary>
            Used during Serialization to synchronize the axis instance generated matches with the axis instances in the collection.
            </summary>
            <param name="axes"></param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HorizontalAnchoredCategorySeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.UltraDataChart">
            <summary>
            Represents a chart area containing axes, series, an optional legend and other hosted content.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDataChart.Axes">
            <summary>
            Gets the current Chart object's child DataChartAxes.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ShouldSerializeAxes">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.Axes"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.Axes"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ResetAxes">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.Axes"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.Axes"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDataChart.Brushes">
            <summary>
            Gets or sets the Brushes property.
            </summary>
            <remarks>
            The brushes property defines the palette from which automatically assigned series brushes are selected.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ShouldSerializeBrushes">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.Brushes"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.Brushes"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ResetBrushes">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.Brushes"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.Brushes"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDataChart.MarkerBrushes">
            <summary>
            Gets or sets the MarkerBrushes property.
            </summary>
            <remarks>
            The brushes property defines the palette from which automatically assigned series brushes are selected.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ShouldSerializeMarkerBrushes">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.MarkerBrushes"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.MarkerBrushes"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ResetMarkerBrushes">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.MarkerBrushes"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.MarkerBrushes"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDataChart.Outlines">
            <summary>
            Gets or sets the Outlines property.
            </summary>
            <remarks>
            The brushes property defines the palette from which automatically assigned series brushes are selected.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ShouldSerializeOutlines">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.Outlines"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.Outlines"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ResetOutlines">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.Outlines"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.Outlines"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDataChart.MarkerOutlines">
            <summary>
            Gets or sets the MarkerOutlines property.
            </summary>
            <remarks>
            The brushes property defines the palette from which automatically assigned series brushes are selected.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ShouldSerializeMarkerOutlines">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.MarkerOutlines"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.MarkerOutlines"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ResetMarkerOutlines">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.MarkerOutlines"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.MarkerOutlines"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.UltraDataChart.TooltipShowing">
            <summary>
            Occurs when the tooltip is about to be shown.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.UltraDataChart"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDataChart.ActualWindowScaleHorizontal">
            <summary>
            A number between 0 and 1 determining the scale of the horizontal zoom.
            </summary>
            <remarks>
            This property is effectively a shortcut to the Width of the ActualWindowRect property.
            </remarks>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDataChart.ActualWindowScaleVertical">
            <summary>
            A number between 0 and 1 determining the scale of the vertical zoom.
            </summary>
            <remarks>
            This property is effectively a shortcut to the Height of the ActualWindowRect property.
            </remarks>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDataChart.AlignsGridLinesToPixels">
            <summary>
            Gets or sets a value indicating whether grid and tick lines are aligned to device pixels.
            </summary>
            <value>
            <c>true</c> if grid and tick lines are aligned to device pixels; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ShouldSerializeAlignsGridLinesToPixels">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.AlignsGridLinesToPixels"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.AlignsGridLinesToPixels"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ResetAlignsGridLinesToPixels">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.AlignsGridLinesToPixels"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.AlignsGridLinesToPixels"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDataChart.DefaultAxisMajorStroke">
            <summary>
            Gets or sets the DefaultAxisMajorStroke property.
            </summary>
            <remarks>
            The DefaultAxisMajorStroke property defines the brush which is used by the axes when no <see cref="P:Infragistics.Win.DataVisualization.Axis.MajorStroke"/> is set.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ShouldSerializeDefaultAxisMajorStroke">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.DefaultAxisMajorStroke"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.DefaultAxisMajorStroke"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ResetDefaultAxisMajorStroke">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.DefaultAxisMajorStroke"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.DefaultAxisMajorStroke"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDataChart.DefaultAxisMinorStroke">
            <summary>
            Gets or sets the DefaultAxisMinorStroke property.
            </summary>
            <remarks>
            The DefaultAxisMinorStroke property defines the brush which is used by the axes when no <see cref="P:Infragistics.Win.DataVisualization.Axis.MinorStroke"/> is set.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ShouldSerializeDefaultAxisMinorStroke">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.DefaultAxisMinorStroke"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.DefaultAxisMinorStroke"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ResetDefaultAxisMinorStroke">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.DefaultAxisMinorStroke"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.DefaultAxisMinorStroke"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDataChart.DefaultAxisStroke">
            <summary>
            Gets or sets the DefaultAxisStroke property.
            </summary>
            <remarks>
            The DefaultAxisStroke property defines the brush which is used by the axes when no <see cref="P:Infragistics.Win.DataVisualization.Axis.Stroke"/> is set.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ShouldSerializeDefaultAxisStroke">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.DefaultAxisStroke"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.DefaultAxisStroke"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ResetDefaultAxisStroke">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.DefaultAxisStroke"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.DefaultAxisStroke"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDataChart.GridMode">
            <summary>
            Gets or sets how grid lines are rendered in relation to series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ShouldSerializeGridMode">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.GridMode"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.GridMode"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ResetGridMode">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.GridMode"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.GridMode"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDataChart.HorizontalZoomable">
            <summary>
            Gets or sets horizontal zoomability of the current control
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ShouldSerializeHorizontalZoomable">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.HorizontalZoomable"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.HorizontalZoomable"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ResetHorizontalZoomable">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.HorizontalZoomable"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.HorizontalZoomable"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDataChart.IsHorizontalZoomEnabled">
            <summary>
            Gets or sets horizontal zoomability of the current control
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ShouldSerializeIsHorizontalZoomEnabled">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.IsHorizontalZoomEnabled"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.IsHorizontalZoomEnabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ResetIsHorizontalZoomEnabled">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.IsHorizontalZoomEnabled"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.IsHorizontalZoomEnabled"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDataChart.IsSquare">
            <summary>
            Gets or sets whether to use a square aspect ratio for the chart. This is locked to true for polar and radial charts.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ShouldSerializeIsSquare">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.IsSquare"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.IsSquare"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ResetIsSquare">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.IsSquare"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.IsSquare"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDataChart.IsVerticalZoomEnabled">
            <summary>
            Gets or sets vertical zoomability of the current control
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ShouldSerializeIsVerticalZoomEnabled">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.IsVerticalZoomEnabled"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.IsVerticalZoomEnabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ResetIsVerticalZoomEnabled">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.IsVerticalZoomEnabled"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.IsVerticalZoomEnabled"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDataChart.PlotAreaMarginBottom">
            <summary>
            Margin applied below the plot area.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ShouldSerializePlotAreaMarginBottom">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.PlotAreaMarginBottom"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.PlotAreaMarginBottom"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ResetPlotAreaMarginBottom">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.PlotAreaMarginBottom"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.PlotAreaMarginBottom"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDataChart.PlotAreaMarginLeft">
            <summary>
            Margin applied to the left of the plot area.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ShouldSerializePlotAreaMarginLeft">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.PlotAreaMarginLeft"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.PlotAreaMarginLeft"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ResetPlotAreaMarginLeft">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.PlotAreaMarginLeft"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.PlotAreaMarginLeft"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDataChart.PlotAreaMarginRight">
            <summary>
            Margin applied to the right of the plot area.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ShouldSerializePlotAreaMarginRight">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.PlotAreaMarginRight"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.PlotAreaMarginRight"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ResetPlotAreaMarginRight">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.PlotAreaMarginRight"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.PlotAreaMarginRight"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDataChart.PlotAreaMarginTop">
            <summary>
            Margin applied above the plot area.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ShouldSerializePlotAreaMarginTop">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.PlotAreaMarginTop"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.PlotAreaMarginTop"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ResetPlotAreaMarginTop">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.PlotAreaMarginTop"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.PlotAreaMarginTop"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDataChart.VerticalZoomable">
            <summary>
            Gets or sets vertical zoomability of the current control
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ShouldSerializeVerticalZoomable">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.VerticalZoomable"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.VerticalZoomable"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ResetVerticalZoomable">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.VerticalZoomable"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.VerticalZoomable"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDataChart.WindowScaleHorizontal">
            <summary>
            A number between 0 and 1 determining the scale of the horizontal zoom.
            </summary>
            <remarks>
            This property is effectively a shortcut to the Width of the WindowRect property.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ShouldSerializeWindowScaleHorizontal">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.WindowScaleHorizontal"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.WindowScaleHorizontal"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ResetWindowScaleHorizontal">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.WindowScaleHorizontal"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.WindowScaleHorizontal"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDataChart.WindowScaleVertical">
            <summary>
            A number between 0 and 1 determining the scale of the vertical zoom.
            </summary>
            <remarks>
            This property is effectively a shortcut to the Height of the WindowRect property.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ShouldSerializeWindowScaleVertical">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.WindowScaleVertical"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.WindowScaleVertical"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ResetWindowScaleVertical">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDataChart.WindowScaleVertical"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDataChart.WindowScaleVertical"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.ExportVisualData">
            <summary>
            Returns the chart visuals expressed as a ChartVisualData object.
            </summary>
            <returns>A ChartVisualData object representing the current chart visuals.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDataChart.StyleUpdated">
            <summary>
            Notifies the chart that the CSS styles in effect have been updated.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDataChart.About">
            <summary>
            Display the about dialog.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.FinancialSeries">
            <summary>
            Represents the base class for all financial indicator and overlay series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialSeries.XAxis">
            <summary>
            Gets or sets the effective x-axis for the current FinancialSeries object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.ShouldSerializeXAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialSeries.XAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialSeries.XAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.ResetXAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialSeries.XAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialSeries.XAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialSeries.YAxis">
            <summary>
            Gets or sets the effective y-axis for the current FinancialSeries object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.ShouldSerializeYAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialSeries.YAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialSeries.YAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.ResetYAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialSeries.YAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialSeries.YAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialSeries.XAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.ShouldSerializeXAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialSeries.YAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.ShouldSerializeYAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.FixupAxisReferences(Infragistics.Win.DataVisualization.AxesCollection)">
            <summary>
            Used during Serialization to synchronize the axis instance generated matches with the axis instances in the collection.
            </summary>
            <param name="axes"></param>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialSeries.CloseMemberPath">
            <summary>
            Gets or sets the close mapping property for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.ShouldSerializeCloseMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialSeries.CloseMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialSeries.CloseMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.ResetCloseMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialSeries.CloseMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialSeries.CloseMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialSeries.HighMemberPath">
            <summary>
            Gets or sets the high mapping property for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.ShouldSerializeHighMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialSeries.HighMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialSeries.HighMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.ResetHighMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialSeries.HighMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialSeries.HighMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialSeries.IsCustomCategoryStyleAllowed">
            <summary>
            Gets or sets whether this category series should allow custom style overrides of its individual visuals.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.ShouldSerializeIsCustomCategoryStyleAllowed">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialSeries.IsCustomCategoryStyleAllowed"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialSeries.IsCustomCategoryStyleAllowed"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.ResetIsCustomCategoryStyleAllowed">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialSeries.IsCustomCategoryStyleAllowed"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialSeries.IsCustomCategoryStyleAllowed"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialSeries.IsTransitionInEnabled">
            <summary>
            Gets or sets whether the series should transition into the plot area when a new data source is assigned.
            Note: Transitions are not currently supported for stacked series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.ShouldSerializeIsTransitionInEnabled">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialSeries.IsTransitionInEnabled"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialSeries.IsTransitionInEnabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.ResetIsTransitionInEnabled">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialSeries.IsTransitionInEnabled"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialSeries.IsTransitionInEnabled"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialSeries.LowMemberPath">
            <summary>
            Gets or sets the low mapping property for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.ShouldSerializeLowMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialSeries.LowMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialSeries.LowMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.ResetLowMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialSeries.LowMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialSeries.LowMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialSeries.NegativeBrush">
            <summary>
            Gets or sets the brush to use for negative portions of the series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.ShouldSerializeNegativeBrush">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialSeries.NegativeBrush"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialSeries.NegativeBrush"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.ResetNegativeBrush">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialSeries.NegativeBrush"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialSeries.NegativeBrush"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialSeries.OpenMemberPath">
            <summary>
            Gets or sets the open mapping property for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.ShouldSerializeOpenMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialSeries.OpenMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialSeries.OpenMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.ResetOpenMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialSeries.OpenMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialSeries.OpenMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialSeries.TransitionInMode">
            <summary>
            Gets or sets the method by which to animate the data into the chart when the chart data source is swapped.
            Note: Transitions are not currently supported for stacked series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.ShouldSerializeTransitionInMode">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialSeries.TransitionInMode"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialSeries.TransitionInMode"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.ResetTransitionInMode">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialSeries.TransitionInMode"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialSeries.TransitionInMode"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialSeries.VolumeMemberPath">
            <summary>
            Gets or sets the volume mapping property for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.ShouldSerializeVolumeMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialSeries.VolumeMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialSeries.VolumeMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.ResetVolumeMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialSeries.VolumeMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialSeries.VolumeMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.CanUseAsXAxis(System.Object)">
            <summary>
            Determine if object can be used as XAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.CanUseAsYAxis(System.Object)">
            <summary>
            Determine if object can be used as YAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.GetCategoryItems(System.Int32,System.Int32)">
            <summary>
            Gets an array of category items for specified range of indices. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.GetCategoryWidth">
            <summary>
            Returns the width of the category grouping this series is in.
            </summary>
            <returns>The width of the category group.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.GetOffsetValue">
            <summary>
            Returns the offset value for this series if grouped on a category axis.
            </summary>
            <returns>The offset value</returns>
            
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.GetSeriesCloseValue(Infragistics.Win.DataVisualization.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available close value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.GetSeriesCloseValuePosition(Infragistics.Win.DataVisualization.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best close value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.GetSeriesOpenValue(Infragistics.Win.DataVisualization.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available open value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.GetSeriesOpenValuePosition(Infragistics.Win.DataVisualization.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best open value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.GetSeriesVolumeValue(Infragistics.Win.DataVisualization.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available volume value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.GetSeriesVolumeValuePosition(Infragistics.Win.DataVisualization.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best volume value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.OnAssigningCategoryStyle(Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.FinancialSeries.AssigningCategoryStyle"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.FinancialSeries.AssigningCategoryStyle"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.FinancialSeries.AssigningCategoryStyle">
            <summary>
            Event raised when Assigning Category Style
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.OnTypical(Infragistics.Win.DataVisualization.FinancialEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.FinancialSeries.Typical"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.FinancialEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.FinancialSeries.Typical"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.FinancialSeries.Typical">
            <summary>
            Handle this event in order to perform a custom typical price calculation.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialSeries.OnTypicalBasedOn(Infragistics.Win.DataVisualization.FinancialEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.FinancialSeries.TypicalBasedOn"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.FinancialEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.FinancialSeries.TypicalBasedOn"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.FinancialSeries.TypicalBasedOn">
            <summary>
            Handle this event in order to specify which columns the Typical price calculation is based on.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.SeriesViewer">
            <summary>
            Represents a control for viewing series objects.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.Legend">
            <summary>
            Gets or sets which legend to use for all series in this SeriesViewer, unless otherwise specified by the Series.Legend property.
            </summary>
            <remarks>
            This property only indicates which Legend to use and will not alone cause the legend to be visible.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeLegend">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.Legend"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.Legend"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetLegend">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.Legend"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.Legend"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.ViewerMargin">
            <summary>
            Gets or sets the margin around the chart content.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeViewerMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.ViewerMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.ViewerMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetViewerMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.ViewerMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.ViewerMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.Series">
            <summary>
            Gets the current SeriesViewer object's child Series. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeSeries">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.Series"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.Series"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetSeries">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.Series"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.Series"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleMargin">
            <summary>
            Specifies the space between the Title and other elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeTitleMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetTitleMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleMargin">
            <summary>
            Specifies the space between the Subtitle and other elements.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeSubtitleMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetSubtitleMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowRect">
            <summary>
            A rectangle representing the portion of the SeriesViewer currently in view.
            </summary><remarks>
            A rectangle at X=0, Y=0 with a Height and Width of 1 implies the entire plotting area is in view.  A Height and Width of .5 would imply that the view is halfway zoomed in.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeWindowRect">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowRect"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowRect"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetWindowRect">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowRect"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowRect"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.SyncChannel">
            <summary>
             Gets or sets the Synchronization channel to use for the SeriesViewer.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeSyncChannel">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SyncChannel"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SyncChannel"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetSyncChannel">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SyncChannel"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SyncChannel"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.SynchronizeHorizontally">
            <summary>
            Gets or sets whether to synchronize horizontally with other viewers in the sync channel.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeSynchronizeHorizontally">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SynchronizeHorizontally"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SynchronizeHorizontally"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetSynchronizeHorizontally">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SynchronizeHorizontally"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SynchronizeHorizontally"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.SynchronizeVertically">
            <summary>
            Gets or sets whether to synchronize horizontally with other viewers in the sync channel.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeSynchronizeVertically">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SynchronizeVertically"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SynchronizeVertically"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetSynchronizeVertically">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SynchronizeVertically"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SynchronizeVertically"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.ActualContentHitTestMode">
            <summary>
            Resolved method of hit testing used when the pointer is over elements in the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.ActualInteractionPixelScalingRatio">
            <summary>
            Resolved method of pixel scaling to use during end user interaction with the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.ActualPixelScalingRatio">
            <summary>
            Gets the resolved pixel scaling ratio.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.ActualWindowPositionHorizontal">
            <summary>
            A number between 0 and 1 determining the position of the horizontal scroll.
            </summary>
            <remarks>
            This property is effectively a shortcut to the Left of the ActualWindowRect property.
            </remarks>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.ActualWindowPositionVertical">
            <summary>
            A number between 0 and 1 determining the position of the vertical scroll.
            </summary>
            <remarks>
            This property is effectively a shortcut to the Top of the ActualWindowRect property.
            </remarks>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.ActualWindowRect">
            <summary>
            Gets the actual value of the window rectangle, which represents the current zoom level.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.AnimateSeriesWhenAxisRangeChanges">
            <summary>
            Gets or sets whether the series animations should be allowed when a range change has been detected on an axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeAnimateSeriesWhenAxisRangeChanges">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.AnimateSeriesWhenAxisRangeChanges"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.AnimateSeriesWhenAxisRangeChanges"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetAnimateSeriesWhenAxisRangeChanges">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.AnimateSeriesWhenAxisRangeChanges"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.AnimateSeriesWhenAxisRangeChanges"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.AutoMarginHeight">
            <summary>
            Sets or gets the automatic height to add when automatically adding margins to the chart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeAutoMarginHeight">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.AutoMarginHeight"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.AutoMarginHeight"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetAutoMarginHeight">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.AutoMarginHeight"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.AutoMarginHeight"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.AutoMarginWidth">
            <summary>
            Sets or gets the automatic width to add when automatically adding margins to the chart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeAutoMarginWidth">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.AutoMarginWidth"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.AutoMarginWidth"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetAutoMarginWidth">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.AutoMarginWidth"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.AutoMarginWidth"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.ContentHitTestMode">
            <summary>
            Determines the method of hit testing used when mousing over elements in the chart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeContentHitTestMode">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.ContentHitTestMode"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.ContentHitTestMode"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetContentHitTestMode">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.ContentHitTestMode"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.ContentHitTestMode"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.ContentViewport">
            <summary>
            Represents the subset area within the viewport into which content should be mapped.
            This is the projection of the current EffectiveViewport into the viewport at current zoom level.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.CrosshairPoint">
            <summary>
            Gets or sets the cross hair point (in world coordinates)
            </summary>
            <remarks>
            Either or both of the crosshair point's X and Y may be set to double.NaN, in which
            case the relevant crosshair line is hidden.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeCrosshairPoint">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.CrosshairPoint"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.CrosshairPoint"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetCrosshairPoint">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.CrosshairPoint"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.CrosshairPoint"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.CrosshairVisibility">
            <summary>
            Gets or sets the current SeriesViewer's crosshair visibility override.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeCrosshairVisibility">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.CrosshairVisibility"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.CrosshairVisibility"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetCrosshairVisibility">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.CrosshairVisibility"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.CrosshairVisibility"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.DefaultInteraction">
            <summary>
            Gets or sets the DefaultInteraction property.
            </summary>
            <remarks>
            The default interaction state defines the SeriesViewer's response to mouse events.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeDefaultInteraction">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.DefaultInteraction"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.DefaultInteraction"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetDefaultInteraction">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.DefaultInteraction"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.DefaultInteraction"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.DragCrosshairActivated">
            <summary>
            Boolean indicating whether the drag crosshair is activated.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.DragModifier">
            <summary>
            Gets or sets the current SeriesViewer's DragModifier property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeDragModifier">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.DragModifier"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.DragModifier"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetDragModifier">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.DragModifier"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.DragModifier"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.EffectiveViewport">
            <summary>
            Gets the EffectiveViewport rectangle, representing the effective viewport area after margins have been subtracted.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.HighlightingTransitionDuration">
            <summary>
            Gets or sets the duration the highlighting/de-highlighting effects.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeHighlightingTransitionDuration">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.HighlightingTransitionDuration"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.HighlightingTransitionDuration"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetHighlightingTransitionDuration">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.HighlightingTransitionDuration"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.HighlightingTransitionDuration"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.IsMap">
            <summary>
            Indicates if this SeriesViewer is a map.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.IsThumbnailRequired">
            <summary>
            Gets if series are required to generate thumbnails for the OverviewPlusDetailPane
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.PanModifier">
            <summary>
            Gets or sets the current SeriesViewer's PanModifier property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializePanModifier">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.PanModifier"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.PanModifier"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetPanModifier">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.PanModifier"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.PanModifier"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.PlotAreaBackground">
            <summary>
            Gets or sets the brush used as the background for the current SeriesViewer object's plot area.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializePlotAreaBackground">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.PlotAreaBackground"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.PlotAreaBackground"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetPlotAreaBackground">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.PlotAreaBackground"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.PlotAreaBackground"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.PreviewPathStroke">
            <summary>
            Gets or sets stroke used for the preview rectangle.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializePreviewPathStroke">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.PreviewPathStroke"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.PreviewPathStroke"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetPreviewPathStroke">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.PreviewPathStroke"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.PreviewPathStroke"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.PreviewRect">
            <summary>
            Gets or sets the preview rectangle.
            </summary>
            <remarks>
            The preview rectangle may be set to Rect.Empty, in which case the visible preview
            strokePath is hidden.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializePreviewRect">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.PreviewRect"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.PreviewRect"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetPreviewRect">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.PreviewRect"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.PreviewRect"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.RightButtonDefaultInteraction">
            <summary>
            Gets or sets the RightButtonDefaultInteraction property.
            </summary>
            <remarks>
            The default interaction state defines the SeriesViewer's response to right button mouse events.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeRightButtonDefaultInteraction">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.RightButtonDefaultInteraction"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.RightButtonDefaultInteraction"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetRightButtonDefaultInteraction">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.RightButtonDefaultInteraction"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.RightButtonDefaultInteraction"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.Subtitle">
            <summary>
            Gets or sets the Subtitle property.
            </summary>
            <remarks>
            The Title property defines the Subtitle of the chart
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeSubtitle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.Subtitle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.Subtitle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetSubtitle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.Subtitle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.Subtitle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleFontFamily">
            <summary>
            Returns or sets the font family for the subtitle.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleFontSize"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeSubtitleFontFamily">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleFontFamily"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleFontFamily"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetSubtitleFontFamily">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleFontFamily"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleFontFamily"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleFontSize">
            <summary>
            Returns or sets the font size for the subtitle.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleFontFamily"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeSubtitleFontSize">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleFontSize"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleFontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetSubtitleFontSize">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleFontSize"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleFontSize"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleHorizontalAlignment">
            <summary>
            Gets or sets the SubtitleHorizontalAlignment property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeSubtitleHorizontalAlignment">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleHorizontalAlignment"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleHorizontalAlignment"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetSubtitleHorizontalAlignment">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleHorizontalAlignment"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleHorizontalAlignment"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleTextColor">
            <summary>
            Gets or sets the Color used for the Subtitle Text.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeSubtitleTextColor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleTextColor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleTextColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetSubtitleTextColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleTextColor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleTextColor"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleTextStyle">
            <summary>
            Returns or sets the font style for the subtitle.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleFontFamily"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleFontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeSubtitleTextStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleTextStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetSubtitleTextStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleTextStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.SubtitleTextStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.Title">
            <summary>
            Text to display above the plot area.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeTitle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.Title"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.Title"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetTitle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.Title"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.Title"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleFontFamily">
            <summary>
            Returns or sets the font family for the title.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleFontSize"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeTitleFontFamily">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleFontFamily"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleFontFamily"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetTitleFontFamily">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleFontFamily"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleFontFamily"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleFontSize">
            <summary>
            Returns or sets the font size for the title.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleFontFamily"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeTitleFontSize">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleFontSize"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleFontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetTitleFontSize">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleFontSize"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleFontSize"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleHorizontalAlignment">
            <summary>
            Gets or sets the TitleHorizontalAlignment property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeTitleHorizontalAlignment">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleHorizontalAlignment"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleHorizontalAlignment"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetTitleHorizontalAlignment">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleHorizontalAlignment"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleHorizontalAlignment"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleTextColor">
            <summary>
            Gets or sets the Color used for the Title Text.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeTitleTextColor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleTextColor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleTextColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetTitleTextColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleTextColor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleTextColor"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleTextStyle">
            <summary>
            Returns or sets the font style for the title.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleFontFamily"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleFontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeTitleTextStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleTextStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetTitleTextStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleTextStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.TitleTextStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.ViewportRect">
            <summary>
            Gets the viewport rectangle associated with the SeriesViewer, the physical dimensions of the plot area.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowPositionHorizontal">
            <summary>
            A number between 0 and 1 determining the position of the horizontal scroll.
            </summary>
            <remarks>
            This property is effectively a shortcut to the X position of the WindowRect property.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeWindowPositionHorizontal">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowPositionHorizontal"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowPositionHorizontal"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetWindowPositionHorizontal">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowPositionHorizontal"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowPositionHorizontal"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowPositionVertical">
            <summary>
            A number between 0 and 1 determining the position of the vertical scroll.
            </summary>
            <remarks>
            This property is effectively a shortcut to the Y position of the WindowRect property.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeWindowPositionVertical">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowPositionVertical"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowPositionVertical"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetWindowPositionVertical">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowPositionVertical"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowPositionVertical"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowRectMinWidth">
            <summary>
            Sets or gets the minimum width that the window rect is allowed to reach before being clamped.
            Decrease this value if you want to allow for further zooming into the viewer.
            If this value is lowered too much it can cause graphical corruption due to floating point arithmetic inaccuracy.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeWindowRectMinWidth">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowRectMinWidth"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowRectMinWidth"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetWindowRectMinWidth">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowRectMinWidth"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowRectMinWidth"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowResponse">
            <summary>
            The response to user panning and zooming: whether to update the view immediately while the user action is happening, or to defer the update to after the user action is complete.  The user action will be an action such as a mouse drag which causes panning and/or zooming to occur.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldSerializeWindowResponse">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowResponse"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowResponse"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetWindowResponse">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowResponse"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SeriesViewer.WindowResponse"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.Flush">
            <summary>
            Use to force the SeriesViewer to finish any deferred work before printing or evaluating its visual.
            </summary>
            <remarks>
            This should only be called if the visual of the SeriesViewer needs to be synchronously saved or evaluated. 
            Calling this method too often will hinder the performance of the SeriesViewer.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.GetContainerOffsets">
            <summary>
            Gets left and top offsets inside of the container.
            </summary>
            <returns>A Point with the left and top coordinates within the container.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.GetContainerRect">
            <summary>
            Gets container size.
            </summary>
            <returns>Rectangle with the dimensions of the container.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.GetMarkerBrushByIndex(System.Int32)">
            <summary>
            Gets the appropriate color for a marker based on index.
            </summary>
            <param name="index">The index to use.</param>
            <returns>The color to use.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.GetMarkerOutlineByIndex(System.Int32)">
            <summary>
            Gets the appropriate color for a marker outline based on index.
            </summary>
            <param name="index">The index to use.</param>
            <returns>The color to use.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.HideToolTip">
            <summary>
            Hides the active main tooltip, if displayed.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.IsZoomingEnabled">
            <summary>
            Checks if zoomability is enabled
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.IsZoomingHorizontallyEnabled">
            <summary>
            Checks if horizontal zoomability is enabled
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.IsZoomingVerticallyEnabled">
            <summary>
            Checks if vertical zoomability is enabled
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.RemoveSpecificDataSource(System.String,System.Boolean)">
            <summary>
            Removes the datasource from the element matching the given name.
            </summary>
            <param name="targetName">The name identifying the element to remove the datasource from.</param>
            <param name="dontUpdate">True to skip propagation to the constituent elements of the chart.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ResetZoom">
            <summary>
            Resets the zoom level to default.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.SetSpecificDataSource(System.String,System.Object)">
            <summary>
            Assigns the given datasource to the element matching the given name.
            </summary>
            <param name="targetName">The name identifying the element to receive the datasource assignment.</param>
            <param name="source_">The datasource to assign to the target.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.ShouldAddAutoMargins">
            <summary>
            Determines whether this SeriesViewer should automatically add margins.
            </summary>
            <returns>True if the SeriesViewer should automatically add margins; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.UseFixedAspectZoom">
            <summary>
            Boolean method indicating whether or not this SeriesViewer should be zoomed only with a fixed aspect ratio.
            </summary>
            <returns>False.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.OnActualWindowRectChanged(Infragistics.Win.DataVisualization.RectChangedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.SeriesViewer.ActualWindowRectChanged"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.RectChangedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.SeriesViewer.ActualWindowRectChanged"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.SeriesViewer.ActualWindowRectChanged">
            <summary>
            Raised when the actual window rectangle of the SeriesViewer changes.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.OnGridAreaRectChanged(Infragistics.Win.DataVisualization.RectChangedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.SeriesViewer.GridAreaRectChanged"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.RectChangedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.SeriesViewer.GridAreaRectChanged"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.SeriesViewer.GridAreaRectChanged">
            <summary>
            Occurs just after the current SeriesViewer's grid area rectangle is changed.
            </summary>
            <remarks>
            The grid area may change as the result of the SeriesViewer being resized, or
            of an axis being added or changing size, possibly in another SeriesViewer.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.OnPropertyChanged(System.String)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.SeriesViewer.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property that was changed</param>
            <seealso cref="T:System.ComponentModel.PropertyChangedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.SeriesViewer.PropertyChanged"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.SeriesViewer.PropertyChanged">
            <summary>
            Notifies clients that a property value has changed.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.OnPropertyUpdated(Infragistics.Win.DataVisualization.PropertyUpdatedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.SeriesViewer.PropertyUpdated"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.PropertyUpdatedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.SeriesViewer.PropertyUpdated"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.SeriesViewer.PropertyUpdated">
            <summary>
            Occurs when the value of a property is updated.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.OnRefreshCompleted(System.EventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.SeriesViewer.RefreshCompleted"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:System.EventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.SeriesViewer.RefreshCompleted"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.SeriesViewer.RefreshCompleted">
            <summary>
            Raised when the SeriesViewer's processing for an update has completed.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.OnSeriesCursorMouseMove(Infragistics.Win.DataVisualization.ChartCursorEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.SeriesViewer.SeriesCursorMouseMove"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.ChartCursorEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.SeriesViewer.SeriesCursorMouseMove"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.SeriesViewer.SeriesCursorMouseMove">
            <summary>
            Occurs when the cursors are moved over a series in this SeriesViewer.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.OnSeriesMouseEnter(Infragistics.Win.DataVisualization.ChartMouseEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.SeriesViewer.SeriesMouseEnter"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.ChartMouseEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.SeriesViewer.SeriesMouseEnter"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.SeriesViewer.SeriesMouseEnter">
            <summary>
            Occurs when the mouse pointer enters a Series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.OnSeriesMouseLeave(Infragistics.Win.DataVisualization.ChartMouseEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.SeriesViewer.SeriesMouseLeave"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.ChartMouseEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.SeriesViewer.SeriesMouseLeave"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.SeriesViewer.SeriesMouseLeave">
            <summary>
            Occurs when the mouse pointer leaves a Series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.OnSeriesMouseLeftButtonDown(Infragistics.Win.DataVisualization.ChartMouseButtonEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.SeriesViewer.SeriesMouseLeftButtonDown"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.ChartMouseButtonEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.SeriesViewer.SeriesMouseLeftButtonDown"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.SeriesViewer.SeriesMouseLeftButtonDown">
            <summary>
            Occurs when the left mouse button is pressed while the mouse pointer is over a Series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.OnSeriesMouseLeftButtonUp(Infragistics.Win.DataVisualization.ChartMouseButtonEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.SeriesViewer.SeriesMouseLeftButtonUp"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.ChartMouseButtonEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.SeriesViewer.SeriesMouseLeftButtonUp"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.SeriesViewer.SeriesMouseLeftButtonUp">
            <summary>
            Occurs when the left mouse button is released while the mouse pointer is over a Series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.OnSeriesMouseMove(Infragistics.Win.DataVisualization.ChartMouseEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.SeriesViewer.SeriesMouseMove"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.ChartMouseEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.SeriesViewer.SeriesMouseMove"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.SeriesViewer.SeriesMouseMove">
            <summary>
            Occurs when the mouse pointer moves while over a Series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.OnSeriesMouseRightButtonDown(Infragistics.Win.DataVisualization.ChartMouseButtonEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.SeriesViewer.SeriesMouseRightButtonDown"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.ChartMouseButtonEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.SeriesViewer.SeriesMouseRightButtonDown"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.SeriesViewer.SeriesMouseRightButtonDown">
            <summary>
            Occurs when the right mouse button is pressed while the mouse pointer is over a Series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.OnSeriesMouseRightButtonUp(Infragistics.Win.DataVisualization.ChartMouseButtonEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.SeriesViewer.SeriesMouseRightButtonUp"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.ChartMouseButtonEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.SeriesViewer.SeriesMouseRightButtonUp"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.SeriesViewer.SeriesMouseRightButtonUp">
            <summary>
            Occurs when the right mouse button is released while the mouse pointer is over a Series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesViewer.OnWindowRectChanged(Infragistics.Win.DataVisualization.RectChangedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.SeriesViewer.WindowRectChanged"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.RectChangedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.SeriesViewer.WindowRectChanged"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.SeriesViewer.WindowRectChanged">
            <summary>
            Occurs just after the current SeriesViewer's window rectangle is changed.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.VerticalStackedSeriesBase">
            <summary>
            Base class for stacked series with a numeric x-axis and a category y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.VerticalStackedSeriesBase.XAxis">
            <summary>
            Gets or sets the effective x-axis for the current CategorySeries object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.VerticalStackedSeriesBase.ShouldSerializeXAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.VerticalStackedSeriesBase.XAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.VerticalStackedSeriesBase.XAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.VerticalStackedSeriesBase.ResetXAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.VerticalStackedSeriesBase.XAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.VerticalStackedSeriesBase.XAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.VerticalStackedSeriesBase.YAxis">
            <summary>
            Gets or sets the effective y-axis for the current CategorySeries object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.VerticalStackedSeriesBase.ShouldSerializeYAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.VerticalStackedSeriesBase.YAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.VerticalStackedSeriesBase.YAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.VerticalStackedSeriesBase.ResetYAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.VerticalStackedSeriesBase.YAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.VerticalStackedSeriesBase.YAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.VerticalStackedSeriesBase.XAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.VerticalStackedSeriesBase.ShouldSerializeXAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.VerticalStackedSeriesBase.YAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.VerticalStackedSeriesBase.ShouldSerializeYAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.VerticalStackedSeriesBase.FixupAxisReferences(Infragistics.Win.DataVisualization.AxesCollection)">
            <summary>
            Used during Serialization to synchronize the axis instance generated matches with the axis instances in the collection.
            </summary>
            <param name="axes"></param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.VerticalStackedSeriesBase.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ScalerParams">
            <summary>
            Class containing several properties which are used as parameters passed to scaling operations in a SeriesViewer.
            </summary>
            <summary>
            Class containing several properties which are used as parameters passed to scaling operations in a SeriesViewer.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScalerParams.#ctor(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            ScalerParams constructor.
            </summary>
            <param name="window">The WindowRect in context.</param>
            <param name="viewport">The Viewport in context.</param>
            <param name="inverted">True if the axis is inverted, otherwise False.</param>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScalerParams.WindowRect">
            <summary>
            Rect representing the current zoom and pan.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScalerParams.ViewportRect">
            <summary>
            Rect corresponding roughly to the layout area. The reference frame for scaled coordinates.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScalerParams.EffectiveViewportRect">
            <summary>
            The Rect to which ViewportRect has been coerced for scaling purposes, if such behavior has been defined. Generally a subarea of ViewportRect.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScalerParams.#ctor(Infragistics.Win.DataVisualization.Rectangle,Infragistics.Win.DataVisualization.Rectangle,System.Boolean)">
            <summary>
            ScalerParams constructor.
            </summary>
            <param name="window">The WindowRect in context.</param>
            <param name="viewport">The Viewport in context.</param>
            <param name="inverted">True if the axis is inverted, otherwise False.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScalerParams.#ctor(Infragistics.Win.DataVisualization.Rectangle,Infragistics.Win.DataVisualization.Rectangle,System.Boolean,Infragistics.Win.DataVisualization.Rectangle)">
            <summary>
            ScalerParams constructor.
            </summary>
            <param name="window">The WindowRect in context.</param>
            <param name="viewport">The Viewport in context.</param>
            <param name="inverted">True if the axis is inverted, otherwise False.</param>
            <param name="effectiveViewport">Inner viewport with margins</param>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScalerParams.IsInverted">
            <summary>
            Bool that determines whether or not to invert the scale.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScalerParams.ReferenceValue">
            <summary>
            The series reference value.
            </summary>
            <remarks>Typically, the reference value is the initial value of the series.  The reference value is used by the PercentChangeYAxis, where all values in the series are scaled relative to the initial value.</remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScalerParams.ShouldSerializeReferenceValue">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScalerParams.ReferenceValue"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScalerParams.ReferenceValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScalerParams.ResetReferenceValue">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScalerParams.ReferenceValue"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScalerParams.ReferenceValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScalerParams.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.SeriesCollection">
            <summary>
            Represents an observable collection of UltraDataChart series objects.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesCollection.#ctor">
            <summary>
            Initializes a default, empty SeriesCollection.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesCollection.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SeriesCollection.OnCollectionResetting(System.EventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.SeriesCollection.CollectionResetting"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:System.EventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.SeriesCollection.CollectionResetting"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.SeriesCollection.CollectionResetting">
            <summary>
            CollectionResetting is raised before the collection reset occurs.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.WindowsForms.strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LC_Appearance">
            <summary>
              Looks up a localized string similar to Appearance.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LC_Behavior">
            <summary>
              Looks up a localized string similar to Behavior.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LC_Collection">
            <summary>
              Looks up a localized string similar to Collection.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LC_Data">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_AbsoluteVolumeOscillatorIndicator_P_LongPeriod">
            <summary>
              Looks up a localized string similar to Gets or sets the short moving average period for the current AbsoluteVolumeOscillatorIndicator object. The typical, and initial, value for long AVO periods is 30..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_AbsoluteVolumeOscillatorIndicator_P_ShortPeriod">
            <summary>
              Looks up a localized string similar to Gets or sets the short moving average period for the current AbsoluteVolumeOscillatorIndicator object. The typical, and initial, value for short AVO periods is 10..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_AnchoredCategorySeries_P_MarkerCollisionAvoidance">
            <summary>
              Looks up a localized string similar to The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_AnchoredCategorySeries_P_TrendLineBrush">
            <summary>
              Looks up a localized string similar to Gets or sets the brush to use to draw the trend line..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_AnchoredCategorySeries_P_TrendLinePeriod">
            <summary>
              Looks up a localized string similar to Gets or sets the trend line period for the current series. The typical, and initial, value for trend line period is 7..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_AnchoredCategorySeries_P_TrendLineThickness">
            <summary>
              Looks up a localized string similar to Gets or sets the thickness of the current series object&apos;s trend line..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_AnchoredCategorySeries_P_TrendLineType">
            <summary>
              Looks up a localized string similar to Gets or sets the trend type for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_AnchoredCategorySeries_P_ValueMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the value mapping property for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_AnchoredRadialSeries_P_TrendLineBrush">
            <summary>
              Looks up a localized string similar to Gets or sets the brush that specifies how to the current series object&apos;s Trend line is drawn..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_AnchoredRadialSeries_P_TrendLinePeriod">
            <summary>
              Looks up a localized string similar to Gets or sets the trend line period for the current series. The typical, and initial, value for bollinger band periods is 20..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_AnchoredRadialSeries_P_TrendLineThickness">
            <summary>
              Looks up a localized string similar to Gets or sets the thickness of the current series object&apos;s trend line..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_AnchoredRadialSeries_P_TrendLineType">
            <summary>
              Looks up a localized string similar to Gets or sets the trend type for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_AnchoredRadialSeries_P_TrendLineZIndex">
            <summary>
              Looks up a localized string similar to Sets or Gets the Z index of the trendline..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_AnchoredRadialSeries_P_ValueMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the item path that provides the values for the current series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_AnnotationLayer_P_CursorPosition">
            <summary>
              Looks up a localized string similar to Gets or sets the world position to use instead of the mouse position for this annotation layer. If you set this value, rather than responding to the mouse cursor, this layer will be fixed on the provided world position. A world position has x and y values that range from 0 to 1 that represent the global position of the cursor relative to the entire ranges of the axes. The default of (NaN, NaN) means that the layer should react to mouse movement..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_AnnotationLayer_P_IsDefaultCrosshairDisabled">
            <summary>
              Looks up a localized string similar to Gets or sets whether the series viewer&apos;s default crosshair should be disabled by the presence of this layer..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_AnnotationLayer_P_ShouldRenderAsOverlay">
            <summary>
              Looks up a localized string similar to Gets or sets whether this layer renders as an overlay or not..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_AnnotationLayer_P_UseIndex">
            <summary>
              Looks up a localized string similar to Gets or sets whether this series should take up an index for auto brush coloring..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_AnnotationLayer_P_UseLegend">
            <summary>
              Looks up a localized string similar to Gets or sets whether this series interacts with the chart legend..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Arc_P_EndAngle">
            <summary>
              Looks up a localized string similar to Gets or sets the ending angle of the chart. The default value is 360..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Arc_P_Ring">
            <summary>
              Looks up a localized string similar to Gets or sets the ring..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_AreaSeries_P_UnknownValuePlotting">
            <summary>
              Looks up a localized string similar to Determines how unknown values will be plotted on the chart. Null and Double.NaN are two examples of unknown values..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_AverageDirectionalIndexIndicator_P_Period">
            <summary>
              Looks up a localized string similar to Gets or sets the moving average period for the current AverageDirectionalIndexIndicator object. The typical, and initial, value for AverageDirectionalIndexIndicator periods is 14..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_AverageTrueRangeIndicator_P_Period">
            <summary>
              Looks up a localized string similar to Gets or sets the moving average period for the current AverageTrueRangeSeries object. The typical, and initial, value for AverageTrueRange periods is 14..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_E_FormatLabel">
            <summary>
              Looks up a localized string similar to Gets or sets a function which takes an object that produces a formatted label for displaying in the chart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_E_RangeChanged">
            <summary>
              Looks up a localized string similar to Occurs when the axis range changes..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_E_RenderRequested">
            <summary>
              Looks up a localized string similar to Occurs every time a render has been requested from a series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_ActualMajorStroke">
            <summary>
              Looks up a localized string similar to Gets the ActualMajorStroke property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_ActualMinorStroke">
            <summary>
              Looks up a localized string similar to Gets the ActualMinorStroke property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_CrossingAxis">
            <summary>
              Looks up a localized string similar to Gets or sets the CrossingAxis property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_CrossingValue">
            <summary>
              Looks up a localized string similar to Gets or sets the CrossingValue property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_EnhancedIntervalMinimumCharacters">
            <summary>
              Looks up a localized string similar to Gets or sets the mininum desired characters to be displayed for horizontal axes when using advanced label heuristics. -1 will attempt to adjust the interval to precisely fit the horizontal labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_ExpectFunctions">
            <summary>
              Looks up a localized string similar to Gets or sets whether the series should expect that properties in its items source may be functions that need to be evaluated to yield their value. This defaults to false, as there will be a subtle performance impact to using this feature. This value must be set before assigning an item&apos;s source to take effect..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_IsDisabled">
            <summary>
              Looks up a localized string similar to Gets or sets the IsDisabled property. If true, the axis will not be rendered..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_IsInverted">
            <summary>
              Looks up a localized string similar to Gets or sets the IsInverted property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_Label">
            <summary>
              Looks up a localized string similar to Gets or sets the axis label format string..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_LabelAngle">
            <summary>
              Looks up a localized string similar to Gets or Sets the Angle of the Axis Label..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_LabelExtent">
            <summary>
              Looks up a localized string similar to Gets or sets the distance between the edge of the control and the label..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_LabelFontFamily">
            <summary>
              Looks up a localized string similar to Gets or Sets the Font Family of the Axis Label..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_LabelFontSize">
            <summary>
              Looks up a localized string similar to Gets or Sets the Font Size of the Axis Label..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_LabelHorizontalAlignment">
            <summary>
              Looks up a localized string similar to Gets or sets the HorizontalAlignment property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_LabelLocation">
            <summary>
              Looks up a localized string similar to Gets or sets the Location property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_LabelMargin">
            <summary>
              Looks up a localized string similar to Specifies the space between the Label and other elements..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_LabelsVisible">
            <summary>
              Looks up a localized string similar to Gets or sets the Visibility property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_LabelTextColor">
            <summary>
              Looks up a localized string similar to Gets or sets the color of the Axis Label text..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_LabelTextStyle">
            <summary>
              Looks up a localized string similar to Gets or sets the Font Style applied to the Label&apos;s text..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_LabelVerticalAlignment">
            <summary>
              Looks up a localized string similar to Gets or sets the VerticalAlignment property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_MajorStroke">
            <summary>
              Looks up a localized string similar to Gets or sets the MajorStroke property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_MajorStrokeThickness">
            <summary>
              Looks up a localized string similar to Gets or sets the MajorStrokeThickness property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_MinorStroke">
            <summary>
              Looks up a localized string similar to Gets or sets the MinorStroke property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_MinorStrokeThickness">
            <summary>
              Looks up a localized string similar to Gets or sets the MinorStrokeThickness property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_Name">
            <summary>
              Looks up a localized string similar to Gets or sets the name of the Axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_Opacity">
            <summary>
              Looks up a localized string similar to Gets or sets the Opacity of the Axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_SeriesViewer">
            <summary>
              Looks up a localized string similar to Gets the containing series viewer for this axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_ShowFirstLabel">
            <summary>
              Looks up a localized string similar to Gets or sets whether the first label is displayed when the zoom level is set to 1..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_Strip">
            <summary>
              Looks up a localized string similar to Gets or sets the Strip property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_Stroke">
            <summary>
              Looks up a localized string similar to Gets or sets the Stroke property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_StrokeThickness">
            <summary>
              Looks up a localized string similar to Gets or sets the StrokeThickness property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_TickLength">
            <summary>
              Looks up a localized string similar to Gets or sets the TickLength property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_TickStroke">
            <summary>
              Looks up a localized string similar to Gets or sets the TickStroke property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_TickStrokeDashArray">
            <summary>
              Looks up a localized string similar to Gets or sets the TickStrokeDashArray property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_TickStrokeThickness">
            <summary>
              Looks up a localized string similar to Gets or sets the TickStrokeThickness property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_Title">
            <summary>
              Looks up a localized string similar to Gets or sets the Title property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_TitleAngle">
            <summary>
              Looks up a localized string similar to Gets or Sets the Angle of the Axis Title..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_TitleFontFamily">
            <summary>
              Looks up a localized string similar to Gets or Sets the Font Family of the Axis Title..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_TitleFontSize">
            <summary>
              Looks up a localized string similar to Gets or Sets the Font Size of the Axis Title..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_TitleHorizontalAlignment">
            <summary>
              Looks up a localized string similar to Gets or sets the HorizontalAlignment property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_TitleMargin">
            <summary>
              Looks up a localized string similar to Specifies the space between the Title and other elements..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_TitlePosition">
            <summary>
              Looks up a localized string similar to Gets or sets the TitlePosition property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_TitleTextColor">
            <summary>
              Looks up a localized string similar to Gets or sets the color of the Axis Title text..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_TitleTextStyle">
            <summary>
              Looks up a localized string similar to Gets or sets the Font Style applied to the Title&apos;s text..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_TitleVerticalAlignment">
            <summary>
              Looks up a localized string similar to Gets or sets the VerticalAlignment property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Axis_P_Visibility">
            <summary>
              Looks up a localized string similar to Gets or sets the display state of an Axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_BarFragment_P_XAxis">
            <summary>
              Looks up a localized string similar to Gets the X-Axis for this BarFragment..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_BarFragment_P_YAxis">
            <summary>
              Looks up a localized string similar to Gets the Y-Axis for this BarFragment..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_BarSeries_P_RadiusX">
            <summary>
              Looks up a localized string similar to Gets or sets the x-radius of the ellipse that is used to round the corners of the bar..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_BarSeries_P_RadiusY">
            <summary>
              Looks up a localized string similar to Gets or sets the y-radius of the ellipse that is used to round the corners of the bar..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_BollingerBandsOverlay_P_Multiplier">
            <summary>
              Looks up a localized string similar to Gets or sets the moving average period for the current BollingerBandOverlay object. The typical, and initial, value for Bollinger band multipliers is 2..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_BollingerBandsOverlay_P_Period">
            <summary>
              Looks up a localized string similar to Gets or sets the moving average period for the current BollingerBandOverlay object. The typical, and initial, value for Bollinger band periods is 14..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_BollingerBandWidthIndicator_P_Multiplier">
            <summary>
              Looks up a localized string similar to Gets or sets the multiplier for the Bollinger Band width. The typical, and initial, value for Bollinger Band width multiplier is 2..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_BollingerBandWidthIndicator_P_Period">
            <summary>
              Looks up a localized string similar to Gets or sets the moving average period for the Bollinger Band Width Indicator. The typical, and initial, value for CCI periods is 20..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_BrushScale_E_PropertyChanged">
            <summary>
              Looks up a localized string similar to Event raised when a property (including &quot;effective&quot; and non-dependency property) value changes..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_BrushScale_E_PropertyUpdated">
            <summary>
              Looks up a localized string similar to Event raised when a property (including &quot;effective&quot; and non-dependency property) value changes..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_BrushScale_P_Brushes">
            <summary>
              Looks up a localized string similar to Gets or sets the Brushes property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_BubbleSeries_P_FillMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the fill mapping property for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_BubbleSeries_P_FillScale">
            <summary>
              Looks up a localized string similar to Gets or sets the brush scale for the marker brush..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_BubbleSeries_P_LabelMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the Label mapping property for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_BubbleSeries_P_RadiusMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the radius mapping property for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_BubbleSeries_P_RadiusScale">
            <summary>
              Looks up a localized string similar to Gets or sets the radius size scale for the bubbles..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CalloutLayer_P_TargetSeries">
            <summary>
              Looks up a localized string similar to Gets or sets the series to target this annotation to. If null, this annotation targets all series simultaneously..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryAngleAxis_P_Interval">
            <summary>
              Looks up a localized string similar to Gets or sets the frequency of displayed labels. The set value is a factor that determines which labels will be hidden. For example, an interval of 2 will display every other label..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryAngleAxis_P_MinorInterval">
            <summary>
              Looks up a localized string similar to Gets or sets the frequency of displayed minor lines. The set value is a factor that determines how the minor lines will be displayed..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryAngleAxis_P_StartAngleOffset">
            <summary>
              Looks up a localized string similar to Indicates the angle in degress that the chart&apos;s 0th angle should be offset..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryAxisBase_P_DataMember">
            <summary>
              Looks up a localized string similar to Gets or sets the data member of the data source from which the Axis&apos; categorical items collection is populated..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryAxisBase_P_DataSource">
            <summary>
              Looks up a localized string similar to Gets or sets the data source from which the Axis&apos; categorical items collection is populated..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryAxisBase_P_Gap">
            <summary>
              Looks up a localized string similar to Gets or sets the amount of space between adjacent categories for the current axis object. The gap is silently clamped to the range [0, inf] when used..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryAxisBase_P_ItemsSource">
            <summary>
              Looks up a localized string similar to Gets or sets the ItemsSource property for the current axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryAxisBase_P_Overlap">
            <summary>
              Looks up a localized string similar to Gets or sets the amount of overlap between adjacent categories for the current axis object. The overlap is silently clamped to the range [-1, 1] when used..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryAxisBase_P_UseClusteringMode">
            <summary>
              Looks up a localized string similar to Gets or sets whether the cateogory axis should use clustering display mode even if no series are present that would force clustering mode..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryDateTimeXAxis_P_DateTimeMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the DateTime mapping property for the CategoryDateTimeXAxis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryDateTimeXAxis_P_DisplayType">
            <summary>
              Looks up a localized string similar to Gets or sets the axis display type.  Continuous display type divides the axis into even intervals, where labels will not necessarily be aligned with data points. Discrete display type will not use a constant interval, but will align each label with its data point..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryDateTimeXAxis_P_Interval">
            <summary>
              Looks up a localized string similar to Gets or sets the X axis time interval..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryDateTimeXAxis_P_MaximumValue">
            <summary>
              Looks up a localized string similar to Gets or sets the axis MaximumValue..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryDateTimeXAxis_P_MinimumValue">
            <summary>
              Looks up a localized string similar to Gets or sets the axis MinimumValue..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryDateTimeXAxis_P_MinorInterval">
            <summary>
              Looks up a localized string similar to Gets or sets the frequency of displayed minor lines. The set value is a factor that determines how the minor lines will be displayed..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryHighlightLayer_P_BandHighlightWidth">
            <summary>
              Looks up a localized string similar to Gets or sets the width to use for the highlight region if drawing a band rather than filling a category..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryHighlightLayer_P_UseInterpolation">
            <summary>
              Looks up a localized string similar to Gets or sets whether to use value interpolation when drawing a line through the best value for the mouse position..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryItemHighlightLayer_P_BandHighlightWidth">
            <summary>
              Looks up a localized string similar to Gets or sets the width to use for the highlight region if highlighting items in a grid aligned series (line, spline, etc), with a banded shape..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryItemHighlightLayer_P_HighlightType">
            <summary>
              Looks up a localized string similar to Gets or sets which type of highlight shape to use when highlighting items..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryItemHighlightLayer_P_SkipUnknownValues">
            <summary>
              Looks up a localized string similar to Gets or sets whether to skip unknown values when searching for series values..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryItemHighlightLayer_P_UseInterpolation">
            <summary>
              Looks up a localized string similar to Gets or sets whether to use value interpolation when drawing a line through the best value for the mouse position..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategorySeries_E_AssigningCategoryMarkerStyle">
            <summary>
              Looks up a localized string similar to Occurs when Assigning Category Marker Style..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategorySeries_E_AssigningCategoryStyle">
            <summary>
              Looks up a localized string similar to Occurs when Assigning Category Style..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategorySeries_P_IsCustomCategoryMarkerStyleAllowed">
            <summary>
              Looks up a localized string similar to Gets or sets whether this category series should allow custom style overrides of its individual marker visuals..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategorySeries_P_IsCustomCategoryStyleAllowed">
            <summary>
              Looks up a localized string similar to Gets or sets whether this category series should allow custom style overrides of its individual visuals..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategorySeries_P_IsTransitionInEnabled">
            <summary>
              Looks up a localized string similar to Gets or sets whether the series should transition into the plot area when a new data source is assigned. Note: Transitions are not currently supported for stacked series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategorySeries_P_TransitionInMode">
            <summary>
              Looks up a localized string similar to Gets or sets the method by which to animate the data into the chart when the chart data source is swapped. Note: Transitions are not currently supported for stacked series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategorySeries_P_UseHighMarkerFidelity">
            <summary>
              Looks up a localized string similar to Sets or Gets whether to increase marker fidelity for extreme data shapes that have lots of Y variation over short X intervals..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryToolTipLayer_P_ToolTipPosition">
            <summary>
              Looks up a localized string similar to Gets or sets the Position to apply to the tooltip containers..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryToolTipLayer_P_UseInterpolation">
            <summary>
              Looks up a localized string similar to Gets or sets whether to use value interpolation when drawing the tooltips..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryXAxis_P_Interval">
            <summary>
              Looks up a localized string similar to Gets or sets the frequency of displayed labels. The set value is a factor that determines which labels will be hidden. For example, an interval of 2 will display every other label..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryXAxis_P_MinorInterval">
            <summary>
              Looks up a localized string similar to Gets or sets the frequency of displayed minor lines. The set value is a factor that determines how the minor lines will be displayed..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryYAxis_P_Interval">
            <summary>
              Looks up a localized string similar to Gets or sets the frequency of displayed labels. The set value is a factor that determines which labels will be hidden. For example, an interval of 2 will display every other label..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CategoryYAxis_P_MinorInterval">
            <summary>
              Looks up a localized string similar to Gets or sets the frequency of displayed minor lines. The set value is a factor that determines how the minor lines will be displayed..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ChaikinOscillatorIndicator_P_LongPeriod">
            <summary>
              Looks up a localized string similar to Gets or sets the long moving average period for the current ChaikinOscillatorIndicator object. The typical, and initial, value for long CHO periods is 10..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ChaikinOscillatorIndicator_P_ShortPeriod">
            <summary>
              Looks up a localized string similar to Gets or sets the short moving average period for the current ChaikinOscillatorIndicator object. The typical, and initial, value for short CHO periods is 3..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ChaikinVolatilityIndicator_P_Period">
            <summary>
              Looks up a localized string similar to Gets or sets the moving average period for the current ChaikinVolatilityIndicator object. The typical, and initial, value for ChaikinVolatilityIndicator periods is 10..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ColorScale_E_PropertyChanged">
            <summary>
              Looks up a localized string similar to Event raised when the value of a property is updated..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ColumnFragment_P_RadiusX">
            <summary>
              Looks up a localized string similar to Gets or sets the x-radius of the ellipse that is used to round the corners of the column..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ColumnFragment_P_RadiusY">
            <summary>
              Looks up a localized string similar to Gets or sets the y-radius of the ellipse that is used to round the corners of the column..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ColumnFragment_P_XAxis">
            <summary>
              Looks up a localized string similar to Gets the effective x-axis for this series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ColumnFragment_P_YAxis">
            <summary>
              Looks up a localized string similar to Gets the effective y-axis for this series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ColumnSeries_P_ConsolidatedColumnVerticalPosition">
            <summary>
              Looks up a localized string similar to The positioning logic to use for columns which have been consolidated into a single visual element..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ColumnSeries_P_RadiusX">
            <summary>
              Looks up a localized string similar to Gets or sets the x-radius of the ellipse that is used to round the corners of the column..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ColumnSeries_P_RadiusY">
            <summary>
              Looks up a localized string similar to Gets or sets the y-radius of the ellipse that is used to round the corners of the column..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CommodityChannelIndexIndicator_P_Period">
            <summary>
              Looks up a localized string similar to Gets or sets the moving average period for the current CCISeries object. The typical, and initial, value for CCI periods is 20..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CrosshairLayer_P_HorizontalLineVisibility">
            <summary>
              Looks up a localized string similar to Gets or sets whether to display the horizontal line..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CrosshairLayer_P_SkipUnknownValues">
            <summary>
              Looks up a localized string similar to Gets or sets whether to skip unknown values when searching for series values..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CrosshairLayer_P_UseInterpolation">
            <summary>
              Looks up a localized string similar to Gets or sets whether to use value interpolation when drawing a line through the best value for the mouse position..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CrosshairLayer_P_VerticalLineVisibility">
            <summary>
              Looks up a localized string similar to Gets or sets whether to display the vertical line..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CustomIndicator_E_BasedOnColumns">
            <summary>
              Looks up a localized string similar to Handle this event in order to indicate which columns this custom indicator is based on..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CustomIndicator_E_Indicator">
            <summary>
              Looks up a localized string similar to Handle this event in order to perform a custom indicator calculation..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CustomPaletteBrushScale_P_BrushSelectionMode">
            <summary>
              Looks up a localized string similar to Gets or sets the brush selection mode..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CustomPaletteColorScale_P_InterpolationMode">
            <summary>
              Looks up a localized string similar to The approach to use when getting a color from the palette..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CustomPaletteColorScale_P_MaximumValue">
            <summary>
              Looks up a localized string similar to The highest value to assign a color.  Any given value greater than this value will be made Transparent..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_CustomPaletteColorScale_P_MinimumValue">
            <summary>
              Looks up a localized string similar to The lowest value to assign a color.  Any given value less than this value will be made Transparent..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_DetrendedPriceOscillatorIndicator_P_Period">
            <summary>
              Looks up a localized string similar to Gets or sets the moving average period for the current DetrendedPriceOscillatorIndicator object. The typical, and initial, value for DPO periods is 20..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FastStochasticOscillatorIndicator_P_Period">
            <summary>
              Looks up a localized string similar to Gets or sets the moving average period for the current FastStochasticOscillatorIndicator object. The typical, and initial, value for FastStochasticOscillatorIndicator periods is 14..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinalValueLayer_P_TargetSeries">
            <summary>
              Looks up a localized string similar to Gets or sets the series to target this annotation to. If null, this annotation targets all series simultaneously..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialIndicator_P_DisplayType">
            <summary>
              Looks up a localized string similar to Gets or sets the display for the current FinancialIndicator object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialIndicator_P_IgnoreFirst">
            <summary>
              Looks up a localized string similar to Gets or sets the number of values to hide at the beginning of the indicator..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialIndicator_P_TrendLineBrush">
            <summary>
              Looks up a localized string similar to Gets or sets the brush to use to draw the trend line..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialIndicator_P_TrendLinePeriod">
            <summary>
              Looks up a localized string similar to Gets or sets the trend line period for the current series. The typical, and initial, value for trend line period is 7..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialIndicator_P_TrendLineThickness">
            <summary>
              Looks up a localized string similar to Gets or sets the thickness of the current indicator object&apos;s trend line..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialIndicator_P_TrendLineType">
            <summary>
              Looks up a localized string similar to Gets or sets the trend type for the current indicator series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialIndicator_P_TrendLineZIndex">
            <summary>
              Looks up a localized string similar to Gets or sets the trend line z index for the current series. The trend line renders over the series and markers by default, lower this value to shift it to the background..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialOverlay_P_IgnoreFirst">
            <summary>
              Looks up a localized string similar to Gets or sets the number of values to hide at the beginning of the indicator..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialPriceSeries_P_DisplayType">
            <summary>
              Looks up a localized string similar to Gets or sets the display type for the current FinancialPriceSeries object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialPriceSeries_P_NegativeOutline">
            <summary>
              Looks up a localized string similar to Brush to use for outlining negative elements in the series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialPriceSeries_P_TrendLineBrush">
            <summary>
              Looks up a localized string similar to Gets or sets the brush to use to draw the trend line..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialPriceSeries_P_TrendLinePeriod">
            <summary>
              Looks up a localized string similar to Gets or sets the trend line period for the current series. The typical, and initial, value for trend line period is 7..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialPriceSeries_P_TrendLineThickness">
            <summary>
              Looks up a localized string similar to Gets or sets the thickness of the current FinancialPriceSeries object&apos;s trend line..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialPriceSeries_P_TrendLineType">
            <summary>
              Looks up a localized string similar to Gets or sets the trend type for the current financial series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialPriceSeries_P_TrendLineZIndex">
            <summary>
              Looks up a localized string similar to Gets or sets the trend line Z index for the current series. The trend line renders over the series and markers by default, lower this value to shift it to the background..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialSeries_E_AssigningCategoryStyle">
            <summary>
              Looks up a localized string similar to Event raised when Assigning Category Style.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialSeries_E_Typical">
            <summary>
              Looks up a localized string similar to Handle this event in order to perform a custom typical price calculation..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialSeries_E_TypicalBasedOn">
            <summary>
              Looks up a localized string similar to Handle this event in order to specify which columns the Typical price calculation is based on..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialSeries_P_CloseMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the close mapping property for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialSeries_P_HighMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the high mapping property for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialSeries_P_IsCustomCategoryStyleAllowed">
            <summary>
              Looks up a localized string similar to Gets or sets whether this category series should allow custom style overrides of its individual visuals..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialSeries_P_IsTransitionInEnabled">
            <summary>
              Looks up a localized string similar to Gets or sets whether the series should transition into the plot area when a new data source is assigned. Note: Transitions are not currently supported for stacked series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialSeries_P_LowMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the low mapping property for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialSeries_P_NegativeBrush">
            <summary>
              Looks up a localized string similar to Gets or sets the brush to use for negative portions of the series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialSeries_P_OpenMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the open mapping property for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialSeries_P_TransitionInMode">
            <summary>
              Looks up a localized string similar to Gets or sets the method by which to animate the data into the chart when the chart data source is swapped. Note: Transitions are not currently supported for stacked series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialSeries_P_VolumeMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the volume mapping property for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialSeries_P_XAxis">
            <summary>
              Looks up a localized string similar to Gets or sets the effective x-axis for the current FinancialSeries object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FinancialSeries_P_YAxis">
            <summary>
              Looks up a localized string similar to Gets or sets the effective y-axis for the current FinancialSeries object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ForceIndexIndicator_P_Period">
            <summary>
              Looks up a localized string similar to Gets or sets the moving average period for the current AverageTrueRangeSeries object. The typical, and initial, value for ForceIndiex periods is 0..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FullStochasticOscillatorIndicator_P_Period">
            <summary>
              Looks up a localized string similar to Gets or sets the moving average period for the current FullStochasticOscillatorIndicator object. The typical, and initial, value for FullStochasticOscillatorIndicator periods is 14..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FullStochasticOscillatorIndicator_P_SmoothingPeriod">
            <summary>
              Looks up a localized string similar to Gets or sets the moving average SmoothingPeriod for the current FullStochasticOscillatorIndicator object. The typical, and initial, value for FullStochasticOscillatorIndicator SmoothingPeriod is 3..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_FullStochasticOscillatorIndicator_P_TriggerPeriod">
            <summary>
              Looks up a localized string similar to Gets or sets the moving average TriggerPeriod for the current FullStochasticOscillatorIndicator object. The typical, and initial, value for FullStochasticOscillatorIndicator TriggerPeriod is 3..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_HighlightingInfo_P_EndIndex">
            <summary>
              Looks up a localized string similar to The index of the last highlighted item..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_HighlightingInfo_P_IsMarker">
            <summary>
              Looks up a localized string similar to True if this HighlightingInfo represents a marker highlighting..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_HighlightingInfo_P_Progress">
            <summary>
              Looks up a localized string similar to A number between 0 and 1 representing the progress of the highlighting..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_HighlightingInfo_P_Series">
            <summary>
              Looks up a localized string similar to The series in context..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_HighlightingInfo_P_StartIndex">
            <summary>
              Looks up a localized string similar to The index of the first highlighted item..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_HighlightingInfo_P_State">
            <summary>
              Looks up a localized string similar to The state of the highlighting..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_HorizontalAnchoredCategorySeries_P_XAxis">
            <summary>
              Looks up a localized string similar to Gets or sets the effective x-axis for this series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_HorizontalAnchoredCategorySeries_P_YAxis">
            <summary>
              Looks up a localized string similar to Gets or sets the effective y-axis for this series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_HorizontalRangeCategorySeries_P_XAxis">
            <summary>
              Looks up a localized string similar to Gets or sets the effective x-axis for the current CategorySeries object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_HorizontalRangeCategorySeries_P_YAxis_">
            <summary>
              Looks up a localized string similar to Gets or sets the effective y-axis for the current CategorySeries object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_HorizontalStackedSeriesBase_P_XAxis">
            <summary>
              Looks up a localized string similar to Gets or sets the effective x-axis for this series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_HorizontalStackedSeriesBase_P_YAxis">
            <summary>
              Looks up a localized string similar to Gets or sets the effective y-axis for this series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ItemToolTipLayer_P_SkipUnknownValues">
            <summary>
              Looks up a localized string similar to Gets or sets whether to skip past unknown values when searching for series values..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ItemToolTipLayer_P_TargetSeries">
            <summary>
              Looks up a localized string similar to Gets or sets the series to target this annotation to. If null, this annotation targets all series simultaneously..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ItemToolTipLayer_P_UseInterpolation">
            <summary>
              Looks up a localized string similar to Gets or sets whether to use value interpolation when drawing the tooltips..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_LegendBase_E_LegendItemMouseEnter">
            <summary>
              Looks up a localized string similar to Occurs when the mouse pointer enters a legend item of this legend..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_LegendBase_E_LegendItemMouseLeave">
            <summary>
              Looks up a localized string similar to Occurs when the mouse pointer leaves a legend item of this legend..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_LegendBase_E_LegendItemMouseLeftButtonDown">
            <summary>
              Looks up a localized string similar to Occurs when the left mouse button is pressed while the mouse pointer is over a legend item in this Legend..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_LegendBase_E_LegendItemMouseLeftButtonUp">
            <summary>
              Looks up a localized string similar to Occurs when the left mouse button is released while the mouse pointer is over a legend item in this Legend..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_LegendBase_E_LegendItemMouseMove">
            <summary>
              Looks up a localized string similar to Occurs when the mouse pointer moves over a legend item of this legend..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_LegendBase_E_PropertyChanged">
            <summary>
              Looks up a localized string similar to Event raised when a property value changes..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_LegendBase_E_PropertyUpdated">
            <summary>
              Looks up a localized string similar to Event raised when a property value is updated..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_LegendBase_P_ChartOwner">
            <summary>
              Looks up a localized string similar to Gets the chart that owns the legend..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_LegendBase_P_SeriesOwner">
            <summary>
              Looks up a localized string similar to Gets the series that owns the legend..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_LineSeries_P_UnknownValuePlotting">
            <summary>
              Looks up a localized string similar to Determines how unknown values will be plotted on the chart. Null and Double.NaN are two examples of unknown values..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_MarkerSeries_P_MarkerBrush">
            <summary>
              Looks up a localized string similar to Gets or sets the brush that specifies how the current series object&apos;s marker interiors are painted..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_MarkerSeries_P_MarkerOutline">
            <summary>
              Looks up a localized string similar to Gets or sets the brush that specifies how the current series object&apos;s marker outlines are painted..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_MarkerSeries_P_MarkerType">
            <summary>
              Looks up a localized string similar to Gets or sets the marker type for the current series object. If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_MoneyFlowIndexIndicator_P_Period">
            <summary>
              Looks up a localized string similar to Gets or sets the moving average period for the current MoneyFlowIndexIndicator object. The typical, and initial, value for MoneyFlowIndexIndicator periods is 14..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_MovingAverageConvergenceDivergenceIndicator_P_LongPeriod">
            <summary>
              Looks up a localized string similar to Gets or sets the long moving average period for the current MovingAverageConvergenceDivergenceIndicator object. The typical, and initial, value for long MACD periods is 30..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_MovingAverageConvergenceDivergenceIndicator_P_ShortPeriod">
            <summary>
              Looks up a localized string similar to Gets or sets the short moving average period for the current MovingAverageConvergenceDivergenceIndicator object. The typical, and initial, value for short MACD periods is 10..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_MovingAverageConvergenceDivergenceIndicator_P_SignalPeriod">
            <summary>
              Looks up a localized string similar to Gets or sets the long moving average period for the current MovingAverageConvergenceDivergenceIndicator object. The typical, and initial, value for long PVO periods is 30..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_NumericAngleAxis_P_StartAngleOffset">
            <summary>
              Looks up a localized string similar to Indicates the angle in degress that the chart&apos;s 0th angle should be offset..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_NumericAxisBase_P_Interval">
            <summary>
              Looks up a localized string similar to Gets or sets the Interval property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_NumericAxisBase_P_IsLogarithmic">
            <summary>
              Looks up a localized string similar to Gets or sets the IsLogarithmic property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_NumericAxisBase_P_LogarithmBase">
            <summary>
              Looks up a localized string similar to Gets or sets the LogarithmBase property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_NumericAxisBase_P_MaximumValue">
            <summary>
              Looks up a localized string similar to Gets or sets the MaximumValue property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_NumericAxisBase_P_MinimumValue">
            <summary>
              Looks up a localized string similar to Gets or sets the MinimumValue property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_NumericAxisBase_P_MinorInterval">
            <summary>
              Looks up a localized string similar to Gets or sets the MinorInterval property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_NumericAxisBase_P_ReferenceValue">
            <summary>
              Looks up a localized string similar to Gets or sets the ReferenceValue property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_NumericRadiusAxis_P_InnerRadiusExtentScale">
            <summary>
              Looks up a localized string similar to Defines the percentage of the maximum radius extent to leave blank at the center of the chart. Should be  a value between 0.0 and 1.0..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_NumericRadiusAxis_P_RadiusExtentScale">
            <summary>
              Looks up a localized string similar to Defines the percentage of the maximum radius extent to use as the maximum radius. Should be  a value between 0.0 and 1.0..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PercentagePriceOscillatorIndicator_P_LongPeriod">
            <summary>
              Looks up a localized string similar to Gets or sets the long moving average period for the current PercentagePriceOscillatorIndicator object. The typical, and initial, value for long PVO periods is 30..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PercentagePriceOscillatorIndicator_P_ShortPeriod">
            <summary>
              Looks up a localized string similar to Gets or sets the short moving average period for the current PercentagePriceOscillatorIndicator object. The typical, and initial, value for short PPO periods is 10..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PercentageVolumeOscillatorIndicator_P_LongPeriod">
            <summary>
              Looks up a localized string similar to Gets or sets the short moving average period for the current PercentageVolumeOscillatorIndicator object. The typical, and initial, value for long PVO periods is 30..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PercentageVolumeOscillatorIndicator_P_ShortPeriod">
            <summary>
              Looks up a localized string similar to Gets or sets the short moving average period for the current PercentageVolumeOscillatorIndicator object. The typical, and initial, value for short PVO periods is 10..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_E_FormatLabel">
            <summary>
              Looks up a localized string similar to Event that allows the formatting of the PieChart labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_E_FormatLegendLabel">
            <summary>
              Looks up a localized string similar to Event that allows the formatting of the PieChart legend labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_E_LabelClick">
            <summary>
              Looks up a localized string similar to Raised when the slice&apos;s label is clicked..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_E_SelectedItemChanged">
            <summary>
              Looks up a localized string similar to Raised when the SelectedItem property has changed..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_E_SelectedItemChanging">
            <summary>
              Looks up a localized string similar to Raised when the SelectedItem property is changing.  This event is cancelable..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_E_SelectedItemsChanged">
            <summary>
              Looks up a localized string similar to Raised when the SelectedItems collection has changed..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_E_SelectedItemsChanging">
            <summary>
              Looks up a localized string similar to Raised when the SelectedItems collection is changing.  This event is cancelable..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_E_SliceClick">
            <summary>
              Looks up a localized string similar to Fires when a slice of this UltraPieChart is clicked..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_E_TooltipContentUpdating">
            <summary>
              Looks up a localized string similar to Occurs when the ToolTip for the UltraPieChart is updating the content to be rendered..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_AllowSliceExplosion">
            <summary>
              Looks up a localized string similar to Gets or sets whether the slices can be exploded..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_AllowSliceSelection">
            <summary>
              Looks up a localized string similar to Gets or sets whether the slices can be selected..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_Brushes">
            <summary>
              Looks up a localized string similar to Gets or sets the Brushes that will be used for the slices fill color..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_DataMember">
            <summary>
              Looks up a localized string similar to Gets or sets the data member of the data source from which the PieCharts&apos; categorical items collection is populated..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_DataSource">
            <summary>
              Looks up a localized string similar to Gets or sets the data source for the chart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_ExplodedRadius">
            <summary>
              Looks up a localized string similar to Determines how much the exploded slice is offset from the center. Value between 0 and 1..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_ExplodedSlices">
            <summary>
              Looks up a localized string similar to A collection which determines which slices will be exploded..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_FontBrush">
            <summary>
              Looks up a localized string similar to Gets or sets the font brush for the labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_FontFamily">
            <summary>
              Looks up a localized string similar to Gets or sets the Font Family of the UltraPieChart labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_FontSize">
            <summary>
              Looks up a localized string similar to Gets or sets the Font Size of the UltraPieChart labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_FontStyle">
            <summary>
              Looks up a localized string similar to Gets or sets the Font Style of the UltraPieChart labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_InnerExtent">
            <summary>
              Looks up a localized string similar to Gets or sets the amount of space between the center and the start of the arc. This property should be set between 0 and 100..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_IsSurfaceInteractionDisabled">
            <summary>
              Looks up a localized string similar to Gets or sets whether all surface interactions with the plot area should be disabled..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_LabelExtent">
            <summary>
              Looks up a localized string similar to Gets or sets the pixel amount, by which the labels are offset from the edge of the slices..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_LabelInnerColor">
            <summary>
              Looks up a localized string similar to Gets or sets the color for labels rendered inside of the pie chart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_LabelMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the property name that contains the labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_LabelOuterColor">
            <summary>
              Looks up a localized string similar to Gets or sets the color for labels rendered outside of the pie chart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_LabelsPosition">
            <summary>
              Looks up a localized string similar to Gets or sets the position of chart labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_LeaderLineMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the margin between a label and the end of its leader line. The default is 6 pixels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_LeaderLineStyle">
            <summary>
              Looks up a localized string similar to Gets or sets the style for the leader lines..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_LeaderLineType">
            <summary>
              Looks up a localized string similar to Gets or sets what type of leader lines will be used for the outside end labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_LeaderLineVisibility">
            <summary>
              Looks up a localized string similar to Gets or sets whether the leader lines are visible..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_Legend">
            <summary>
              Looks up a localized string similar to Gets or sets which legend to use for the PieChart slices..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_LegendLabelMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the property name that contains the legend labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_OthersCategoryStyle">
            <summary>
              Looks up a localized string similar to Gets or sets the style used for the Others slice..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_OthersCategoryText">
            <summary>
              Looks up a localized string similar to Gets or sets the label of the Others slice..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_OthersCategoryThreshold">
            <summary>
              Looks up a localized string similar to Gets or sets the threshold value that determines if slices are grouped into the Others slice..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_OthersCategoryType">
            <summary>
              Looks up a localized string similar to Gets or sets whether to use numeric or percent-based threshold value..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_Outlines">
            <summary>
              Looks up a localized string similar to Gets or sets the Brushes that will be used for the slices outline color..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_RadiusFactor">
            <summary>
              Looks up a localized string similar to Gets or sets the scaling factor of the chart&apos;s radius. Value between 0 and 1..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_SelectedSlices">
            <summary>
              Looks up a localized string similar to A collection which determines which slices will be selected..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_SelectedStyle">
            <summary>
              Looks up a localized string similar to Gets or sets the style used when a slice is selected..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_SelectionMode">
            <summary>
              Looks up a localized string similar to Gets or sets which mode to use for selecting slices..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_ShowDefaultTooltip">
            <summary>
              Looks up a localized string similar to Gets or sets whether or not the default tooltip for the UltraPieChart will be shown..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_StartAngle">
            <summary>
              Looks up a localized string similar to Gets or sets the starting angle of the chart. The default zero value is equivalent to 3 o&apos;clock..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_SweepDirection">
            <summary>
              Looks up a localized string similar to Gets or sets the rotational direction of the chart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PieChartBase_P_ValueMemberPath">
            <summary>
              Looks up a localized string similar to Gets or Sets the property name that contains the values..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PolarAreaSeries_P_UnknownValuePlotting">
            <summary>
              Looks up a localized string similar to Determines how unknown values will be plotted on the chart. Null and Double.NaN are two examples of unknown values..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PolarBase_P_AngleAxis">
            <summary>
              Looks up a localized string similar to Gets or sets the effective angle axis for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PolarBase_P_AngleMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the path to use to find the angle values for the series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PolarBase_P_ClipSeriesToBounds">
            <summary>
              Looks up a localized string similar to Gets or sets whether to clip the series to the bounds. Setting this to true can effect performance..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PolarBase_P_MaximumMarkers">
            <summary>
              Looks up a localized string similar to Gets or sets the maximum number of markers displayed by the current series.   If more than the specified number of markers are visible, the polar series will automatically choose a representative set..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PolarBase_P_RadiusAxis">
            <summary>
              Looks up a localized string similar to Gets or sets the effective radius axis for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PolarBase_P_RadiusMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the path to use to get the radius values for the series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PolarBase_P_TrendLineBrush">
            <summary>
              Looks up a localized string similar to Gets or sets the brush that specifies how to the current series object&apos;s Trend line is drawn..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PolarBase_P_TrendLinePeriod">
            <summary>
              Looks up a localized string similar to Gets or sets the moving average period for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PolarBase_P_TrendLineThickness">
            <summary>
              Looks up a localized string similar to Gets or sets the thickness of the current series object&apos;s trend line..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PolarBase_P_TrendLineType">
            <summary>
              Looks up a localized string similar to Gets or sets the trend type for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PolarBase_P_TrendLineZIndex">
            <summary>
              Looks up a localized string similar to Sets or Gets the Trendline Z index..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PolarBase_P_UseCartesianInterpolation">
            <summary>
              Looks up a localized string similar to Gets or sets whether Cartesian Interpolation should be used rather than Archimedian  spiral based interpolation..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PolarLineSeries_P_UnknownValuePlotting">
            <summary>
              Looks up a localized string similar to Determines how unknown values will be plotted on the chart. Null and Double.NaN are two examples of unknown values..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PolarSplineAreaSeries_P_Stiffness">
            <summary>
              Looks up a localized string similar to Gets or sets the Stiffness property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PolarSplineSeries_P_Stiffness">
            <summary>
              Looks up a localized string similar to Gets or sets the Stiffness property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_PriceChannelOverlay_P_Period">
            <summary>
              Looks up a localized string similar to Gets or sets the moving average period for the current PriceChannelOverlay object. The typical, and initial, value for Bollinger band periods is 14..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RadialAreaSeries_P_UnknownValuePlotting">
            <summary>
              Looks up a localized string similar to Determines how unknown values will be plotted on the chart. Null and Double.NaN are two examples of unknown values..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RadialBase_P_AngleAxis">
            <summary>
              Looks up a localized string similar to Gets or sets the effective angle axis for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RadialBase_P_ClipSeriesToBounds">
            <summary>
              Looks up a localized string similar to Gets or sets whether to clip the series to the bounds. Setting this to true can effect performance..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RadialBase_P_ValueAxis">
            <summary>
              Looks up a localized string similar to Gets or sets the effective value axis for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RadialColumnSeries_P_RadiusX">
            <summary>
              Looks up a localized string similar to Gets or sets the x-radius of the ellipse that is used to round the corners of the column..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RadialColumnSeries_P_RadiusY">
            <summary>
              Looks up a localized string similar to Gets or sets the y-radius of the ellipse that is used to round the corners of the column..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RadialLineSeries_P_UnknownValuePlotting">
            <summary>
              Looks up a localized string similar to Determines how unknown values will be plotted on the chart. Null and Double.NaN are two examples of unknown values..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RadialPieSeries_P_RadiusX">
            <summary>
              Looks up a localized string similar to Gets or sets the x-radius of the ellipse that is used to round the corners of the column..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RadialPieSeries_P_RadiusY">
            <summary>
              Looks up a localized string similar to Gets or sets the y-radius of the ellipse that is used to round the corners of the column..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RangeCategorySeries_P_HighMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the value mapping property for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RangeCategorySeries_P_LowMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the value mapping property for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RangeColumnSeries_P_RadiusX">
            <summary>
              Looks up a localized string similar to Gets or sets the x-radius of the ellipse that is used to round the corners of the column..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RangeColumnSeries_P_RadiusY">
            <summary>
              Looks up a localized string similar to Gets or sets the y-radius of the ellipse that is used to round the corners of the column..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RateOfChangeAndMomentumIndicator_P_Period">
            <summary>
              Looks up a localized string similar to Gets or sets the moving average period for the current AverageTrueRangeSeries object. The typical, and initial, value for AverageTrueRange periods is 14..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RelativeStrengthIndexIndicator_P_Period">
            <summary>
              Looks up a localized string similar to Gets or sets the moving average period for the current RelativeStrengthIndexIndicator object. The typical, and initial, value for RSI periods is 14..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RenderRequestedEventArgs_P_Animate">
            <summary>
              Looks up a localized string similar to True if animation is requested..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeries_P_ExplodedSlices">
            <summary>
              Looks up a localized string similar to The indexes of the exploded slices for this RingSeries..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeries_P_SelectedSlices">
            <summary>
              Looks up a localized string similar to The indexes of the selected slices for this RingSeries..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_E_FormatLabel">
            <summary>
              Looks up a localized string similar to Gets or sets a function which takes an object that produces a formatted label for displaying in the chart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_E_FormatLegendLabel">
            <summary>
              Looks up a localized string similar to Used to format the legend labels for the slices in the chart based on the item in context..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_E_PropertyChanged">
            <summary>
              Looks up a localized string similar to Event raised when a property (including &quot;effective&quot; and non-dependency property) value changes..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_E_PropertyUpdated">
            <summary>
              Looks up a localized string similar to Event raised when a property (including &quot;effective&quot; and non-dependency property) value changes..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_E_TooltipContentUpdating">
            <summary>
              Looks up a localized string similar to Occurs when the ToolTip for this RingSeries is updating the content to be rendered..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_Brushes">
            <summary>
              Looks up a localized string similar to Gets or sets the Brushes property. The brushes property defines the palette from which automatically assigned slice brushes are selected..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_Chart">
            <summary>
              Looks up a localized string similar to The UltraDoughnutChart associated to this series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_DataMember">
            <summary>
              Looks up a localized string similar to Gets or sets the data member of the data source from which the RingSeries&apos; categorical items collection is populated..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_DataSource">
            <summary>
              Looks up a localized string similar to Gets or sets the data source for the ring series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_FontBrush">
            <summary>
              Looks up a localized string similar to Gets or sets the font brush for the labels.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_IsSurfaceInteractionDisabled">
            <summary>
              Looks up a localized string similar to Gets or sets whether all surface interactions with the plot area should be disabled..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_LabelExtent">
            <summary>
              Looks up a localized string similar to Gets or sets the pixel amount, by which the labels are offset from the edge of the slices..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_LabelMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the property name that contains the labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_LabelsPosition">
            <summary>
              Looks up a localized string similar to Gets or sets the position of chart labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_LeaderLineMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the margin between a label and its leader line. The default is 6 pixels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_LeaderLineStyle">
            <summary>
              Looks up a localized string similar to Gets or sets the style for the leader lines.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_LeaderLineType">
            <summary>
              Looks up a localized string similar to Gets or sets what type of leader lines will be used for the outside end labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_LeaderLineVisibility">
            <summary>
              Looks up a localized string similar to Gets or sets whether the leader lines are visible..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_Legend">
            <summary>
              Looks up a localized string similar to Gets or sets which legend to use for the UltraDoughnutChart slices..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_LegendLabelMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the property name that contains the legend labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_OthersCategoryStyle">
            <summary>
              Looks up a localized string similar to Gets or sets the style used for the others slice.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_OthersCategoryText">
            <summary>
              Looks up a localized string similar to Gets or sets the label of the Others slice..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_OthersCategoryThreshold">
            <summary>
              Looks up a localized string similar to Gets or sets the threshold value that determines if slices are grouped into the Others slice..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_OthersCategoryType">
            <summary>
              Looks up a localized string similar to Gets or sets whether to use numeric or percent-based threshold value..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_Outlines">
            <summary>
              Looks up a localized string similar to Gets or sets the Outlines property. The Outlines property defines the palette from which automatically assigned slice outlines are selected..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_RadiusFactor">
            <summary>
              Looks up a localized string similar to Gets or sets the scaling factor of the chart&apos;s radius. Value between 0 and 1..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_SelectedStyle">
            <summary>
              Looks up a localized string similar to Gets or sets the style used when a slice is selected..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_ShowDefaultTooltip">
            <summary>
              Looks up a localized string similar to Gets or sets whether or not the default tooltip for this RingSeriesBase will be shown..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_StartAngle">
            <summary>
              Looks up a localized string similar to Gets or sets the starting angle of the chart. The default zero value is equivalent to 3 o&apos;clock..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_RingSeriesBase_P_ValueMemberPath">
            <summary>
              Looks up a localized string similar to Gets or Sets the property name that contains the values..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterAreaSeries_P_ColorMemberPath">
            <summary>
              Looks up a localized string similar to The name of the property on each data item containing a numeric value which can be converted to a color by the ColorScale..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterAreaSeries_P_ColorScale">
            <summary>
              Looks up a localized string similar to The ColorScale used to resolve the color values of points in the series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterBase_P_MarkerCollisionAvoidance">
            <summary>
              Looks up a localized string similar to The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterBase_P_MaximumMarkers">
            <summary>
              Looks up a localized string similar to Gets or sets the maximum number of markerItems displayed by the current series.   If more than the specified number of markerItems are visible, the series will automatically choose a representative set..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterBase_P_TrendLineBrush">
            <summary>
              Looks up a localized string similar to Gets or sets the brush to use to draw the trend line..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterBase_P_TrendLinePeriod">
            <summary>
              Looks up a localized string similar to Gets or sets the moving average period for the current scatter series object. The typical, and initial, value for trend line period is 7..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterBase_P_TrendLineThickness">
            <summary>
              Looks up a localized string similar to Gets or sets the thickness of the current scatter series object&apos;s trend line..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterBase_P_TrendLineType">
            <summary>
              Looks up a localized string similar to Gets or sets the trend type for the current scatter series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterBase_P_TrendLineZIndex">
            <summary>
              Looks up a localized string similar to Gets or sets the Z-Index of the trend line.  Values greater than 1000 will result in the trend line being rendered in front of the series data..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterBase_P_XAxis">
            <summary>
              Looks up a localized string similar to Gets or sets the effective x-axis for the current object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterBase_P_XMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the value mapping property for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterBase_P_YAxis">
            <summary>
              Looks up a localized string similar to Gets or sets the effective y-axis for the current object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterBase_P_YMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the value mapping property for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterContourSeries_P_FillScale">
            <summary>
              Looks up a localized string similar to The ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterContourSeries_P_ValueMemberPath">
            <summary>
              Looks up a localized string similar to The name of the property from which to retrieve the numeric values from the ItemsSource items..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterContourSeries_P_ValueResolver">
            <summary>
              Looks up a localized string similar to The ContourValueResolver used to determine the numeric values of contours..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterLineSeries_P_UnknownValuePlotting">
            <summary>
              Looks up a localized string similar to Determines how unknown values will be plotted on the chart. Null and Double.NaN are two examples of unknown values..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterPolygonSeries_P_MarkerBrush">
            <summary>
              Looks up a localized string similar to Gets or sets the brush that specifies how the current series object&apos;s marker interiors are painted..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterPolygonSeries_P_MarkerCollisionAvoidance">
            <summary>
              Looks up a localized string similar to The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterPolygonSeries_P_MarkerOutline">
            <summary>
              Looks up a localized string similar to Gets or sets the brush that specifies how the current series object&apos;s marker outlines are painted..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterPolygonSeries_P_MarkerTemplate">
            <summary>
              Looks up a localized string similar to Gets or sets the MarkerTemplate for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterPolygonSeries_P_MarkerType">
            <summary>
              Looks up a localized string similar to Gets or sets the marker type for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterPolygonSeries_P_ShapeStyle">
            <summary>
              Looks up a localized string similar to The default style to apply to all Shapes in the series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterPolygonSeries_P_ShapeStyleSelector">
            <summary>
              Looks up a localized string similar to The StyleSelector which is used to select a style for each Shape..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterPolylineSeries_P_ShapeStyle">
            <summary>
              Looks up a localized string similar to The default style to apply to all Shapes in the series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterPolylineSeries_P_ShapeStyleSelector">
            <summary>
              Looks up a localized string similar to The StyleSelector which is used to select a style for each Shape..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterSplineSeries_P_Stiffness">
            <summary>
              Looks up a localized string similar to Gets or sets the Stiffness property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterTriangulationSeries_E_TriangulationStatusChanged">
            <summary>
              Looks up a localized string similar to Raised when the status of an ongoing Triangulation has changed..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterTriangulationSeries_P_TrianglesSource">
            <summary>
              Looks up a localized string similar to The source of triangulation data. This property is optional.  If it is left as null, the triangulation will be created based on the items in the ItemsSource.  Triangulation is a demanding operation, so the runtime performance will be better when specifying a TriangulationSource, especially when a large number of data items are present..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterTriangulationSeries_P_TriangleVertexMemberPath1">
            <summary>
              Looks up a localized string similar to The name of the property of the TrianglesSource items which, for each triangle, contains the index of the first vertex point in the ItemsSource..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterTriangulationSeries_P_TriangleVertexMemberPath2">
            <summary>
              Looks up a localized string similar to The name of the property of the TrianglesSource items which, for each triangle, contains the index of the second vertex point in the ItemsSource..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterTriangulationSeries_P_TriangleVertexMemberPath3">
            <summary>
              Looks up a localized string similar to The name of the property of the TrianglesSource items which, for each triangle, contains the index of the third vertex point in the ItemsSource..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterTriangulationSeries_P_XMemberPath">
            <summary>
              Looks up a localized string similar to The name of the property from which to extract the X-coordinate for each item in the ItemsSource..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ScatterTriangulationSeries_P_YMemberPath">
            <summary>
              Looks up a localized string similar to The name of the property from which to extract the Y-coordinate for each item in the ItemsSource..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_E_PropertyChanged">
            <summary>
              Looks up a localized string similar to Event raised when a property (including &quot;effective&quot; and non-dependency property) value changes..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_E_PropertyUpdated">
            <summary>
              Looks up a localized string similar to Event raised when a property (including &quot;effective&quot; and non-dependency property) value changes..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_E_RenderRequested">
            <summary>
              Looks up a localized string similar to This event is raised every time a render has been requested from a series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_E_TooltipContentUpdating">
            <summary>
              Looks up a localized string similar to Occurs when the ToolTip for the current series object is updating the content to be rendered..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_P_AreaFillOpacity">
            <summary>
              Looks up a localized string similar to Gets or sets the opacity applied to the area fill visual. A double in the range 0, 1. The default is NaN. This property only applies to series that have area visual..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_P_Brush">
            <summary>
              Looks up a localized string similar to Gets or sets the brush to use for the series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_P_DataMember">
            <summary>
              Looks up a localized string similar to Gets or sets the data member of the data source from which the Series&apos;s data items collection is populated..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_P_DataSource">
            <summary>
              Looks up a localized string similar to Gets or sets the data source from which the Series&apos; data items collection is populated..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_P_ExpectFunctions">
            <summary>
              Looks up a localized string similar to Gets or sets whether the series should expect that properties in its items source may be functions that need to be evaluated to yield their value. This defaults to false, as there will be a subtle performance impact to using this feature. This value must be set before assigning an item&apos;s source to take effect..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_P_HitTestMode">
            <summary>
              Looks up a localized string similar to Method of hit testing to use when pointing to items in this series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_P_IsHighlightingEnabled">
            <summary>
              Looks up a localized string similar to Gets or sets whether highlighting should be enabled for this series, if this type of series supports highlighting..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_P_ItemsSource">
            <summary>
              Looks up a localized string similar to Gets or sets the ItemsSource property for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_P_Legend">
            <summary>
              Looks up a localized string similar to Gets or sets a legend for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_P_LegendItemVisibility">
            <summary>
              Looks up a localized string similar to Gets or sets the legend item visibility for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_P_Name">
            <summary>
              Looks up a localized string similar to Gets or sets the name of the Series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_P_Opacity">
            <summary>
              Looks up a localized string similar to Gets or sets the Opacity of the Series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_P_Outline">
            <summary>
              Looks up a localized string similar to Gets or sets the brush to use for the outline of the series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_P_Resolution">
            <summary>
              Looks up a localized string similar to Gets or sets the current series object&apos;s rendering resolution..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_P_SeriesViewer">
            <summary>
              Looks up a localized string similar to Gets the containing series viewer for this series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_P_ShowDefaultTooltip">
            <summary>
              Looks up a localized string similar to Gets or sets whether default tooltip will be shown..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_P_Thickness">
            <summary>
              Looks up a localized string similar to Gets or sets the width of the current series object&apos;s line thickness..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_P_Title">
            <summary>
              Looks up a localized string similar to Gets or sets the Title property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_P_TransitionDuration">
            <summary>
              Looks up a localized string similar to Gets or sets the duration of the current series&apos;s morph..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_P_TransitionEasingFunction">
            <summary>
              Looks up a localized string similar to Gets or sets the easing function used to morph the current series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_P_TransitionInDuration">
            <summary>
              Looks up a localized string similar to Gets or sets the duration of the current series&apos;s transition in morph..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_P_TransitionInEasingFunction">
            <summary>
              Looks up a localized string similar to Gets or sets the EasingFunction used to morph the current series during the initial transition..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_P_TransitionInSpeedType">
            <summary>
              Looks up a localized string similar to Gets or sets the duration of the current series&apos;s transition in morph..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_Series_P_Visibility">
            <summary>
              Looks up a localized string similar to Gets or sets the display state of a Series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_E_ActualWindowRectChanged">
            <summary>
              Looks up a localized string similar to Occurs when the actual window rectangle of the SeriesViewer changes..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_E_GridAreaRectChanged">
            <summary>
              Looks up a localized string similar to Occurs just after the current SeriesViewer&apos;s grid area rectangle is changed..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_E_PropertyChanged">
            <summary>
              Looks up a localized string similar to Notifies clients that a property value has changed..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_E_PropertyUpdated">
            <summary>
              Looks up a localized string similar to Occurs when the value of a property is updated..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_E_RefreshCompleted">
            <summary>
              Looks up a localized string similar to Occurs when the SeriesViewer&apos;s processing for an update has completed..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_E_RenderRequested">
            <summary>
              Looks up a localized string similar to Occurs every time a render has been requested from a series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_E_SeriesCursorMouseMove">
            <summary>
              Looks up a localized string similar to Occurs when the cursors are moved over a series in this SeriesViewer..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_E_SeriesMouseEnter">
            <summary>
              Looks up a localized string similar to Occurs when the mouse pointer enters a Series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_E_SeriesMouseLeave">
            <summary>
              Looks up a localized string similar to Occurs when the mouse pointer leaves a Series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_E_SeriesMouseLeftButtonDown">
            <summary>
              Looks up a localized string similar to Occurs when the left mouse button is pressed while the mouse pointer is over a Series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_E_SeriesMouseLeftButtonUp">
            <summary>
              Looks up a localized string similar to Occurs when the left mouse button is released while the mouse pointer is over a Series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_E_SeriesMouseMove">
            <summary>
              Looks up a localized string similar to Occurs when the mouse pointer moves while over a Series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_E_WindowRectChanged">
            <summary>
              Looks up a localized string similar to Occurs just after the current SeriesViewer&apos;s window rectangle is changed..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_AnimateSeriesWhenAxisRangeChanges">
            <summary>
              Looks up a localized string similar to Gets or sets whether the series animations should be allowed when a range change has been detected on an axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_AutoMarginHeight">
            <summary>
              Looks up a localized string similar to Sets or gets the automatic height to add when automatically adding margins to the chart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_AutoMarginWidth">
            <summary>
              Looks up a localized string similar to Sets or gets the automatic width to add when automatically adding margins to the chart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_ContentHitTestMode">
            <summary>
              Looks up a localized string similar to Determines the method of hit testing used when mousing over elements in the chart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_CrosshairPoint">
            <summary>
              Looks up a localized string similar to Gets or sets the cross hair point (in world coordinates) Either or both of the crosshair point&apos;s X and Y may be set to double.NaN, in which case the relevant crosshair line is hidden..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_CrosshairVisibility">
            <summary>
              Looks up a localized string similar to Gets or sets the current SeriesViewer&apos;s crosshair visibility override..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_DefaultInteraction">
            <summary>
              Looks up a localized string similar to Gets or sets the DefaultInteraction property. The default interaction state defines the SeriesViewer&apos;s response to mouse events..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_DragModifier">
            <summary>
              Looks up a localized string similar to Gets or sets the current SeriesViewer&apos;s DragModifier property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_HighlightingTransitionDuration">
            <summary>
              Looks up a localized string similar to Gets or sets the duration the highlighting/de-highlighting effects..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_Legend">
            <summary>
              Looks up a localized string similar to Gets or sets which legend to use for all series in this SeriesViewer, unless otherwise specified by the Series.Legend property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_PanModifier">
            <summary>
              Looks up a localized string similar to Gets or sets the current SeriesViewer&apos;s PanModifier property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_PixelScalingRatio">
            <summary>
              Looks up a localized string similar to Gets or sets the PixelScalingRatio property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_PlotAreaBackground">
            <summary>
              Looks up a localized string similar to Gets or sets the brush used as the background for the current SeriesViewer object&apos;s plot area..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_PreviewPathStroke">
            <summary>
              Looks up a localized string similar to Gets or sets stroke used for the preview rectangle..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_PreviewRect">
            <summary>
              Looks up a localized string similar to Gets or sets the preview rectangle. The preview rectangle may be set to Rect.Empty, in which case the visible preview strokePath is hidden..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_Series">
            <summary>
              Looks up a localized string similar to Gets the current SeriesViewer object&apos;s child Series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_Subtitle">
            <summary>
              Looks up a localized string similar to Gets or sets the Subtitle property. The Title property defines the Subtitle of the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_SubtitleFontFamily">
            <summary>
              Looks up a localized string similar to Gets or Sets the Font Family of the SeriesViewer&apos;s Subtitle..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_SubtitleFontSize">
            <summary>
              Looks up a localized string similar to Gets or Sets the Font Size of the SeriesViewer&apos;s Subtitle..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_SubtitleHorizontalAlignment">
            <summary>
              Looks up a localized string similar to Gets or sets the SubtitleHorizontalAlignment property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_SubtitleMargin">
            <summary>
              Looks up a localized string similar to Specifies the space between the Subtitle and other elements..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_SubtitleTextColor">
            <summary>
              Looks up a localized string similar to Gets or sets the Color used for the Subtitle Text..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_SubtitleTextStyle">
            <summary>
              Looks up a localized string similar to Gets or sets the Font Style applied to the Subtitle&apos;s text..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_SyncChannel">
            <summary>
              Looks up a localized string similar to Gets or sets the Synchronization channel to use for the SeriesViewer..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_SynchronizeHorizontally">
            <summary>
              Looks up a localized string similar to Gets or sets whether to synchronize horizontally with other viewers in the sync channel..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_SynchronizeVertically">
            <summary>
              Looks up a localized string similar to Gets or sets whether to synchronize horizontally with other viewers in the sync channel..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_Title">
            <summary>
              Looks up a localized string similar to Gets or sets the Title property. The Title property defines the title of the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_TitleFontFamily">
            <summary>
              Looks up a localized string similar to Gets or Sets the Font Family of the SeriesViewer&apos;s Title..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_TitleFontSize">
            <summary>
              Looks up a localized string similar to Gets or Sets the Font Size of the SeriesViewer&apos;s Title..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_TitleHorizontalAlignment">
            <summary>
              Looks up a localized string similar to Gets or sets the TitleHorizontalAlignment property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_TitleMargin">
            <summary>
              Looks up a localized string similar to Specifies the space between the Title and other elements..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_TitleTextColor">
            <summary>
              Looks up a localized string similar to Gets or sets the Color used for the Title Text..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_TitleTextStyle">
            <summary>
              Looks up a localized string similar to Gets or sets the Font Style applied to the Title&apos;s text..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_ViewerMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the margin around the chart content..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_WindowPositionHorizontal">
            <summary>
              Looks up a localized string similar to A number between 0 and 1 determining the position of the horizontal scroll. This property is effectively a shortcut to the X position of the WindowRect property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_WindowPositionVertical">
            <summary>
              Looks up a localized string similar to A number between 0 and 1 determining the position of the vertical scroll. This property is effectively a shortcut to the Y position of the WindowRect property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_WindowRect">
            <summary>
              Looks up a localized string similar to Gets or sets a rectangle representing the portion of the SeriesViewer currently in view..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_WindowRectMinWidth">
            <summary>
              Looks up a localized string similar to Sets or gets the minimum width that the window rect is allowed to reach before being clamped. Decrease this value if you want to allow for further zooming into the viewer. If this value is lowered too much it can cause graphical corruption due to floating point arithmetic inaccuracy..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SeriesViewer_P_WindowResponse">
            <summary>
              Looks up a localized string similar to The response to user panning and zooming: whether to update the view immediately while the user action is happening, or to defer the update to after the user action is complete.  The user action will be an action such as a mouse drag which causes panning and/or zooming to occur..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ShapeSeriesBase_P_FillMemberPath">
            <summary>
              Looks up a localized string similar to The name of the property on ItemsSource items which contains a numeric value to convert to a Brush using the FillScale..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ShapeSeriesBase_P_FillScale">
            <summary>
              Looks up a localized string similar to The ValueBrushScale to use when determining Brushes for each Shape, based on the values found in FillMemberPath..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ShapeSeriesBase_P_ShapeFilterResolution">
            <summary>
              Looks up a localized string similar to The resolution at which to filter out shapes in the series.  For example, if the ShapeFilterResolution is set to 3, then elements with a bounding rectangle smaller than 3 X 3 pixels will be filtered out..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ShapeSeriesBase_P_ShapeMemberPath">
            <summary>
              Looks up a localized string similar to The name of the property on ItemsSource items which, for each shape, contains a list of points to be converted to a polygon..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SizeScale_E_PropertyChanged">
            <summary>
              Looks up a localized string similar to Event raised when a property (including &quot;effective&quot; and non-dependency property) value changes..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SizeScale_E_PropertyUpdated">
            <summary>
              Looks up a localized string similar to Event raised when a property (including &quot;effective&quot; and non-dependency property) value changes..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SizeScale_P_IsLogarithmic">
            <summary>
              Looks up a localized string similar to Gets or sets whether the scale is logarithmic..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SizeScale_P_LogarithmBase">
            <summary>
              Looks up a localized string similar to Gets or sets the logarithm base for this scale..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SizeScale_P_MaximumValue">
            <summary>
              Looks up a localized string similar to Gets or sets the maximum value for this scale..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SizeScale_P_MinimumValue">
            <summary>
              Looks up a localized string similar to Gets or sets the minimum value for this scale..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SlowStochasticOscillatorIndicator_P_Period">
            <summary>
              Looks up a localized string similar to Gets or sets the moving average period for the current SlowStochasticOscillatorIndicator object. The typical, and initial, value for SlowStochasticOscillatorIndicator periods is 14..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_SplineSeriesBase_P_SplineType">
            <summary>
              Looks up a localized string similar to Gets or sets the type of spline to be rendered..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedBarSeries_P_RadiusX">
            <summary>
              Looks up a localized string similar to Gets or sets the x-radius of the ellipse that is used to round the corners of the bar..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedBarSeries_P_RadiusY">
            <summary>
              Looks up a localized string similar to Gets or sets the y-radius of the ellipse that is used to round the corners of the bar..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedColumnSeries_P_RadiusX">
            <summary>
              Looks up a localized string similar to Gets or sets the x-radius of the ellipse that is used to round the corners of the column..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedColumnSeries_P_RadiusY">
            <summary>
              Looks up a localized string similar to Gets or sets the y-radius of the ellipse that is used to round the corners of the column..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedFragmentSeries_E_PropertyChanged">
            <summary>
              Looks up a localized string similar to Event raised when a property (including &quot;effective&quot; and non-dependency property) value changes..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedFragmentSeries_E_PropertyUpdated">
            <summary>
              Looks up a localized string similar to Event raised when a property (including &quot;effective&quot; and non-dependency property) value changes..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedFragmentSeries_P_AreaFillOpacity">
            <summary>
              Looks up a localized string similar to Gets or sets the AreaFillOpacity of the stacked fragment. This property only applies for area-like series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedFragmentSeries_P_Brush">
            <summary>
              Looks up a localized string similar to Gets or sets the brush of the stacked fragment..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedFragmentSeries_P_DashArray">
            <summary>
              Looks up a localized string similar to Gets or sets a collection of Double values that indicate the pattern of dashes and gaps that is used to outline the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedFragmentSeries_P_DashCap">
            <summary>
              Looks up a localized string similar to Gets or sets the PenLineCap enumeration value that specifies how the current series object&apos;s dash ends are drawn. .
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedFragmentSeries_P_EndCap">
            <summary>
              Looks up a localized string similar to The style of the end point of any lines or polylines representing this series. Not every series type has a line at which it would be appropriate to display an end cap, so this property does not affect every series type.  LineSeries, for example, is affected by EndCap, but ColumnSeries is not..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedFragmentSeries_P_LegendItemVisibility">
            <summary>
              Looks up a localized string similar to Gets or sets the legend item visibility for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedFragmentSeries_P_MarkerBrush">
            <summary>
              Looks up a localized string similar to Gets or sets the brush that specifies how the current series object&apos;s marker interiors are painted..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedFragmentSeries_P_MarkerOutline">
            <summary>
              Looks up a localized string similar to Gets or sets the brush that specifies how the current series object&apos;s marker outlines are painted..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedFragmentSeries_P_MarkerType">
            <summary>
              Looks up a localized string similar to Gets or sets the marker type for the current series object. If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedFragmentSeries_P_Name">
            <summary>
              Looks up a localized string similar to Gets or sets the Name of the stacked fragment..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedFragmentSeries_P_Opacity">
            <summary>
              Looks up a localized string similar to Gets or sets the Opacity of the stacked fragment..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedFragmentSeries_P_Outline">
            <summary>
              Looks up a localized string similar to Gets or sets the brush to use for the outline of the series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedFragmentSeries_P_RadiusX">
            <summary>
              Looks up a localized string similar to Gets or sets the x-radius of the ellipse that is used to round the corners of the column. This only applies to Bar and Column series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedFragmentSeries_P_RadiusY">
            <summary>
              Looks up a localized string similar to Gets or sets the y-radius of the ellipse that is used to round the corners of the column. This only applies to Bar and Column series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedFragmentSeries_P_ShowDefaultTooltip">
            <summary>
              Looks up a localized string similar to Gets or sets a value indicating whether default tooltip will be shown..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedFragmentSeries_P_StartCap">
            <summary>
              Looks up a localized string similar to The style of the starting point of any lines or polylines representing this series. Not every series type has a line at which it would be appropriate to display a start cap, so this property does not affect every series type.  LineSeries, for example, is affected by StartCap, but ColumnSeries is not..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedFragmentSeries_P_Thickness">
            <summary>
              Looks up a localized string similar to Gets or sets the width of the current series object&apos;s line thickness..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedFragmentSeries_P_Title">
            <summary>
              Looks up a localized string similar to Gets or sets the Title property. The legend item control is created according to the Title on-demand by  the series object itself..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedFragmentSeries_P_ValueMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the value mapping property for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedFragmentSeries_P_Visibility">
            <summary>
              Looks up a localized string similar to Gets or sets the Visibility of the stacked fragment..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedSeriesBase_E_SeriesCreated">
            <summary>
              Looks up a localized string similar to Occurs when a new fragment series is automatically generated..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedSeriesBase_P_AutoGenerateSeries">
            <summary>
              Looks up a localized string similar to Gets or sets whether series should be automatically generated. Reqiures the use of GroupBy as the ItemsSource..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedSeriesBase_P_ReverseLegendOrder">
            <summary>
              Looks up a localized string similar to Gets or sets whether the order of the fragment series should be reversed in the legend..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StackedSeriesBase_P_Series">
            <summary>
              Looks up a localized string similar to Contains one or more stacked fragments..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StandardDeviationIndicator_P_Period">
            <summary>
              Looks up a localized string similar to Gets or sets the moving average period for the current StandardDeviationIndicator object. The typical, and initial, value for STDEV periods is 20..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StochRSIIndicator_P_Period">
            <summary>
              Looks up a localized string similar to Gets or sets the moving average period for the current StochRSIIndicator object. The typical, and initial, value for StochRSI periods is 14..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_StraightNumericAxisBase_P_ScaleMode">
            <summary>
              Looks up a localized string similar to Gets or sets the axis scale mode..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_TimeAxisBase_P_DateTimeMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the DateTime mapping property for the axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_TimeAxisBase_P_IsDataPreSorted">
            <summary>
              Looks up a localized string similar to Gets or sets whether the data assigned to the date time axis should be considered pre-sorted by date/time..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_TimeAxisBase_P_MaximumValue">
            <summary>
              Looks up a localized string similar to Gets or sets the axis MaximumValue..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_TimeAxisBase_P_MinimumValue">
            <summary>
              Looks up a localized string similar to Gets or sets the axis MinimumValue..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_TimeXAxis_P_Breaks">
            <summary>
              Looks up a localized string similar to TimeAxisBreaks to apply to this axis, representing spans of time to omit, such as weekends..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_TimeXAxis_P_Intervals">
            <summary>
              Looks up a localized string similar to A list of axis label intervals to apply, which are selected according to the visible axis range..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_TimeXAxis_P_LabelFormats">
            <summary>
              Looks up a localized string similar to A list of axis label formats to apply, which are selected according to the visible axis range..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_TRIXIndicator_P_Period">
            <summary>
              Looks up a localized string similar to Gets or sets the moving average period for the current TRIXIndicator object. The typical, and initial, value for TRIX periods is 15..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_E_PropertyChanged">
            <summary>
              Looks up a localized string similar to Event raised when a property value is changed..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_E_SeriesAdded">
            <summary>
              Looks up a localized string similar to Event raised when a series is initialized.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_E_SeriesRemoved">
            <summary>
              Looks up a localized string similar to Event raised when a series is removed from the CategoryChart.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_E_XAxisFormatLabel">
            <summary>
              Looks up a localized string similar to Gets or sets function which takes a context object and returns a formatted label for the X-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_E_YAxisFormatLabel">
            <summary>
              Looks up a localized string similar to Gets or sets function which takes a context object and returns a formatted label for the Y-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_About">
            <summary>
              Looks up a localized string similar to Display the about dialog..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_AlignsGridLinesToPixels">
            <summary>
              Looks up a localized string similar to Gets or sets a value indicating whether grid and tick lines are aligned to device pixels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_AnimateSeriesWhenAxisRangeChanges">
            <summary>
              Looks up a localized string similar to Gets or sets whether the series animations should be allowed when a range change has been detected on an axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_BottomMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the bottom margin around the chart content..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_Brushes">
            <summary>
              Looks up a localized string similar to Gets or sets the palette of brushes to use for coloring the chart series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_ChartType">
            <summary>
              Looks up a localized string similar to Gets or sets the type of chart series to generate from the data..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_DataChart">
            <summary>
              Looks up a localized string similar to Gets the underlying DataChart which is encapsulated by this CategoryChart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_DataSource">
            <summary>
              Looks up a localized string similar to Gets or sets a collection of data items used to generate the chart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_ExcludedProperties">
            <summary>
              Looks up a localized string similar to Gets or sets a set of property paths that should be excluded from consideration by the category chart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_IncludedProperties">
            <summary>
              Looks up a localized string similar to Gets or sets a set of property paths that should be included for consideration by the category chart, leaving the remaineder excluded. If null, all properties will be considered..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_IsHorizontalZoomEnabled">
            <summary>
              Looks up a localized string similar to Gets or sets whether the chart can be horizontally zoomed through user interaction..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_IsTransitionInEnabled">
            <summary>
              Looks up a localized string similar to Gets or sets whether animation of series plots is enabled when the chart is loading into view.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_IsVerticalZoomEnabled">
            <summary>
              Looks up a localized string similar to Gets or sets whether the chart can be vertically zoomed through user interaction..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_LeftMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the left margin of the chart content..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_Legend">
            <summary>
              Looks up a localized string similar to Sets the legend to connect this chart to..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_MarkerBrushes">
            <summary>
              Looks up a localized string similar to Gets or sets the palette of brushes used as the fill color for data point markers..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_MarkerCollisionAvoidance">
            <summary>
              Looks up a localized string similar to Gets or sets the behavior for markers in each series which are placed too close together for the current view, resulting in a collision..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_MarkerOutlines">
            <summary>
              Looks up a localized string similar to Gets or sets the palette of brushes used for coloring outline of data point markers..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_MarkerTypes">
            <summary>
              Looks up a localized string similar to Gets or sets the collection of marker shapes used for representing data points of series in this chart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_NegativeBrushes">
            <summary>
              Looks up a localized string similar to Gets or sets the palette used for coloring negative items of Waterfall chart type..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_NegativeOutlines">
            <summary>
              Looks up a localized string similar to Brushes to use for drawing negative elements, when using a chart type with contextual coloring, such as Waterfall..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_Outlines">
            <summary>
              Looks up a localized string similar to Gets or sets the palette of brushes to use for outlines on the chart series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_Resolution">
            <summary>
              Looks up a localized string similar to Gets or sets the rendering resolution for series in this chart.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_RightMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the right margin of the chart content..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_ShowDefaultToolTip">
            <summary>
              Looks up a localized string similar to Gets or sets whether or not the default tooltip will be shown..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_Subtitle">
            <summary>
              Looks up a localized string similar to Gets or sets text to display below the chart Title, above the plot area..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_SubtitleAlignment">
            <summary>
              Looks up a localized string similar to Gets or sets horizontal alignment which determines the subtitle position, relative to the left and right edges of the chart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_SubtitleBottomMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the bottom margin of chart subtitle.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_SubtitleFontFamily">
            <summary>
              Looks up a localized string similar to Returns or sets the font family for the subtitle..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_SubtitleFontSize">
            <summary>
              Looks up a localized string similar to Returns or sets the font size for the subtitle..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_SubtitleLeftMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the left margin of chart subtitle.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_SubtitleRightMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the right margin of chart subtitle.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_SubtitleTextColor">
            <summary>
              Looks up a localized string similar to Gets or sets color of chart subtitle.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_SubtitleTextStyle">
            <summary>
              Looks up a localized string similar to seealso cref=&quot;SubtitleFontSize&quot;/&gt;
            	[DataVisualization.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_SubtitleTopMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the top margin of chart subtitle.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_Thickness">
            <summary>
              Looks up a localized string similar to Gets or sets the thickness of the chart series. Depending on the ChartType, this can be the main brush used, or just the outline..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_Title">
            <summary>
              Looks up a localized string similar to Gets or sets text to display above the plot area..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_TitleAlignment">
            <summary>
              Looks up a localized string similar to Gets or sets horizontal alignment which determines the title position, relative to the left and right edges of the chart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_TitleBottomMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the bottom margin of chart title.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_TitleFontFamily">
            <summary>
              Looks up a localized string similar to Returns or sets the font family for the title..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_TitleFontSize">
            <summary>
              Looks up a localized string similar to Returns or sets the font size for the title..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_TitleLeftMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the left margin of chart title.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_TitleRightMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the right margin of chart title.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_TitleTextColor">
            <summary>
              Looks up a localized string similar to Gets or sets color of chart title.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_TitleTextStyle">
            <summary>
              Looks up a localized string similar to Returns or sets the font style for the title..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_TitleTopMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the top margin of chart title.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_TopMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the top margin of the chart content..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_TransitionDuration">
            <summary>
              Looks up a localized string similar to Gets or sets the duration used for animating series plots when the data is changing.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_TransitionEasingFunction">
            <summary>
              Looks up a localized string similar to Gets or sets the easing function used for animating series plots when the data is changing..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_TransitionInDuration">
            <summary>
              Looks up a localized string similar to Gets or sets the duration used for animating series plots when the chart is loading into view.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_TransitionInEasingFunction">
            <summary>
              Looks up a localized string similar to Gets or sets the easing function used for animating series plots when the chart is loading into view.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_TransitionInMode">
            <summary>
              Looks up a localized string similar to Gets or sets the method that determines how to animate series plots when the chart is loading into view.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_TransitionInSpeedType">
            <summary>
              Looks up a localized string similar to Gets or sets the arrival speed used for animating series plots when the chart is loading into view.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_TrendLineBrushes">
            <summary>
              Looks up a localized string similar to Gets or sets the palette of brushes to used for coloring trend lines in this chart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_TrendLineThickness">
            <summary>
              Looks up a localized string similar to Gets or sets the thickness of the trend lines in this chart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_TrendLineType">
            <summary>
              Looks up a localized string similar to Gets or sets the formula used for calculating trend lines in this chart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_UnknownValuePlotting">
            <summary>
              Looks up a localized string similar to Gets or sets the behavior that determines how unknown values will be plotted on the chart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_Viewport">
            <summary>
              Looks up a localized string similar to Gets a rectangle representing the bounds of the plot area..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_WindowRect">
            <summary>
              Looks up a localized string similar to Gets or sets the rectangle representing the current scroll and zoom state of the chart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisActualMaximum">
            <summary>
              Looks up a localized string similar to Gets the current maximum value for the X-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisActualMinimum">
            <summary>
              Looks up a localized string similar to Gets the current minimum value for the X-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisExtent">
            <summary>
              Looks up a localized string similar to Gets or sets the distance between the X-axis and the bottom of the chart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisGap">
            <summary>
              Looks up a localized string similar to Gets or sets the amount of space between adjacent categories for the X-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisInterval">
            <summary>
              Looks up a localized string similar to Gets or sets the frequency of displayed labels along the X-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisInverted">
            <summary>
              Looks up a localized string similar to Gets or sets whether the direction of the X-axis is inverted, placing the first data items on the right side instead of left side.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisLabel">
            <summary>
              Looks up a localized string similar to Gets or sets the format for labels along the X-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisLabelAngle">
            <summary>
              Looks up a localized string similar to Gets or sets the angle of rotation for labels along the X-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisLabelBottomMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the bottom margin of labels on the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisLabelFontFamily">
            <summary>
              Looks up a localized string similar to Returns or sets the font family for the X axis labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisLabelFontSize">
            <summary>
              Looks up a localized string similar to Returns or sets the font size for the X axis labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisLabelHorizontalAlignment">
            <summary>
              Looks up a localized string similar to Gets or sets the horizontal alignment of X-axis labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisLabelLeftMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the left margin of labels on the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisLabelRightMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the right margin of labels on the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisLabelTextColor">
            <summary>
              Looks up a localized string similar to Gets or sets color of labels on the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisLabelTextStyle">
            <summary>
              Looks up a localized string similar to Returns or sets the font style for the X axis labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisLabelTopMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the top margin of labels on the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisLabelVerticalAlignment">
            <summary>
              Looks up a localized string similar to Gets or sets the vertical alignment of X-axis labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisLabelVisibility">
            <summary>
              Looks up a localized string similar to Gets or sets the visibility of X-axis labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisMajorStroke">
            <summary>
              Looks up a localized string similar to Gets or sets the color to apply to major gridlines along the X-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisMajorStrokeThickness">
            <summary>
              Looks up a localized string similar to Gets or sets the thickness to apply to major gridlines along the X-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisMinorInterval">
            <summary>
              Looks up a localized string similar to Gets or sets the frequency of displayed minor lines along the X-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisMinorStroke">
            <summary>
              Looks up a localized string similar to Gets or sets the color to apply to minor gridlines along the X-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisMinorStrokeThickness">
            <summary>
              Looks up a localized string similar to Gets or sets the thickness to apply to minor gridlines along the X-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisOverlap">
            <summary>
              Looks up a localized string similar to Gets or sets the amount of overlap between adjacent categories for the X-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisStrip">
            <summary>
              Looks up a localized string similar to Gets or sets the color to apply to stripes along the X-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisStroke">
            <summary>
              Looks up a localized string similar to Gets or sets the color to apply to the X-axis line..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisStrokeThickness">
            <summary>
              Looks up a localized string similar to Gets or sets the thickness to apply to the X-axis line..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisTickLength">
            <summary>
              Looks up a localized string similar to Gets or sets the length of tickmarks along the X-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisTickStroke">
            <summary>
              Looks up a localized string similar to Gets or sets the color to apply to tickmarks along the X-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisTickStrokeThickness">
            <summary>
              Looks up a localized string similar to Gets or sets the thickness to apply to tickmarks along the X-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisTitle">
            <summary>
              Looks up a localized string similar to Text to display below the X-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisTitleAlignment">
            <summary>
              Looks up a localized string similar to Gets or sets the horizontal alignment of the X-axis title..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisTitleAngle">
            <summary>
              Looks up a localized string similar to Gets or sets the angle of rotation for the X-axis title..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisTitleBottomMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the bottom margin of a title on the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisTitleFontFamily">
            <summary>
              Looks up a localized string similar to Returns or sets the font family for the X axis title..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisTitleFontSize">
            <summary>
              Looks up a localized string similar to Returns or sets the font size for the X axis title..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisTitleLeftMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the left margin of a title on the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisTitleMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the margin around a title on the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisTitleRightMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the right margin of a title on the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisTitleTextColor">
            <summary>
              Looks up a localized string similar to Gets or sets color of title on the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisTitleTextStyle">
            <summary>
              Looks up a localized string similar to Returns or sets the font style for the X axis title..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_XAxisTitleTopMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the top margin of a title on the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisActualMaximum">
            <summary>
              Looks up a localized string similar to Gets the current maximum value for the Y-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisActualMinimum">
            <summary>
              Looks up a localized string similar to Gets the current minimum value for the Y-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisExtent">
            <summary>
              Looks up a localized string similar to Gets or sets the distance between the Y-axis and the left edge of the chart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisInterval">
            <summary>
              Looks up a localized string similar to Gets or sets the distance between each label and grid line along the Y-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisInverted">
            <summary>
              Looks up a localized string similar to Gets or sets whether the direction of the Y-axis is inverted, placing minimum numeric value at the top of the axis instead of bottom.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisIsLogarithmic">
            <summary>
              Looks up a localized string similar to Gets or sets whether the Y-axis should use a logarithmic scale instead of a linear one..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisLabel">
            <summary>
              Looks up a localized string similar to Gets or sets the format for labels along the Y-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisLabelAngle">
            <summary>
              Looks up a localized string similar to Gets or sets the angle of rotation for labels along the Y-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisLabelBottomMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the bottom margin of labels on the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisLabelFontFamily">
            <summary>
              Looks up a localized string similar to Returns or sets the font family for the Y axis labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisLabelFontSize">
            <summary>
              Looks up a localized string similar to Returns or sets the font size for the Y axis labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisLabelHorizontalAlignment">
            <summary>
              Looks up a localized string similar to Gets or sets the horizontal alignment of Y-axis labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisLabelLeftMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the left margin of labels on the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisLabelRightMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the right margin of labels on the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisLabelTextColor">
            <summary>
              Looks up a localized string similar to Gets or sets color of labels on the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisLabelTextStyle">
            <summary>
              Looks up a localized string similar to Returns or sets the font style for the Y axis labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisLabelTopMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the top margin of labels on the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisLabelVerticalAlignment">
            <summary>
              Looks up a localized string similar to Gets or sets the vertical alignment of Y-axis labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisLabelVisibility">
            <summary>
              Looks up a localized string similar to Gets or sets the visibility of Y-axis labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisLogarithmBase">
            <summary>
              Looks up a localized string similar to Gets or sets the base value to use in the log function when mapping the position of data items along the Y-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisMajorStroke">
            <summary>
              Looks up a localized string similar to Gets or sets the color to apply to major gridlines along the Y-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisMajorStrokeThickness">
            <summary>
              Looks up a localized string similar to Gets or sets the thickness to apply to major gridlines along the Y-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisMaximumValue">
            <summary>
              Looks up a localized string similar to Gets or sets the data value corresponding to the maximum value of the Y-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisMinimumValue">
            <summary>
              Looks up a localized string similar to Gets or sets the data value corresponding to the minimum value of the Y-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisMinorInterval">
            <summary>
              Looks up a localized string similar to Gets or sets the frequency of displayed minor lines along the Y-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisMinorStroke">
            <summary>
              Looks up a localized string similar to Gets or sets the color to apply to minor gridlines along the Y-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisMinorStrokeThickness">
            <summary>
              Looks up a localized string similar to Gets or sets the thickness to apply to minor gridlines along the Y-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisStrip">
            <summary>
              Looks up a localized string similar to Gets or sets the color to apply to stripes along the Y-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisStroke">
            <summary>
              Looks up a localized string similar to Gets or sets the color to apply to the Y-axis line..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisStrokeThickness">
            <summary>
              Looks up a localized string similar to Gets or sets the thickness to apply to the Y-axis line..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisTickLength">
            <summary>
              Looks up a localized string similar to Gets or sets the length of tickmarks along the Y-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisTickStroke">
            <summary>
              Looks up a localized string similar to Gets or sets the color to apply to tickmarks along the Y-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisTickStrokeThickness">
            <summary>
              Looks up a localized string similar to Gets or sets the thickness to apply to tickmarks along the Y-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisTitle">
            <summary>
              Looks up a localized string similar to Text to display to the left of the Y-axis..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisTitleAlignment">
            <summary>
              Looks up a localized string similar to Gets or sets the vertical alignment of the Y-axis title..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisTitleAngle">
            <summary>
              Looks up a localized string similar to Gets or sets the angle of rotation for the Y-axis title..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisTitleBottomMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the bottom margin of a title on the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisTitleFontFamily">
            <summary>
              Looks up a localized string similar to Returns or sets the font family for the Y axis title..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisTitleFontSize">
            <summary>
              Looks up a localized string similar to Returns or sets the font size for the Y axis title..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisTitleLeftMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the left margin of a title on the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisTitleMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the margin around a title on the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisTitleRightMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the right margin of a title on the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisTitleTextColor">
            <summary>
              Looks up a localized string similar to Gets or sets color of title on the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisTitleTextStyle">
            <summary>
              Looks up a localized string similar to Returns or sets the font style for the Y axis title..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraCategoryChart_P_YAxisTitleTopMargin">
            <summary>
              Looks up a localized string similar to Gets or sets the top margin of a title on the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDataChart_E_TooltipShowing">
            <summary>
              Looks up a localized string similar to Occurs when the tooltip is about to be shown..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDataChart_P_About">
            <summary>
              Looks up a localized string similar to Display the about dialog..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDataChart_P_AlignsGridLinesToPixels">
            <summary>
              Looks up a localized string similar to Gets or sets a value indicating whether grid and tick lines are aligned to device pixels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDataChart_P_Axes">
            <summary>
              Looks up a localized string similar to Gets the current Chart object&apos;s child DataChartAxes..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDataChart_P_Brushes">
            <summary>
              Looks up a localized string similar to Gets or sets the Brushes property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDataChart_P_DefaultAxisMajorStroke">
            <summary>
              Looks up a localized string similar to Gets or sets the DefaultAxisMajorStroke property. The DefaultAxisMajorStroke property defines the brush which is used by the axes when no Axis.MajorStroke is set..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDataChart_P_DefaultAxisMinorStroke">
            <summary>
              Looks up a localized string similar to Gets or sets the DefaultAxisMinorStroke property. The DefaultAxisMinorStroke property defines the brush which is used by the axes when no MinorStroke is set..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDataChart_P_DefaultAxisStroke">
            <summary>
              Looks up a localized string similar to Gets or sets the DefaultAxisStroke property. The DefaultAxisStroke property defines the brush which is used by the axes when no Stroke is set..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDataChart_P_GridMode">
            <summary>
              Looks up a localized string similar to Gets or sets the GridMode property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDataChart_P_HorizontalZoomable">
            <summary>
              Looks up a localized string similar to Gets or sets horizontal zoomability of the current control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDataChart_P_IsHorizontalZoomEnabled">
            <summary>
              Looks up a localized string similar to Gets or sets horizontal zoomability of the current control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDataChart_P_IsSquare">
            <summary>
              Looks up a localized string similar to Gets or sets whether to use a square aspect ratio for the chart. This is locked to true for polar and radial charts..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDataChart_P_IsVerticalZoomEnabled">
            <summary>
              Looks up a localized string similar to Gets or sets vertical zoomability of the current control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDataChart_P_MarkerBrushes">
            <summary>
              Looks up a localized string similar to Gets or sets the MarkerBrushes property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDataChart_P_MarkerOutlines">
            <summary>
              Looks up a localized string similar to Gets or sets the MarkerOutlines property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDataChart_P_Outlines">
            <summary>
              Looks up a localized string similar to Gets or sets the Outlines property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDataChart_P_PlotAreaMarginBottom">
            <summary>
              Looks up a localized string similar to Margin applied below the plot area..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDataChart_P_PlotAreaMarginLeft">
            <summary>
              Looks up a localized string similar to Margin applied to the left of the plot area..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDataChart_P_PlotAreaMarginRight">
            <summary>
              Looks up a localized string similar to Margin applied to the right of the plot area..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDataChart_P_PlotAreaMarginTop">
            <summary>
              Looks up a localized string similar to Margin applied above the plot area..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDataChart_P_VerticalZoomable">
            <summary>
              Looks up a localized string similar to Gets or sets vertical zoomability of the current control.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDataChart_P_WindowScaleHorizontal">
            <summary>
              Looks up a localized string similar to A number between 0 and 1 determining the scale of the horizontal zoom. This property is effectively a shortcut to the Width of the WindowRect property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDataChart_P_WindowScaleVertical">
            <summary>
              Looks up a localized string similar to A number between 0 and 1 determining the scale of the vertical zoom. This property is effectively a shortcut to the Height of the WindowRect property..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDoughnutChart_E_HoleDimensionsChanged">
            <summary>
              Looks up a localized string similar to Fires when the dimensions of the UltraDoughnutChart are changed..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDoughnutChart_E_SliceClick">
            <summary>
              Looks up a localized string similar to Fires when a slice of this UltraDoughnutChart is clicked..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDoughnutChart_P_AllowSliceExplosion">
            <summary>
              Looks up a localized string similar to Gets or sets whether the slices can be exploded..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDoughnutChart_P_AllowSliceSelection">
            <summary>
              Looks up a localized string similar to Gets or sets whether the slices can be selected..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDoughnutChart_P_InnerExtent">
            <summary>
              Looks up a localized string similar to Gets or sets the inner extent of the doughnut chart. It is percent from the outer ring&apos;s radius..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDoughnutChart_P_IsSurfaceInteractionDisabled">
            <summary>
              Looks up a localized string similar to Gets or sets whether all surface interactions with the plot area should be disabled..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDoughnutChart_P_SelectedStyle">
            <summary>
              Looks up a localized string similar to Gets or sets the style used when a slice is selected..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraDoughnutChart_P_Series">
            <summary>
              Looks up a localized string similar to The RingSeriesCollection for this UltraDoughnutChart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_E_SliceClicked">
            <summary>
              Looks up a localized string similar to Raised when a slice is clicked..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_E_TooltipContentUpdating">
            <summary>
              Looks up a localized string similar to Occurs when the ToolTip for the UltraFunnelChart is updating the content to be rendered..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_AllowSliceSelection">
            <summary>
              Looks up a localized string similar to Gets or sets whether to allow slices to be selected..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_BottomEdgeWidth">
            <summary>
              Looks up a localized string similar to Gets or sets the percentage (from near 0 to 1) of space the bottom edge of the funnel should take..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_Brushes">
             <summary>
               Looks up a localized string similar to Gets or sets the Brushes that will be used for the slices fill color.
            The brushes property defines the palette from which automatically assigned series brushes are selected..
             </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_DataMember">
            <summary>
              Looks up a localized string similar to Gets or sets the data member of the data source from which the funnel chart&apos;s items collection is populated..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_DataSource">
            <summary>
              Looks up a localized string similar to Gets or sets the data source for the chart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_FontFamily">
            <summary>
              Looks up a localized string similar to Gets or sets the Font Family of the funnel chart labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_FontSize">
            <summary>
              Looks up a localized string similar to Gets or sets the Font Size of the funnel chart labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_FontStyle">
            <summary>
              Looks up a localized string similar to Gets or sets the Font Style of the funnel chart labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_FunnelSliceDisplay">
            <summary>
              Looks up a localized string similar to Gets or sets how the heights of the funnel slices should be configured..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_InnerLabelMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the InnerLabel mapping property for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_InnerLabelVisibility">
            <summary>
              Looks up a localized string similar to Gets or sets whether the inner labels are visible..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_IsInverted">
            <summary>
              Looks up a localized string similar to Gets or sets if the funnel should be rendered inverted..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_Legend">
            <summary>
              Looks up a localized string similar to Gets or sets the Legend to display for the chart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_LowerBezierControlPoint">
            <summary>
              Looks up a localized string similar to Gets or sets the lower control point if a Bezier curve is used to define the funnel..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_OuterLabelAlignment">
            <summary>
              Looks up a localized string similar to Gets or sets which side of the chart the outer labels should appear..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_OuterLabelMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the OuterLabel mapping property for the current series object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_OuterLabelTextColor">
            <summary>
              Looks up a localized string similar to Gets or sets the brush used for the outer labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_OuterLabelVisibility">
            <summary>
              Looks up a localized string similar to Gets or sets whether the outer labels are visible..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_Outlines">
             <summary>
               Looks up a localized string similar to Gets or sets the Brushes that will be used for the slices outline color.
            The outlines property defines the palette from which automatically assigned outlines are selected..
             </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_OutlineThickness">
            <summary>
              Looks up a localized string similar to Gets or sets the thickness of outline around slices..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_SelectedSliceStyle">
             <summary>
               Looks up a localized string similar to Gets or sets the style to use for selected slices.
            That can be used to set stroke (outline color), fill (background color) and opacity..
             </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_ShowDefaultTooltip">
            <summary>
              Looks up a localized string similar to Gets or sets whether or not the default tooltip for the funnel chart will be shown..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_TextColor">
            <summary>
              Looks up a localized string similar to Gets or sets the brush used for the inner labels..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_TransitionDuration">
            <summary>
              Looks up a localized string similar to Gets or sets how long the animations should take to run..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_UnselectedSliceStyle">
             <summary>
               Looks up a localized string similar to Gets or sets the style to use for unselected slices.
            That can be used to set stroke (outline color), fill (background color) and opacity..
             </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_UpperBezierControlPoint">
            <summary>
              Looks up a localized string similar to Gets or sets the upper control point if a Bezier curve is used to define the funnel..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_UseBezierCurve">
            <summary>
              Looks up a localized string similar to Gets or sets whether to use a Bezier curve to define the funnel..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_UseOuterLabelsForLegend">
            <summary>
              Looks up a localized string similar to Gets or sets whether to use the outer labels to identify the legend items..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_UseUnselectedStyle">
            <summary>
              Looks up a localized string similar to Gets or sets whether to use the unselected style on unselected slices..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraFunnelChart_P_ValueMemberPath">
            <summary>
              Looks up a localized string similar to Gets or sets the value member path for the funnel chart..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraItemLegend_P_About">
            <summary>
              Looks up a localized string similar to Display the about dialog..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraLegend_P_About">
            <summary>
              Looks up a localized string similar to Display the about dialog..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_UltraScaleLegend_P_About">
            <summary>
              Looks up a localized string similar to Display the about dialog..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ValueBrushScale_P_IsLogarithmic">
            <summary>
              Looks up a localized string similar to Gets or sets whether the scale is logarithmic..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ValueBrushScale_P_LogarithmBase">
            <summary>
              Looks up a localized string similar to Gets or sets the logarithm base for this scale..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ValueBrushScale_P_MaximumValue">
            <summary>
              Looks up a localized string similar to Gets or sets the maximum value for this scale..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ValueBrushScale_P_MinimumValue">
            <summary>
              Looks up a localized string similar to Gets or sets the minimum value for this scale..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ValueOverlay_E_AxisAnnotationFormatLabel">
            <summary>
              Looks up a localized string similar to Occurs prior to rendering to provide formatting for the axis annotation..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_ValueOverlay_P_Value">
            <summary>
              Looks up a localized string similar to Gets or sets the value of the overlay..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_VerticalAnchoredCategorySeries_P_XAxis">
            <summary>
              Looks up a localized string similar to Gets or sets the effective x-axis for the current CategorySeries object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_VerticalAnchoredCategorySeries_P_YAxis">
            <summary>
              Looks up a localized string similar to Gets or sets the effective y-axis for the current CategorySeries object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_VerticalStackedSeriesBase_P_XAxis">
            <summary>
              Looks up a localized string similar to Gets or sets the effective x-axis for the current CategorySeries object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_VerticalStackedSeriesBase_P_YAxis">
            <summary>
              Looks up a localized string similar to Gets or sets the effective y-axis for the current CategorySeries object..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_WaterfallSeries_P_NegativeBrush">
            <summary>
              Looks up a localized string similar to Gets or sets the brush to use for negative portions of the series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_WaterfallSeries_P_NegativeOutline">
            <summary>
              Looks up a localized string similar to Brush to use for outlining negative elements in the waterfall series..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_WaterfallSeries_P_RadiusX">
            <summary>
              Looks up a localized string similar to Gets or sets the x-radius of the ellipse that is used to round the corners of the column..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_WaterfallSeries_P_RadiusY">
            <summary>
              Looks up a localized string similar to Gets or sets the y-radius of the ellipse that is used to round the corners of the column..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.LD_WilliamsPercentRIndicator_P_Period">
            <summary>
              Looks up a localized string similar to Gets or sets the moving average period for the current StandardDeviationIndicator object. The typical, and initial, value for Williams %R periods is 14..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.PropertyChanged_Event">
            <summary>
              Looks up a localized string similar to Occurs when a property value changes..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.PropertyUpdated_Event">
            <summary>
              Looks up a localized string similar to Occurs when a property value changes..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.Series_Opacity_ArgumentException">
            <summary>
              Looks up a localized string similar to value must be between 0.0 and 1.0.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WindowsForms.strings.SetDatabinding_ArgumentException">
            <summary>
              Looks up a localized string similar to DataSource must implement an IBindingList, IListSource, IList, or an IEnumerable..
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TooltipContentEventArgsBase.CurrentContent">
            <summary>
             Gets or sets the content that will be displayed in the tooltip.
            </summary>
            <remarks>If leaved unchanged the default tooltip will be shown.</remarks>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TooltipContentEventArgsBase.UpdateInfo">
            <summary>
            Gets a cache for storing objects between tooltip content updates.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.PieChartTooltipContentEventArgs">
            <summary>
            The event arguments for the TooltipContentUpdating event of the <see cref="T:Infragistics.Win.DataVisualization.UltraPieChart"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartTooltipContentEventArgs.DataContext">
            <summary>
            Provides information about the slice.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.DoughnutChartTooltipContentEventArgs">
            <summary>
            The event arguments for the TooltipContentUpdating event of the <see cref="T:Infragistics.Win.DataVisualization.UltraDoughnutChart"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.DoughnutChartTooltipContentEventArgs.DataContext">
            <summary>
            Provides information about the slice.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.FunnelChartTooltipContentEventArgs">
            <summary>
            The event arguments for the TooltipContentUpdating event of the <see cref="T:Infragistics.Win.DataVisualization.UltraFunnelChart"/>
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FunnelChartTooltipContentEventArgs.DataContext">
            <summary>
            Represents contextual data for the funnel chart.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.SliceDataContext">
            <summary>
            Provides information about the slice in the TooltipContentUpdating event.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SliceDataContext.IsOthersSlice">
            <summary>
            Returns whether or not the slice is the Others slice.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SliceDataContext.Item">
            <summary>
            The underlying item from the data source.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SliceDataContext.ItemBrush">
            <summary>
            The fill color of the slice.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SliceDataContext.Outline">
            <summary>
            The outline of the slice.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.PieChartDataContext">
            <summary>
            Provides information about the slice in the TooltipContentUpdating event for the <see cref="T:Infragistics.Win.DataVisualization.UltraPieChart"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieChartDataContext.PieChart">
            <summary>
            The <see cref="T:Infragistics.Win.DataVisualization.UltraPieChart"/> for which this event is fired.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.DoughnutChartDataContext">
            <summary>
            Provides information about the slice in the TooltipContentUpdating event for the <see cref="T:Infragistics.Win.DataVisualization.UltraDoughnutChart"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.DoughnutChartDataContext.RingSeries">
            <summary>
            The <see cref="T:Infragistics.Win.DataVisualization.RingSeriesBase"/> for which this event is fired.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.AbsoluteVolumeOscillatorIndicator">
            <summary>
            Represents a UltraDataChart Absolute Volume Oscillator indicator series.
            </summary>
            <remarks>
            Default required members: Volume
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AbsoluteVolumeOscillatorIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.AbsoluteVolumeOscillatorIndicator"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AbsoluteVolumeOscillatorIndicator.LongPeriod">
            <summary>
            Gets or sets the short moving average period for the current AbsoluteVolumeOscillatorIndicator object.
            <remarks>
            The typical, and initial, value for long AVO periods is 30.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AbsoluteVolumeOscillatorIndicator.ShouldSerializeLongPeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AbsoluteVolumeOscillatorIndicator.LongPeriod"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AbsoluteVolumeOscillatorIndicator.LongPeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AbsoluteVolumeOscillatorIndicator.ResetLongPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AbsoluteVolumeOscillatorIndicator.LongPeriod"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AbsoluteVolumeOscillatorIndicator.LongPeriod"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AbsoluteVolumeOscillatorIndicator.ShortPeriod">
            <summary>
            Gets or sets the short moving average period for the current AbsoluteVolumeOscillatorIndicator object.
            <remarks>
            The typical, and initial, value for short AVO periods is 10.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AbsoluteVolumeOscillatorIndicator.ShouldSerializeShortPeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AbsoluteVolumeOscillatorIndicator.ShortPeriod"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AbsoluteVolumeOscillatorIndicator.ShortPeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AbsoluteVolumeOscillatorIndicator.ResetShortPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AbsoluteVolumeOscillatorIndicator.ShortPeriod"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AbsoluteVolumeOscillatorIndicator.ShortPeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AbsoluteVolumeOscillatorIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.AccumulationDistributionIndicator">
            <summary>
            Represents a UltraDataChart Accumulation/Distribution indicator series.
            </summary>
            <remarks>
            Default required members: Close, Low, High, Volume
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AccumulationDistributionIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.AccumulationDistributionIndicator"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AccumulationDistributionIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.AnchoredCategorySeries">
            <summary>
            Represents the base class for all UltraDataChart anchored category/value series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ActualTrendLineBrush">
            <summary>
            Gets the effective TrendLineBrush for this series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ConsolidatedItemHitTestBehavior">
            <summary>
            Determines the item returned in hit-testing when the pointer is over an object which represents several consolidated items.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ShouldSerializeConsolidatedItemHitTestBehavior">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ConsolidatedItemHitTestBehavior"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ConsolidatedItemHitTestBehavior"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ResetConsolidatedItemHitTestBehavior">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ConsolidatedItemHitTestBehavior"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ConsolidatedItemHitTestBehavior"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.MarkerCollisionAvoidance">
            <summary>
            The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ShouldSerializeMarkerCollisionAvoidance">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.MarkerCollisionAvoidance"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.MarkerCollisionAvoidance"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ResetMarkerCollisionAvoidance">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.MarkerCollisionAvoidance"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.MarkerCollisionAvoidance"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.TrendLineBrush">
            <summary>
            Gets or sets the brush to use to draw the trend line.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ShouldSerializeTrendLineBrush">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.TrendLineBrush"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.TrendLineBrush"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ResetTrendLineBrush">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.TrendLineBrush"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.TrendLineBrush"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.TrendLinePeriod">
            <summary>
            Gets or sets the trend line period for the current series.
            </summary>
            <remarks>
            The typical, and initial, value for trend line period is 7.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ShouldSerializeTrendLinePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.TrendLinePeriod"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.TrendLinePeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ResetTrendLinePeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.TrendLinePeriod"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.TrendLinePeriod"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.TrendLineThickness">
            <summary>
            Gets or sets the thickness of the current series object's trend line.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ShouldSerializeTrendLineThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.TrendLineThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.TrendLineThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ResetTrendLineThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.TrendLineThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.TrendLineThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.TrendLineType">
            <summary>
            Gets or sets the trend type for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ShouldSerializeTrendLineType">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.TrendLineType"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.TrendLineType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ResetTrendLineType">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.TrendLineType"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.TrendLineType"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ValueMemberPath">
            <summary>
            Gets or sets the value mapping property for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ShouldSerializeValueMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ValueMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ValueMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ResetValueMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ValueMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredCategorySeries.ValueMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredCategorySeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.AnchoredRadialSeries">
            <summary>
            Represents the base class for all UltraDataChart anchored radial category series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.ActualTrendLineBrush">
            <summary>
            Gets the effective TrendLineBrush for this series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLineBrush">
            <summary>
            Gets or sets the brush that specifies how to the current series
            object's Trend line is drawn.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredRadialSeries.ShouldSerializeTrendLineBrush">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLineBrush"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLineBrush"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredRadialSeries.ResetTrendLineBrush">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLineBrush"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLineBrush"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLinePeriod">
            <summary>
            Gets or sets the trend line period for the current series.
            <remarks>
            The typical, and initial, value for bollinger band periods is 20.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredRadialSeries.ShouldSerializeTrendLinePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLinePeriod"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLinePeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredRadialSeries.ResetTrendLinePeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLinePeriod"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLinePeriod"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLineThickness">
            <summary>
            Gets or sets the thickness of the current series object's trend line.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredRadialSeries.ShouldSerializeTrendLineThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLineThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLineThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredRadialSeries.ResetTrendLineThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLineThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLineThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLineType">
            <summary>
            Gets or sets the trend type for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredRadialSeries.ShouldSerializeTrendLineType">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLineType"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLineType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredRadialSeries.ResetTrendLineType">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLineType"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLineType"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLineZIndex">
            <summary>
            Sets or Gets the Z index of the trendline.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredRadialSeries.ShouldSerializeTrendLineZIndex">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLineZIndex"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLineZIndex"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredRadialSeries.ResetTrendLineZIndex">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLineZIndex"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.TrendLineZIndex"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.ValueMemberPath">
            <summary>
            Gets or sets the item path that provides the values for the current series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredRadialSeries.ShouldSerializeValueMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.ValueMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.ValueMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredRadialSeries.ResetValueMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.ValueMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnchoredRadialSeries.ValueMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnchoredRadialSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.AnnotationLayer">
            <summary>
            Represents the base class for annotation layer types. Annotations will usually disable some of the default hover/touch behaviors of the chart when they are introduced to the series collection.
            In return they provide some valuable information as the cursor is moved by hovering over the chart, or performing a press-hold-drag interaction in touch mode.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AnnotationLayer.CursorPosition">
            <summary>
            Gets or sets the world position to use instead of the pointer position for this annotation layer. If you set this value, rather than responding to the pointer, this layer will be fixed on the provided world position.
            A world position has x and y values that range from 0 to 1 that represent the global position of the cursor relative to the entire ranges of the axes. The default of (NaN, NaN) means that the layer should react to pointer movement.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnnotationLayer.ShouldSerializeCursorPosition">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AnnotationLayer.CursorPosition"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnnotationLayer.CursorPosition"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnnotationLayer.ResetCursorPosition">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AnnotationLayer.CursorPosition"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnnotationLayer.CursorPosition"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AnnotationLayer.IsDefaultCrosshairDisabled">
            <summary>
            Gets or sets whether the series viewer's default crosshair should be disabled by the presence of this layer.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnnotationLayer.ShouldSerializeIsDefaultCrosshairDisabled">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AnnotationLayer.IsDefaultCrosshairDisabled"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnnotationLayer.IsDefaultCrosshairDisabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnnotationLayer.ResetIsDefaultCrosshairDisabled">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AnnotationLayer.IsDefaultCrosshairDisabled"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnnotationLayer.IsDefaultCrosshairDisabled"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AnnotationLayer.ShouldRenderAsOverlay">
            <summary>
            Gets or sets whether this layer renders as an overlay or not.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnnotationLayer.ShouldSerializeShouldRenderAsOverlay">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AnnotationLayer.ShouldRenderAsOverlay"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnnotationLayer.ShouldRenderAsOverlay"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnnotationLayer.ResetShouldRenderAsOverlay">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AnnotationLayer.ShouldRenderAsOverlay"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnnotationLayer.ShouldRenderAsOverlay"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AnnotationLayer.UseIndex">
            <summary>
            Gets or sets whether this series should take up an index for auto brush coloring.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnnotationLayer.ShouldSerializeUseIndex">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AnnotationLayer.UseIndex"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnnotationLayer.UseIndex"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnnotationLayer.ResetUseIndex">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AnnotationLayer.UseIndex"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnnotationLayer.UseIndex"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AnnotationLayer.UseLegend">
            <summary>
            Gets or sets whether this series interacts with the chart legend.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnnotationLayer.ShouldSerializeUseLegend">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AnnotationLayer.UseLegend"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnnotationLayer.UseLegend"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnnotationLayer.ResetUseLegend">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AnnotationLayer.UseLegend"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AnnotationLayer.UseLegend"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AnnotationLayer.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.AreaFragment">
            <summary>
            Represents one part of a StackedAreaSeries.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AreaFragment.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.AreaSeries">
            <summary>
            Represents a UltraDataChart area series.
            <para>Displays trend over time or ordered categories.</para>
            <para>Useful when there are many data points and the order is important.</para>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AreaSeries.#ctor">
            <summary>
            Initializes a new instance of the AreaSeries class. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AreaSeries.UnknownValuePlotting">
            <summary>
            Determines how unknown values will be plotted on the chart.
            </summary>
            <remarks>
            Null and Double.NaN are two examples of unknown values.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AreaSeries.ShouldSerializeUnknownValuePlotting">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AreaSeries.UnknownValuePlotting"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AreaSeries.UnknownValuePlotting"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AreaSeries.ResetUnknownValuePlotting">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AreaSeries.UnknownValuePlotting"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AreaSeries.UnknownValuePlotting"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AreaSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.AssigningCategoryMarkerStyleEventArgs">
            <summary>
            Represents event arguments class for the AssigningCategoryStyleEvent
            </summary>[EditorBrowsable(AssigningCategoryMarkerStyleEvent.Never)]
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AssigningCategoryMarkerStyleEventArgs.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.AssigningCategoryMarkerStyleEventArgs"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.AssigningCategoryMarkerStyleEventHandler">
            <summary>
            Represents delegate for the AssigningCategoryMarkerStyleEvent
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgs">
            <summary>
            Represents event arguments class for the AssigningCategoryStyleEvent
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgs.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgs"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgs.RadiusX">
            <summary> Gets or sets corner radius X to use for the current item, if applicable. </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgs.RadiusY">
            <summary> Gets or sets corner radius Y to use for the current item, if applicable. </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgs.StrokeDashArray">
            <summary> Gets or sets stroke dash array to use for the current item.</summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgs.StrokeDashCap">
            <summary> Gets or sets stroke dash cap to use for the current item. </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgs.StrokeThickness">
            <summary> Gets or sets stroke thickness to use for the current item.</summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgsBase">
            <summary>
            Represents event arguments base class for the AssigningCategoryStyleEventArgsBase
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgsBase.EndDate">
            <summary> Gets the end date</summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgsBase.EndIndex">
            <summary> Gets the end index</summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgsBase.Fill">
            <summary> Gets or sets fill brush to use for the current item.</summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgsBase.GetItems">
            <summary> Gets a function that will return the items associated with this event.</summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgsBase.HasDateRange">
            <summary> Gets if this event has a valid date range</summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgsBase.HighlightingHandled">
            <summary> Gets or sets if highlighting was handled by this event handler, and whether internal highlighting logic should be skipped.</summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgsBase.HighlightingInfo">
            <summary> Gets or sets highlighting info </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgsBase.IsNegativeShape">
            <summary>
            Gets if the current shape is identified as a negative shape if this series supports discrete negative shapes.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgsBase.IsThumbnail">
            <summary>
            Gets if the current event is being raised for the thumbnail image.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgsBase.MaxAllSeriesHighlightingProgress">
            <summary> Gets the max highlighting progress from all series.</summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgsBase.Opacity">
            <summary> Gets or sets opacity to use for the current item.</summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgsBase.StartDate">
            <summary> Gets the start date</summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgsBase.StartIndex">
            <summary> Gets the start index</summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgsBase.Stroke">
            <summary> Gets or sets stroke to use for the current item.</summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgsBase.SumAllSeriesHighlightingProgress">
            <summary> Gets the sum of highlighting progress from all series.</summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventHandler">
            <summary>
            Represents delegate for the AssigningCategoryStyleEvent
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.AverageDirectionalIndexIndicator">
            <summary>
            Represents a UltraDataChart Average Directional indicator series.
            </summary>
            <remarks>
            Default required members: High, Low, Close
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AverageDirectionalIndexIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.AverageDirectionalIndexIndicator"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AverageDirectionalIndexIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current AverageDirectionalIndexIndicator object.
            <remarks>
            The typical, and initial, value for AverageDirectionalIndexIndicator periods is 14.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AverageDirectionalIndexIndicator.ShouldSerializePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AverageDirectionalIndexIndicator.Period"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AverageDirectionalIndexIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AverageDirectionalIndexIndicator.ResetPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AverageDirectionalIndexIndicator.Period"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AverageDirectionalIndexIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AverageDirectionalIndexIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.AverageTrueRangeIndicator">
            <summary>
            Represents a UltraDataChart Average True Range indicator series.
            </summary>
            <remarks>
            Default required members: High, Low, Close
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AverageTrueRangeIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.AverageTrueRangeIndicator"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AverageTrueRangeIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current AverageTrueRangeSeries object.
            <remarks>
            The typical, and initial, value for AverageTrueRange periods is 14.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AverageTrueRangeIndicator.ShouldSerializePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AverageTrueRangeIndicator.Period"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AverageTrueRangeIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AverageTrueRangeIndicator.ResetPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AverageTrueRangeIndicator.Period"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AverageTrueRangeIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AverageTrueRangeIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.AxisAnnotation">
            <summary>
            Represents an axis annotation
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotation.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.AxisAnnotation"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AxisAnnotation.Background">
            <summary>
            Gets or sets the background to use for tha axis annotation box.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotation.ShouldSerializeBackground">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.Background"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.Background"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotation.ResetBackground">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.Background"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.Background"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AxisAnnotation.BackgroundPaddingBottom">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotation.ShouldSerializeBackgroundPaddingBottom">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.BackgroundPaddingBottom"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.BackgroundPaddingBottom"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotation.ResetBackgroundPaddingBottom">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.BackgroundPaddingBottom"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.BackgroundPaddingBottom"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AxisAnnotation.BackgroundPaddingLeft">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotation.ShouldSerializeBackgroundPaddingLeft">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.BackgroundPaddingLeft"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.BackgroundPaddingLeft"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotation.ResetBackgroundPaddingLeft">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.BackgroundPaddingLeft"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.BackgroundPaddingLeft"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AxisAnnotation.BackgroundPaddingRight">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotation.ShouldSerializeBackgroundPaddingRight">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.BackgroundPaddingRight"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.BackgroundPaddingRight"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotation.ResetBackgroundPaddingRight">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.BackgroundPaddingRight"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.BackgroundPaddingRight"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AxisAnnotation.BackgroundPaddingTop">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotation.ShouldSerializeBackgroundPaddingTop">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.BackgroundPaddingTop"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.BackgroundPaddingTop"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotation.ResetBackgroundPaddingTop">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.BackgroundPaddingTop"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.BackgroundPaddingTop"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AxisAnnotation.Outline">
            <summary>
            Gets or sets the Outline to use for tha axis annotation box.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotation.ShouldSerializeOutline">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.Outline"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.Outline"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotation.ResetOutline">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.Outline"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.Outline"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AxisAnnotation.StrokeThickness">
            <summary>
            Gets or sets the border stroke thickness to use for tha axis annotation box.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotation.ShouldSerializeStrokeThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.StrokeThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.StrokeThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotation.ResetStrokeThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.StrokeThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.StrokeThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AxisAnnotation.Text">
            <summary>
            Gets or sets the text that should be displayed for the annotation. Leave null to display the value automatically.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotation.ShouldSerializeText">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.Text"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.Text"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotation.ResetText">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.Text"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.Text"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AxisAnnotation.TextColor">
            <summary>
            Gets or sets the color to use for the text in the annotation.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotation.ShouldSerializeTextColor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.TextColor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.TextColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotation.ResetTextColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.TextColor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.TextColor"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AxisAnnotation.Value">
            <summary>
            Gets or sets the value at which this annotation is displayed on the axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotation.ShouldSerializeValue">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.Value"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.Value"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotation.ResetValue">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.Value"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.AxisAnnotation.Value"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotation.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotation.OnPropertyChanged(System.String)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.AxisAnnotation.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property that was changed</param>
            <seealso cref="T:System.ComponentModel.PropertyChangedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.AxisAnnotation.PropertyChanged"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.AxisAnnotation.PropertyChanged">
            <summary>
            Event raised when a property value is changed.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotationCollection.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.AxisAnnotationCollection"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotationCollection.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisAnnotationCollection.OnCollectionResetting(System.EventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.AxisAnnotationCollection.CollectionResetting"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:System.EventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.AxisAnnotationCollection.CollectionResetting"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.AxisAnnotationCollection.CollectionResetting">
            <summary>
            CollectionResetting is raised before the collection reset occurs.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.AxisLabelsLocation">
            <summary>
            Describes available locations of the axis labels in the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.AxisLabelsLocation.OutsideTop">
            <summary>
            Places the axis labels at the top, outside of the plotting area.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.AxisLabelsLocation.OutsideBottom">
            <summary>
            Places the axis labels at the bottom, outside of the plotting area
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.AxisLabelsLocation.OutsideLeft">
            <summary>
            Places the axis labels to the left, outside of the plotting area.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.AxisLabelsLocation.OutsideRight">
            <summary>
            Places the axis labels to the right, outside of the plotting area.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.AxisLabelsLocation.InsideTop">
            <summary>
            Places the axis labels inside the plotting area above the axis line.
            </summary>
            <remarks>
            CrossingAxis should be set for this setting to take effect.
            </remarks>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.AxisLabelsLocation.InsideBottom">
            <summary>
            Places the axis labels inside the plotting area below the axis line.
            </summary>
            <remarks>
            CrossingAxis should be set for this setting to take effect.
            </remarks>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.AxisLabelsLocation.InsideLeft">
            <summary>
            Places the axis labels inside the plotting area and to the left of the axis line.
            </summary>
            <remarks>
            CrossingAxis should be set for this setting to take effect.
            </remarks>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.AxisLabelsLocation.InsideRight">
            <summary>
            Places the axis labels inside the plotting area and to the right of the axis line.
            </summary>
            <remarks>
            CrossingAxis should be set for this setting to take effect.
            </remarks>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.AxisOrientation">
            <summary>
            Describes available orientations for an axis.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.AxisOrientation.Horizontal">
            <summary>
            Specifies a horizontal axis.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.AxisOrientation.Vertical">
            <summary>
            Specifies a vertical axis.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.AxisOrientation.Angular">
            <summary>
            Specifies an angular axis used by the polar series.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.AxisOrientation.Radial">
            <summary>
            Specifies a radial axis used by radial series.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.AxisRangeChangedEventArgs">
            <summary>
            Provides data for Axis RangeChanged events. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisRangeChangedEventArgs.#ctor">
            <summary>
            Initialises an AxisRangeChangedEventArgs object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.AxisRangeChangedEventArgs.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initialises an AxisRangeChangedEventArgs object.
            </summary>
            <param name="oldMinimumValue">The axis minimum value before the range changed.</param>
            <param name="minimumValue">The axis minimum value after the range changed.</param>
            <param name="oldMaximumValue">The axis maximum value before the range changed.</param>
            <param name="maximumValue">The axis minimum value after the range changed.</param>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AxisRangeChangedEventArgs.MaximumValue">
            <summary>
            Gets the maximum value after the range changed. The reported maximum is the effective,
            not the set value.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AxisRangeChangedEventArgs.MinimumValue">
            <summary>
            Gets the minimum value after the range changed. The reported minimum is the effective,
            not the set value.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AxisRangeChangedEventArgs.OldMaximumValue">
            <summary>
            Gets the maximum value before the range changed. The reported maximum is the effective,
            not the set value.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.AxisRangeChangedEventArgs.OldMinimumValue">
            <summary>
            Gets the minimum value before the range changed. The reported minimum is the effective,
            not the set value.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.AxisRangeChangedEventHandler">
            <summary>
            Represents the method that will handle Axis RangeChanged events.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.AxisTitlePosition">
            <summary>
            Describes available positions for axis title in respect to axis labels
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.AxisTitlePosition.Auto">
            <summary> 
            Displays the axis title in automatically selected position based on orientation and location of the axis:
            <para/> - left title position for vertical axis located on left of the chart, 
            <para/> - right title position for vertical axis located on right of the chart, 
            <para/> - top title position for horizontal axis located on top of the chart,
            <para/> - bottom title position for horizontal axis located on bottom of the chart,
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.AxisTitlePosition.Left">
            <summary> 
            Displays the axis title to the left of labels on vertical axis
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.AxisTitlePosition.Right">
            <summary> 
            Displays the axis title to the right of labels on vertical axis
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.AxisTitlePosition.Top">
            <summary> 
            Displays the axis title on top of labels on horizontal axis
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.AxisTitlePosition.Bottom">
            <summary> 
            Displays the axis title on bottom of labels on horizontal axis
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.BarFragment">
            <summary>
            Represents one part of a StackedBarSeries.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.BarFragment.XAxis">
            <summary>
            The X-Axis for this BarFragment.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.BarFragment.YAxis">
            <summary>
            The Y-Axis for this BarFragment.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BarFragment.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.BarSeries">
            <summary>
            Represents a UltraDataChart bar series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BarSeries.#ctor">
            <summary>
            Initializes a new instance of the BarSeries class. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.BarSeries.RadiusX">
            <summary>
            Gets or sets the x-radius of the ellipse that is used to round the corners of the bar.
            </summary> 
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BarSeries.ShouldSerializeRadiusX">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.BarSeries.RadiusX"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.BarSeries.RadiusX"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BarSeries.ResetRadiusX">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.BarSeries.RadiusX"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.BarSeries.RadiusX"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.BarSeries.RadiusY">
            <summary>
            Gets or sets the y-radius of the ellipse that is used to round the corners of the bar.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BarSeries.ShouldSerializeRadiusY">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.BarSeries.RadiusY"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.BarSeries.RadiusY"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BarSeries.ResetRadiusY">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.BarSeries.RadiusY"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.BarSeries.RadiusY"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BarSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.BollingerBandsOverlay">
            <summary>
            Represents a UltraDataChart Bollinger Bands financial overlay series.
            </summary>
            <remarks>
            Default required members: High, Low, Close
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BollingerBandsOverlay.#ctor">
            <summary>
            Initializes a new instance of the BollingerBandsOverlay class. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.BollingerBandsOverlay.Multiplier">
            <summary>
            Gets or sets the moving average period for the current BollingerBandOverlay object.
            <remarks>
            The typical, and initial, value for Bollinger band multipliers is 2.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BollingerBandsOverlay.ShouldSerializeMultiplier">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.BollingerBandsOverlay.Multiplier"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.BollingerBandsOverlay.Multiplier"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BollingerBandsOverlay.ResetMultiplier">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.BollingerBandsOverlay.Multiplier"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.BollingerBandsOverlay.Multiplier"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.BollingerBandsOverlay.Period">
            <summary>
            Gets or sets the moving average period for the current BollingerBandOverlay object.
            <remarks>
            The typical, and initial, value for Bollinger band periods is 14.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BollingerBandsOverlay.ShouldSerializePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.BollingerBandsOverlay.Period"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.BollingerBandsOverlay.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BollingerBandsOverlay.ResetPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.BollingerBandsOverlay.Period"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.BollingerBandsOverlay.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BollingerBandsOverlay.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.BollingerBandWidthIndicator">
            <summary>
            Represents a UltraDataChart Bollinger Bandwidth indicator series.
            </summary>
            <remarks>
            Represents the normalized width of the Bollinger bands for each provided value.
            For more info see: <see cref="T:Infragistics.Win.DataVisualization.BollingerBandsOverlay"/>
            <para>
            Default required members: High, Low, Close
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BollingerBandWidthIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.BollingerBandWidthIndicator"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.BollingerBandWidthIndicator.Multiplier">
            <summary>
            Gets or sets the multiplier for the Bollinger Band width.
            <remarks>
            The typical, and initial, value for Bollinger Band width multiplier is 2.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BollingerBandWidthIndicator.ShouldSerializeMultiplier">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.BollingerBandWidthIndicator.Multiplier"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.BollingerBandWidthIndicator.Multiplier"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BollingerBandWidthIndicator.ResetMultiplier">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.BollingerBandWidthIndicator.Multiplier"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.BollingerBandWidthIndicator.Multiplier"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.BollingerBandWidthIndicator.Period">
            <summary>
            Gets or sets the moving average period for the Bollinger Band Width Indicator.
            <remarks>
            The typical, and initial, value for CCI periods is 20.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BollingerBandWidthIndicator.ShouldSerializePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.BollingerBandWidthIndicator.Period"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.BollingerBandWidthIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BollingerBandWidthIndicator.ResetPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.BollingerBandWidthIndicator.Period"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.BollingerBandWidthIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BollingerBandWidthIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.BrushSelectionMode">
            <summary>
            Describes available behaviors of selecting a brush from a brush collection.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.BrushSelectionMode.Select">
            <summary>
            alternates between brushes sequentially.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.BrushSelectionMode.Interpolate">
            <summary>
            Uses index-based interpolation.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.BubbleSeries">
            <summary>
            Represents a UltraDataChart bubble series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BubbleSeries.#ctor">
            <summary>
            Initializes a new instance of the BubbleSeries class. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.BubbleSeries.FillMemberPath">
            <summary>
            Gets or sets the fill mapping property for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BubbleSeries.ShouldSerializeFillMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.BubbleSeries.FillMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.BubbleSeries.FillMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BubbleSeries.ResetFillMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.BubbleSeries.FillMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.BubbleSeries.FillMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.BubbleSeries.FillScale">
            <summary>
            Gets or sets the brush scale for the marker brush.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BubbleSeries.ShouldSerializeFillScale">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.BubbleSeries.FillScale"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.BubbleSeries.FillScale"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BubbleSeries.ResetFillScale">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.BubbleSeries.FillScale"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.BubbleSeries.FillScale"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.BubbleSeries.LabelMemberPath">
            <summary>
            Gets or sets the Label mapping property for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BubbleSeries.ShouldSerializeLabelMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.BubbleSeries.LabelMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.BubbleSeries.LabelMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BubbleSeries.ResetLabelMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.BubbleSeries.LabelMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.BubbleSeries.LabelMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.BubbleSeries.RadiusMemberPath">
            <summary>
            Gets or sets the radius mapping property for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BubbleSeries.ShouldSerializeRadiusMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.BubbleSeries.RadiusMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.BubbleSeries.RadiusMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BubbleSeries.ResetRadiusMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.BubbleSeries.RadiusMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.BubbleSeries.RadiusMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.BubbleSeries.RadiusScale">
            <summary>
            Gets or sets the radius size scale for the bubbles.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BubbleSeries.ShouldSerializeRadiusScale">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.BubbleSeries.RadiusScale"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.BubbleSeries.RadiusScale"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BubbleSeries.ResetRadiusScale">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.BubbleSeries.RadiusScale"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.BubbleSeries.RadiusScale"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.BubbleSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CalloutAnnotation">
            <summary>
            Represents a callout annotation
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.CalloutAnnotation"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Background">
            <summary>
            Gets or sets the background to use for tha axis annotation box.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ShouldSerializeBackground">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Background"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Background"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ResetBackground">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Background"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Background"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutAnnotation.BackgroundPaddingBottom">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ShouldSerializeBackgroundPaddingBottom">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.BackgroundPaddingBottom"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.BackgroundPaddingBottom"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ResetBackgroundPaddingBottom">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.BackgroundPaddingBottom"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.BackgroundPaddingBottom"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutAnnotation.BackgroundPaddingLeft">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ShouldSerializeBackgroundPaddingLeft">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.BackgroundPaddingLeft"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.BackgroundPaddingLeft"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ResetBackgroundPaddingLeft">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.BackgroundPaddingLeft"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.BackgroundPaddingLeft"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutAnnotation.BackgroundPaddingRight">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ShouldSerializeBackgroundPaddingRight">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.BackgroundPaddingRight"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.BackgroundPaddingRight"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ResetBackgroundPaddingRight">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.BackgroundPaddingRight"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.BackgroundPaddingRight"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutAnnotation.BackgroundPaddingTop">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ShouldSerializeBackgroundPaddingTop">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.BackgroundPaddingTop"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.BackgroundPaddingTop"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ResetBackgroundPaddingTop">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.BackgroundPaddingTop"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.BackgroundPaddingTop"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Content">
            <summary>
            Gets or sets the Content that should be annotated. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ShouldSerializeContent">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Content"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Content"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ResetContent">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Content"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Content"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Key">
            <summary>
            Gets or sets the Key that should be annotated. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ShouldSerializeKey">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Key"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Key"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ResetKey">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Key"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Key"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutAnnotation.LeaderBrush">
            <summary>
            Gets or sets the LeaderBrush to use for tha axis annotation box.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ShouldSerializeLeaderBrush">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.LeaderBrush"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.LeaderBrush"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ResetLeaderBrush">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.LeaderBrush"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.LeaderBrush"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Outline">
            <summary>
            Gets or sets the Outline to use for tha axis annotation box.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ShouldSerializeOutline">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Outline"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Outline"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ResetOutline">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Outline"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Outline"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Series">
            <summary>
            Gets or sets the series to which the callout pertains to. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ShouldSerializeSeries">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Series"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Series"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ResetSeries">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Series"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Series"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutAnnotation.StrokeThickness">
            <summary>
            Gets or sets the border stroke thickness to use for tha axis annotation box.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ShouldSerializeStrokeThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.StrokeThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.StrokeThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ResetStrokeThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.StrokeThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.StrokeThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Text">
            <summary>
            Gets or sets the text that should be displayed for the annotation. Leave null to display the value automatically.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ShouldSerializeText">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Text"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Text"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ResetText">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Text"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.Text"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutAnnotation.TextColor">
            <summary>
            Gets or sets the color to use for the text in the annotation.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ShouldSerializeTextColor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.TextColor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.TextColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ResetTextColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.TextColor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.TextColor"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutAnnotation.XValue">
            <summary>
            Gets or sets the XValue at which this annotation is displayed on the axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ShouldSerializeXValue">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.XValue"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.XValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ResetXValue">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.XValue"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.XValue"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutAnnotation.YValue">
            <summary>
            Gets or sets the YValue at which this annotation is displayed on the axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ShouldSerializeYValue">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.YValue"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.YValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.ResetYValue">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.YValue"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutAnnotation.YValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotation.OnPropertyChanged(System.String)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.CalloutAnnotation.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property that was changed</param>
            <seealso cref="T:System.ComponentModel.PropertyChangedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.CalloutAnnotation.PropertyChanged"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.CalloutAnnotation.PropertyChanged">
            <summary>
            Event raised when a property value is changed.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CalloutAnnotationCollection">
            <summary>
            Represents a collection of callout annotations
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotationCollection.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.CalloutAnnotationCollection"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotationCollection.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutAnnotationCollection.OnCollectionResetting(System.EventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.CalloutAnnotationCollection.CollectionResetting"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:System.EventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.CalloutAnnotationCollection.CollectionResetting"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.CalloutAnnotationCollection.CollectionResetting">
            <summary>
            CollectionResetting is raised before the collection reset occurs.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CalloutCollisionMode">
            <summary>
            An enum representing the available collision modes of callout layers.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CalloutCollisionMode.Auto">
            <summary>
            Automatically decide the collision strategy.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CalloutCollisionMode.SimulatedAnnealing">
            <summary>
            Use a simulated annealing based collision strategy. This is higher quality, but takes longer, and is performed time-sliced in the background until an acceptable quality is reached.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CalloutCollisionMode.Greedy">
            <summary>
            Use a greedy algorithm to avoid collisions. This is cheap and predictable, but of comparatively low quality.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CalloutCollisionMode.GreedyCenterOfMass">
            <summary>
            Use a greedy algorithm with localized center of mass hints to avoid collisions. This is relatively cheap to perform, compared to the simulated annealing approach, but is of comparatively lower quality.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CalloutContentUpdatingEventArgs">
            <summary>
            Represents event arguments for updating content of callout layer
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutContentUpdatingEventArgs.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.CalloutContentUpdatingEventArgs"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutContentUpdatingEventArgs.Content">
            <summary>
            Gets or sets content displayed by callout layer
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutContentUpdatingEventArgs.ShouldSerializeContent">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutContentUpdatingEventArgs.Content"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutContentUpdatingEventArgs.Content"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutContentUpdatingEventArgs.ResetContent">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutContentUpdatingEventArgs.Content"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutContentUpdatingEventArgs.Content"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutContentUpdatingEventArgs.Item">
            <summary>
            Gets data item assositated with callout layer
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutContentUpdatingEventArgs.XValue">
            <summary>
            Gets data X-value assositated with callout layer
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutContentUpdatingEventArgs.YValue">
            <summary>
            Gets data Y-value assositated with callout layer
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutContentUpdatingEventArgs.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CalloutContentUpdatingEventHandler">
            <summary>
            Event handler for updating content of callout layer
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CalloutLabelUpdatingEventArgs">
            <summary>
            Represents event arguments for updating label of callout layer
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLabelUpdatingEventArgs.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.CalloutLabelUpdatingEventArgs"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLabelUpdatingEventArgs.Item">
            <summary>
            Gets data item assositated with callout layer
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLabelUpdatingEventArgs.Label">
            <summary>
            Gets or sets label displayed by callout layer
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLabelUpdatingEventArgs.ShouldSerializeLabel">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutLabelUpdatingEventArgs.Label"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLabelUpdatingEventArgs.Label"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLabelUpdatingEventArgs.ResetLabel">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutLabelUpdatingEventArgs.Label"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutLabelUpdatingEventArgs.Label"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLabelUpdatingEventArgs.XValue">
            <summary>
            Gets data X-value assositated with callout layer
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutLabelUpdatingEventArgs.YValue">
            <summary>
            Gets data Y-value assositated with callout layer
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutLabelUpdatingEventArgs.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CalloutLabelUpdatingEventHandler">
            <summary>
            Event handler for updating label of callout layer
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CalloutSeriesSelectingEventArgs">
            <summary>
            Represents event arguments for selecting callout layer
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutSeriesSelectingEventArgs.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.CalloutSeriesSelectingEventArgs"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutSeriesSelectingEventArgs.Item">
            <summary>
            Gets data item assositated with callout layer
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutSeriesSelectingEventArgs.Series">
            <summary>
            Gets or sets series object assositated with callout layer
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutSeriesSelectingEventArgs.ShouldSerializeSeries">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutSeriesSelectingEventArgs.Series"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutSeriesSelectingEventArgs.Series"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutSeriesSelectingEventArgs.ResetSeries">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutSeriesSelectingEventArgs.Series"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutSeriesSelectingEventArgs.Series"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutSeriesSelectingEventArgs.SeriesName">
            <summary>
            Gets or sets series name assositated with callout layer
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutSeriesSelectingEventArgs.ShouldSerializeSeriesName">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutSeriesSelectingEventArgs.SeriesName"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutSeriesSelectingEventArgs.SeriesName"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutSeriesSelectingEventArgs.ResetSeriesName">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutSeriesSelectingEventArgs.SeriesName"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutSeriesSelectingEventArgs.SeriesName"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutSeriesSelectingEventArgs.XValue">
            <summary>
            Gets data X-value assositated with callout layer
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CalloutSeriesSelectingEventArgs.YValue">
            <summary>
            Gets data Y-value assositated with callout layer
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutSeriesSelectingEventArgs.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CalloutSeriesSelectingEventHandler">
            <summary>
            Event handler for selecting series of callout layer
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.ShouldSerializeBackground">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.Background"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.Background"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.ResetBackground">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.Background"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.Background"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.ShouldSerializeLeaderBrush">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.LeaderBrush"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.LeaderBrush"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.ResetLeaderBrush">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.LeaderBrush"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.LeaderBrush"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.ShouldSerializeOutline">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.Outline"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.Outline"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.ResetOutline">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.Outline"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.Outline"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.ShouldSerializeSeries">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.Series"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.Series"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.ResetSeries">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.Series"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.Series"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.ShouldSerializeStrokeThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.StrokeThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.StrokeThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.ResetStrokeThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.StrokeThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.StrokeThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.ShouldSerializeTextColor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.TextColor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.TextColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.ResetTextColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.TextColor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.TextColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CategoryAngleAxis">
            <summary>
            Represents a UltraDataChart category angle axis. Useful for displaying radial categories.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAngleAxis.#ctor">
            <summary>
            Initializes a new CategoryAngleAxis instance.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryAngleAxis.ActualInterval">
            <summary>
            Gets the effective value for the current Interval.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryAngleAxis.ActualMinorInterval">
            <summary>
            Gets the effective value for the current MinorInterval.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryAngleAxis.Interval">
            <summary>
            Gets or sets the frequency of displayed labels.
            </summary>
            <remarks>
            The set value is a factor that determines which labels will be hidden. For example, an interval of 2 will display every other label.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAngleAxis.ShouldSerializeInterval">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategoryAngleAxis.Interval"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryAngleAxis.Interval"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAngleAxis.ResetInterval">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryAngleAxis.Interval"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryAngleAxis.Interval"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryAngleAxis.MinorInterval">
            <summary>
            Gets or sets the frequency of displayed minor lines.
            </summary>
            <remarks>
            The set value is a factor that determines how the minor lines will be displayed.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAngleAxis.ShouldSerializeMinorInterval">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategoryAngleAxis.MinorInterval"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryAngleAxis.MinorInterval"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAngleAxis.ResetMinorInterval">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryAngleAxis.MinorInterval"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryAngleAxis.MinorInterval"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryAngleAxis.StartAngleOffset">
            <summary>
            Indicates the angle in degress that the chart's 0th angle should be offset.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAngleAxis.ShouldSerializeStartAngleOffset">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategoryAngleAxis.StartAngleOffset"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryAngleAxis.StartAngleOffset"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAngleAxis.ResetStartAngleOffset">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryAngleAxis.StartAngleOffset"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryAngleAxis.StartAngleOffset"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAngleAxis.GetScaledAngle(System.Double)">
            <summary>
            Gets the scaled angle in radians from the raw axis value.
            </summary>
            <param name="unscaledAngle">The raw axis value.</param>
            <returns>The scaled angle in radians.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAngleAxis.GetUnscaledAngle(System.Double)">
            <summary>
            Gets the raw axis value from the scaled angle in radians.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryAngleAxis.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CategoryChartType">
            <summary>
            Describes available types of data visualizations in the Category Chart
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryChartType.Line">
            <summary> Specifies category line series with markers at each data point </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryChartType.Area">
            <summary> Specifies category area series </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryChartType.Column">
            <summary> Specifies category column chart with vertical rectangles at each data point </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryChartType.Point">
            <summary> Specifies category point chart with markers at each data point </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryChartType.StepLine">
            <summary> Specifies category step line chart </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryChartType.StepArea">
            <summary> Specifies category step area chart </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryChartType.Spline">
            <summary> Specifies category spline line series with markers at each data point </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryChartType.SplineArea">
            <summary> Specifies category spline area series </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryChartType.Waterfall">
            <summary> Specifies category waterfall chart </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryChartType.Auto">
            <summary> Specifies automatic selection of chart type based on suggestions from Data Adapter </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis">
            <summary>
            Represents a category-based horizontal X axis that uses a DateTime scale.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.#ctor">
            <summary>
            Creates an new instance of CategoryDateTimeXAxis class.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.ActualInterval">
            <summary>
            Gets the effective value for the current Interval.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.ActualMinorInterval">
            <summary>
            Gets the effective value for the current MinorInterval.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.DisplayType">
            <summary>
            Gets or sets the axis display type. 
            Continuous display type divides the axis into even intervals, where labels will not necessarily be aligned with data points.
            Discrete display type will not use a constant interval, but will align each label with its data point.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.ShouldSerializeDisplayType">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.DisplayType"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.DisplayType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.ResetDisplayType">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.DisplayType"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.DisplayType"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.Interval">
            <summary>
            Gets or sets the X axis time interval.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.ShouldSerializeInterval">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.Interval"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.Interval"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.ResetInterval">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.Interval"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.Interval"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.MinorInterval">
            <summary>
            Gets or sets the frequency of displayed minor lines.
            </summary>
            <remarks>
            The set value is a factor that determines how the minor lines will be displayed.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.ShouldSerializeMinorInterval">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.MinorInterval"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.MinorInterval"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.ResetMinorInterval">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.MinorInterval"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.MinorInterval"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryDateTimeXAxis.ScrollIntoView(System.DateTime,System.DateTime)">
            <summary>
            Scrolls the CategoryDateTimeXAxis so that the provided date range is brought into view.
            </summary>
            <param name="minimum">The minimum date to bring into view.</param>
            <param name="maximum">The maximum date to bring into view.</param>
            <remarks>
            This method adjusts the WindowRect in order to scroll horizontally to the desired location.  This means that
            the X axis zoom level may change as it tries to fit the minimum and maximum in view.  It will not adjust the Y axis
            zoom level.
            </remarks>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CategoryItemHighlightType">
            <summary>
            Describes available shapes for a category item highlight.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryItemHighlightType.Auto">
            <summary>
            The default depends on the series being highlighted.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryItemHighlightType.Marker">
            <summary>
            The highlight should use a marker shape.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryItemHighlightType.Shape">
            <summary>
            The highlight should use a filled band shape.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CategorySeries">
            <summary>
            Represents the base class for UltraDataChart category series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategorySeries.IsCustomCategoryMarkerStyleAllowed">
            <summary>
            Gets or sets whether this category series should allow custom style overrides of its individual marker visuals.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategorySeries.ShouldSerializeIsCustomCategoryMarkerStyleAllowed">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategorySeries.IsCustomCategoryMarkerStyleAllowed"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategorySeries.IsCustomCategoryMarkerStyleAllowed"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategorySeries.ResetIsCustomCategoryMarkerStyleAllowed">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategorySeries.IsCustomCategoryMarkerStyleAllowed"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategorySeries.IsCustomCategoryMarkerStyleAllowed"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategorySeries.IsCustomCategoryStyleAllowed">
            <summary>
            Gets or sets whether this category series should allow custom style overrides of its individual visuals.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategorySeries.ShouldSerializeIsCustomCategoryStyleAllowed">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategorySeries.IsCustomCategoryStyleAllowed"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategorySeries.IsCustomCategoryStyleAllowed"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategorySeries.ResetIsCustomCategoryStyleAllowed">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategorySeries.IsCustomCategoryStyleAllowed"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategorySeries.IsCustomCategoryStyleAllowed"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategorySeries.IsTransitionInEnabled">
            <summary>
            Gets or sets whether the series should transition into the plot area when a new data source is assigned.
            Note: Transitions are not currently supported for stacked series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategorySeries.ShouldSerializeIsTransitionInEnabled">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategorySeries.IsTransitionInEnabled"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategorySeries.IsTransitionInEnabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategorySeries.ResetIsTransitionInEnabled">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategorySeries.IsTransitionInEnabled"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategorySeries.IsTransitionInEnabled"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategorySeries.TransitionInMode">
            <summary>
            Gets or sets the method by which to animate the data into the chart when the chart data source is swapped.
            Note: Transitions are not currently supported for stacked series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategorySeries.ShouldSerializeTransitionInMode">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategorySeries.TransitionInMode"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategorySeries.TransitionInMode"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategorySeries.ResetTransitionInMode">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategorySeries.TransitionInMode"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategorySeries.TransitionInMode"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategorySeries.UseHighMarkerFidelity">
            <summary>
            Sets or Gets whether to increase marker fidelity for extreme data shapes that have lots of Y variation over short X intervals.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategorySeries.ShouldSerializeUseHighMarkerFidelity">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategorySeries.UseHighMarkerFidelity"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategorySeries.UseHighMarkerFidelity"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategorySeries.ResetUseHighMarkerFidelity">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategorySeries.UseHighMarkerFidelity"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategorySeries.UseHighMarkerFidelity"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategorySeries.GetCategoryItems(System.Int32,System.Int32)">
            <summary>
            Gets an array of category items for specified range of indices. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategorySeries.GetCategoryWidth">
            <summary>
            Returns the width of the category grouping this series is in.
            </summary>
            <returns>The width of the category group.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategorySeries.GetOffsetValue">
            <summary>
            Returns the offset value for this series if grouped on a category axis.
            </summary>
            <returns>The offset value</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategorySeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategorySeries.OnAssigningCategoryMarkerStyle(Infragistics.Win.DataVisualization.AssigningCategoryMarkerStyleEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.CategorySeries.AssigningCategoryMarkerStyle"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.AssigningCategoryMarkerStyleEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.CategorySeries.AssigningCategoryMarkerStyle"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.CategorySeries.AssigningCategoryMarkerStyle">
            <summary>
            Event raised when Assigning Category Marker Style
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategorySeries.OnAssigningCategoryStyle(Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.CategorySeries.AssigningCategoryStyle"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.AssigningCategoryStyleEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.CategorySeries.AssigningCategoryStyle"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.CategorySeries.AssigningCategoryStyle">
            <summary>
            Event raised when Assigning Category Style
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CategorySeriesMarkerCollisionAvoidance">
            <summary>
            Describes available methods of collision avoidance of category series' markers.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategorySeriesMarkerCollisionAvoidance.None">
            <summary>
            Collision avoidance is disabled.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategorySeriesMarkerCollisionAvoidance.Omit">
            <summary>
            Items colliding with other items will be hidden from view.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CategoryTooltipLayerPosition">
            <summary>
            Describes available positions on the crossing axis at which the category tooltip can be displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTooltipLayerPosition.Auto">
            <summary>
            A position is selected automatically
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTooltipLayerPosition.OutsideStart">
            <summary>
            Displays at the outside start of the axis.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTooltipLayerPosition.InsideStart">
            <summary>
            Displays at the inside start of the axis.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTooltipLayerPosition.InsideEnd">
            <summary>
            Displays at the inside end of the axis.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTooltipLayerPosition.OutsideEnd">
            <summary>
            Displays at the outside end of the axis.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CategoryTransitionInMode">
            <summary>
            Describes available transition effects that can applied to initial rendering of a series
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTransitionInMode.Auto">
            <summary>
            Series transitions in an automatically chosen based on type of series and its orientation
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTransitionInMode.FromZero">
            <summary>
            Series transitions in from the reference value of the value axis.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTransitionInMode.SweepFromLeft">
            <summary>
            Series sweeps in from the left
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTransitionInMode.SweepFromRight">
            <summary>
            Series sweeps in from the right
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTransitionInMode.SweepFromTop">
            <summary>
            Series sweeps in from the top.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTransitionInMode.SweepFromBottom">
            <summary>
            Series sweeps in from the bottom.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTransitionInMode.SweepFromCenter">
            <summary>
            Series sweeps in from the center.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTransitionInMode.AccordionFromLeft">
            <summary>
            Series accordions in from the left.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTransitionInMode.AccordionFromRight">
            <summary>
            Series accordions in from the right.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTransitionInMode.AccordionFromTop">
            <summary>
            Series accordions in from the top.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTransitionInMode.AccordionFromBottom">
            <summary>
            Series accordions in from the bottom.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTransitionInMode.Expand">
            <summary>
            Series expands from the value midpoints.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTransitionInMode.SweepFromCategoryAxisMinimum">
            <summary>
            Series sweeps in from the category axis minimum.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTransitionInMode.SweepFromCategoryAxisMaximum">
            <summary>
            Series sweeps in from the category axis maximum.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTransitionInMode.SweepFromValueAxisMinimum">
            <summary>
            Series sweeps in from the value axis minimum.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTransitionInMode.SweepFromValueAxisMaximum">
            <summary>
            Series sweeps in from the value axis maximum.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTransitionInMode.AccordionFromCategoryAxisMinimum">
            <summary>
            Series accordions in from the category axis minimum.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTransitionInMode.AccordionFromCategoryAxisMaximum">
            <summary>
            Series accordions in from the category axis maximum.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTransitionInMode.AccordionFromValueAxisMinimum">
            <summary>
            Series accordions in from the value axis minimum.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CategoryTransitionInMode.AccordionFromValueAxisMaximum">
            <summary>
            Series accordions in from the value axis maximum.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CategoryXAxis">
            <summary>
            Represents a UltraDataChart category X axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryXAxis.#ctor">
            <summary>
            Initializes a new instance of the CategoryXAxis class.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryXAxis.ActualInterval">
            <summary>
            Gets the effective value for the current Interval.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryXAxis.ActualMinorInterval">
            <summary>
            Gets the effective value for the current MinorInterval.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryXAxis.Interval">
            <summary>
            Gets or sets the frequency of displayed labels.
            </summary>
            <remarks>
            The set value is a factor that determines which labels will be hidden. For example, an interval of 2 will display every other label.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryXAxis.ShouldSerializeInterval">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategoryXAxis.Interval"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryXAxis.Interval"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryXAxis.ResetInterval">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryXAxis.Interval"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryXAxis.Interval"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryXAxis.MinorInterval">
            <summary>
            Gets or sets the frequency of displayed minor lines.
            </summary>
            <remarks>
            The set value is a factor that determines how the minor lines will be displayed.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryXAxis.ShouldSerializeMinorInterval">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategoryXAxis.MinorInterval"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryXAxis.MinorInterval"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryXAxis.ResetMinorInterval">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryXAxis.MinorInterval"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryXAxis.MinorInterval"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryXAxis.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryXAxis.ScrollIntoView(System.Object)">
            <summary>
            Scrolls the specified item into view.
            </summary>
            <param name="item">Data item to scroll into view</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryXAxis.ScrollRangeIntoView(System.Double,System.Double)">
            <summary>
            Scrolls the CategoryXAxis so that the provided range is brought into view.
            </summary>
            <param name="minimum">The minimum category index to bring into view.</param>
            <param name="maximum">The maximum category index to bring into view.</param>
            <remarks>
            This method adjusts the WindowRect in order to scroll horizontally to the desired location.  This means that
            the X axis zoom level may change as it tries to fit the minimum and maximum in view.  It will not adjust the Y axis
            zoom level.
            
            Note: The minimum and maximum are expected to be indexes referring to the items inside the CategoryXAxis ItemsSource.
            </remarks>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CategoryYAxis">
            <summary>
            Represents a UltraDataChart category Y axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryYAxis.#ctor">
            <summary>
            Initializes a new instance of the CategoryYAxis class. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryYAxis.ActualInterval">
            <summary>
            Gets the effective value for the current Interval.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryYAxis.ActualMinorInterval">
            <summary>
            Gets the effective value for the current MinorInterval.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryYAxis.Interval">
            <summary>
            Gets or sets the frequency of displayed labels.
            </summary>
            <remarks>
            The set value is a factor that determines which labels will be hidden. For example, an interval of 2 will display every other label.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryYAxis.ShouldSerializeInterval">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategoryYAxis.Interval"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryYAxis.Interval"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryYAxis.ResetInterval">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryYAxis.Interval"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryYAxis.Interval"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CategoryYAxis.MinorInterval">
            <summary>
            Gets or sets the frequency of displayed minor lines.
            </summary>
            <remarks>
            The set value is a factor that determines how the minor lines will be displayed.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryYAxis.ShouldSerializeMinorInterval">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CategoryYAxis.MinorInterval"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryYAxis.MinorInterval"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryYAxis.ResetMinorInterval">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CategoryYAxis.MinorInterval"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CategoryYAxis.MinorInterval"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryYAxis.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryYAxis.ScrollIntoView(System.Object)">
            <summary>
            Scrolls the specified item into view.
            </summary>
            <param name="item">Data item to scroll into view</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CategoryYAxis.ScrollRangeIntoView(System.Double,System.Double)">
            <summary>
            Scrolls the CategoryYAxis so that the provided range is brought into view.
            </summary>
            <param name="minimum">The minimum category index to bring into view.</param>
            <param name="maximum">The maximum category index to bring into view.</param>
            <remarks>
            This method adjusts the WindowRect in order to scroll vertically to the desired location.  This means that
            the Y axis zoom level may change as it tries to fit the minimum and maximum in view.  It will not adjust the X axis
            zoom level.
            
            Note: The minimum and maximum are expected to be indexes referring to the items inside the CategoryYAxis ItemsSource.
            </remarks>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ChaikinOscillatorIndicator">
            <summary>
            Represents the UltraDataChart Chaikin Oscillator indicator series.
            </summary>
            <remarks>
            Default required members: Close, Low, High, Volume
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ChaikinOscillatorIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.ChaikinOscillatorIndicator"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ChaikinOscillatorIndicator.LongPeriod">
            <summary>
            Gets or sets the long moving average period for the current ChaikinOscillatorIndicator object.
            <remarks>
            The typical, and initial, value for long CHO periods is 10.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ChaikinOscillatorIndicator.ShouldSerializeLongPeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ChaikinOscillatorIndicator.LongPeriod"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ChaikinOscillatorIndicator.LongPeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ChaikinOscillatorIndicator.ResetLongPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ChaikinOscillatorIndicator.LongPeriod"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ChaikinOscillatorIndicator.LongPeriod"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ChaikinOscillatorIndicator.ShortPeriod">
            <summary>
            Gets or sets the short moving average period for the current ChaikinOscillatorIndicator object.
            <remarks>
            The typical, and initial, value for short CHO periods is 3.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ChaikinOscillatorIndicator.ShouldSerializeShortPeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ChaikinOscillatorIndicator.ShortPeriod"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ChaikinOscillatorIndicator.ShortPeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ChaikinOscillatorIndicator.ResetShortPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ChaikinOscillatorIndicator.ShortPeriod"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ChaikinOscillatorIndicator.ShortPeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ChaikinOscillatorIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ChaikinVolatilityIndicator">
            <summary>
            Represents a UltraDataChart Chaikin Volatility indicator series.
            </summary>
            <remarks>
            The ChaikinVolatility indicator attempts to show volatility by displaying the spread between
            the high and low values.
            <para>
            Default required members: High, Low
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ChaikinVolatilityIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.ChaikinVolatilityIndicator"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ChaikinVolatilityIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current ChaikinVolatilityIndicator object.
            <remarks>
            The typical, and initial, value for ChaikinVolatilityIndicator periods is 10.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ChaikinVolatilityIndicator.ShouldSerializePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ChaikinVolatilityIndicator.Period"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ChaikinVolatilityIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ChaikinVolatilityIndicator.ResetPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ChaikinVolatilityIndicator.Period"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ChaikinVolatilityIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ChaikinVolatilityIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ChartCursorEventArgs">
            <summary>
            Provides data for UltraDataChart mouse button related events. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ChartCursorEventArgs.Chart">
            <summary>
            Gets the chart associated with the event.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ChartCursorEventArgs.Item">
            <summary>
            Gets the ItemsSource item associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ChartCursorEventArgs.Series">
            <summary>
            Gets the series associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ChartCursorEventArgs.SeriesViewer">
            <summary>
            Gets the Chart associated with the current event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ChartCursorEventArgs.ToString">
            <summary>
            Provides a human readable expresion of the event arguments.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ChartHitTestMode">
            <summary>
            Describes available behaviors for performing hit testing in the chart/map.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.ChartHitTestMode.Auto">
            <summary>
            Automatically decide the appropriate hit test mode for the content.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.ChartHitTestMode.Computational">
            <summary>
            Use a computational based approach to determine which series has been hit. This uses loose bounding boxes, in some cases, and can range in time complexity between O(1) and O(log n) to find a hit. This decreases frame render time compared to color encoded.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.ChartHitTestMode.ColorEncoded">
            <summary>
            Use a color encoded off screen buffer for hit testing. This can have extremely rare false positives where the wrong series is hit (this is due to our inability to disable anti-aliasing in our color buffer), but should always be O(1) time for determining a hit series. This increases frame render time, however. Consider using this if hit testing time is degrading performance.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.ChartHitTestMode.Mixed">
            <summary>
            Let each series decide which hit testing mode to use individually based on their own hit test mode.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.ChartHitTestMode.MixedFavoringComputational">
            <summary>
            Let each series decide which hit testing mode to use individually based on their own hit test mode, but evaluate all computational hits before evaluating any color encoding hits.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ChartMouseButtonEventArgs">
            <summary>
            Provides data for UltraDataChart mouse button related events. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ChartMouseButtonEventArgs.Chart">
            <summary>
            Gets the Chart associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ChartMouseButtonEventArgs.Handled">
            <summary>
            Gets or sets a value that indicates the present state of the event handling for a routed 
            event as it travels the route.
            </summary>
            <remarks>
            ChartMouseButton events are not routed events; setting this property effects the underlying
            MouseButtonEvent.
            </remarks>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ChartMouseButtonEventArgs.Item">
            <summary>
            Gets the ItemsSource item associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ChartMouseButtonEventArgs.OriginalSource">
            <summary>
            Gets a reference to the object that raised the event.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ChartMouseButtonEventArgs.Series">
            <summary>
            Gets the series associated with the current event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ChartMouseButtonEventArgs.GetPosition">
            <summary>
            Returns the x- and y- coordinates of the mouse pointer position.
            </summary>
            <returns>The mouse position requested.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ChartMouseButtonEventArgs.ToString">
            <summary>
            Provides a human readable description of the mouse button event.
            </summary>
            <returns>The description.</returns>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ChartSeriesEventArgs">
            <summary>
            Represents event arguments for chart's SeriesAdded and SeriesRemoved events
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ChartSeriesEventArgs.Series">
            <summary> Gets the series.  </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ChartSeriesEventArgs.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ChartSeriesEventHandler">
            <summary>
            Delegate for chart's SeriesAdded and SeriesRemoved events
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">Contextual information about the event being raised.</param>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CollisionAvoidanceType">
            <summary>
            Describes available methods of collision avoidance of series' markers.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CollisionAvoidanceType.None">
            <summary>
            Collision avoidance is disabled.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CollisionAvoidanceType.Omit">
            <summary>
            Items colliding with other items will be hidden from view.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CollisionAvoidanceType.Fade">
            <summary>
            Items colliding with other items will be partially hidden from view by reducing their opacity.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CollisionAvoidanceType.OmitAndShift">
            <summary>
            Items colliding with other items will be either hidden from view or moved to new positions.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CollisionAvoidanceType.FadeAndShift">
            <summary>
            Items colliding with other items will be either partially hidden from view by reducing their opacity, or moved to new positions, or a combination of both.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ColorScale">
            <summary>
            Base class for classes which provide colors corresponding to numeric values within a known list of numeric values.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ColorScale.GetColor(System.Double,System.Double,System.Double,System.Collections.Generic.IList{System.Double})">
            <summary>
            Return a color corresponding to the given numeric value.
            </summary>
            <param name="value">The numeric value to get a color for.</param>
            <param name="defaultMinimum">The minimum value of the value column.</param>
            <param name="defaultMaximum">The maximum value of the value column.</param>
            <param name="valueColumn">The list of all numeric values in the scale.</param>
            <returns>A color corresponding to the given numeric value.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ColorScale.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ColorScale.OnPropertyChanged(System.String)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.ColorScale.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property that was changed</param>
            <seealso cref="T:System.ComponentModel.PropertyChangedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.ColorScale.PropertyChanged"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.ColorScale.PropertyChanged">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ColorScale.OnPropertyUpdated(Infragistics.Win.DataVisualization.PropertyUpdatedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.ColorScale.PropertyUpdated"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.PropertyUpdatedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.ColorScale.PropertyUpdated"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.ColorScale.PropertyUpdated">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ColorScaleInterpolationMode">
            <summary>
            Describes available modes of interpolation on a color scale.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.ColorScaleInterpolationMode.Select">
            <summary>
            Select one of the colors in the palette.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.ColorScaleInterpolationMode.InterpolateRGB">
            <summary>
            Interpolate between colors in the palette using RGB interpolation.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.ColorScaleInterpolationMode.InterpolateHSV">
            <summary>
            Interpolate between colors in the palette using HSV interpolation.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ColumnFragment">
            <summary>
            Represents one part of a StackedColumnSeries.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ColumnFragment.RadiusX">
            <summary>
            Gets or sets the x-radius of the ellipse that is used to round the corners of the column.
            </summary>  
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ColumnFragment.ShouldSerializeRadiusX">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ColumnFragment.RadiusX"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ColumnFragment.RadiusX"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ColumnFragment.ResetRadiusX">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ColumnFragment.RadiusX"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ColumnFragment.RadiusX"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ColumnFragment.RadiusY">
            <summary>
            Gets or sets the y-radius of the ellipse that is used to round the corners of the column.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ColumnFragment.ShouldSerializeRadiusY">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ColumnFragment.RadiusY"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ColumnFragment.RadiusY"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ColumnFragment.ResetRadiusY">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ColumnFragment.RadiusY"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ColumnFragment.RadiusY"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ColumnFragment.XAxis">
            <summary>
            Gets or sets the effective x-axis for this series.
            </summary>  
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ColumnFragment.YAxis">
            <summary>
            Gets or sets the effective y-axis for this series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ColumnFragment.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ColumnSeries">
            <summary>
            Represents a UltraDataChart column series.
            <para>Compare values across categories by using vertical rectangles.</para>
            <para>Use it when the order of categories is not important or for displaying
            item counts such as a histogram.</para>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ColumnSeries.#ctor">
            <summary>
            Initializes a new instance of the ColumnSeries class. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ColumnSeries.ConsolidatedColumnVerticalPosition">
            <summary>
            The positioning logic to use for columns which have been consolidated into a single visual element.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ColumnSeries.ShouldSerializeConsolidatedColumnVerticalPosition">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ColumnSeries.ConsolidatedColumnVerticalPosition"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ColumnSeries.ConsolidatedColumnVerticalPosition"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ColumnSeries.ResetConsolidatedColumnVerticalPosition">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ColumnSeries.ConsolidatedColumnVerticalPosition"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ColumnSeries.ConsolidatedColumnVerticalPosition"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ColumnSeries.RadiusX">
            <summary>
            Gets or sets the x-radius of the ellipse that is used to round the corners of the column.
            </summary>  
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ColumnSeries.ShouldSerializeRadiusX">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ColumnSeries.RadiusX"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ColumnSeries.RadiusX"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ColumnSeries.ResetRadiusX">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ColumnSeries.RadiusX"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ColumnSeries.RadiusX"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ColumnSeries.RadiusY">
            <summary>
            Gets or sets the y-radius of the ellipse that is used to round the corners of the column.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ColumnSeries.ShouldSerializeRadiusY">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ColumnSeries.RadiusY"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ColumnSeries.RadiusY"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ColumnSeries.ResetRadiusY">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ColumnSeries.RadiusY"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ColumnSeries.RadiusY"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ColumnSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CommodityChannelIndexIndicator">
            <summary>
            Represents a UltraDataChart Commodity Channel Index indicator series.
            </summary>
            <remarks>
            Default required members: High, Low, Close
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CommodityChannelIndexIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.CommodityChannelIndexIndicator"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CommodityChannelIndexIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current CCISeries object.
            <remarks>
            The typical, and initial, value for CCI periods is 20.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CommodityChannelIndexIndicator.ShouldSerializePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CommodityChannelIndexIndicator.Period"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CommodityChannelIndexIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CommodityChannelIndexIndicator.ResetPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CommodityChannelIndexIndicator.Period"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CommodityChannelIndexIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CommodityChannelIndexIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ConsolidatedItemHitTestBehavior">
            <summary>
            Determines the item returned in hit-testing when mousing over an object which represents several consolidated items.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.ConsolidatedItemHitTestBehavior.Basic">
            <summary>
            Returns the item based on the X-location only.  Will return one of the consolidated items.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.ConsolidatedItemHitTestBehavior.NearestY">
            <summary>
            Returns the item with the nearest Y-location out of all the items with a matching X-location.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ConsolidatedItemsPosition">
            <summary>
            Enum used to determine positioning logic for data items which have been consolidated into a single visual element.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.ConsolidatedItemsPosition.Minimum">
            <summary>
            Consolidated Items should be positioned using their minimum value.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.ConsolidatedItemsPosition.Maximum">
            <summary>
            Consolidated Items should be positioned using their maximum value.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.ConsolidatedItemsPosition.Median">
            <summary>
             Consolidated Items should be positioned at the midpoint of the range.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.ConsolidatedItemsPosition.RelativeMinimum">
            <summary>
            Consolidated Items should be positioned using the value nearest to the reference value of the corresponding axis.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.ConsolidatedItemsPosition.RelativeMaximum">
            <summary>
            Consolidated Items should be positioned using the value farthest from the reference value of the corresponding axis.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ContourValueResolver">
            <summary>
            Class used to determine the numeric values of contour lines, given a larger list of numeric values.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ContourValueResolver.GetContourValues(Infragistics.Portable.IFastItemColumn{System.Double})">
            <summary>
            Gets the numeric values of contour lines based on the given values.
            </summary>
            <param name="valueColumn">The FastItemColumn containing all numeric values for the series.</param>
            <returns>The numeric values at which contour lines should be placed.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ContourValueResolver.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ContourValueResolver.OnUpdated(System.EventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.ContourValueResolver.Updated"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:System.EventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.ContourValueResolver.Updated"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.ContourValueResolver.Updated">
            <summary>
            Raised when the ContourValueResolver has been updated and its contour values should be re-evaluated.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CrosshairsDisplayMode">
            <summary>
            An enum representing the available display modes of crosshairs lines in the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CrosshairsDisplayMode.Default">
            <summary>
            Display default number of crosshair lines in the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CrosshairsDisplayMode.None">
            <summary>
            Display no crosshair lines in the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CrosshairsDisplayMode.Horizontal">
            <summary>
            Display horizontal line of crosshairs in the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CrosshairsDisplayMode.Vertical">
            <summary>
            Display vertical line of crosshairs in the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.CrosshairsDisplayMode.Both">
            <summary>
            Display both horizontal and vertical lines of crosshairs in the chart.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CursorEventHandler">
            <summary>
            Represents the method that will handle UltraDataChart mouse related events.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CustomContourValueResolver">
            <summary>
            ContourValueResolver class which fires an event to resolve the contour values.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CustomContourValueResolver.#ctor">
            <summary>
            CustomContourValueResolver constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CustomContourValueResolver.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CustomContourValueResolver.OnGetCustomContourValues(Infragistics.Win.DataVisualization.CustomContourValueResolverEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.CustomContourValueResolver.GetCustomContourValues"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.CustomContourValueResolverEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.CustomContourValueResolver.GetCustomContourValues"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.CustomContourValueResolver.GetCustomContourValues">
            <summary>
            Event raised when retrieving the contour values.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CustomContourValueResolverEventArgs">
            <summary>
            Provides data for GetCustomContourValues event. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CustomContourValueResolverEventArgs.ContourValuesEnumerable">
            <summary>
            Gets or set the value column
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CustomContourValueResolverEventArgs.ValueColumn">
            <summary>
            Gets the value column
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CustomContourValueResolverEventHandler">
            <summary>
            Represents the method that will handle the events of the CustomContourValueResolver. 
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CustomIndicator">
            <summary>
            Represents a UltraDataChart Custom Indicator series.
            <para>
            The indicator value is calculated in the user specified Indicator event handler. 
            </para>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CustomIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.CustomIndicator"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CustomIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CustomIndicator.OnBasedOnColumns(Infragistics.Win.DataVisualization.FinancialEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.CustomIndicator.BasedOnColumns"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.FinancialEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.CustomIndicator.BasedOnColumns"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.CustomIndicator.BasedOnColumns">
            <summary>
            Handle this event in order to indicate which columns this custom indicator
            is based on.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CustomIndicator.OnIndicator(Infragistics.Win.DataVisualization.FinancialEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.CustomIndicator.Indicator"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.FinancialEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.CustomIndicator.Indicator"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.CustomIndicator.Indicator">
            <summary>
            Handle this event in order to perform a custom indicator calculation.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CustomPaletteBrushScale">
            <summary>
            Represents a brush scale that uses index-based brush selection mode.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CustomPaletteBrushScale.#ctor">
            <summary>
            Creates a new instance of the CustomPaletteBrushScale.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CustomPaletteBrushScale.BrushSelectionMode">
            <summary>
            Gets or sets the brush selection mode.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CustomPaletteBrushScale.ShouldSerializeBrushSelectionMode">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CustomPaletteBrushScale.BrushSelectionMode"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CustomPaletteBrushScale.BrushSelectionMode"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CustomPaletteBrushScale.ResetBrushSelectionMode">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CustomPaletteBrushScale.BrushSelectionMode"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CustomPaletteBrushScale.BrushSelectionMode"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CustomPaletteBrushScale.GetBrush(System.Int32,System.Int32)">
            <summary>
            Returns calculated brush for the given index.
            </summary>
            <param name="index">Point index.</param>
            <param name="total">Total number of markers in the series.</param>
            <returns>Brush object at a specified index.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CustomPaletteBrushScale.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.CustomPaletteColorScale">
            <summary>
            ColorScale class for selecting a color from a given palette, or interpolating between adjacent colors in that palette.
            </summary>
            <summary>
            ColorScale class for selecting a color from a given palette, or interpolating between adjacent colors in that palette.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CustomPaletteColorScale.#ctor">
            <summary>
            CustomPaletteColorScale constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CustomPaletteColorScale.InterpolationMode">
            <summary>
            The approach to use when getting a color from the palette.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CustomPaletteColorScale.ShouldSerializeInterpolationMode">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CustomPaletteColorScale.InterpolationMode"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CustomPaletteColorScale.InterpolationMode"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CustomPaletteColorScale.ResetInterpolationMode">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CustomPaletteColorScale.InterpolationMode"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CustomPaletteColorScale.InterpolationMode"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CustomPaletteColorScale.MaximumValue">
            <summary>
            The highest value to assign a color.  Any given value greater than this value will be made Transparent.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CustomPaletteColorScale.ShouldSerializeMaximumValue">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CustomPaletteColorScale.MaximumValue"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CustomPaletteColorScale.MaximumValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CustomPaletteColorScale.ResetMaximumValue">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CustomPaletteColorScale.MaximumValue"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CustomPaletteColorScale.MaximumValue"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CustomPaletteColorScale.MinimumValue">
            <summary>
            The lowest value to assign a color.  Any given value less than this value will be made Transparent.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CustomPaletteColorScale.ShouldSerializeMinimumValue">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CustomPaletteColorScale.MinimumValue"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CustomPaletteColorScale.MinimumValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CustomPaletteColorScale.ResetMinimumValue">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CustomPaletteColorScale.MinimumValue"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CustomPaletteColorScale.MinimumValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CustomPaletteColorScale.ProvidePalette(System.String[])">
            <summary>
            Sets the color palette.
            </summary>
            <param name="colors">The color palette.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CustomPaletteColorScale.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CustomPaletteColorScale.ResetInternal">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.CustomPaletteColorScale.Palette">
            <summary>
            A list of colors to select from or interpolate between.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CustomPaletteColorScale.ShouldSerializePalette">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.CustomPaletteColorScale.Palette"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.CustomPaletteColorScale.Palette"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.CustomPaletteColorScale.ResetPalette">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.CustomPaletteColorScale.Palette"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.CustomPaletteColorScale.Palette"/>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.DataChartLegendMouseButtonEventHandler">
            <summary>
            Represents the method that will handle legend mouse button related events.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.DataChartLegendMouseEventHandler">
            <summary>
            Represents the method that will handle legend mouse related events.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.DetrendedPriceOscillatorIndicator">
            <summary>
            Represents a UltraDataChart Detrended Price Oscillator indicator series.
            </summary>
            <remarks>
            Default required members: Close
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.DetrendedPriceOscillatorIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.DetrendedPriceOscillatorIndicator"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.DetrendedPriceOscillatorIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current DetrendedPriceOscillatorIndicator object.
            <remarks>
            The typical, and initial, value for DPO periods is 20.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.DetrendedPriceOscillatorIndicator.ShouldSerializePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.DetrendedPriceOscillatorIndicator.Period"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.DetrendedPriceOscillatorIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.DetrendedPriceOscillatorIndicator.ResetPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.DetrendedPriceOscillatorIndicator.Period"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.DetrendedPriceOscillatorIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.DetrendedPriceOscillatorIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.DomainChartSeriesPointerEventArgs">
            <summary>
            Represents event arguments for chart's SeriesAdded and SeriesRemoved events
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.DomainChartSeriesPointerEventArgs.Item">
            <summary> Gets the item hit by the pointer.</summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.DomainChartSeriesPointerEventArgs.Series">
            <summary> Gets the series hit by the pointer.</summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.DomainChartSeriesPointerEventArgs.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.DomainChartSeriesPointerEventHandler">
            <summary>
            Delegate for chart's mouse events
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">Contextual information about the event being raised.</param>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.EaseOfMovementIndicator">
            <summary>
            Represents a UltraDataChart Ease of Movement indicator series.
            </summary>
            <remarks>
            The ease of movement indicator by Richard W. Arms, Jr relates the price change of an asset to
            its volume. Normally smoothed with a moving average.
            <para>
            Default required members: Low, High, Volume
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.EaseOfMovementIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.EaseOfMovementIndicator"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.EaseOfMovementIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.EnableErrorBars">
            <summary>
            Describes available types for enabling error bars  
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.EnableErrorBars.None">
            <summary>
            No error bars are enabled
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.EnableErrorBars.Both">
            <summary>
            Both error bars are enabled
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.EnableErrorBars.Positive">
            <summary>
            Positive error bars are enabled
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.EnableErrorBars.Negative">
            <summary>
            Negative error bars are enabled
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.FastStochasticOscillatorIndicator">
            <summary>
            Represents a UltraDataChart Fast Stochastic Oscillator indicator series.
            </summary>
            <remarks>
            Default required members: High, Low, Close
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FastStochasticOscillatorIndicator.#ctor">
            <summary>
            Creates an instance of the FastStochasticOscillatorIndicator
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FastStochasticOscillatorIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current FastStochasticOscillatorIndicator object.
            <remarks>
            The typical, and initial, value for FastStochasticOscillatorIndicator periods is 14.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FastStochasticOscillatorIndicator.ShouldSerializePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FastStochasticOscillatorIndicator.Period"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FastStochasticOscillatorIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FastStochasticOscillatorIndicator.ResetPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FastStochasticOscillatorIndicator.Period"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FastStochasticOscillatorIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FastStochasticOscillatorIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.FinalValueSelectionMode">
            <summary>
            Describes available positions on the crossing axis at which the category tooltip can be displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.FinalValueSelectionMode.Auto">
            <summary>
            A mode is selected automatically
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.FinalValueSelectionMode.FinalVisible">
            <summary>
            Displays the last value visible.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.FinalValueSelectionMode.FinalVisibleInterpolated">
            <summary>
            Displays an interploated last value for when the series leaves view.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.FinalValueSelectionMode.Final">
            <summary>
            Displays the last value in the series, whether visible or not.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.FinancialEventArgs">
            <summary>
            Parameterizes a financial calculation event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialEventArgs.#ctor(System.Int32,System.Int32,Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Constructs a FinancialEventArgs object.
            </summary>
            <param name="position">The beginning position that should be calculated from.</param>
            <param name="count">The number of positions that should be calculated from the start.</param>
            <param name="dataSource">The data to use for the calculation.</param>
            <param name="supportingCalculations">The supporting calculations to use in the calculation.</param>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialEventArgs.BasedOn">
            <summary>
            Used to specify which columns changing will invalidate the series and cause it to 
            be recalculated.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialEventArgs.Count">
            <summary>
            The number of positions that should be calculated from the start.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialEventArgs.DataSource">
            <summary>
            The data to use for the calculation.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialEventArgs.Position">
            <summary>
            The beginning position that should be calculated from.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialEventArgs.SupportingCalculations">
            <summary>
            The supporting calculations to use in the calculation.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.FinancialEventHandler">
            <summary>
            For handling financial calculation events.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The parameters of the event.</param>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.FinancialIndicator">
            <summary>
            Represents the base functionality for a UltraDataChart financial indicator series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialIndicator.ActualTrendLineBrush">
            <summary>
            Gets the effective TrendLineBrush for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialIndicator.DisplayType">
            <summary>
            Gets or sets the display for the current FinancialIndicator object.
            <para/>
            This is a dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialIndicator.ShouldSerializeDisplayType">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.DisplayType"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.DisplayType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialIndicator.ResetDisplayType">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.DisplayType"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.DisplayType"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialIndicator.IgnoreFirst">
            <summary>
            Gets or sets the number of values to hide at the beginning of the indicator.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialIndicator.ShouldSerializeIgnoreFirst">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.IgnoreFirst"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.IgnoreFirst"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialIndicator.ResetIgnoreFirst">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.IgnoreFirst"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.IgnoreFirst"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLineBrush">
            <summary>
            Gets or sets the brush to use to draw the trend line.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialIndicator.ShouldSerializeTrendLineBrush">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLineBrush"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLineBrush"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialIndicator.ResetTrendLineBrush">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLineBrush"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLineBrush"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLinePeriod">
            <summary>
            Gets or sets the trend line period for the current series.
            </summary>
            <remarks>
            The typical, and initial, value for trend line period is 7.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialIndicator.ShouldSerializeTrendLinePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLinePeriod"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLinePeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialIndicator.ResetTrendLinePeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLinePeriod"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLinePeriod"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLineThickness">
            <summary>
            Gets or sets the thickness of the current indicator object's trend line.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialIndicator.ShouldSerializeTrendLineThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLineThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLineThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialIndicator.ResetTrendLineThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLineThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLineThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLineType">
            <summary>
            Gets or sets the trend type for the current indicator series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialIndicator.ShouldSerializeTrendLineType">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLineType"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLineType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialIndicator.ResetTrendLineType">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLineType"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLineType"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLineZIndex">
            <summary>
            Gets or sets the trend line z index for the current series.
            <remarks>
            The trend line renders over the series and markers by default, lower this value to shift it to the background.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialIndicator.ShouldSerializeTrendLineZIndex">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLineZIndex"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLineZIndex"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialIndicator.ResetTrendLineZIndex">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLineZIndex"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialIndicator.TrendLineZIndex"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.FinancialLegend">
            <summary>
            Represents a legend that displays information about each series, most often used in financial charting.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialLegend.#ctor">
            <summary>
            Creates and returns a new instance of a FinancialLegend.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialLegend.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.FinancialOverlay">
            <summary>
            Represents the base functionality for a UltraDataChart financial overlay series.
            </summary>
            <remarks>
            The difference between a FinancialIndicator and a FinancialOverlay is small.
            Overlays are usually drawn against the same axes as the price, but they don't
            have to be. Overlays mostly display multiple values, but not all of them, and so
            so some indicators.
            </remarks>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialOverlay.IgnoreFirst">
            <summary>
            Gets or sets the number of values to hide at the beginning of the indicator.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialOverlay.ShouldSerializeIgnoreFirst">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialOverlay.IgnoreFirst"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialOverlay.IgnoreFirst"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialOverlay.ResetIgnoreFirst">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialOverlay.IgnoreFirst"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialOverlay.IgnoreFirst"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialOverlay.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.FinancialPriceSeries">
            <summary>
            Represents a UltraDataChart financial price series that renders as Candlestick or OHLC representations.
            </summary>
            <remarks>
            Default required members: Open, Low, High, Close
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialPriceSeries.#ctor">
            <summary>
            Initializes a new instance of the FinancialIndicator class. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.ActualTrendLineBrush">
            <summary>
            Gets the effective TrendLineBrush for this FinancialPriceSeries.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.DisplayType">
            <summary>
            Gets or sets the display type for the current FinancialPriceSeries object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialPriceSeries.ShouldSerializeDisplayType">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.DisplayType"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.DisplayType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialPriceSeries.ResetDisplayType">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.DisplayType"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.DisplayType"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.NegativeOutline">
            <summary>
            Brush to use for outlining negative elements in the series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialPriceSeries.ShouldSerializeNegativeOutline">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.NegativeOutline"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.NegativeOutline"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialPriceSeries.ResetNegativeOutline">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.NegativeOutline"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.NegativeOutline"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLineBrush">
            <summary>
            Gets or sets the brush to use to draw the trend line.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialPriceSeries.ShouldSerializeTrendLineBrush">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLineBrush"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLineBrush"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialPriceSeries.ResetTrendLineBrush">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLineBrush"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLineBrush"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLinePeriod">
            <summary>
            Gets or sets the trend line period for the current series.        
            </summary>
            <remarks>
            The typical, and initial, value for trend line period is 7.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialPriceSeries.ShouldSerializeTrendLinePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLinePeriod"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLinePeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialPriceSeries.ResetTrendLinePeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLinePeriod"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLinePeriod"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLineThickness">
            <summary>
            Gets or sets the thickness of the current FinancialPriceSeries object's trend line.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialPriceSeries.ShouldSerializeTrendLineThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLineThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLineThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialPriceSeries.ResetTrendLineThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLineThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLineThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLineType">
            <summary>
            Gets or sets the trend type for the current financial series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialPriceSeries.ShouldSerializeTrendLineType">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLineType"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLineType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialPriceSeries.ResetTrendLineType">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLineType"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLineType"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLineZIndex">
            <summary>
            Gets or sets the trend line Z index for the current series.
            <remarks>
            The trend line renders over the series and markers by default, lower this value to shift it to the background.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialPriceSeries.ShouldSerializeTrendLineZIndex">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLineZIndex"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLineZIndex"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialPriceSeries.ResetTrendLineZIndex">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLineZIndex"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FinancialPriceSeries.TrendLineZIndex"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FinancialPriceSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ForceIndexIndicator">
            <summary>
            Represents a UltraDataChart Force Index indicator series.
            </summary>
            <remarks>
            Default required members: Close, Volume
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ForceIndexIndicator.#ctor">
            <summary>
            Creates an instance of the ForceIndexIndicator
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ForceIndexIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current AverageTrueRangeSeries object.
            <remarks>
            The typical, and initial, value for ForceIndiex periods is 0.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ForceIndexIndicator.ShouldSerializePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ForceIndexIndicator.Period"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ForceIndexIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ForceIndexIndicator.ResetPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ForceIndexIndicator.Period"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ForceIndexIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ForceIndexIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.FormatLabelEventArgs">
            <summary>
            Represents event arguments for PieChartFormatLabel.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FormatLabelEventArgs.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.FormatLabelEventArgs"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FormatLabelEventArgs.Label">
            <summary>
            Gets or sets the label text.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.FormatLabelHandler">
            <summary>
            Represents delegate for PieChartFormatLabel.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.FragmentBase">
            <summary>
            Represents one part of a stacked series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FragmentBase.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.FullStochasticOscillatorIndicator">
            <summary>
            Represents a UltraDataChart Full Stochastic Oscillator indicator series.
            </summary>
            <remarks>
            Default required members: High, Low, Close
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FullStochasticOscillatorIndicator.#ctor">
            <summary>
            Creates an instance of the FullStochasticOscillatorIndicator
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FullStochasticOscillatorIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current FullStochasticOscillatorIndicator object.
            <remarks>
            The typical, and initial, value for FullStochasticOscillatorIndicator periods is 14.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FullStochasticOscillatorIndicator.ShouldSerializePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FullStochasticOscillatorIndicator.Period"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FullStochasticOscillatorIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FullStochasticOscillatorIndicator.ResetPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FullStochasticOscillatorIndicator.Period"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FullStochasticOscillatorIndicator.Period"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FullStochasticOscillatorIndicator.SmoothingPeriod">
            <summary>
            Gets or sets the moving average SmoothingPeriod for the current FullStochasticOscillatorIndicator object.
            <remarks>
            The typical, and initial, value for FullStochasticOscillatorIndicator SmoothingPeriod is 3.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FullStochasticOscillatorIndicator.ShouldSerializeSmoothingPeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FullStochasticOscillatorIndicator.SmoothingPeriod"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FullStochasticOscillatorIndicator.SmoothingPeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FullStochasticOscillatorIndicator.ResetSmoothingPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FullStochasticOscillatorIndicator.SmoothingPeriod"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FullStochasticOscillatorIndicator.SmoothingPeriod"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FullStochasticOscillatorIndicator.TriggerPeriod">
            <summary>
            Gets or sets the moving average TriggerPeriod for the current FullStochasticOscillatorIndicator object.
            <remarks>
            The typical, and initial, value for FullStochasticOscillatorIndicator TriggerPeriod is 3.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FullStochasticOscillatorIndicator.ShouldSerializeTriggerPeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FullStochasticOscillatorIndicator.TriggerPeriod"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FullStochasticOscillatorIndicator.TriggerPeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FullStochasticOscillatorIndicator.ResetTriggerPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FullStochasticOscillatorIndicator.TriggerPeriod"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FullStochasticOscillatorIndicator.TriggerPeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FullStochasticOscillatorIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.FunnelSliceClickedEventArgs">
            <summary>
            Information about the clicked slice.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FunnelSliceClickedEventArgs.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.FunnelSliceClickedEventArgs"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FunnelSliceClickedEventArgs.Index">
            <summary>
            The index of the clicked slice.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FunnelSliceClickedEventArgs.Item">
            <summary>
            The data item for the clicked slice.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.FunnelSliceClickedEventHandler">
            <summary>
            Event handler for when a funnel slice is clicked.
            </summary>
            <param name="sender">The owner of the slice clicked.</param>
            <param name="args">Information about the clicked slice.</param>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.FunnelSliceDataContext">
            <summary>
            Represents the funnel slice data currently in context.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FunnelSliceDataContext.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.FunnelSliceDataContext"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FunnelSliceDataContext.ItemOutline">
            <summary>
            Gets or sets the Outline to use to color the item.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FunnelSliceDataContext.ShouldSerializeItemOutline">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.FunnelSliceDataContext.ItemOutline"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.FunnelSliceDataContext.ItemOutline"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FunnelSliceDataContext.ResetItemOutline">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.FunnelSliceDataContext.ItemOutline"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.FunnelSliceDataContext.ItemOutline"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.FunnelSliceDataContext.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.FunnelSliceDisplay">
            <summary>
            Describes available behaviors for displaying height of the funnel slices.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.FunnelSliceDisplay.Uniform">
            <summary>
            The slice heights should be uniform.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.FunnelSliceDisplay.Weighted">
            <summary>
            The slice heights should be weighted by value.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.GetCategoryItemsHandler">
            <summary>
            Represents delegate for getting the category items based on indices.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.GridMode">
            <summary>
            Describes available modes of displaying elements in the chart grid, such as gridlines.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.GridMode.None">
            <summary>
            No chart grid.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.GridMode.BeforeSeries">
            <summary>
            Chart grid should be rendered before or in front of the data series.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.GridMode.BehindSeries">
            <summary>
            Chart grid should be rendered behind or in back of the data series.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.HighlightingInfo">
            <summary>
            Contains contextual information about a highlighting.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HighlightingInfo.#ctor">
            <summary>
            HighlightingInfo constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.HighlightingInfo.EndIndex">
            <summary>
            The index of the last highlighted item.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HighlightingInfo.ShouldSerializeEndIndex">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.HighlightingInfo.EndIndex"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.HighlightingInfo.EndIndex"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HighlightingInfo.ResetEndIndex">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.HighlightingInfo.EndIndex"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.HighlightingInfo.EndIndex"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.HighlightingInfo.IsMarker">
            <summary>
            True if this HighlightingInfo represents a marker highlighting.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HighlightingInfo.ShouldSerializeIsMarker">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.HighlightingInfo.IsMarker"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.HighlightingInfo.IsMarker"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HighlightingInfo.ResetIsMarker">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.HighlightingInfo.IsMarker"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.HighlightingInfo.IsMarker"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.HighlightingInfo.Progress">
            <summary>
            A number between 0 and 1 representing the progress of the highlighting.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HighlightingInfo.ShouldSerializeProgress">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.HighlightingInfo.Progress"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.HighlightingInfo.Progress"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HighlightingInfo.ResetProgress">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.HighlightingInfo.Progress"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.HighlightingInfo.Progress"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.HighlightingInfo.Series">
            <summary>
            The series in context.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.HighlightingInfo.StartIndex">
            <summary>
            The index of the first highlighted item.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HighlightingInfo.ShouldSerializeStartIndex">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.HighlightingInfo.StartIndex"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.HighlightingInfo.StartIndex"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HighlightingInfo.ResetStartIndex">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.HighlightingInfo.StartIndex"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.HighlightingInfo.StartIndex"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.HighlightingInfo.State">
            <summary>
            The state of the highlighting.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HighlightingInfo.ShouldSerializeState">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.HighlightingInfo.State"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.HighlightingInfo.State"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HighlightingInfo.ResetState">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.HighlightingInfo.State"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.HighlightingInfo.State"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.HighlightingInfo.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.HighlightingMode">
            <summary>
            Describes available behaviors for series highlighting depending on distance of mouse on hover operation.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.HighlightingMode.Closest">
            <summary>
            Specifies the highlight starts on closest element of series
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.HighlightingMode.DirectlyOver">
            <summary>
            Specifies the highlight starts when directly over element of series
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.HighlightingState">
            <summary>
            Describes available highlighting states
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.HighlightingState.Out">
            <summary>
            Highlight is transitioning out.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.HighlightingState.In">
            <summary>
            Highlight is transitioning in.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.HighlightingState.Static">
            <summary>
            Highlight is active and not transitioning in or out.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.HoleDimensionsChangedEventArgs">
            <summary>
            EventArgs class holding information about the dimensions of a hole in a doughnut chart.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.HoleDimensionsChangedEventArgs.Center">
            <summary>
            The center point of the hole.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.HoleDimensionsChangedEventArgs.Radius">
            <summary>
            The radius of the hole.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.HoleDimensionsChangedEventHandler">
            <summary>
            Event handler for HoleDimensionsChanged event.
            </summary>
            <param name="sender">Chart control</param>
            <param name="e">Doughnut hole dimensions parameters</param>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.IndicatorDisplayType">
            <summary>
            Describes available display types for financial indicators.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.IndicatorDisplayType.Line">
            <summary>
            Display indicator as a line chart.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.IndicatorDisplayType.Area">
            <summary>
            Display indicator as an area chart.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.IndicatorDisplayType.Column">
            <summary>
            Display indicator as a column chart.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ItemwiseStrategyBasedIndicator">
            <summary>
            Financial indicator base class for doing calculating an itemwize indicator.
            </summary>
            <remarks>
            An itemwise indicator's individual values don't depend on any other values in the 
            collection so can always be independently recalculated. Also, because of this, the 
            base class handles all the looping logic and inheritors only need to provide the 
            actual calculation.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ItemwiseStrategyBasedIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.LabelClickEventArgs">
            <summary>
            Contains PieChart label click event data.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.LabelClickEventArgs.AllowSliceClick">
            <summary>
            Gets and sets whether or not the owning pie chart should fire its SliceClick event
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.LabelClickEventArgs.Item">
            <summary>
            Gets the slice data context.
            </summary>
            <value>The data context.</value>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.LabelClickEventHandler">
            <summary>
            Event handler for LabelClick event.
            </summary>
            <param name="sender">Chart control</param>
            <param name="e">Label parameters</param>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.LabelsPosition">
            <summary>
            Describes available positions of labels.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.LabelsPosition.None">
            <summary>
            No labels will be displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.LabelsPosition.Center">
            <summary>
            Labels will be displayed in the center.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.LabelsPosition.InsideEnd">
            <summary>
            Labels will be displayed inside and by the edge of the container.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.LabelsPosition.OutsideEnd">
            <summary>
            Labels will be displayed outside the container.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.LabelsPosition.BestFit">
            <summary>
            Labels will automatically decide their location.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.LeaderLineType">
            <summary>
            Describes available types of a callout line for the labels.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.LeaderLineType.Straight">
            <summary>
            A straight line is drawn between the slice and its label.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.LeaderLineType.Arc">
            <summary>
            A curved line is drawn between the slice and its label. The line follows makes a natural turn from the slice to the label.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.LeaderLineType.Spline">
            <summary>
            A curved line is drawn between the slice and its label. The line starts radially from the slice and then turns to the label.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.LinearContourValueResolver">
            <summary>
            ContourValueResolver class which resolves contour lines to be distributed at linear intervals from the data minimum to the data maximum.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LinearContourValueResolver.#ctor">
            <summary>
            LinearContourValueResolver constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.LinearContourValueResolver.ValueCount">
            <summary>
            Gets or sets how many contour values to return.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LinearContourValueResolver.ShouldSerializeValueCount">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.LinearContourValueResolver.ValueCount"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.LinearContourValueResolver.ValueCount"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LinearContourValueResolver.ResetValueCount">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.LinearContourValueResolver.ValueCount"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.LinearContourValueResolver.ValueCount"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LinearContourValueResolver.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.LineFragment">
            <summary>
            Represents one part of a StackedLineSeries.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LineFragment.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.LineSeries">
            <summary>
            Represents a UltraDataChart line series.
            <para>Displays trend over time or ordered categories.</para>
            <para>Useful when there are many data points and the order is important.</para>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LineSeries.#ctor">
            <summary>
            Initializes a new instance of the LineSeries class. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.LineSeries.UnknownValuePlotting">
            <summary>
            Determines how unknown values will be plotted on the chart.
            </summary>
            <remarks>
            Null and Double.NaN are two examples of unknown values.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LineSeries.ShouldSerializeUnknownValuePlotting">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.LineSeries.UnknownValuePlotting"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.LineSeries.UnknownValuePlotting"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LineSeries.ResetUnknownValuePlotting">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.LineSeries.UnknownValuePlotting"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.LineSeries.UnknownValuePlotting"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.LineSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.MarkerSeries">
            <summary>
            Represents the base class for series containing markers.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.MarkerSeries.ActualMarkerBrush">
            <summary>
            Gets the effective marker brush for the current series object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.MarkerSeries.ActualMarkerOutline">
            <summary>
            Gets the effective marker outline for the current series object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.MarkerSeries.MarkerBrush">
            <summary>
            Gets or sets the brush that specifies how the current series object's marker interiors are painted.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MarkerSeries.ShouldSerializeMarkerBrush">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.MarkerSeries.MarkerBrush"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.MarkerSeries.MarkerBrush"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MarkerSeries.ResetMarkerBrush">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.MarkerSeries.MarkerBrush"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.MarkerSeries.MarkerBrush"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.MarkerSeries.MarkerOutline">
            <summary>
            Gets or sets the brush that specifies how the current series object's marker outlines are painted.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MarkerSeries.ShouldSerializeMarkerOutline">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.MarkerSeries.MarkerOutline"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.MarkerSeries.MarkerOutline"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MarkerSeries.ResetMarkerOutline">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.MarkerSeries.MarkerOutline"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.MarkerSeries.MarkerOutline"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.MarkerSeries.MarkerTemplate">
            <summary>
            Gets or sets the MarkerTemplate for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MarkerSeries.ShouldSerializeMarkerTemplate">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.MarkerSeries.MarkerTemplate"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.MarkerSeries.MarkerTemplate"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MarkerSeries.ResetMarkerTemplate">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.MarkerSeries.MarkerTemplate"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.MarkerSeries.MarkerTemplate"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.MarkerSeries.MarkerType">
            <summary>
            Gets or sets the marker type for the current series object.
            </summary>
            <remarks>
            If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MarkerSeries.ShouldSerializeMarkerType">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.MarkerSeries.MarkerType"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.MarkerSeries.MarkerType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MarkerSeries.ResetMarkerType">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.MarkerSeries.MarkerType"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.MarkerSeries.MarkerType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MarkerSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MarkerSeries.ResolveMarkerType(Infragistics.Win.DataVisualization.Series,Infragistics.Win.DataVisualization.MarkerType)">
            <summary>
            Returns the marker type that should be used for a series.
            </summary>
            <param name="series">The series to resolve for.</param>
            <param name="seriesMarkerType">The input marker type.</param>
            <returns>The resolved marker type.</returns>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.MarkerType">
            <summary>
            Describes available types of marker than can be displayed by default by series with markers.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.MarkerType.Unset">
            <summary>
            Marker hasn't been set.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.MarkerType.None">
            <summary>
            No markerItems.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.MarkerType.Automatic">
            <summary>
            Automatic marker shape.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.MarkerType.Circle">
            <summary>
            Circle marker shape.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.MarkerType.Triangle">
            <summary>
            Flat-top triangle marker shape.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.MarkerType.Pyramid">
            <summary>
            Flat-base triangle marker shape.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.MarkerType.Square">
            <summary>
            Square marker shape.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.MarkerType.Diamond">
            <summary>
            Diamond marker shape.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.MarkerType.Pentagon">
            <summary>
            Pentagon marker shape. 
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.MarkerType.Hexagon">
            <summary>
            Hexagon marker shape. 
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.MarkerType.Tetragram">
            <summary>
            Four-pointed star marker shape.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.MarkerType.Pentagram">
            <summary>
            Five-pointed star marker shape.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.MarkerType.Hexagram">
            <summary>
            Six-pointed star marker shape.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.MarkerType.Hidden">
            <summary>
            Renders transparent circular markers.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.MarkerTypeCollection">
            <summary>
            Represents a collection of MarkerType enumerable objects
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MarkerTypeCollection.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.MarkerTypeCollection"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MarkerTypeCollection.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.MarketFacilitationIndexIndicator">
            <summary>
            Represents a UltraDataChart Market Facilitation Index indicator series.
            </summary>
            <remarks>
            The Market Facilitation Index (MFI) indicator is represented by
            the difference of the high and the low for a bar divided by the volume.
            <para>
            Default required members: High, Low, Volume
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MarketFacilitationIndexIndicator.#ctor">
            <summary>
            Creates an instance of the MarketFacilitationIndexIndicator
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MarketFacilitationIndexIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.MassIndexIndicator">
            <summary>
            Represents a UltraDataChart Mass Index indicator series.
            </summary>
            <remarks>
            Default required members: High, Low
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MassIndexIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.MassIndexIndicator"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MassIndexIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.MedianPriceIndicator">
            <summary>
            Represents a UltraDataChart Median Price indicator series.
            </summary>
            <remarks>
            Default required members: High, Low
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MedianPriceIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.MedianPriceIndicator"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MedianPriceIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.MoneyFlowIndexIndicator">
            <summary>
            Represents a UltraDataChart Money Flow Index indicator series.
            </summary>
            <remarks> 
            <para>
            Default required members: Close, Low, High, Volume
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MoneyFlowIndexIndicator.#ctor">
            <summary>
            Creates an instance of the MoneyFlowIndexIndicator
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.MoneyFlowIndexIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current MoneyFlowIndexIndicator object.
            <remarks>
            The typical, and initial, value for MoneyFlowIndexIndicator periods is 14.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MoneyFlowIndexIndicator.ShouldSerializePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.MoneyFlowIndexIndicator.Period"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.MoneyFlowIndexIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MoneyFlowIndexIndicator.ResetPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.MoneyFlowIndexIndicator.Period"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.MoneyFlowIndexIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MoneyFlowIndexIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.MouseButtonEventHandler">
            <summary>
            Represents the method that will handle UltraDataChart mouse button related events.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.MouseEventHandler">
            <summary>
            Represents the method that will handle UltraDataChart mouse related events.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.MovingAverageConvergenceDivergenceIndicator">
            <summary>
            Represents a UltraDataChart Moving Average Convergence/Divergence (MACD) indicator series.
            </summary>
            <remarks>
            <para>
            Default required members: High, Low, Close
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MovingAverageConvergenceDivergenceIndicator.#ctor">
            <summary>
            Creates an instance of the MovingAverageConvergenceDivergenceIndicator
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.MovingAverageConvergenceDivergenceIndicator.LongPeriod">
            <summary>
            Gets or sets the long moving average period for the current MovingAverageConvergenceDivergenceIndicator object.
            <remarks>
            The typical, and initial, value for long MACD periods is 30.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MovingAverageConvergenceDivergenceIndicator.ShouldSerializeLongPeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.MovingAverageConvergenceDivergenceIndicator.LongPeriod"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.MovingAverageConvergenceDivergenceIndicator.LongPeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MovingAverageConvergenceDivergenceIndicator.ResetLongPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.MovingAverageConvergenceDivergenceIndicator.LongPeriod"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.MovingAverageConvergenceDivergenceIndicator.LongPeriod"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.MovingAverageConvergenceDivergenceIndicator.ShortPeriod">
            <summary>
            Gets or sets the short moving average period for the current MovingAverageConvergenceDivergenceIndicator object.
            <remarks>
            The typical, and initial, value for short MACD periods is 10.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MovingAverageConvergenceDivergenceIndicator.ShouldSerializeShortPeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.MovingAverageConvergenceDivergenceIndicator.ShortPeriod"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.MovingAverageConvergenceDivergenceIndicator.ShortPeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MovingAverageConvergenceDivergenceIndicator.ResetShortPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.MovingAverageConvergenceDivergenceIndicator.ShortPeriod"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.MovingAverageConvergenceDivergenceIndicator.ShortPeriod"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.MovingAverageConvergenceDivergenceIndicator.SignalPeriod">
            <summary>
            Gets or sets the long moving average period for the current MovingAverageConvergenceDivergenceIndicator object.
            <remarks>
            The typical, and initial, value for long PVO periods is 30.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MovingAverageConvergenceDivergenceIndicator.ShouldSerializeSignalPeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.MovingAverageConvergenceDivergenceIndicator.SignalPeriod"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.MovingAverageConvergenceDivergenceIndicator.SignalPeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MovingAverageConvergenceDivergenceIndicator.ResetSignalPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.MovingAverageConvergenceDivergenceIndicator.SignalPeriod"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.MovingAverageConvergenceDivergenceIndicator.SignalPeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.MovingAverageConvergenceDivergenceIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.NegativeVolumeIndexIndicator">
            <summary>
            Represents a UltraDataChart Negative Volume Index indicator (NVI) series.
            </summary>
            <remarks>
            Default required members: Close, Volume
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NegativeVolumeIndexIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.NegativeVolumeIndexIndicator"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NegativeVolumeIndexIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.NumericAngleAxis">
            <summary>
            Represents a UltraDataChart angle based axis for polar series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericAngleAxis.#ctor">
            <summary>
            Constructs a numeric angle axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.NumericAngleAxis.StartAngleOffset">
            <summary>
            Indicates the angle in degress that the chart's 0th angle should be offset.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericAngleAxis.ShouldSerializeStartAngleOffset">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.NumericAngleAxis.StartAngleOffset"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.NumericAngleAxis.StartAngleOffset"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericAngleAxis.ResetStartAngleOffset">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.NumericAngleAxis.StartAngleOffset"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.NumericAngleAxis.StartAngleOffset"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericAngleAxis.GetScaledAngle(System.Double)">
            <summary>
            Gets the scaled angle value in radians based on the raw input.
            </summary>
            <param name="unscaledValue">The raw input value.</param>
            <returns>The scaled angle value.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericAngleAxis.GetUnscaledAngle(System.Double)">
            <summary>
            Gets the raw axis value back from the angle that would be used on the chart.
            </summary>
            <param name="scaledValue">The chart angle value.</param>
            <returns>The raw axis value.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericAngleAxis.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.NumericAxisBase">
            <summary>
            Represents the base class for all UltraDataChart numeric axes.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.NumericAxisBase.AbbreviateLargeNumbers">
            <summary>
            A boolean indicating whether or not to abbreviate large numbers.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericAxisBase.ShouldSerializeAbbreviateLargeNumbers">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.AbbreviateLargeNumbers"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.AbbreviateLargeNumbers"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericAxisBase.ResetAbbreviateLargeNumbers">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.AbbreviateLargeNumbers"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.AbbreviateLargeNumbers"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.NumericAxisBase.ActualInterval">
            <summary>
            Gets the effective value for the current Interval.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.NumericAxisBase.ActualIsLogarithmic">
            <summary>
            Determines if the axis has a valid logarithmic scale.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.NumericAxisBase.ActualMaximumValue">
            <summary>
            Gets the effective maximum value for the current numeric axis object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.NumericAxisBase.ActualMinimumValue">
            <summary>
            Gets the effective minimum value for the current numeric axis object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.NumericAxisBase.ActualMinorInterval">
            <summary>
            Gets the effective value for the current MinorInterval.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.NumericAxisBase.ActualVisibleMaximumValue">
            <summary>
            Gets the effective visible maximum value for the current numeric axis object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.NumericAxisBase.ActualVisibleMinimumValue">
            <summary>
            Gets the effective minimum value for the current numeric axis object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.NumericAxisBase.HasUserMaximum">
            <summary>
            Determines if the axis has a user-defined maximum.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.NumericAxisBase.HasUserMinimum">
            <summary>
            Determines if the axis has a user-defined minimum.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.NumericAxisBase.Interval">
            <summary>
            Gets or sets the Interval property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericAxisBase.ShouldSerializeInterval">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.Interval"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.Interval"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericAxisBase.ResetInterval">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.Interval"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.Interval"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.NumericAxisBase.IsLogarithmic">
            <summary>
            Gets or sets the IsLogarithmic property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericAxisBase.ShouldSerializeIsLogarithmic">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.IsLogarithmic"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.IsLogarithmic"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericAxisBase.ResetIsLogarithmic">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.IsLogarithmic"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.IsLogarithmic"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.NumericAxisBase.LogarithmBase">
            <summary>
            Gets or sets the LogarithmBase property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericAxisBase.ShouldSerializeLogarithmBase">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.LogarithmBase"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.LogarithmBase"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericAxisBase.ResetLogarithmBase">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.LogarithmBase"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.LogarithmBase"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.NumericAxisBase.MaximumValue">
            <summary>
            Gets or sets the MaximumValue property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericAxisBase.ShouldSerializeMaximumValue">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.MaximumValue"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.MaximumValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericAxisBase.ResetMaximumValue">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.MaximumValue"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.MaximumValue"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.NumericAxisBase.MinimumValue">
            <summary>
            Gets or sets the MinimumValue property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericAxisBase.ShouldSerializeMinimumValue">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.MinimumValue"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.MinimumValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericAxisBase.ResetMinimumValue">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.MinimumValue"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.MinimumValue"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.NumericAxisBase.MinorInterval">
            <summary>
            Gets or sets the MinorInterval property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericAxisBase.ShouldSerializeMinorInterval">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.MinorInterval"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.MinorInterval"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericAxisBase.ResetMinorInterval">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.MinorInterval"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.MinorInterval"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.NumericAxisBase.ReferenceValue">
            <summary>
            Gets or sets the ReferenceValue property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericAxisBase.ShouldSerializeReferenceValue">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.ReferenceValue"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.ReferenceValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericAxisBase.ResetReferenceValue">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.ReferenceValue"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.NumericAxisBase.ReferenceValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericAxisBase.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericAxisBase.UnscaleValue(System.Double)">
            <summary>
            Unscales a value from screen space into axis space.
            </summary>
            <param name="unscaledValue">The scaled value in screen coordinates to unscale into axis space.</param>
            <returns>The unscaled value in axis space.</returns>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.NumericRadiusAxis">
            <summary>
            Represents a UltraDataChart radius axis for polar and radial series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericRadiusAxis.#ctor">
            <summary>
            Constructs a numeric radius axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.NumericRadiusAxis.InnerRadiusExtentScale">
            <summary>
            Defines the percentage of the maximum radius extent to leave blank at the center of the chart. Should be 
            a value between 0.0 and 1.0.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericRadiusAxis.ShouldSerializeInnerRadiusExtentScale">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.NumericRadiusAxis.InnerRadiusExtentScale"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.NumericRadiusAxis.InnerRadiusExtentScale"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericRadiusAxis.ResetInnerRadiusExtentScale">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.NumericRadiusAxis.InnerRadiusExtentScale"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.NumericRadiusAxis.InnerRadiusExtentScale"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.NumericRadiusAxis.RadiusExtentScale">
            <summary>
            Defines the percentage of the maximum radius extent to use as the maximum radius. Should be 
            a value between 0.0 and 1.0.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericRadiusAxis.ShouldSerializeRadiusExtentScale">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.NumericRadiusAxis.RadiusExtentScale"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.NumericRadiusAxis.RadiusExtentScale"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericRadiusAxis.ResetRadiusExtentScale">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.NumericRadiusAxis.RadiusExtentScale"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.NumericRadiusAxis.RadiusExtentScale"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericRadiusAxis.GetScaledValue(System.Double)">
            <summary>
            Returns a world coordinates radius length (0 - 0.5) from a raw axis value.
            </summary>
            <param name="unscaledValue">The raw axis value.</param>
            <returns>The world coordinates radius value.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericRadiusAxis.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.NumericScaleMode">
            <summary>
            Describes available scaling behaviors of a numeric axis.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.NumericScaleMode.Linear">
            <summary>
            Scale values on a linear number line.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.NumericScaleMode.Logarithmic">
            <summary>
            Scale values on a logarithmic number line.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.NumericXAxis">
            <summary>
            Represents a UltraDataChart numeric X axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericXAxis.#ctor">
            <summary>
            Initializes a new instance of the NumericXAxis class. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericXAxis.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericXAxis.ScrollRangeIntoView(System.Double,System.Double)">
            <summary>
            Scrolls the NumericXAxis so that the provided range is brought into view.
            </summary>
            <param name="minimum">The minimum value to bring into view.</param>
            <param name="maximum">The maximum value to bring into view.</param>
            <remarks>
            This method adjusts the WindowRect in order to scroll horizontally to the desired location.  This means that
            the X axis zoom level may change as it tries to fit the minimum and maximum in view.  It will not adjust the Y axis
            zoom level.
            </remarks>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.NumericYAxis">
            <summary>
            Represents a UltraDataChart numeric Y axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericYAxis.#ctor">
            <summary>
            Initializes a new instance of the NumericYAxis class. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericYAxis.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.NumericYAxis.ScrollRangeIntoView(System.Double,System.Double)">
            <summary>
            Scrolls the NumericYAxis so that the provided range is brought into view.
            </summary>
            <param name="minimum">The minimum value to bring into view.</param>
            <param name="maximum">The maximum value to bring into view.</param>
            <remarks>
            This method adjusts the WindowRect in order to scroll vertically to the desired location.  This means that
            the Y axis zoom level may change as it tries to fit the minimum and maximum in view.  It will not adjust the X axis
            zoom level.
            </remarks>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.OnBalanceVolumeIndicator">
            <summary>
            Represents a UltraDataChart On Balance Bolume indicator series.
            </summary>
            <remarks>
            <para>
            Default required members: Close, Volume
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.OnBalanceVolumeIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.OnBalanceVolumeIndicator"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.OnBalanceVolumeIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.OrdinalTimeXAxis">
            <summary>
            A horizontal axis that uses an ordinal DateTime scale.
            </summary>
            <remarks>
            On an ordinal time axis, datapoints are aligned according to their order in the ItemsSource, like a category axis.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.#ctor">
            <summary>
            Creates and returns a new instance of OrdinalTimeXAxis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.DateTimeMemberPath">
            <summary>
            Gets or sets the DateTime mapping property for the axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.ShouldSerializeDateTimeMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.DateTimeMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.DateTimeMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.ResetDateTimeMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.DateTimeMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.DateTimeMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.LabelFormats">
            <summary>
            A list of axis label formats to apply, which are selected according to the visible axis range.
            </summary>
            <remarks>
            The label format selected will be the one with the largest range smaller than the visible range of the axis.
            </remarks>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.MaximumValue">
            <summary>
            Sets the maximum DateTime value to be displayed on this axis.
            </summary>
            <remarks>
            This property can be used to constrain the items displayed on the axis, within the range of DateTimes in the ItemsSource.  It will ignore any setting outside the actual range of data.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.ShouldSerializeMaximumValue">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.MaximumValue"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.MaximumValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.ResetMaximumValue">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.MaximumValue"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.MaximumValue"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.MinimumValue">
            <summary>
            Sets the minimum DateTime value to be displayed on this axis.
            </summary>
            <remarks>
            This property can be used to constrain the items displayed on the axis, within the range of DateTimes in the ItemsSource.  It will ignore any setting outside the actual range of data.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.ShouldSerializeMinimumValue">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.MinimumValue"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.MinimumValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.ResetMinimumValue">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.MinimumValue"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.MinimumValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.OnVisibleRangeChanged(System.EventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.VisibleRangeChanged"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:System.EventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.OrdinalTimeXAxis.VisibleRangeChanged"/>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.OthersCategoryType">
            <summary>
            Describes available behaviors for calculating and grouping slices into the Others slice.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.OthersCategoryType.Number">
            <summary>
            Data value is compared directly to the value of OthersCategoryThreshold.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.OthersCategoryType.Percent">
            <summary>
            Data value is compared to OthersCategoryThreshold as a percentage of the total.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.OuterLabelAlignment">
            <summary>
            Describes available types of alignment used by the outer labels of the funnel chart.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.OuterLabelAlignment.Left">
            <summary>
            The labels will be displayed to the left of the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.OuterLabelAlignment.Right">
            <summary>
            The labels will be displayed to the right of the chart.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.PercentagePriceOscillatorIndicator">
            <summary>
            Represents a UltraDataChart percentage price oscillator series.
            </summary>
            <remarks>
            Default required members: High, Low, Volume
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PercentagePriceOscillatorIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.PercentagePriceOscillatorIndicator"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PercentagePriceOscillatorIndicator.LongPeriod">
            <summary>
            Gets or sets the long moving average period for the current PercentagePriceOscillatorIndicator object.
            <remarks>
            The typical, and initial, value for long PVO periods is 30.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PercentagePriceOscillatorIndicator.ShouldSerializeLongPeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PercentagePriceOscillatorIndicator.LongPeriod"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PercentagePriceOscillatorIndicator.LongPeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PercentagePriceOscillatorIndicator.ResetLongPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PercentagePriceOscillatorIndicator.LongPeriod"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PercentagePriceOscillatorIndicator.LongPeriod"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PercentagePriceOscillatorIndicator.ShortPeriod">
            <summary>
            Gets or sets the short moving average period for the current PercentagePriceOscillatorIndicator object.
            <remarks>
            The typical, and initial, value for short PPO periods is 10.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PercentagePriceOscillatorIndicator.ShouldSerializeShortPeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PercentagePriceOscillatorIndicator.ShortPeriod"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PercentagePriceOscillatorIndicator.ShortPeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PercentagePriceOscillatorIndicator.ResetShortPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PercentagePriceOscillatorIndicator.ShortPeriod"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PercentagePriceOscillatorIndicator.ShortPeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PercentagePriceOscillatorIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.PercentageVolumeOscillatorIndicator">
            <summary>
            Represents a UltraDataChart Percentage Volume Oscillator (PVO) series.
            </summary>
            <remarks>
            Default required members: Volume
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PercentageVolumeOscillatorIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.PercentageVolumeOscillatorIndicator"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PercentageVolumeOscillatorIndicator.LongPeriod">
            <summary>
            Gets or sets the short moving average period for the current PercentageVolumeOscillatorIndicator object.
            <remarks>
            The typical, and initial, value for long PVO periods is 30.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PercentageVolumeOscillatorIndicator.ShouldSerializeLongPeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PercentageVolumeOscillatorIndicator.LongPeriod"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PercentageVolumeOscillatorIndicator.LongPeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PercentageVolumeOscillatorIndicator.ResetLongPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PercentageVolumeOscillatorIndicator.LongPeriod"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PercentageVolumeOscillatorIndicator.LongPeriod"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PercentageVolumeOscillatorIndicator.ShortPeriod">
            <summary>
            Gets or sets the short moving average period for the current PercentageVolumeOscillatorIndicator object.
            <remarks>
            The typical, and initial, value for short PVO periods is 10.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PercentageVolumeOscillatorIndicator.ShouldSerializeShortPeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PercentageVolumeOscillatorIndicator.ShortPeriod"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PercentageVolumeOscillatorIndicator.ShortPeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PercentageVolumeOscillatorIndicator.ResetShortPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PercentageVolumeOscillatorIndicator.ShortPeriod"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PercentageVolumeOscillatorIndicator.ShortPeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PercentageVolumeOscillatorIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.PercentChangeYAxis">
            <summary>
            A horizontal axis that uses a DateTime scale.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PercentChangeYAxis.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.PercentChangeYAxis"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PercentChangeYAxis.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.PieSliceDataContext">
            <summary>
            DataContext for a pie slice.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieSliceDataContext.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.PieSliceDataContext"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieSliceDataContext.IsOthersSlice">
            <summary>
            Gets or sets whether this slice is an Others slice or not.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieSliceDataContext.ShouldSerializeIsOthersSlice">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieSliceDataContext.IsOthersSlice"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieSliceDataContext.IsOthersSlice"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieSliceDataContext.ResetIsOthersSlice">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieSliceDataContext.IsOthersSlice"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieSliceDataContext.IsOthersSlice"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieSliceDataContext.PercentValue">
            <summary>
            Gets or sets the value of this slice as a percentage of the total pie.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieSliceDataContext.ShouldSerializePercentValue">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PieSliceDataContext.PercentValue"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieSliceDataContext.PercentValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieSliceDataContext.ResetPercentValue">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PieSliceDataContext.PercentValue"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PieSliceDataContext.PercentValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieSliceDataContext.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.PieSliceOthersContext">
            <summary>
            Represents the selected data contained inside the Others slice.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieSliceOthersContext.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.PieSliceOthersContext"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PieSliceOthersContext.Data">
            <summary>
            The underlying data contained by the Others pie slice.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PieSliceOthersContext.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.PointSeries">
            <summary>
            Represents a UltraDataChart point series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PointSeries.#ctor">
            <summary>
            Initializes a new instance of the PointSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PointSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.PolarAreaSeries">
            <summary>
            Represents a UltraDataChart polar area series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarAreaSeries.#ctor">
            <summary>
            Initializes a new PolarAreaSeries instance.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PolarAreaSeries.UnknownValuePlotting">
            <summary>
            Determines how unknown values will be plotted on the chart.
            </summary>
            <remarks>
            Null and Double.NaN are two examples of unknown values.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarAreaSeries.ShouldSerializeUnknownValuePlotting">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PolarAreaSeries.UnknownValuePlotting"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarAreaSeries.UnknownValuePlotting"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarAreaSeries.ResetUnknownValuePlotting">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PolarAreaSeries.UnknownValuePlotting"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarAreaSeries.UnknownValuePlotting"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarAreaSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.PolarLineSeries">
            <summary>
            Represents a UltraDataChart polar line series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarLineSeries.#ctor">
            <summary>
            Initializes a new PolarLineSeries instance.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PolarLineSeries.UnknownValuePlotting">
            <summary>
            Determines how unknown values will be plotted on the chart.
            </summary>
            <remarks>
            Null and Double.NaN are two examples of unknown values.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarLineSeries.ShouldSerializeUnknownValuePlotting">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PolarLineSeries.UnknownValuePlotting"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarLineSeries.UnknownValuePlotting"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarLineSeries.ResetUnknownValuePlotting">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PolarLineSeries.UnknownValuePlotting"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarLineSeries.UnknownValuePlotting"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarLineSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.PolarLineSeriesBase">
            <summary>
            Represents the base class from which all UltraDataChart polar line series are derived.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarLineSeriesBase.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.PolarScatterSeries">
            <summary>
            Represents a UltraDataChart polar scatter series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarScatterSeries.#ctor">
            <summary>
            Initializes a new instance of the ScatterSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarScatterSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.PolarSplineAreaSeries">
            <summary>
            Represents a UltraDataChart polar spline area series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarSplineAreaSeries.#ctor">
            <summary>
            Initializes a new PolarAreaSeries instance.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PolarSplineAreaSeries.Stiffness">
            <summary>
            Gets or sets the Stiffness property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarSplineAreaSeries.ShouldSerializeStiffness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PolarSplineAreaSeries.Stiffness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarSplineAreaSeries.Stiffness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarSplineAreaSeries.ResetStiffness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PolarSplineAreaSeries.Stiffness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarSplineAreaSeries.Stiffness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarSplineAreaSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.PolarSplineSeries">
            <summary>
            Represents a UltraDataChart polar spline series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarSplineSeries.#ctor">
            <summary>
            Initializes a new instance of the PolarSplineSeries class. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PolarSplineSeries.Stiffness">
            <summary>
            Gets or sets the Stiffness property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarSplineSeries.ShouldSerializeStiffness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PolarSplineSeries.Stiffness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarSplineSeries.Stiffness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarSplineSeries.ResetStiffness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PolarSplineSeries.Stiffness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PolarSplineSeries.Stiffness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PolarSplineSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.PositiveVolumeIndexIndicator">
            <summary>
            Represents a UltraDataChart Positive Volume Index (PVI) indicator series.
            </summary>
            <remarks>
            Default required members: Close, Volume
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PositiveVolumeIndexIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.PositiveVolumeIndexIndicator"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PositiveVolumeIndexIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.PriceChannelOverlay">
            <summary>
            Represents a UltraDataChart Financial Price Channel Overlay series.
            </summary>
            <remarks>
            Default required members: High, Low
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PriceChannelOverlay.#ctor">
            <summary>
            Initializes a new instance of the PriceChannelOverlay class. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.PriceChannelOverlay.Period">
            <summary>
            Gets or sets the moving average period for the current PriceChannelOverlay object.
            <remarks>
            The typical, and initial, value for Bollinger band periods is 14.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PriceChannelOverlay.ShouldSerializePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.PriceChannelOverlay.Period"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.PriceChannelOverlay.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PriceChannelOverlay.ResetPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.PriceChannelOverlay.Period"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.PriceChannelOverlay.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PriceChannelOverlay.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.PriceDisplayType">
            <summary>
            Describes available display types of financial price series.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.PriceDisplayType.Candlestick">
            <summary>
            Displays prices as a Japanese Candlestick.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.PriceDisplayType.OHLC">
            <summary>
            Displays prices as an OHLC bar. 
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.PriceVolumeTrendIndicator">
            <summary>
            Represents a UltraDataChart Price Volume Trend Indicator series.
            </summary>
            <remarks>
            Default required members: Volume, Close
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PriceVolumeTrendIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.PriceVolumeTrendIndicator"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.PriceVolumeTrendIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.RadialAreaSeries">
            <summary>
            Represents a UltraDataChart radial area series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialAreaSeries.#ctor">
            <summary>
            Initializes a new instance of the RadialAreaSeries class. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RadialAreaSeries.UnknownValuePlotting">
            <summary>
            Determines how unknown values will be plotted on the chart.
            </summary>
            <remarks>
            Null and Double.NaN are two examples of unknown values.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialAreaSeries.ShouldSerializeUnknownValuePlotting">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RadialAreaSeries.UnknownValuePlotting"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RadialAreaSeries.UnknownValuePlotting"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialAreaSeries.ResetUnknownValuePlotting">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RadialAreaSeries.UnknownValuePlotting"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RadialAreaSeries.UnknownValuePlotting"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialAreaSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.RadialColumnSeries">
            <summary>
            Represents a UltraDataChart radial column series.
            <remarks>Compare values across categories by using radial rectangles.</remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialColumnSeries.#ctor">
            <summary>
            Initializes a new instance of the RadialColumnSeries class. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RadialColumnSeries.RadiusX">
            <summary>
            Gets or sets the x-radius of the ellipse that is used to round the corners of the column.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialColumnSeries.ShouldSerializeRadiusX">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RadialColumnSeries.RadiusX"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RadialColumnSeries.RadiusX"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialColumnSeries.ResetRadiusX">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RadialColumnSeries.RadiusX"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RadialColumnSeries.RadiusX"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RadialColumnSeries.RadiusY">
            <summary>
            Gets or sets the y-radius of the ellipse that is used to round the corners of the column.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialColumnSeries.ShouldSerializeRadiusY">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RadialColumnSeries.RadiusY"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RadialColumnSeries.RadiusY"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialColumnSeries.ResetRadiusY">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RadialColumnSeries.RadiusY"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RadialColumnSeries.RadiusY"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialColumnSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.RadialLineSeries">
            <summary>
            Represents a UltraDataChart radial line series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialLineSeries.#ctor">
            <summary>
            Initializes a new instance of the RadialLineSeries class. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RadialLineSeries.UnknownValuePlotting">
            <summary>
            Determines how unknown values will be plotted on the chart.
            </summary>
            <remarks>
            Null and Double.NaN are two examples of unknown values.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialLineSeries.ShouldSerializeUnknownValuePlotting">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RadialLineSeries.UnknownValuePlotting"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RadialLineSeries.UnknownValuePlotting"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialLineSeries.ResetUnknownValuePlotting">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RadialLineSeries.UnknownValuePlotting"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RadialLineSeries.UnknownValuePlotting"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialLineSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.RadialPieSeries">
            <summary>
            Represents a UltraDataChart radial pie series.
            <remarks>Compare values across categories by using radial pie slices.</remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialPieSeries.#ctor">
            <summary>
            Initializes a new instance of the ColumnSeries class. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RadialPieSeries.RadiusX">
            <summary>
            Gets or sets the x-radius of the ellipse that is used to round the corners of the column.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialPieSeries.ShouldSerializeRadiusX">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RadialPieSeries.RadiusX"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RadialPieSeries.RadiusX"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialPieSeries.ResetRadiusX">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RadialPieSeries.RadiusX"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RadialPieSeries.RadiusX"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RadialPieSeries.RadiusY">
            <summary>
            Gets or sets the y-radius of the ellipse that is used to round the corners of the column.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialPieSeries.ShouldSerializeRadiusY">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RadialPieSeries.RadiusY"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RadialPieSeries.RadiusY"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialPieSeries.ResetRadiusY">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RadialPieSeries.RadiusY"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RadialPieSeries.RadiusY"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RadialPieSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.RangeAreaSeries">
            <summary>
            Represents a UltraDataChart range area series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RangeAreaSeries.#ctor">
            <summary>
            Initializes a new instance of the RangeAreaSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RangeAreaSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.RangeCategorySeries">
            <summary>
            Represents the base class for all UltraDataChart ranged category/value series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RangeCategorySeries.HighMemberPath">
            <summary>
            Gets or sets the value mapping property for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RangeCategorySeries.ShouldSerializeHighMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RangeCategorySeries.HighMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RangeCategorySeries.HighMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RangeCategorySeries.ResetHighMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RangeCategorySeries.HighMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RangeCategorySeries.HighMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RangeCategorySeries.LowMemberPath">
            <summary>
            Gets or sets the value mapping property for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RangeCategorySeries.ShouldSerializeLowMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RangeCategorySeries.LowMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RangeCategorySeries.LowMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RangeCategorySeries.ResetLowMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RangeCategorySeries.LowMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RangeCategorySeries.LowMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RangeCategorySeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.RangeColumnSeries">
            <summary>
            Represents a UltraDataChart range column series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RangeColumnSeries.#ctor">
            <summary>
            Initializes a new instance of the AreaSeries class. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RangeColumnSeries.RadiusX">
            <summary>
            Gets or sets the x-radius of the ellipse that is used to round the corners of the column.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RangeColumnSeries.ShouldSerializeRadiusX">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RangeColumnSeries.RadiusX"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RangeColumnSeries.RadiusX"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RangeColumnSeries.ResetRadiusX">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RangeColumnSeries.RadiusX"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RangeColumnSeries.RadiusX"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RangeColumnSeries.RadiusY">
            <summary>
            Gets or sets the y-radius of the ellipse that is used to round the corners of the column.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RangeColumnSeries.ShouldSerializeRadiusY">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RangeColumnSeries.RadiusY"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RangeColumnSeries.RadiusY"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RangeColumnSeries.ResetRadiusY">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RangeColumnSeries.RadiusY"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RangeColumnSeries.RadiusY"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RangeColumnSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.RateOfChangeAndMomentumIndicator">
            <summary>
            Represents a UltraDataChart Rate of Change and Momentum indicator series.
            </summary>
            <remarks>
            Default required members: Close
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RateOfChangeAndMomentumIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.RateOfChangeAndMomentumIndicator"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RateOfChangeAndMomentumIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current AverageTrueRangeSeries object.
            <remarks>
            The typical, and initial, value for AverageTrueRange periods is 14.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RateOfChangeAndMomentumIndicator.ShouldSerializePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RateOfChangeAndMomentumIndicator.Period"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RateOfChangeAndMomentumIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RateOfChangeAndMomentumIndicator.ResetPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RateOfChangeAndMomentumIndicator.Period"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RateOfChangeAndMomentumIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RateOfChangeAndMomentumIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.RefreshCompletedEventHandler">
            <summary>
            Delegate for RefreshCompleted events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Contextual information associated with the event.</param>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.RelativeStrengthIndexIndicator">
            <summary>
            Represents a UltraDataChart Relative Strength Index indicator series.
            </summary>
            <remarks>
            Default required members: Close
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RelativeStrengthIndexIndicator.#ctor">
            <summary>
            Creates an instance of the RelativeStrengthIndexIndicator
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RelativeStrengthIndexIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current RelativeStrengthIndexIndicator object.
            <remarks>
            The typical, and initial, value for RSI periods is 14.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RelativeStrengthIndexIndicator.ShouldSerializePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.RelativeStrengthIndexIndicator.Period"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.RelativeStrengthIndexIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RelativeStrengthIndexIndicator.ResetPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.RelativeStrengthIndexIndicator.Period"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.RelativeStrengthIndexIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RelativeStrengthIndexIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.RenderRequestedEventArgs">
            <summary>
            EventArgs class for RenderRequested events.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.RenderRequestedEventArgs.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.RenderRequestedEventArgs"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.RenderRequestedEventArgs.Animate">
            <summary>
            True if animation is requested.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.RenderRequestedEventHandler">
            <summary>
            Delegate for RefreshCompleted events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Contextual information associated with the event.</param>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ScatterAreaSeries">
            <summary>
            Series class which draws a colored 2D surface based on a triangulation of XY data with numeric values assigned to each point.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterAreaSeries.#ctor">
            <summary>
            Creates an instance of ScatterAreaSeries.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterAreaSeries.ColorMemberPath">
            <summary>
            Gets or sets the name of the property on each data item containing a numeric value which can be converted to a color by the ColorScale.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterAreaSeries.ShouldSerializeColorMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterAreaSeries.ColorMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterAreaSeries.ColorMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterAreaSeries.ResetColorMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterAreaSeries.ColorMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterAreaSeries.ColorMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterAreaSeries.ColorScale">
            <summary>
            Gets or sets ColorScale used to resolve the color values of points in the series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterAreaSeries.ShouldSerializeColorScale">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterAreaSeries.ColorScale"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterAreaSeries.ColorScale"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterAreaSeries.ResetColorScale">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterAreaSeries.ColorScale"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterAreaSeries.ColorScale"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterAreaSeries.AttachImage(System.Object)">
            <summary>
            Attaches an image to the view of this series
            </summary> 
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterAreaSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ScatterContourSeries">
            <summary>
            Series class for rendering isarithmic contours based on a triangulation of X+Y+Value points in the ItemsSource.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterContourSeries.#ctor">
            <summary>
            ScatterContourSeries constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterContourSeries.FillScale">
            <summary>
            Gets or sets the ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterContourSeries.ShouldSerializeFillScale">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterContourSeries.FillScale"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterContourSeries.FillScale"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterContourSeries.ResetFillScale">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterContourSeries.FillScale"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterContourSeries.FillScale"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterContourSeries.ValueMemberPath">
            <summary>
            Gets or set the name of the property from which to retrieve the numeric values from the ItemsSource items.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterContourSeries.ShouldSerializeValueMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterContourSeries.ValueMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterContourSeries.ValueMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterContourSeries.ResetValueMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterContourSeries.ValueMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterContourSeries.ValueMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterContourSeries.ValueResolver">
            <summary>
            Gets or set the ContourValueResolver used to determine the numeric values of contours.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterContourSeries.ShouldSerializeValueResolver">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterContourSeries.ValueResolver"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterContourSeries.ValueResolver"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterContourSeries.ResetValueResolver">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterContourSeries.ValueResolver"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterContourSeries.ValueResolver"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterContourSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ScatterLineSeries">
            <summary>
            Represents a UltraDataChart scatter line series
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterLineSeries.#ctor">
            <summary>
            Initializes a new instance of the ScatterLineSeries class. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterLineSeries.UnknownValuePlotting">
            <summary>
            Determines how unknown values will be plotted on the chart.
            </summary>
            <remarks>
            Null and Double.NaN are two examples of unknown values.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterLineSeries.ShouldSerializeUnknownValuePlotting">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterLineSeries.UnknownValuePlotting"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterLineSeries.UnknownValuePlotting"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterLineSeries.ResetUnknownValuePlotting">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterLineSeries.UnknownValuePlotting"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterLineSeries.UnknownValuePlotting"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterLineSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ScatterPolygonSeries">
            <summary>
            Series class which renders polygons as Paths based on lists of points in the ItemsSource.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterPolygonSeries.#ctor">
            <summary>
            ScatterPolygonSeries constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ActualMarkerBrush">
            <summary>
            Gets the effective marker brush for the current series object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ActualMarkerOutline">
            <summary>
            Gets the effective marker outline for the current series object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ActualMarkerTemplate">
            <summary>
            Gets the effective marker template for the current series object.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerBrush">
            <summary>
            Gets or sets the brush that specifies how the current series object's marker interiors are painted.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ShouldSerializeMarkerBrush">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerBrush"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerBrush"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ResetMarkerBrush">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerBrush"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerBrush"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerCollisionAvoidance">
            <summary>
            The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ShouldSerializeMarkerCollisionAvoidance">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerCollisionAvoidance"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerCollisionAvoidance"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ResetMarkerCollisionAvoidance">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerCollisionAvoidance"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerCollisionAvoidance"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerOutline">
            <summary>
            Gets or sets the brush that specifies how the current series object's marker outlines are painted.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ShouldSerializeMarkerOutline">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerOutline"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerOutline"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ResetMarkerOutline">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerOutline"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerOutline"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerTemplate">
            <summary>
            Gets or sets the MarkerTemplate for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ShouldSerializeMarkerTemplate">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerTemplate"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerTemplate"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ResetMarkerTemplate">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerTemplate"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerTemplate"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerType">
            <summary>
            Gets or sets the marker type for the current series object.
            </summary>
            <remarks>
            If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ShouldSerializeMarkerType">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerType"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ResetMarkerType">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerType"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.MarkerType"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ShapeStyle">
            <summary>
            The default style to apply to all Shapes in the series.
            </summary>        
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ShouldSerializeShapeStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ShapeStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ShapeStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ResetShapeStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ShapeStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ShapeStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ShapeStyleSelector">
            <summary>
            The StyleSelector which is used to select a style for each Shape.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ShouldSerializeShapeStyleSelector">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ShapeStyleSelector"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ShapeStyleSelector"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ResetShapeStyleSelector">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ShapeStyleSelector"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterPolygonSeries.ShapeStyleSelector"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterPolygonSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ScatterPolylineSeries">
            <summary>
            Series class used for displaying multiple polylines for datasources which contain multiple lists of points.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterPolylineSeries.#ctor">
            <summary>
            ScatterPolylineSeries constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterPolylineSeries.ShapeStyle">
            <summary>
            The default style to apply to all Shapes in the series.
            </summary>        
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterPolylineSeries.ShouldSerializeShapeStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterPolylineSeries.ShapeStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterPolylineSeries.ShapeStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterPolylineSeries.ResetShapeStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterPolylineSeries.ShapeStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterPolylineSeries.ShapeStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterPolylineSeries.ShapeStyleSelector">
            <summary>
            The StyleSelector which is used to select a style for each Shape.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterPolylineSeries.ShouldSerializeShapeStyleSelector">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterPolylineSeries.ShapeStyleSelector"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterPolylineSeries.ShapeStyleSelector"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterPolylineSeries.ResetShapeStyleSelector">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterPolylineSeries.ShapeStyleSelector"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterPolylineSeries.ShapeStyleSelector"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterPolylineSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ScatterSeries">
            <summary>
            Represents a UltraDataChart scatter series
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterSeries.#ctor">
            <summary>
            Initializes a new instance of the ScatterSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ScatterSplineSeries">
            <summary>
            Represents a UltraDataChart scatter spline series
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterSplineSeries.#ctor">
            <summary>
            Initializes a new instance of the ScatterSplineSeries class. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterSplineSeries.Stiffness">
            <summary>
            Gets or sets the Stiffness property.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterSplineSeries.ShouldSerializeStiffness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterSplineSeries.Stiffness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterSplineSeries.Stiffness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterSplineSeries.ResetStiffness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterSplineSeries.Stiffness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterSplineSeries.Stiffness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterSplineSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ScatterTriangulationSeries">
            <summary>
            Base class for series which triangulate XY data prior to rendering.
            </summary>
            <summary>
            Base class for series which triangulate XY data prior to rendering.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.TrianglesSource">
            <summary>
            The source of triangulation data.
            </summary>
            <remarks>This property is optional.  If it is left as null, the triangulation will be created based on the items in the ItemsSource.  Triangulation is a demanding operation, so the runtime performance will be better when specifying a TriangulationSource, especially when a large number of data items are present.</remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.ShouldSerializeTrianglesSource">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.TrianglesSource"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.TrianglesSource"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.ResetTrianglesSource">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.TrianglesSource"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.TrianglesSource"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.TriangleVertexMemberPath1">
            <summary>
            The name of the property of the TrianglesSource items which, for each triangle, contains the index of the first vertex point in the ItemsSource.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.ShouldSerializeTriangleVertexMemberPath1">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.TriangleVertexMemberPath1"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.TriangleVertexMemberPath1"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.ResetTriangleVertexMemberPath1">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.TriangleVertexMemberPath1"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.TriangleVertexMemberPath1"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.TriangleVertexMemberPath2">
            <summary>
            The name of the property of the TrianglesSource items which, for each triangle, contains the index of the second vertex point in the ItemsSource.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.ShouldSerializeTriangleVertexMemberPath2">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.TriangleVertexMemberPath2"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.TriangleVertexMemberPath2"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.ResetTriangleVertexMemberPath2">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.TriangleVertexMemberPath2"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.TriangleVertexMemberPath2"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.TriangleVertexMemberPath3">
            <summary>
            The name of the property of the TrianglesSource items which, for each triangle, contains the index of the third vertex point in the ItemsSource.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.ShouldSerializeTriangleVertexMemberPath3">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.TriangleVertexMemberPath3"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.TriangleVertexMemberPath3"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.ResetTriangleVertexMemberPath3">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.TriangleVertexMemberPath3"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.TriangleVertexMemberPath3"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.XMemberPath">
            <summary>
            The name of the property from which to extract the X-coordinate for each item in the ItemsSource.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.ShouldSerializeXMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.XMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.XMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.ResetXMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.XMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.XMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.YMemberPath">
            <summary>
            The name of the property from which to extract the Y-coordinate for each item in the ItemsSource.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.ShouldSerializeYMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.YMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.YMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.ResetYMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.YMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.YMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.OnTriangulationStatusChanged(Infragistics.Controls.Charts.TriangulationStatusEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.TriangulationStatusChanged"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Controls.Charts.TriangulationStatusEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.TriangulationStatusChanged"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.TriangulationStatusChanged">
            <summary>
            Raised when the status of an ongoing Triangulation has changed.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.XAxis">
            <summary>
            The X-Axis for this series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.ShouldSerializeXAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.XAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.XAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.ResetXAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.XAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.XAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.YAxis">
            <summary>
            The Y-Axis for this series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.ShouldSerializeYAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.YAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.YAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.ResetYAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.YAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.YAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.XAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.ShouldSerializeXAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.ResetXAxisId">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.XAxisId"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.XAxisId"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.YAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.ShouldSerializeYAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.ResetYAxisId">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.YAxisId"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ScatterTriangulationSeries.YAxisId"/>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.SelectedItemChangedEventArgs">
            <summary>
            Provides data for the SelectedItemChanged event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SelectedItemChangedEventArgs.#ctor(System.Object,System.Object)">
            <summary>
            Creates an instance of the SelectedItemChangedEventArgs class.
            </summary>
            <param name="oldItem">Previously selected item</param>
            <param name="newItem">Newly selected item</param>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SelectedItemChangedEventArgs.NewItem">
            <summary>
            The newly selected item.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SelectedItemChangedEventArgs.OldItem">
            <summary>
            The previously selected item.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.SelectedItemChangedEventHandler">
            <summary>
            Represents the method that will handle the SelectedItemChanged event.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.SelectedItemChangingEventArgs">
            <summary>
            Provides data for the SelectedItemChanging event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SelectedItemChangingEventArgs.#ctor(System.Object,System.Object)">
            <summary>
            Creates an instance of the SelectedItemChangingEventArgs class.
            </summary>
            <param name="oldItem">Currently selected item</param>
            <param name="newItem">Item being selected</param>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SelectedItemChangingEventArgs.Cancel">
            <summary>
            Set this to true in order to stop the SelectedItem from changing.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.SelectedItemChangingEventHandler">
            <summary>
            Represents the method that will handle the SelectedItemChanging event.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.SelectedItemsChangedEventArgs">
            <summary>
            Provides data for the SelectedItemsChanged event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SelectedItemsChangedEventArgs.#ctor(System.Collections.IList,System.Collections.IList)">
            <summary>
            SelectedItemsChangedEventArgs constructor.
            </summary>
            <param name="oldItems">A list of the previously selected items.</param>
            <param name="newItems">A list of the items being selected.</param>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SelectedItemsChangedEventArgs.NewItems">
            <summary>
            A list of the items being selected.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SelectedItemsChangedEventArgs.OldItems">
            <summary>
            A list of the previously selected items.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.SelectedItemsChangedEventHandler">
            <summary>
            Represents the method that will handle the SelectedItemChanging event.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.SelectedItemsChangingEventArgs">
            <summary>
            Provides data for the SelectedItemsChanging event.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SelectedItemsChangingEventArgs.#ctor(System.Collections.IList,System.Collections.IList)">
            <summary>
            SelectedItemsChangingEventArgs constructor.
            </summary>
            <param name="oldItems">A list of the currently selected items.</param>
            <param name="newItems">A list of the items being selected.</param>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SelectedItemsChangingEventArgs.Cancel">
            <summary>
            Set this to true in order to stop the SelectedItems collection from changing.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.SelectedItemsChangingEventHandler">
            <summary>
            Represents the method that will handle the SelectedItemsChanging event.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.SeriesHitTestMode">
            <summary>
            Describes available behaviors for performing hit testing in the chart/map.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.SeriesHitTestMode.Auto">
            <summary>
            Automatically decide the appropriate hit test mode for the series.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.SeriesHitTestMode.Computational">
            <summary>
            Use a computational based approach to determine whether the series has been hit. This uses loose bounding boxes, in some cases, and can range in time complexity between O(1) and O(log n) to find a hit. This decreases frame render time compared to color encoded.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.SeriesHitTestMode.ColorEncoded">
            <summary>
            Use a color encoded off screen buffer for hit testing. Should always be O(1) time for determining a hit series. This increases frame render time and memory usage, however. Consider using this if hit testing time is degrading performance.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ShapeSeriesBase">
            <summary>
            Series class for rendering polygons.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.ShapeSeriesBase.ShapeFilterResolutionPropertyName">
            <summary>
            Gets the name of ShapeFilterResolution
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.ShapeSeriesBase.ShapeMemberPathPropertyName">
            <summary>
            Gets the name of ShapeMemberPathProperty
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.ShapeFilterResolution">
            <summary>
            The resolution at which to filter out shapes in the series.  For example, if the ShapeFilterResolution is set to 3, then elements with a bounding rectangle smaller than 3 X 3 pixels will be filtered out.
            </summary>
            <remarks>
            In the case of ScatterPolylineSeries, the resolution is compared to either dimension, rather than both.  In other words, a polyline will not be filtered if its height or its width exceeds the value of this property.  Whereas with a ShapeSeries, both the height and the width must exceed the value of this property.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ShapeSeriesBase.ShouldSerializeShapeFilterResolution">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.ShapeFilterResolution"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.ShapeFilterResolution"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ShapeSeriesBase.ResetShapeFilterResolution">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.ShapeFilterResolution"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.ShapeFilterResolution"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.ShapeMemberPath">
            <summary>
            The name of the property on ItemsSource items which, for each shape, contains a list of points to be converted to a polygon.
            </summary>
            <remarks>
            To be consistent with the Shapefile technical description, it is expected that each list of points is defined as an IEnumerable of IEnumerable of Point, or in other words, a list of lists of points.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ShapeSeriesBase.ShouldSerializeShapeMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.ShapeMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.ShapeMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ShapeSeriesBase.ResetShapeMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.ShapeMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.ShapeMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ShapeSeriesBase.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.XAxis">
            <summary>
            Gets or sets the effective x-axis for the current ScatterBase object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ShapeSeriesBase.ShouldSerializeXAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.XAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.XAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ShapeSeriesBase.ResetXAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.XAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.XAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.YAxis">
            <summary>
            Gets or sets the effective y-axis for the current ScatterBase object.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ShapeSeriesBase.ShouldSerializeYAxis">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.YAxis"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.YAxis"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ShapeSeriesBase.ResetYAxis">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.YAxis"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.YAxis"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.XAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ShapeSeriesBase.ShouldSerializeXAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ShapeSeriesBase.ResetXAxisId">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.XAxisId"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.XAxisId"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.YAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ShapeSeriesBase.ShouldSerializeYAxisId">
            <summary>
            For Infragistics internal use only.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ShapeSeriesBase.ResetYAxisId">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.YAxisId"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ShapeSeriesBase.YAxisId"/>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.SizeScale">
            <summary>
            Represents a scale that is used determine an object's size.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SizeScale.#ctor">
            <summary>
            Creates a new instance of SizeScale.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SizeScale.IsLogarithmic">
            <summary>
            Gets or sets whether the scale is logarithmic.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SizeScale.ShouldSerializeIsLogarithmic">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SizeScale.IsLogarithmic"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SizeScale.IsLogarithmic"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SizeScale.ResetIsLogarithmic">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SizeScale.IsLogarithmic"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SizeScale.IsLogarithmic"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SizeScale.LogarithmBase">
            <summary>
            Gets or sets the logarithm base for this scale.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SizeScale.ShouldSerializeLogarithmBase">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SizeScale.LogarithmBase"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SizeScale.LogarithmBase"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SizeScale.ResetLogarithmBase">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SizeScale.LogarithmBase"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SizeScale.LogarithmBase"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SizeScale.MaximumValue">
            <summary>
            Gets or sets the maximum value for this scale.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SizeScale.ShouldSerializeMaximumValue">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SizeScale.MaximumValue"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SizeScale.MaximumValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SizeScale.ResetMaximumValue">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SizeScale.MaximumValue"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SizeScale.MaximumValue"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SizeScale.MinimumValue">
            <summary>
            Gets or sets the minimum value for this scale.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SizeScale.ShouldSerializeMinimumValue">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SizeScale.MinimumValue"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SizeScale.MinimumValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SizeScale.ResetMinimumValue">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SizeScale.MinimumValue"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SizeScale.MinimumValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SizeScale.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SizeScale.OnPropertyChanged(System.String)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.SizeScale.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property that was changed</param>
            <seealso cref="T:System.ComponentModel.PropertyChangedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.SizeScale.PropertyChanged"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.SizeScale.PropertyChanged">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SizeScale.OnPropertyUpdated(Infragistics.Win.DataVisualization.PropertyUpdatedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.SizeScale.PropertyUpdated"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.PropertyUpdatedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.SizeScale.PropertyUpdated"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.SizeScale.PropertyUpdated">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.SliceClickEventArgs">
            <summary>
            Contains PieChart click event data.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SliceClickEventArgs.DataContext">
            <summary>
            Gets the slice data context.
            </summary>
            <value>The data context.</value>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SliceClickEventArgs.IsExploded">
            <summary>
            Gets or sets whether the slice is exploded.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SliceClickEventArgs.IsOthersSlice">
            <summary>
            Gets whether the current slice is part of the others slice.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SliceClickEventArgs.IsSelected">
            <summary>
            Gets or sets whether the slice is selected.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.SliceClickEventHandler">
            <summary>
            Event handler for SliceClick event.
            </summary>
            <param name="sender">Chart control</param>
            <param name="e">Slice parameters</param>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.SliceSelectionMode">
            <summary>
            Describes available modes for selecting slices.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.SliceSelectionMode.Manual">
            <summary>
            Slices can be programmatically selected but cannot be selected through the UI.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.SliceSelectionMode.Single">
            <summary>
            Single slice can be selected through the UI.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.SliceSelectionMode.Multiple">
            <summary>
            Multiple slices can be selected through the UI.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.SlowStochasticOscillatorIndicator">
            <summary>
            Represents a UltraDataChart Slow Stochastic Oscillator indicator series.
            </summary>
            <remarks>
            Default required members: High, Low, Close
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SlowStochasticOscillatorIndicator.#ctor">
            <summary>
            Creates an instance of the MarketFacilitationIndexIndicator
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SlowStochasticOscillatorIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current SlowStochasticOscillatorIndicator object.
            <remarks>
            The typical, and initial, value for SlowStochasticOscillatorIndicator periods is 14.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SlowStochasticOscillatorIndicator.ShouldSerializePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SlowStochasticOscillatorIndicator.Period"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SlowStochasticOscillatorIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SlowStochasticOscillatorIndicator.ResetPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SlowStochasticOscillatorIndicator.Period"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SlowStochasticOscillatorIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SlowStochasticOscillatorIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.SplineAreaFragment">
            <summary>
            Represents one part of a StackedSplineAreaSeries.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SplineAreaFragment.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.SplineAreaSeries">
            <summary>
            Represents a UltraDataChart spline area series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SplineAreaSeries.#ctor">
            <summary>
            Initializes a new instance of the SplineAreaSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SplineAreaSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.SplineFragment">
            <summary>
            Represents one part of a StackedSplineSeries.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SplineFragment.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.SplineFragmentBase">
            <summary>
            Represents one part in a StackedSplineSeries or StackedSplineAreaSeries.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SplineFragmentBase.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.SplineSeries">
            <summary>
            Represents a UltraDataChart spline series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SplineSeries.#ctor">
            <summary>
            Initializes a new instance of the SplineSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SplineSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.SplineSeriesBase">
            <summary>
             Represents the base class for all UltraDataChart spline series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.SplineSeriesBase.SplineType">
            <summary>
            Gets or sets the type of spline to be rendered.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SplineSeriesBase.ShouldSerializeSplineType">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.SplineSeriesBase.SplineType"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.SplineSeriesBase.SplineType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SplineSeriesBase.ResetSplineType">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.SplineSeriesBase.SplineType"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.SplineSeriesBase.SplineType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.SplineSeriesBase.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.SplineType">
            <summary>
            Describes available types of Spline calculations.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.SplineType.Natural">
            <summary>
            Calculates the spline using a natural spline calculation formula.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.SplineType.Clamped">
            <summary>
            Calculated the spline using a clamped spline calculation formula.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.Stacked100AreaSeries">
            <summary>
            Represents a stacked area series, where values are presented as percentages of the total.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Stacked100AreaSeries.#ctor">
            <summary>
            Initializes a new instance of a Stacked100AreaSeries class.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Stacked100AreaSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.Stacked100BarSeries">
            <summary>
            Represents a UltraDataChart stacked100 bar series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Stacked100BarSeries.#ctor">
            <summary>
            Initializes a new instance of a Stacked100BarSeries class.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Stacked100BarSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.Stacked100ColumnSeries">
            <summary>
            Represents a UltraDataChart stacked100 column series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Stacked100ColumnSeries.#ctor">
            <summary>
            Initializes a new instance of a Stacked100ColumnSeries class.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Stacked100ColumnSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.Stacked100LineSeries">
            <summary>
            Represents a UltraDataChart stacked100 line series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Stacked100LineSeries.#ctor">
            <summary>
            Initializes a new instance of a Stacked100LineSeries class.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Stacked100LineSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.Stacked100SplineAreaSeries">
            <summary>
            Represents a UltraDataChart stacked100 spline area series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Stacked100SplineAreaSeries.#ctor">
            <summary>
            Initializes a new instance of a Stacked100SplineAreaSeries class.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Stacked100SplineAreaSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.Stacked100SplineSeries">
            <summary>
            Represents a UltraDataChart stacked100 spline series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Stacked100SplineSeries.#ctor">
            <summary>
            Creates a new instance of a stacked100 spline series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.Stacked100SplineSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.StackedAreaSeries">
            <summary>
            Represents a UltraDataChart stacked area series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedAreaSeries.#ctor">
            <summary>
            Initializes a new instance of a StackedAreaSeries class.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedAreaSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.StackedBarSeries">
            <summary>
            Represents a UltraDataChart stacked bar series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedBarSeries.#ctor">
            <summary>
            Initializes a new instance of a StackedBarSeries class.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedBarSeries.RadiusX">
            <summary>
            Gets or sets the x-radius of the ellipse that is used to round the corners of the bar.
            </summary>  
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedBarSeries.ShouldSerializeRadiusX">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedBarSeries.RadiusX"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedBarSeries.RadiusX"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedBarSeries.ResetRadiusX">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedBarSeries.RadiusX"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedBarSeries.RadiusX"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedBarSeries.RadiusY">
            <summary>
            Gets or sets the y-radius of the ellipse that is used to round the corners of the bar.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedBarSeries.ShouldSerializeRadiusY">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedBarSeries.RadiusY"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedBarSeries.RadiusY"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedBarSeries.ResetRadiusY">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedBarSeries.RadiusY"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedBarSeries.RadiusY"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedBarSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.StackedColumnSeries">
            <summary>
            Represents a UltraDataChart stacked column series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedColumnSeries.#ctor">
            <summary>
            Initializes a new instance of a StackedColumnSeries class.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedColumnSeries.RadiusX">
            <summary>
            Gets or sets the x-radius of the ellipse that is used to round the corners of the column.
            </summary>  
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedColumnSeries.ShouldSerializeRadiusX">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedColumnSeries.RadiusX"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedColumnSeries.RadiusX"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedColumnSeries.ResetRadiusX">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedColumnSeries.RadiusX"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedColumnSeries.RadiusX"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedColumnSeries.RadiusY">
            <summary>
            Gets or sets the y-radius of the ellipse that is used to round the corners of the column.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedColumnSeries.ShouldSerializeRadiusY">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StackedColumnSeries.RadiusY"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedColumnSeries.RadiusY"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedColumnSeries.ResetRadiusY">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StackedColumnSeries.RadiusY"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StackedColumnSeries.RadiusY"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedColumnSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.StackedLineSeries">
            <summary>
            Represents a stacked series, where the points in each series are connected with a line.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedLineSeries.#ctor">
            <summary>
            Initializes a new instance of a StackedLineSeries class.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedLineSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.StackedSeriesCreatedEventArgs">
            <summary>
            Provides data for UltraDataChart stacked series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedSeriesCreatedEventArgs.Brush">
            <summary>
            Gets or sets the series brush.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedSeriesCreatedEventArgs.DashArray">
            <summary>
            Gets or sets the series stroke dash array.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedSeriesCreatedEventArgs.DashCap">
            <summary>
            Gets or sets the series dash cap.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedSeriesCreatedEventArgs.EndCap">
            <summary>
            Gets or sets the end cap.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedSeriesCreatedEventArgs.Index">
            <summary>
            Gets the index of the series.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedSeriesCreatedEventArgs.LegendItemVisibility">
            <summary>
            Gets or sets the visibility of the series legend.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedSeriesCreatedEventArgs.MarkerBrush">
            <summary>
            Gets or sets the series marker brush.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedSeriesCreatedEventArgs.MarkerOutline">
            <summary>
            Gets or sets the series marker outline.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedSeriesCreatedEventArgs.MarkerStyle">
            <summary>
            Gets or sets the series marker style.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedSeriesCreatedEventArgs.MarkerType">
            <summary>
            Gets or sets the series marker type.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedSeriesCreatedEventArgs.Outline">
            <summary>
            Gets or sets the series outline brush.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedSeriesCreatedEventArgs.StartCap">
            <summary>
            Gets or sets the start cap.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedSeriesCreatedEventArgs.Thickness">
            <summary>
            Gets or sets the series outline thickness.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StackedSeriesCreatedEventArgs.Title">
            <summary>
            Gets or sets the series title.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.StackedSeriesCreatedEventHandler">
            <summary>
            Event handler for the SeriesCreated event.
            </summary>
            <param name="sender">event sender</param>
            <param name="e">event parameters</param>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.StackedSplineAreaSeries">
            <summary>
            Represents a UltraDataChart stacked spline area series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedSplineAreaSeries.#ctor">
            <summary>
            Initializes a new instance of a StackedSplineAreaSeries class.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedSplineAreaSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.StackedSplineSeries">
            <summary>
            Represents a UltraDataChart stacked spline series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedSplineSeries.#ctor">
            <summary>
            Initializes a new instance of a StackedSplineSeries class.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StackedSplineSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.StandardDeviationIndicator">
            <summary>
            Represents a UltraDataChart Standard Deviation indicator series.
            </summary>
            <remarks>
            Default required members: High, Low, Close
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StandardDeviationIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.StandardDeviationIndicator"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StandardDeviationIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current StandardDeviationIndicator object.
            <remarks>
            The typical, and initial, value for STDEV periods is 20.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StandardDeviationIndicator.ShouldSerializePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StandardDeviationIndicator.Period"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StandardDeviationIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StandardDeviationIndicator.ResetPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StandardDeviationIndicator.Period"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StandardDeviationIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StandardDeviationIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.StepAreaSeries">
            <summary>
            Represents a UltraDataChart step area series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StepAreaSeries.#ctor">
            <summary>
            Initializes a new instance of the StepAreaSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StepAreaSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.StepLineSeries">
            <summary>
            Represents a UltraDataChart step line series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StepLineSeries.#ctor">
            <summary>
            Initializes a new instance of the StepLineSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StepLineSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.StochRSIIndicator">
            <summary>
            Represents a UltraDataChart StochRSI indicator series.
            </summary>
            <remarks>
            Default required members: Close
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StochRSIIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.StochRSIIndicator"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StochRSIIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current StochRSIIndicator object.
            <remarks>
            The typical, and initial, value for StochRSI periods is 14.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StochRSIIndicator.ShouldSerializePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StochRSIIndicator.Period"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StochRSIIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StochRSIIndicator.ResetPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StochRSIIndicator.Period"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StochRSIIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StochRSIIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.StraightNumericAxisBase">
            <summary>
            Defines a set of basic methods and properties used to create a StraightNumeric axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.StraightNumericAxisBase.ScaleMode">
            <summary>
            Gets or sets the axis scale mode.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StraightNumericAxisBase.ShouldSerializeScaleMode">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.StraightNumericAxisBase.ScaleMode"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.StraightNumericAxisBase.ScaleMode"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StraightNumericAxisBase.ResetScaleMode">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.StraightNumericAxisBase.ScaleMode"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.StraightNumericAxisBase.ScaleMode"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StraightNumericAxisBase.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.StrategyBasedIndicator">
            <summary>
            A base class for indicator series with simple calculations that separates the calculation
            responsibility from the other responsibilities of the financial series, this enables
            easier unit testing and decoupling of individual calculation strategies. 
            </summary>
            <remarks>
            A contract is defined between the financial series and these simple indicator calculations 
            detailing the data which the series agrees to provide the simple indicator calculations, 
            this contract is defined by <see cref="T:Infragistics.Portable.Charts.FinancialCalculationDataSource"/>. If more 
            complex interactions are needed between the indicator calculation and the series, the 
            indicators should instead derive from <see cref="T:Infragistics.Win.DataVisualization.FinancialIndicator"/> directly, or some 
            derivative other than <see cref="T:Infragistics.Win.DataVisualization.StrategyBasedIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StrategyBasedIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.StyleSelector">
            <summary>
            Base class for selecting styles for DependencyObjects based on their associated data items.
            </summary>
            <summary>
            Base class for selecting styles for DependencyObjects based on their associated data items.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StyleSelector.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.StyleSelector"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StyleSelector.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.StyleSelector.SelectStyle(System.Object,Infragistics.Portable.Components.DependencyObject)">
            <summary>
            Returns the Style to use on the given container in the context of the given item.
            </summary>
            <param name="item">The data item in context.</param>
            <param name="container">The element to which the style will be applied.</param>
            <returns>The style to use for the given item and container.</returns>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.TimeAxisBase">
            <summary>
            Represents an category-based horizontal X axis that uses a DateTime scale.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TimeAxisBase.ActualMaximumValue">
            <summary>
            Gets the coerced maximum value.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TimeAxisBase.ActualMinimumValue">
            <summary>
            Gets the coerced minimum value.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TimeAxisBase.DateTimeMemberPath">
            <summary>
            Gets or sets the DateTime mapping property for the axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisBase.ShouldSerializeDateTimeMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.TimeAxisBase.DateTimeMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.TimeAxisBase.DateTimeMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisBase.ResetDateTimeMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.TimeAxisBase.DateTimeMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.TimeAxisBase.DateTimeMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TimeAxisBase.IsDataPreSorted">
            <summary>
            Gets or sets whether the data assigned to the date time axis should be considered pre-sorted by date/time.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisBase.ShouldSerializeIsDataPreSorted">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.TimeAxisBase.IsDataPreSorted"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.TimeAxisBase.IsDataPreSorted"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisBase.ResetIsDataPreSorted">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.TimeAxisBase.IsDataPreSorted"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.TimeAxisBase.IsDataPreSorted"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TimeAxisBase.MaximumValue">
            <summary>
            Gets or sets the axis MaximumValue.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisBase.ShouldSerializeMaximumValue">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.TimeAxisBase.MaximumValue"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.TimeAxisBase.MaximumValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisBase.ResetMaximumValue">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.TimeAxisBase.MaximumValue"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.TimeAxisBase.MaximumValue"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TimeAxisBase.MinimumValue">
            <summary>
            Gets or sets the axis MinimumValue.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisBase.ShouldSerializeMinimumValue">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.TimeAxisBase.MinimumValue"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.TimeAxisBase.MinimumValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisBase.ResetMinimumValue">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.TimeAxisBase.MinimumValue"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.TimeAxisBase.MinimumValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisBase.GetIndexClosestToUnscaledValue(System.Double)">
            <summary>
            Gets the index of the data item with the value nearest the given value.
            </summary>
            <param name="unscaledValue">The value to find a value close to.</param>
            <returns>The index of the data item with the value nearest the given value.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisBase.NotifyDataChanged">
            <summary>
            Updates the axis when the data has been changed.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisBase.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.TimeAxisBreak">
            <summary>
            Settings for breaks on a time axis.
            </summary>
            <remarks>
            Axis breaks can be added to a time axis in order to omit portions of time on that axis.  For example, weekends can be skipped, if they are not relevant to your data.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisBreak.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.TimeAxisBreak"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TimeAxisBreak.End">
            <summary>
            The end time of the axis break.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisBreak.ShouldSerializeEnd">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.TimeAxisBreak.End"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.TimeAxisBreak.End"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisBreak.ResetEnd">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.TimeAxisBreak.End"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.TimeAxisBreak.End"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TimeAxisBreak.Interval">
            <summary>
            The interval at which to repeat this break, expressed as a TimeSpan.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisBreak.ShouldSerializeInterval">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.TimeAxisBreak.Interval"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.TimeAxisBreak.Interval"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisBreak.ResetInterval">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.TimeAxisBreak.Interval"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.TimeAxisBreak.Interval"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TimeAxisBreak.Start">
            <summary>
            The start time of the axis break.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisBreak.ShouldSerializeStart">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.TimeAxisBreak.Start"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.TimeAxisBreak.Start"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisBreak.ResetStart">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.TimeAxisBreak.Start"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.TimeAxisBreak.Start"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisBreak.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisBreak.OnPropertyChanged(System.String)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.TimeAxisBreak.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property that was changed</param>
            <seealso cref="T:System.ComponentModel.PropertyChangedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.TimeAxisBreak.PropertyChanged"/>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.TimeAxisBreakCollection">
            <summary>
            Collection class for TimeAxisBreak objects.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisBreakCollection.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.TimeAxisBreakCollection"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisBreakCollection.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.TimeAxisDisplayType">
            <summary>
            Describes available behaviors for displaying of gridlines, tickmarks, and labels on a time axis.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.TimeAxisDisplayType.Continuous">
            <summary>
            Points occur at even intervals, even where data is not present at a given point.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.TimeAxisDisplayType.Discrete">
            <summary>
            Points occur when data is present, possibly at uneven intervals.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.TimeAxisInterval">
            <summary>
            Settings for an interval on a time axis.
            </summary>
            <remarks>
            Label intervals can be applied to a time axis, which are dynamic, according to the visible range.  During zooming, the visible range of the axis can change, and so a different interval is selected.  The interval selected will be the one with the largest range smaller than the visible range of the axis.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisInterval.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.TimeAxisInterval"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TimeAxisInterval.Interval">
            <summary>
            The interval, expressed as a multiple of IntervalType.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisInterval.ShouldSerializeInterval">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.TimeAxisInterval.Interval"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.TimeAxisInterval.Interval"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisInterval.ResetInterval">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.TimeAxisInterval.Interval"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.TimeAxisInterval.Interval"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TimeAxisInterval.IntervalType">
            <summary>
            The unit of time for this interval.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisInterval.ShouldSerializeIntervalType">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.TimeAxisInterval.IntervalType"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.TimeAxisInterval.IntervalType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisInterval.ResetIntervalType">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.TimeAxisInterval.IntervalType"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.TimeAxisInterval.IntervalType"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TimeAxisInterval.Range">
            <summary>
            The visible axis range at which to apply this interval.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisInterval.ShouldSerializeRange">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.TimeAxisInterval.Range"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.TimeAxisInterval.Range"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisInterval.ResetRange">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.TimeAxisInterval.Range"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.TimeAxisInterval.Range"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisInterval.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisInterval.OnPropertyChanged(System.String)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.TimeAxisInterval.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property that was changed</param>
            <seealso cref="T:System.ComponentModel.PropertyChangedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.TimeAxisInterval.PropertyChanged"/>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.TimeAxisIntervalCollection">
            <summary>
            Collection class for TimeAxisInterval objects.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisIntervalCollection.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.TimeAxisIntervalCollection"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisIntervalCollection.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.TimeAxisIntervalType">
            <summary>
            Enum representing a unit of time.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.TimeAxisIntervalType.Ticks">
            <summary>
            Ticks are ten millionths of seconds.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.TimeAxisIntervalType.Milliseconds">
            <summary>
            Milliseconds.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.TimeAxisIntervalType.Seconds">
            <summary>
            Seconds.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.TimeAxisIntervalType.Minutes">
            <summary>
            Minutes.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.TimeAxisIntervalType.Hours">
            <summary>
            Hours.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.TimeAxisIntervalType.Days">
            <summary>
            Days.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.TimeAxisIntervalType.Weeks">
            <summary>
            Weeks.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.TimeAxisIntervalType.Months">
            <summary>
            Months.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.TimeAxisIntervalType.Years">
            <summary>
            Years.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.TimeAxisLabelFormat">
            <summary>
            Settings for a label format on a time axis.
            </summary>
            <remarks>
            Label formats can be applied to a time axis, which are dynamic, according to the visible range.  During zooming, the visible range of the axis can change, and so a different label format is selected.  The label format selected will be the one with the largest range smaller than the visible range of the axis.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisLabelFormat.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.TimeAxisLabelFormat"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TimeAxisLabelFormat.Format">
            <summary>
            The DateTime format string to apply.
            </summary>
            <remarks>
            Some common DateTime format strings are: yyyy, MM/dd/yy, and hh:mm:ss.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisLabelFormat.ShouldSerializeFormat">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.TimeAxisLabelFormat.Format"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.TimeAxisLabelFormat.Format"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisLabelFormat.ResetFormat">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.TimeAxisLabelFormat.Format"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.TimeAxisLabelFormat.Format"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TimeAxisLabelFormat.Range">
            <summary>
            The visible axis range at which to apply this label format.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisLabelFormat.ShouldSerializeRange">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.TimeAxisLabelFormat.Range"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.TimeAxisLabelFormat.Range"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisLabelFormat.ResetRange">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.TimeAxisLabelFormat.Range"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.TimeAxisLabelFormat.Range"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisLabelFormat.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisLabelFormat.OnPropertyChanged(System.String)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.TimeAxisLabelFormat.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property that was changed</param>
            <seealso cref="T:System.ComponentModel.PropertyChangedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.TimeAxisLabelFormat.PropertyChanged"/>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.TimeAxisLabelFormatCollection">
            <summary>
            Collection class for TimeAxisLabelFormat objects.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisLabelFormatCollection.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.TimeAxisLabelFormatCollection"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeAxisLabelFormatCollection.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.TimeXAxis">
            <summary>
            A horizontal axis that uses a DateTime scale.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeXAxis.#ctor">
            <summary>
            TimeXAxis constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TimeXAxis.Breaks">
            <summary>
            TimeAxisBreaks to apply to this axis, representing spans of time to omit, such as weekends.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TimeXAxis.Intervals">
            <summary>
            A list of axis label intervals to apply, which are selected according to the visible axis range.
            </summary>
            <remarks>
            The interval selected will be the one with the largest range smaller than the visible range of the axis.
            </remarks>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TimeXAxis.LabelFormats">
            <summary>
            A list of axis label formats to apply, which are selected according to the visible axis range.
            </summary>
            <remarks>
            The label format selected will be the one with the largest range smaller than the visible range of the axis.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeXAxis.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TimeXAxis.OnVisibleRangeChanged(System.EventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.TimeXAxis.VisibleRangeChanged"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:System.EventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.TimeXAxis.VisibleRangeChanged"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.TimeXAxis.VisibleRangeChanged">
            <summary>
            Event raised when the visible range of this axis has changed.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ToolTipType">
            <summary>
            An enum representing the available tooltip types to display in the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.ToolTipType.Default">
            <summary>
            Display default tooltip for each series in the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.ToolTipType.Item">
            <summary>
            Display individual tooltips for all series in the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.ToolTipType.Category">
            <summary>
            Display combined tooltip for all series in the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.ToolTipType.None">
            <summary>
            Display no tooltips in the chart.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.TransitionInSpeedType">
            <summary>
            Describes available types of speeds used when transitioning in a series.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.TransitionInSpeedType.Auto">
            <summary>
            A speed type is automatically selected.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.TransitionInSpeedType.Normal">
            <summary>
            All speeds are normal, data points will arrive at the same time.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.TransitionInSpeedType.ValueScaled">
            <summary>
            Data points will arrive later if their value is further from the start point.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.TransitionInSpeedType.IndexScaled">
            <summary>
            Data points will arrive later if their index is further from the axis origin.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.TransitionInSpeedType.Random">
            <summary>
            Data points will arrive at random times.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.TRIXIndicator">
            <summary>
            Represents a UltraDataChart TRIX indicator series.
            </summary>
            <remarks>
            Default required members: Close
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TRIXIndicator.#ctor">
            <summary>
            Constructs a TRIXIndicator.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TRIXIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current TRIXIndicator object.
            <remarks>
            The typical, and initial, value for TRIX periods is 15.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TRIXIndicator.ShouldSerializePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.TRIXIndicator.Period"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.TRIXIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TRIXIndicator.ResetPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.TRIXIndicator.Period"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.TRIXIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TRIXIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.TypicalPriceIndicator">
            <summary>
            Represents a UltraDataChart Typical Price indicator series.
            </summary>
            <remarks>
            The typical price indicator is represented as a arithmetic average 
            of the High, Low, and Close for a day.
            <para>
            Default required members: High, Low, Close
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TypicalPriceIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.TypicalPriceIndicator"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TypicalPriceIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.UltimateOscillatorIndicator">
            <summary>
            Represents a UltraDataChart Ultimate Oscillator indicator series.
            </summary>
            <remarks>
            Default required members: High, Low, Close
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltimateOscillatorIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.UltimateOscillatorIndicator"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltimateOscillatorIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.UltraCategoryChart">
            <summary>
            Represents a chart with an ordinal X-axis and a numeric Y-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.UltraCategoryChart"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.ChartType">
            <summary>
            Gets or sets the type of chart series to generate from the data.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeChartType">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.ChartType"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.ChartType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetChartType">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.ChartType"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.ChartType"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.IsCategoryHighlightingEnabled">
            <summary>
            Gets or sets whether the category should be highlighted when hovered
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeIsCategoryHighlightingEnabled">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.IsCategoryHighlightingEnabled"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.IsCategoryHighlightingEnabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetIsCategoryHighlightingEnabled">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.IsCategoryHighlightingEnabled"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.IsCategoryHighlightingEnabled"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.IsItemHighlightingEnabled">
            <summary>
            Gets or sets whether the item should be highlighted when hovered
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeIsItemHighlightingEnabled">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.IsItemHighlightingEnabled"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.IsItemHighlightingEnabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetIsItemHighlightingEnabled">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.IsItemHighlightingEnabled"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.IsItemHighlightingEnabled"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.IsTransitionInEnabled">
            <summary>
            Gets or sets whether animation of series plots is enabled when the chart is loading into view
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeIsTransitionInEnabled">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.IsTransitionInEnabled"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.IsTransitionInEnabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetIsTransitionInEnabled">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.IsTransitionInEnabled"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.IsTransitionInEnabled"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.MarkerCollisionAvoidance">
            <summary>
            Gets or sets the behavior for markers in each series which are placed too close together for the current view, resulting in a collision.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeMarkerCollisionAvoidance">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.MarkerCollisionAvoidance"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.MarkerCollisionAvoidance"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetMarkerCollisionAvoidance">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.MarkerCollisionAvoidance"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.MarkerCollisionAvoidance"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.ShowDefaultToolTip">
            <summary>
            Gets or sets whether or not the default tooltip will be shown.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeShowDefaultToolTip">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.ShowDefaultToolTip"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.ShowDefaultToolTip"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetShowDefaultToolTip">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.ShowDefaultToolTip"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.ShowDefaultToolTip"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.TransitionInDuration">
            <summary>
            Gets or sets the duration used for animating series plots when the chart is loading into view
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeTransitionInDuration">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.TransitionInDuration"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.TransitionInDuration"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetTransitionInDuration">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.TransitionInDuration"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.TransitionInDuration"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.TransitionInMode">
            <summary>
            Gets or sets the method that determines how to animate series plots when the chart is loading into view
            </summary> 
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeTransitionInMode">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.TransitionInMode"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.TransitionInMode"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetTransitionInMode">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.TransitionInMode"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.TransitionInMode"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.TransitionInSpeedType">
            <summary>
            Gets or sets the arrival speed used for animating series plots when the chart is loading into view
            </summary> 
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeTransitionInSpeedType">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.TransitionInSpeedType"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.TransitionInSpeedType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetTransitionInSpeedType">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.TransitionInSpeedType"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.TransitionInSpeedType"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.XAxisActualMaximum">
            <summary>
            Gets the current maximum value for the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.XAxisActualMinimum">
            <summary>
            Gets the current minimum value for the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.XAxisGap">
            <summary>
            Gets or sets the amount of space between adjacent categories for the X-axis.
            </summary>
            <remarks>
            The gap is silently clamped to the range [0, 1] when used.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeXAxisGap">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.XAxisGap"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.XAxisGap"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetXAxisGap">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.XAxisGap"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.XAxisGap"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.XAxisInterval">
            <summary>
            Gets or sets the frequency of displayed labels along the X-axis.
            </summary>
            <remarks>
            Gets or sets the set value is a factor that determines which labels will be hidden. For example, an interval of 2 will display every other label.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeXAxisInterval">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.XAxisInterval"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.XAxisInterval"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetXAxisInterval">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.XAxisInterval"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.XAxisInterval"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.XAxisMinorInterval">
            <summary>
            Gets or sets the frequency of displayed minor lines along the X-axis.
            </summary>
            <remarks>
            Gets or sets the set value is a factor that determines how the minor lines will be displayed.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeXAxisMinorInterval">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.XAxisMinorInterval"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.XAxisMinorInterval"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetXAxisMinorInterval">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.XAxisMinorInterval"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.XAxisMinorInterval"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.XAxisOverlap">
            <summary>
            Gets or sets the amount of overlap between adjacent categories for the X-axis.
            </summary>
            <remarks>
            Gets or sets the overlap is silently clamped to the range [-1, 1] when used.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeXAxisOverlap">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.XAxisOverlap"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.XAxisOverlap"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetXAxisOverlap">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.XAxisOverlap"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.XAxisOverlap"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisAbbreviateLargeNumbers">
            <summary>
            Gets or sets whether the large numbers on the Y-axis labels are abbreviated.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeYAxisAbbreviateLargeNumbers">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisAbbreviateLargeNumbers"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisAbbreviateLargeNumbers"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetYAxisAbbreviateLargeNumbers">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisAbbreviateLargeNumbers"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisAbbreviateLargeNumbers"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisActualMaximum">
            <summary>
            Gets the current maximum value for the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisActualMinimum">
            <summary>
            Gets the current minimum value for the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisInterval">
            <summary>
            Gets or sets the distance between each label and grid line along the Y-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeYAxisInterval">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisInterval"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisInterval"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetYAxisInterval">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisInterval"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisInterval"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisIsLogarithmic">
            <summary>
            Gets or sets whether the Y-axis should use a logarithmic scale instead of a linear one.
            </summary>
            <remarks>
            Since log(-1) is imaginary and log(0) is undefined, it is recommended to enable this property only when the Y-axis minimum is greater than zero.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeYAxisIsLogarithmic">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisIsLogarithmic"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisIsLogarithmic"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetYAxisIsLogarithmic">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisIsLogarithmic"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisIsLogarithmic"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisLogarithmBase">
            <summary>
            Gets or sets the base value to use in the log function when mapping the position of data items along the Y-axis.
            </summary>
            <remarks>
            This property is effective only when YAxisIsLogarithmic is true.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeYAxisLogarithmBase">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisLogarithmBase"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisLogarithmBase"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetYAxisLogarithmBase">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisLogarithmBase"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisLogarithmBase"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisMaximumValue">
            <summary>
            Gets or sets the data value corresponding to the maximum value of the Y-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeYAxisMaximumValue">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisMaximumValue"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisMaximumValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetYAxisMaximumValue">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisMaximumValue"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisMaximumValue"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisMinimumValue">
            <summary>
            Gets or sets the data value corresponding to the minimum value of the Y-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeYAxisMinimumValue">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisMinimumValue"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisMinimumValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetYAxisMinimumValue">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisMinimumValue"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisMinimumValue"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisMinorInterval">
            <summary>
            Gets or sets the frequency of displayed minor lines along the Y-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeYAxisMinorInterval">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisMinorInterval"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisMinorInterval"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetYAxisMinorInterval">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisMinorInterval"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisMinorInterval"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.About">
            <summary>
            Display the about dialog.
            </summary>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.UltraCategoryChart.XAxisFormatLabel">
            <summary>
            Gets or sets function which takes a context object and returns a formatted label for the X-axis.
            </summary>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.UltraCategoryChart.YAxisFormatLabel">
            <summary>
            Gets or sets function which takes a context object and returns a formatted label for the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.Brushes">
            <summary>
            Gets or sets the palette of brushes to use for coloring the chart series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeBrushes">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.Brushes"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.Brushes"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetBrushes">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.Brushes"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.Brushes"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.Outlines">
            <summary>
            Gets or sets the palette of brushes to use for outlines on the chart series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeOutlines">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.Outlines"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.Outlines"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetOutlines">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.Outlines"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.Outlines"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.TrendLineBrushes">
            <summary>
            Gets or sets the palette of brushes to used for coloring trend lines in this chart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeTrendLineBrushes">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.TrendLineBrushes"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.TrendLineBrushes"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetTrendLineBrushes">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.TrendLineBrushes"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.TrendLineBrushes"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.MarkerBrushes">
            <summary>
            Gets or sets the palette of brushes used as the fill color for data point markers.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeMarkerBrushes">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.MarkerBrushes"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.MarkerBrushes"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetMarkerBrushes">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.MarkerBrushes"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.MarkerBrushes"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.MarkerOutlines">
            <summary>
            Gets or sets the palette of brushes used for coloring outline of data point markers. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeMarkerOutlines">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.MarkerOutlines"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.MarkerOutlines"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetMarkerOutlines">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.MarkerOutlines"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.MarkerOutlines"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.NegativeBrushes">
            <summary>
            Gets or sets the palette used for coloring negative items of Waterfall chart type.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeNegativeBrushes">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.NegativeBrushes"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.NegativeBrushes"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetNegativeBrushes">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.NegativeBrushes"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.NegativeBrushes"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.NegativeOutlines">
            <summary>
            Brushes to use for drawing negative elements, when using a chart type with contextual coloring, such as Waterfall.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeNegativeOutlines">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.NegativeOutlines"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.NegativeOutlines"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetNegativeOutlines">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.NegativeOutlines"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.NegativeOutlines"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.MarkerTypes">
            <summary>
            Gets or sets the collection of marker shapes used for representing data points of series in this chart.
            </summary>
            <remarks>When MarkerTypes is null or empty, each series' marker type will be set to none or automatic, depending on the series type.</remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ShouldSerializeMarkerTypes">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.MarkerTypes"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.MarkerTypes"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.ResetMarkerTypes">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.MarkerTypes"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraCategoryChart.MarkerTypes"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraCategoryChart.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the <see cref="E:HandleCreated" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.BackColor">
            <summary>
            This property has no effect. Please use <see cref="P:BackingBrush"/> instead.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.Font">
            <summary>
            This property has no effect. Please use the <see cref="P:FontFamily"/>, 
            <see cref="P:FontStyle"/> and <see cref="P:FontSize"/> properties instead.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraCategoryChart.ForeColor">
            <summary>
            This property has no effect. Please use <see cref="P:FontBrush"/> instead.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.UltraDomainChart">
            <summary>
            Represents a base class for all domain charts that can plot scatter data and shapefiles
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.AlignsGridLinesToPixels">
            <summary>
            Gets or sets a value indicating whether grid and tick lines are aligned to device pixels.
            </summary>
            <value>
            <c>true</c> if grid and tick lines are aligned to device pixels; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeAlignsGridLinesToPixels">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.AlignsGridLinesToPixels"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.AlignsGridLinesToPixels"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetAlignsGridLinesToPixels">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.AlignsGridLinesToPixels"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.AlignsGridLinesToPixels"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.AnimateSeriesWhenAxisRangeChanges">
            <summary>
            Gets or sets whether the series animations should be allowed when a range change has been detected on an axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeAnimateSeriesWhenAxisRangeChanges">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.AnimateSeriesWhenAxisRangeChanges"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.AnimateSeriesWhenAxisRangeChanges"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetAnimateSeriesWhenAxisRangeChanges">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.AnimateSeriesWhenAxisRangeChanges"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.AnimateSeriesWhenAxisRangeChanges"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.BottomMargin">
            <summary>
            Gets or sets the bottom margin around the chart content.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeBottomMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.BottomMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.BottomMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetBottomMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.BottomMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.BottomMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsContentMemberPath">
            <summary>
            Gets or sets the member path of the content data for the callouts.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeCalloutsContentMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsContentMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsContentMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetCalloutsContentMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsContentMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsContentMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsDataSource">
            <summary>
            Gets or sets the collection of callout data to be annotated.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeCalloutsDataSource">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsDataSource"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsDataSource"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetCalloutsDataSource">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsDataSource"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsDataSource"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsLabelMemberPath">
            <summary>
            Gets or sets the member path of the label data for the callouts.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeCalloutsLabelMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsLabelMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsLabelMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetCalloutsLabelMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsLabelMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsLabelMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutStyleUpdatingEventEnabled">
            <summary>
            Gets or sets if event annotations should be displayed.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeCalloutStyleUpdatingEventEnabled">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutStyleUpdatingEventEnabled"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutStyleUpdatingEventEnabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetCalloutStyleUpdatingEventEnabled">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutStyleUpdatingEventEnabled"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutStyleUpdatingEventEnabled"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsVisible">
            <summary>
            Gets or sets if callouts should be displayed.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeCalloutsVisible">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsVisible"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsVisible"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetCalloutsVisible">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsVisible"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsVisible"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsXMemberPath">
            <summary>
            Gets or sets the member path of the X data for the callouts.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeCalloutsXMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsXMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsXMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetCalloutsXMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsXMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsXMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsYMemberPath">
            <summary>
            Gets or sets the member path of the Y data for the callouts.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeCalloutsYMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsYMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsYMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetCalloutsYMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsYMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutsYMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.CrosshairsAnnotationEnabled">
            <summary>
            Gets or sets whether annotations are shown along the axis for crosshair values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeCrosshairsAnnotationEnabled">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CrosshairsAnnotationEnabled"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CrosshairsAnnotationEnabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetCrosshairsAnnotationEnabled">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CrosshairsAnnotationEnabled"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CrosshairsAnnotationEnabled"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.CrosshairsDisplayMode">
            <summary>
            Gets or sets the crosshairs to be displayed.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeCrosshairsDisplayMode">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CrosshairsDisplayMode"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CrosshairsDisplayMode"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetCrosshairsDisplayMode">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CrosshairsDisplayMode"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CrosshairsDisplayMode"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.CrosshairsSnapToData">
            <summary>
            Gets or sets whether crosshairs will snap to the nearest data point.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeCrosshairsSnapToData">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CrosshairsSnapToData"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CrosshairsSnapToData"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetCrosshairsSnapToData">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CrosshairsSnapToData"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.CrosshairsSnapToData"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.DataChart">
            <summary>
            Gets the underlying DataChart which is encapsulated by this ShapeChart.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.DataSource">
            <summary>
            Gets or sets a collection of data items used to generate the chart.
            </summary>
            <remarks>
            The ItemsSource of this chart can be a list of objects containing one or more numeric properties.  
            Additionally, if the objects in the list implement the IEnumerable interface, 
            the Chart will attempt to delve into the sub-collections when reading through the data source. 
            Databinding can be further configured by attributing the data item classes 
            with the DataSeriesMemberIntentAttribute. 
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeDataSource">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.DataSource"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.DataSource"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetDataSource">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.DataSource"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.DataSource"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.ExcludedProperties">
            <summary>
            Gets or sets a set of property paths that should be excluded from consideration by the category chart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeExcludedProperties">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.ExcludedProperties"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.ExcludedProperties"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetExcludedProperties">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.ExcludedProperties"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.ExcludedProperties"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.FinalValueAnnotationsVisible">
            <summary>
            Gets or sets whether annotations for the final value of each series is displayed on the axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeFinalValueAnnotationsVisible">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.FinalValueAnnotationsVisible"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.FinalValueAnnotationsVisible"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetFinalValueAnnotationsVisible">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.FinalValueAnnotationsVisible"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.FinalValueAnnotationsVisible"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.IncludedProperties">
            <summary>
            Gets or sets a set of property paths that should be included for consideration by the category chart, leaving the remainder excluded. If null, all properties will be considered.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeIncludedProperties">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.IncludedProperties"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.IncludedProperties"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetIncludedProperties">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.IncludedProperties"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.IncludedProperties"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.IsHorizontalZoomEnabled">
            <summary>
            Gets or sets whether the chart can be horizontally zoomed through user interactions. 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeIsHorizontalZoomEnabled">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.IsHorizontalZoomEnabled"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.IsHorizontalZoomEnabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetIsHorizontalZoomEnabled">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.IsHorizontalZoomEnabled"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.IsHorizontalZoomEnabled"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.IsSeriesHighlightingEnabled">
            <summary>
            Gets or sets whether the chart can highlight series through user interactions.
            <para>This property applies to Category Chart and Financial Chart controls.</para>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeIsSeriesHighlightingEnabled">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.IsSeriesHighlightingEnabled"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.IsSeriesHighlightingEnabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetIsSeriesHighlightingEnabled">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.IsSeriesHighlightingEnabled"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.IsSeriesHighlightingEnabled"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.IsVerticalZoomEnabled">
            <summary>
            Gets or sets whether the chart can be vertically zoomed through user interactions.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeIsVerticalZoomEnabled">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.IsVerticalZoomEnabled"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.IsVerticalZoomEnabled"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetIsVerticalZoomEnabled">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.IsVerticalZoomEnabled"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.IsVerticalZoomEnabled"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.LeftMargin">
            <summary>
            Gets or sets the left margin of the chart content.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeLeftMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.LeftMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.LeftMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetLeftMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.LeftMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.LeftMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.Legend">
            <summary>
            Gets or sets the legend to connect this chart to.
            </summary>
            <remarks>
            When the legend property is set, the chart will use it to display information about its series.  Legends can be shared by multiple chart controls.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeLegend">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.Legend"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.Legend"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetLegend">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.Legend"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.Legend"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.MarkerMaxCount">
            <summary>
            Gets or sets the maximum number of markers displyed in the plot area of the chart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeMarkerMaxCount">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.MarkerMaxCount"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.MarkerMaxCount"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetMarkerMaxCount">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.MarkerMaxCount"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.MarkerMaxCount"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.Resolution">
            <summary>
            Gets or sets the rendering resolution for all series in this chart.
            </summary>
            <remarks>
            Where n = Resolution, for every n horizontal pixels, combine all items into a single datapoint.  When Resolution = 0, all datapoints will be rendered as graphical objects.  Charts with a higher resolution will have faster performance.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeResolution">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.Resolution"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.Resolution"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetResolution">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.Resolution"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.Resolution"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.RightMargin">
            <summary>
            Gets or sets the right margin of the chart content.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeRightMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.RightMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.RightMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetRightMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.RightMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.RightMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.Subtitle">
            <summary>
            Gets or sets text to display below the Title, above the plot area.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeSubtitle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.Subtitle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.Subtitle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetSubtitle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.Subtitle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.Subtitle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleAlignment">
            <summary>
            Gets or sets horizontal alignment which determines the subtitle position, relative to the left and right edges of the control.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeSubtitleAlignment">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleAlignment"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleAlignment"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetSubtitleAlignment">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleAlignment"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleAlignment"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleBottomMargin">
            <summary>
            Gets or sets the bottom margin of chart subtitle 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeSubtitleBottomMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleBottomMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleBottomMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetSubtitleBottomMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleBottomMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleBottomMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleFontFamily">
            <summary>
            Returns or sets the font family for the subtitle.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleFontSize"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeSubtitleFontFamily">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleFontFamily"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleFontFamily"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetSubtitleFontFamily">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleFontFamily"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleFontFamily"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleFontSize">
            <summary>
            Returns or sets the font size for the subtitle.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleFontFamily"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeSubtitleFontSize">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleFontSize"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleFontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetSubtitleFontSize">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleFontSize"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleFontSize"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleLeftMargin">
            <summary>
            Gets or sets the left margin of chart subtitle 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeSubtitleLeftMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleLeftMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleLeftMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetSubtitleLeftMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleLeftMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleLeftMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleRightMargin">
            <summary>
            Gets or sets the right margin of chart subtitle 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeSubtitleRightMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleRightMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleRightMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetSubtitleRightMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleRightMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleRightMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleTextColor">
            <summary>
            Gets or sets color of chart subtitle
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeSubtitleTextColor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleTextColor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleTextColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetSubtitleTextColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleTextColor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleTextColor"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleTextStyle">
            <summary>
            Returns or sets the font style for the subtitle.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleFontFamily"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleFontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeSubtitleTextStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleTextStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetSubtitleTextStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleTextStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleTextStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleTopMargin">
            <summary>
            Gets or sets the top margin of chart subtitle 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeSubtitleTopMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleTopMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleTopMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetSubtitleTopMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleTopMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.SubtitleTopMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.Thickness">
            <summary>
            Gets or sets the thickness for all series in this chart. Depending on the ChartType, this can be the main brush used, or just the outline.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.Thickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.Thickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.Thickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.Thickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.Title">
            <summary>
            Gets or sets text to display above the plot area.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeTitle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.Title"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.Title"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetTitle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.Title"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.Title"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleAlignment">
            <summary>
            Gets or sets horizontal alignment which determines the title position, relative to the left and right edges of the control.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeTitleAlignment">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleAlignment"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleAlignment"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetTitleAlignment">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleAlignment"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleAlignment"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleBottomMargin">
            <summary>
            Gets or sets the bottom margin of chart title 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeTitleBottomMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleBottomMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleBottomMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetTitleBottomMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleBottomMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleBottomMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleFontFamily">
            <summary>
            Returns or sets the font family for the title.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleFontSize"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeTitleFontFamily">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleFontFamily"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleFontFamily"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetTitleFontFamily">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleFontFamily"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleFontFamily"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleFontSize">
            <summary>
            Returns or sets the font size for the title.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleFontFamily"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeTitleFontSize">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleFontSize"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleFontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetTitleFontSize">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleFontSize"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleFontSize"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleLeftMargin">
            <summary>
            Gets or sets the left margin of chart title 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeTitleLeftMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleLeftMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleLeftMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetTitleLeftMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleLeftMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleLeftMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleRightMargin">
            <summary>
            Gets or sets the right margin of chart title 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeTitleRightMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleRightMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleRightMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetTitleRightMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleRightMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleRightMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleTextColor">
            <summary>
            Gets or sets color of chart title
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeTitleTextColor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleTextColor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleTextColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetTitleTextColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleTextColor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleTextColor"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleTextStyle">
            <summary>
            Returns or sets the font style for the title.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleFontFamily"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleFontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeTitleTextStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleTextStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetTitleTextStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleTextStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleTextStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleTopMargin">
            <summary>
            Gets or sets the top margin of chart title 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeTitleTopMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleTopMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleTopMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetTitleTopMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleTopMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TitleTopMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.TooltipTemplate">
            <summary>
            Gets or sets the id of a template element to use for tooltips, or markup representing the tooltip template.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeTooltipTemplate">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TooltipTemplate"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TooltipTemplate"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetTooltipTemplate">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TooltipTemplate"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TooltipTemplate"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.TooltipTemplates">
            <summary>
            Gets or sets the names of tooltip templates
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeTooltipTemplates">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TooltipTemplates"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TooltipTemplates"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetTooltipTemplates">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TooltipTemplates"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TooltipTemplates"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.ToolTipType">
            <summary>
            Gets or sets the style of tooltip to be displayed.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeToolTipType">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.ToolTipType"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.ToolTipType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetToolTipType">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.ToolTipType"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.ToolTipType"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.TopMargin">
            <summary>
            Gets or sets the top margin of the chart content.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeTopMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TopMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TopMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetTopMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TopMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TopMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.TransitionDuration">
            <summary>
            Gets or sets the duration used for animating series plots when the data is changing
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeTransitionDuration">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TransitionDuration"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TransitionDuration"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetTransitionDuration">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TransitionDuration"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TransitionDuration"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.TransitionEasingFunction">
            <summary>
            Gets or sets the easing function used for animating series plots when the data is changing.
            </summary>
            <remarks>
            This can be set to one of the known values "linear" or "cubic," or it can be set to an easing function which takes a single numeric parameter and returns a number.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeTransitionEasingFunction">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TransitionEasingFunction"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TransitionEasingFunction"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetTransitionEasingFunction">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TransitionEasingFunction"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TransitionEasingFunction"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeTrendLinePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TrendLinePeriod"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TrendLinePeriod"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetTrendLinePeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TrendLinePeriod"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TrendLinePeriod"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.TrendLineThickness">
            <summary>
            Gets or sets the thickness of the trend lines in this chart.
            </summary>
            <remarks>This property applies only to these chart types: point, line, spline, and bubble </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeTrendLineThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TrendLineThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TrendLineThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetTrendLineThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TrendLineThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TrendLineThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.TrendLineType">
            <summary>
            Gets or sets the formula used for calculating trend lines in this chart.
            </summary>
            <remarks>This property applies only to these chart types: point, line, spline, and bubble </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeTrendLineType">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TrendLineType"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TrendLineType"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetTrendLineType">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TrendLineType"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.TrendLineType"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.UnknownValuePlotting">
            <summary>
            Gets or sets the behavior that determines how unknown values will be plotted on the chart.
            </summary>
            <remarks>
            Null and Double.NaN are two examples of unknown values.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeUnknownValuePlotting">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.UnknownValuePlotting"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.UnknownValuePlotting"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetUnknownValuePlotting">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.UnknownValuePlotting"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.UnknownValuePlotting"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.Viewport">
            <summary>
            Gets a rectangle representing the bounds of the plot area.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.WindowRect">
            <summary>
            Gets or sets the rectangle representing the current scroll and zoom state of the chart.
            </summary>
            <remarks>
            WindowRect is expressed as a Rectangle with coordinates and sizes between 0 and 1.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ShouldSerializeWindowRect">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.WindowRect"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.WindowRect"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ResetWindowRect">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.WindowRect"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraDomainChart.WindowRect"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.Destroy">
            <summary>
            Destroy this control 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ExportVisualData">
            <summary>
            Returns a representation of the current chart visuals.
            </summary> 
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.Flush">
            <summary>
            Forces any pending refresh to the chart to be finished.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.HideToolTip">
            <summary>
            Hides the active main tooltip, if displayed.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.NotifyResized">
            <summary>
            Called when the control has been resized.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.ProvideContainer(System.Object)">
            <summary>
            Provides a container for this control
            </summary> 
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.OnCalloutStyleUpdating(Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutStyleUpdating"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.CalloutStyleUpdatingEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutStyleUpdating"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.UltraDomainChart.CalloutStyleUpdating">
            <summary>
            Occurs when the style of a callout is updated.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.OnPropertyChanged(System.String)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.UltraDomainChart.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property that was changed</param>
            <seealso cref="T:System.ComponentModel.PropertyChangedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.UltraDomainChart.PropertyChanged"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.UltraDomainChart.PropertyChanged">
            <summary>
            Event raised when a property value is changed on this chart
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.OnSeriesAdded(Infragistics.Win.DataVisualization.ChartSeriesEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.UltraDomainChart.SeriesAdded"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.ChartSeriesEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.UltraDomainChart.SeriesAdded"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.UltraDomainChart.SeriesAdded">
            <summary> Event raised when a series is initialized and added to this chart. </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.OnSeriesPointerDown(Infragistics.Win.DataVisualization.DomainChartSeriesPointerEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.UltraDomainChart.SeriesPointerDown"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.DomainChartSeriesPointerEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.UltraDomainChart.SeriesPointerDown"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.UltraDomainChart.SeriesPointerDown">
            <summary>
            Occurs when the pointer is pressed down over a Series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.OnSeriesPointerEnter(Infragistics.Win.DataVisualization.DomainChartSeriesPointerEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.UltraDomainChart.SeriesPointerEnter"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.DomainChartSeriesPointerEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.UltraDomainChart.SeriesPointerEnter"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.UltraDomainChart.SeriesPointerEnter">
            <summary>
            Occurs when the pointer enters a Series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.OnSeriesPointerLeave(Infragistics.Win.DataVisualization.DomainChartSeriesPointerEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.UltraDomainChart.SeriesPointerLeave"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.DomainChartSeriesPointerEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.UltraDomainChart.SeriesPointerLeave"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.UltraDomainChart.SeriesPointerLeave">
            <summary>
            Occurs when the pointer leaves a Series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.OnSeriesPointerMove(Infragistics.Win.DataVisualization.DomainChartSeriesPointerEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.UltraDomainChart.SeriesPointerMove"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.DomainChartSeriesPointerEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.UltraDomainChart.SeriesPointerMove"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.UltraDomainChart.SeriesPointerMove">
            <summary>
            Occurs when the pointer moves over a Series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.OnSeriesPointerUp(Infragistics.Win.DataVisualization.DomainChartSeriesPointerEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.UltraDomainChart.SeriesPointerUp"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.DomainChartSeriesPointerEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.UltraDomainChart.SeriesPointerUp"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.UltraDomainChart.SeriesPointerUp">
            <summary>
            Occurs when the pointer is released over a Series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraDomainChart.OnSeriesRemoved(Infragistics.Win.DataVisualization.ChartSeriesEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.UltraDomainChart.SeriesRemoved"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.ChartSeriesEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.UltraDomainChart.SeriesRemoved"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.UltraDomainChart.SeriesRemoved">
            <summary> Event raised when a series is removed from this chart. </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraDomainChart.About">
            <summary>
            Display the about dialog.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.UltraFunnelChart">
            <summary>
            Represents a funnel chart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.#ctor">
            <summary>
            Creates a funnel chart instance.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.AllowSliceSelection">
            <summary>
            Gets or sets whether to allow slices to be selected.
            </summary> 
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeAllowSliceSelection">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.AllowSliceSelection"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.AllowSliceSelection"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetAllowSliceSelection">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.AllowSliceSelection"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.AllowSliceSelection"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.BottomEdgeWidth">
            <summary>
            Gets or sets the percentage (from near 0 to 1) of space the bottom edge of the funnel should take.
            </summary>  
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeBottomEdgeWidth">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.BottomEdgeWidth"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.BottomEdgeWidth"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetBottomEdgeWidth">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.BottomEdgeWidth"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.BottomEdgeWidth"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FontFamily">
            <summary>
            Returns or sets the font family for the inner labels.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FontSize"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FontStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeFontFamily">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FontFamily"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FontFamily"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetFontFamily">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FontFamily"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FontFamily"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FontSize">
            <summary>
            Returns or sets the font size for the inner labels.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FontFamily"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FontStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeFontSize">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FontSize"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetFontSize">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FontSize"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FontSize"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FontStyle">
            <summary>
            Returns or sets the font style for the inner labels.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FontFamily"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeFontStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FontStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FontStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetFontStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FontStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FontStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FormatInnerLabel">
            <summary>
            Gets or sets the formatter function for inner labels. Function should return string and it takes 3 parameters: 1st-value of item to format, 2nd-index of item within data, 3rd-reference to the funnel chart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeFormatInnerLabel">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FormatInnerLabel"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FormatInnerLabel"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetFormatInnerLabel">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FormatInnerLabel"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FormatInnerLabel"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FormatOuterLabel">
            <summary>
            Gets or sets the formatter function for outer labels. Function should return string and it takes 3 parameters: 1st-value of item to format, 2nd-index of item within data, 3rd-reference to the funnel chart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeFormatOuterLabel">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FormatOuterLabel"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FormatOuterLabel"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetFormatOuterLabel">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FormatOuterLabel"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FormatOuterLabel"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FunnelSliceDisplay">
            <summary>
            Gets or sets how the heights of the funnel slices should be configured.
            </summary>  
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeFunnelSliceDisplay">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FunnelSliceDisplay"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FunnelSliceDisplay"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetFunnelSliceDisplay">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FunnelSliceDisplay"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.FunnelSliceDisplay"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.InnerLabelMemberPath">
            <summary>
            Gets or sets the InnerLabel mapping property for the current series object.
            </summary>  
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeInnerLabelMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.InnerLabelMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.InnerLabelMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetInnerLabelMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.InnerLabelMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.InnerLabelMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.InnerLabelVisibility">
            <summary>
            Gets or sets whether the inner labels are visible.
            </summary>  
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeInnerLabelVisibility">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.InnerLabelVisibility"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.InnerLabelVisibility"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetInnerLabelVisibility">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.InnerLabelVisibility"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.InnerLabelVisibility"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.IsInverted">
            <summary>
            Gets or sets if the funnel should be rendered inverted.
            </summary>  
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeIsInverted">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.IsInverted"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.IsInverted"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetIsInverted">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.IsInverted"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.IsInverted"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.Legend">
            <summary>
            Gets or sets the Legend to display for the chart.
            </summary>  
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeLegend">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.Legend"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.Legend"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetLegend">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.Legend"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.Legend"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.LowerBezierControlPoint">
            <summary>
            Gets or sets the lower control point if a Bezier curve is used to define the funnel.
            </summary> 
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeLowerBezierControlPoint">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.LowerBezierControlPoint"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.LowerBezierControlPoint"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetLowerBezierControlPoint">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.LowerBezierControlPoint"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.LowerBezierControlPoint"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OuterLabelAlignment">
            <summary>
            Gets or sets which side of the chart the outer labels should appear.
            </summary> 
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeOuterLabelAlignment">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OuterLabelAlignment"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OuterLabelAlignment"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetOuterLabelAlignment">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OuterLabelAlignment"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OuterLabelAlignment"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OuterLabelMemberPath">
            <summary>
            Gets or sets the OuterLabel mapping property for the current series object.
            </summary>  
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeOuterLabelMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OuterLabelMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OuterLabelMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetOuterLabelMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OuterLabelMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OuterLabelMemberPath"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OuterLabelTextColor">
            <summary>
            Gets or sets the brush used for the outer labels.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeOuterLabelTextColor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OuterLabelTextColor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OuterLabelTextColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetOuterLabelTextColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OuterLabelTextColor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OuterLabelTextColor"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OuterLabelVisibility">
            <summary>
            Gets or sets whether the outer labels are visible.
            </summary>  
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeOuterLabelVisibility">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OuterLabelVisibility"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OuterLabelVisibility"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetOuterLabelVisibility">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OuterLabelVisibility"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OuterLabelVisibility"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OutlineThickness">
            <summary>
            Gets or sets the thickness of outline around slices.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeOutlineThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OutlineThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OutlineThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetOutlineThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OutlineThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.OutlineThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.SelectedItems">
            <summary>
            Represents the current selected items.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.SelectedSliceStyle">
            <summary>
            Gets or sets the style to use for selected slices.
            That can be used to set stroke (outline color), fill (background color) and opacity.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeSelectedSliceStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.SelectedSliceStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.SelectedSliceStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetSelectedSliceStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.SelectedSliceStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.SelectedSliceStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.TextColor">
            <summary>
            Gets or sets the brush used for the inner labels.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeTextColor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.TextColor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.TextColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetTextColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.TextColor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.TextColor"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.TransitionDuration">
            <summary>
            Gets or sets how long the animations should take to run.
            </summary>  
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeTransitionDuration">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.TransitionDuration"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.TransitionDuration"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetTransitionDuration">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.TransitionDuration"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.TransitionDuration"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UnselectedSliceStyle">
            <summary>
            Gets or sets the style to use for unselected slices.
            That can be used to set stroke (outline color), fill (background color) and opacity.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeUnselectedSliceStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UnselectedSliceStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UnselectedSliceStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetUnselectedSliceStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UnselectedSliceStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UnselectedSliceStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UpperBezierControlPoint">
            <summary>
            Gets or sets the upper control point if a Bezier curve is used to define the funnel.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeUpperBezierControlPoint">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UpperBezierControlPoint"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UpperBezierControlPoint"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetUpperBezierControlPoint">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UpperBezierControlPoint"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UpperBezierControlPoint"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UseBezierCurve">
            <summary>
            Gets or sets whether to use a Bezier curve to define the funnel.
            </summary>  
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeUseBezierCurve">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UseBezierCurve"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UseBezierCurve"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetUseBezierCurve">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UseBezierCurve"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UseBezierCurve"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UseOuterLabelsForLegend">
            <summary>
            Gets or sets whether to use the outer labels to identify the legend items.
            </summary>  
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeUseOuterLabelsForLegend">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UseOuterLabelsForLegend"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UseOuterLabelsForLegend"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetUseOuterLabelsForLegend">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UseOuterLabelsForLegend"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UseOuterLabelsForLegend"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UseUnselectedStyle">
            <summary>
            Gets or sets whether to use the unselected style on unselected slices.
            </summary>  
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeUseUnselectedStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UseUnselectedStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UseUnselectedStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetUseUnselectedStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UseUnselectedStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.UseUnselectedStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.ValueMemberPath">
            <summary>
            Gets or sets the value member path for the funnel chart.
            </summary>  
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeValueMemberPath">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.ValueMemberPath"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.ValueMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetValueMemberPath">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.ValueMemberPath"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.ValueMemberPath"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.Destroy">
            <summary>
            Releases any resources held by the chart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ExportSerializedVisualData">
            <summary>
            Exports and serializes the chart visuals.
            </summary>
            <returns>
            The serialized chart visuals.
            </returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ExportVisualData">
            <summary>
            Returns the chart visuals expressed as a FunnelChartVisualData object.
            </summary>
            <returns>A FunnelChartVisualData object representing the current chart visuals.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.NotifyClearItems(System.Object)">
            <summary>
            Manually notifies the chart's data source that the data it has bound to has been cleared and needs to be re-examined.
            This should not be called if the data that the chart is bound to is already observable.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.NotifyInsertItem(System.Object,System.Int32,System.Object)">
            <summary>
            Manually notifies the chart's data source that an item has been inserted in the data it is bound to.
            This should not be called if the data that the chart is bound to is already observable.
            </summary>
            <param name="source_">The data source changed.</param>
            <param name="index">The index of the inserted item.</param>
            <param name="newItem">The new item at the designated index.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.NotifyRemoveItem(System.Object,System.Int32,System.Object)">
            <summary>
            Manually notifies the chart's data source that an item has been removed in the data it is bound to.
            This should not be called if the data that the chart is bound to is already observable.
            </summary>
            <param name="source_">The data source changed.</param>
            <param name="index">The index of the removed item.</param>
            <param name="oldItem">The old item at the designated index.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.NotifyResized">
            <summary>
            Notifies the controller and view about a size change.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.NotifySetItem(System.Object,System.Int32,System.Object,System.Object)">
            <summary>
            Manually notifies the chart's data source that some items have been changed in the data it is bound to.
            This should not be called if the data that the chart is bound to is already observable.
            </summary>
            <param name="source_">The data source changed.</param>
            <param name="index">The starting index of the changed items.</param>
            <param name="oldItem">The old item at the designated index.</param>
            <param name="newItem">The new item at the designated index.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ProvideContainer(System.Object)">
            <summary>
            Provides container for funnel chart
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ToggleSelection(System.Int32)">
            <summary>
            Toggle selection of item at index.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.OnSliceClicked(Infragistics.Win.DataVisualization.FunnelSliceClickedEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.UltraFunnelChart.SliceClicked"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.FunnelSliceClickedEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.UltraFunnelChart.SliceClicked"/>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.UltraFunnelChart.SliceClicked">
            <summary> Raised when a slice is clicked. </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.About">
            <summary>
            Display the about dialog.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.Brushes">
            <summary>
            Gets or sets the Brushes that will be used for the slices fill color.
            </summary>
            <remarks>
            The brushes property defines the palette from which automatically assigned brushes are selected.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeBrushes">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.Brushes"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.Brushes"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetBrushes">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.Brushes"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.Brushes"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.DataSource">
            <summary>
            Gets or sets the data source for the chart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeDataSource">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.DataSource"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.DataSource"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetDataSource">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.DataSource"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.DataSource"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.DataMember">
            <summary>
            Gets or sets the data member of the data source from which the funnel chart's items collection is populated.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.DataSource"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeDataMember">
            <summary>
            Returns whether the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.DataMember"/> property requires serialization.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetDataMember">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.DataMember"/> property to its default value.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.Outlines">
            <summary>
            Gets or sets the Brushes that will be used for the slices outline color.
            </summary>
            <remarks>
            The outlines property defines the palette from which automatically assigned outlines are selected.
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeOutlines">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.Outlines"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.Outlines"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetOutlines">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.Outlines"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.Outlines"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.ShowDefaultTooltip">
            <summary>
            Gets or sets whether or not the default tooltip for the <see cref="T:Infragistics.Win.DataVisualization.UltraFunnelChart"/> will be shown.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ShouldSerializeShowDefaultTooltip">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.ShowDefaultTooltip"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.ShowDefaultTooltip"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.ResetShowDefaultTooltip">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.ShowDefaultTooltip"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraFunnelChart.ShowDefaultTooltip"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.SetDataBinding(System.Object,System.String)">
            <summary>
            Sets the datasource and datamember for the control in one atomic operation.
            </summary>
            <param name="dataSource">Data source to bind to.</param>
            <param name="dataMember">Data member.</param>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the System.Windows.Forms.Control and
            its child controls and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources;
            false to release only unmanaged resources.</param>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.Font">
            <summary>
            This property has no effect. Please use the <see cref="P:FontFamily"/>, 
            <see cref="P:FontStyle"/> and <see cref="P:FontSize"/> properties instead.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraFunnelChart.ForeColor">
            <summary>
            This property has no effect. Please use <see cref="P:TextColor"/> property instead.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraFunnelChart.OnHandleCreated(System.EventArgs)">
            <summary>
            Overridden to notify the proxy to create renderers based on the existing layers.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.UltraFunnelChart.TooltipContentUpdating">
            <summary>
            Occurs when the ToolTip for the <see cref="T:Infragistics.Win.DataVisualization.UltraFunnelChart"/> is updating the content to be rendered.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.UltraXYChart">
            <summary>
            Represents a base class for domain charts with X/Y axes 
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisExtent">
            <summary>
            Gets or sets the distance between the X-axis and the bottom of the chart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisExtent">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisExtent"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisExtent"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisExtent">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisExtent"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisExtent"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisInverted">
            <summary>
            Gets or sets whether to invert the direction of the X-axis by placing the first data items on the right side of the chart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisInverted">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisInverted"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisInverted"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisInverted">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisInverted"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisInverted"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabel">
            <summary>
            Gets or sets the format for labels along the X-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisLabel">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabel"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabel"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisLabel">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabel"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabel"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelAngle">
            <summary>
            Gets or sets the angle of rotation for labels along the X-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisLabelAngle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelAngle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelAngle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisLabelAngle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelAngle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelAngle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelBottomMargin">
            <summary>
            Gets or sets the bottom margin of labels on the X-axis
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisLabelBottomMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelBottomMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelBottomMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisLabelBottomMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelBottomMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelBottomMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelFontFamily">
            <summary>
            Returns or sets the font family for the X axis labels.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelFontSize"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisLabelFontFamily">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelFontFamily"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelFontFamily"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisLabelFontFamily">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelFontFamily"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelFontFamily"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelFontSize">
            <summary>
            Returns or sets the font size for the X axis labels.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelFontFamily"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisLabelFontSize">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelFontSize"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelFontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisLabelFontSize">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelFontSize"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelFontSize"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelHorizontalAlignment">
            <summary>
            Gets or sets Horizontal alignment of X-axis labels.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisLabelHorizontalAlignment">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelHorizontalAlignment"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelHorizontalAlignment"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisLabelHorizontalAlignment">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelHorizontalAlignment"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelHorizontalAlignment"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelLeftMargin">
            <summary>
            Gets or sets the left margin of labels on the X-axis
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisLabelLeftMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelLeftMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelLeftMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisLabelLeftMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelLeftMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelLeftMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelRightMargin">
            <summary>
            Gets or sets the right margin of labels on the X-axis
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisLabelRightMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelRightMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelRightMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisLabelRightMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelRightMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelRightMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelTextColor">
            <summary>
            Gets or sets color of labels on the X-axis
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisLabelTextColor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelTextColor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelTextColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisLabelTextColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelTextColor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelTextColor"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelTextStyle">
            <summary>
            Returns or sets the font style for the X axis labels.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelFontFamily"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelFontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisLabelTextStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelTextStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisLabelTextStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelTextStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelTextStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelTopMargin">
            <summary>
            Gets or sets the top margin of labels on the X-axis
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisLabelTopMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelTopMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelTopMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisLabelTopMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelTopMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelTopMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelVerticalAlignment">
            <summary>
            Gets or sets Vertical alignment of X-axis labels.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisLabelVerticalAlignment">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelVerticalAlignment"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelVerticalAlignment"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisLabelVerticalAlignment">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelVerticalAlignment"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelVerticalAlignment"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelVisibility">
            <summary>
            Gets or sets Visibility of X-axis labels.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisLabelVisibility">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelVisibility"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelVisibility"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisLabelVisibility">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelVisibility"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisLabelVisibility"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisMajorStroke">
            <summary>
            Gets or sets the color to apply to major gridlines along the X-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisMajorStroke">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisMajorStroke"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisMajorStroke"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisMajorStroke">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisMajorStroke"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisMajorStroke"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisMajorStrokeThickness">
            <summary>
            Gets or sets the thickness to apply to major gridlines along the X-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisMajorStrokeThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisMajorStrokeThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisMajorStrokeThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisMajorStrokeThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisMajorStrokeThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisMajorStrokeThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisMinorStroke">
            <summary>
            Gets or sets the color to apply to minor gridlines along the X-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisMinorStroke">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisMinorStroke"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisMinorStroke"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisMinorStroke">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisMinorStroke"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisMinorStroke"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisMinorStrokeThickness">
            <summary>
            Gets or sets the thickness to apply to minor gridlines along the X-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisMinorStrokeThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisMinorStrokeThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisMinorStrokeThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisMinorStrokeThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisMinorStrokeThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisMinorStrokeThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisStrip">
            <summary>
            Gets or sets the color to apply to stripes along the X-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisStrip">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisStrip"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisStrip"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisStrip">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisStrip"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisStrip"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisStroke">
            <summary>
            Gets or sets the color to apply to the X-axis line.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisStroke">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisStroke"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisStroke"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisStroke">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisStroke"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisStroke"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisStrokeThickness">
            <summary>
            Gets or sets the thickness to apply to the X-axis line.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisStrokeThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisStrokeThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisStrokeThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisStrokeThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisStrokeThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisStrokeThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTickLength">
            <summary>
            Gets or sets the length of tickmarks along the X-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisTickLength">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTickLength"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTickLength"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisTickLength">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTickLength"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTickLength"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTickStroke">
            <summary>
            Gets or sets the color to apply to tickmarks along the X-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisTickStroke">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTickStroke"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTickStroke"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisTickStroke">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTickStroke"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTickStroke"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTickStrokeThickness">
            <summary>
            Gets or sets the thickness to apply to tickmarks along the X-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisTickStrokeThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTickStrokeThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTickStrokeThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisTickStrokeThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTickStrokeThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTickStrokeThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitle">
            <summary>
            Gets or sets the Text to display below the X-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisTitle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisTitle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleAlignment">
            <summary>
            Gets or sets Horizontal alignment of the X-axis title.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisTitleAlignment">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleAlignment"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleAlignment"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisTitleAlignment">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleAlignment"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleAlignment"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleAngle">
            <summary>
            Gets or sets the angle of rotation for the X-axis title.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisTitleAngle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleAngle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleAngle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisTitleAngle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleAngle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleAngle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleBottomMargin">
            <summary>
            Gets or sets the bottom margin of a title on the X-axis
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisTitleBottomMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleBottomMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleBottomMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisTitleBottomMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleBottomMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleBottomMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleFontFamily">
            <summary>
            Returns or sets the font family for the X axis title.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleFontSize"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisTitleFontFamily">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleFontFamily"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleFontFamily"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisTitleFontFamily">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleFontFamily"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleFontFamily"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleFontSize">
            <summary>
            Returns or sets the font size for the X axis title.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleFontFamily"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisTitleFontSize">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleFontSize"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleFontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisTitleFontSize">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleFontSize"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleFontSize"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleLeftMargin">
            <summary>
            Gets or sets the left margin of a title on the X-axis
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisTitleLeftMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleLeftMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleLeftMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisTitleLeftMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleLeftMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleLeftMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleMargin">
            <summary>
            Gets or sets the margin around a title on the X-axis
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisTitleMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisTitleMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleRightMargin">
            <summary>
            Gets or sets the right margin of a title on the X-axis
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisTitleRightMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleRightMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleRightMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisTitleRightMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleRightMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleRightMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleTextColor">
            <summary>
            Gets or sets color of title on the X-axis 
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisTitleTextColor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleTextColor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleTextColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisTitleTextColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleTextColor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleTextColor"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleTextStyle">
            <summary>
            Returns or sets the font style for the X axis title.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleFontFamily"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleFontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisTitleTextStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleTextStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisTitleTextStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleTextStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleTextStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleTopMargin">
            <summary>
            Gets or sets the top margin of a title on the X-axis
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeXAxisTitleTopMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleTopMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleTopMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetXAxisTitleTopMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleTopMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.XAxisTitleTopMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisExtent">
            <summary>
            Gets or sets the distance between the Y-axis and the left edge of the chart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisExtent">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisExtent"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisExtent"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisExtent">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisExtent"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisExtent"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisInverted">
            <summary>
            Gets or sets whether to invert the direction of the Y-axis by placing the minimum numeric value at the top of the chart.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisInverted">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisInverted"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisInverted"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisInverted">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisInverted"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisInverted"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabel">
            <summary>
            Gets or sets the property or string from which the labels are derived.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisLabel">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabel"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabel"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisLabel">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabel"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabel"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelAngle">
            <summary>
            Gets or sets the angle of rotation for labels along the Y-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisLabelAngle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelAngle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelAngle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisLabelAngle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelAngle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelAngle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelBottomMargin">
            <summary>
            Gets or sets the bottom margin of labels on the Y-axis
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisLabelBottomMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelBottomMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelBottomMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisLabelBottomMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelBottomMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelBottomMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelFontFamily">
            <summary>
            Returns or sets the font family for the Y axis labels.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelFontSize"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisLabelFontFamily">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelFontFamily"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelFontFamily"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisLabelFontFamily">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelFontFamily"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelFontFamily"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelFontSize">
            <summary>
            Returns or sets the font size for the Y axis labels.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelFontFamily"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisLabelFontSize">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelFontSize"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelFontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisLabelFontSize">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelFontSize"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelFontSize"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelHorizontalAlignment">
            <summary>
            Gets or sets Horizontal alignment of Y-axis labels.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisLabelHorizontalAlignment">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelHorizontalAlignment"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelHorizontalAlignment"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisLabelHorizontalAlignment">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelHorizontalAlignment"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelHorizontalAlignment"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelLeftMargin">
            <summary>
            Gets or sets the left margin of labels on the Y-axis
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisLabelLeftMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelLeftMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelLeftMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisLabelLeftMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelLeftMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelLeftMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelLocation">
            <summary>
            The location of Y-axis labels, relative to the plot area.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisLabelLocation">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelLocation"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelLocation"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisLabelLocation">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelLocation"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelLocation"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelRightMargin">
            <summary>
            Gets or sets the right margin of labels on the Y-axis
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisLabelRightMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelRightMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelRightMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisLabelRightMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelRightMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelRightMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelTextColor">
            <summary>
            Gets or sets color of labels on the Y-axis
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisLabelTextColor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelTextColor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelTextColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisLabelTextColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelTextColor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelTextColor"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelTextStyle">
            <summary>
            Returns or sets the font style for the Y axis labels.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelFontFamily"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelFontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisLabelTextStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelTextStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisLabelTextStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelTextStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelTextStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelTopMargin">
            <summary>
            Gets or sets the top margin of labels on the Y-axis
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisLabelTopMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelTopMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelTopMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisLabelTopMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelTopMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelTopMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelVerticalAlignment">
            <summary>
            Gets or sets Vertical alignment of Y-axis labels.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisLabelVerticalAlignment">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelVerticalAlignment"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelVerticalAlignment"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisLabelVerticalAlignment">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelVerticalAlignment"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelVerticalAlignment"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelVisibility">
            <summary>
            Gets or sets Visibility of Y-axis labels.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisLabelVisibility">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelVisibility"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelVisibility"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisLabelVisibility">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelVisibility"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisLabelVisibility"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisMajorStroke">
            <summary>
            Gets or sets the color to apply to major gridlines along the Y-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisMajorStroke">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisMajorStroke"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisMajorStroke"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisMajorStroke">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisMajorStroke"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisMajorStroke"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisMajorStrokeThickness">
            <summary>
            Gets or sets the thickness to apply to major gridlines along the Y-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisMajorStrokeThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisMajorStrokeThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisMajorStrokeThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisMajorStrokeThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisMajorStrokeThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisMajorStrokeThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisMinorStroke">
            <summary>
            Gets or sets the color to apply to minor gridlines along the Y-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisMinorStroke">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisMinorStroke"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisMinorStroke"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisMinorStroke">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisMinorStroke"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisMinorStroke"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisMinorStrokeThickness">
            <summary>
            Gets or sets the thickness to apply to minor gridlines along the Y-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisMinorStrokeThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisMinorStrokeThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisMinorStrokeThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisMinorStrokeThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisMinorStrokeThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisMinorStrokeThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisStrip">
            <summary>
            Gets or sets the color to apply to stripes along the Y-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisStrip">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisStrip"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisStrip"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisStrip">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisStrip"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisStrip"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisStroke">
            <summary>
            Gets or sets the color to apply to the Y-axis line.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisStroke">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisStroke"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisStroke"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisStroke">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisStroke"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisStroke"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisStrokeThickness">
            <summary>
            Gets or sets the thickness to apply to the Y-axis line.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisStrokeThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisStrokeThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisStrokeThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisStrokeThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisStrokeThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisStrokeThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTickLength">
            <summary>
            Gets or sets the length of tickmarks along the Y-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisTickLength">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTickLength"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTickLength"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisTickLength">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTickLength"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTickLength"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTickStroke">
            <summary>
            Gets or sets the color to apply to tickmarks along the Y-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisTickStroke">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTickStroke"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTickStroke"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisTickStroke">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTickStroke"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTickStroke"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTickStrokeThickness">
            <summary>
            Gets or sets the thickness to apply to tickmarks along the Y-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisTickStrokeThickness">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTickStrokeThickness"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTickStrokeThickness"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisTickStrokeThickness">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTickStrokeThickness"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTickStrokeThickness"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitle">
            <summary>
            Gets or sets the Text to display to the left of the Y-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisTitle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisTitle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleAlignment">
            <summary>
            Gets or sets Vertical alignment of the Y-axis title.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisTitleAlignment">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleAlignment"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleAlignment"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisTitleAlignment">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleAlignment"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleAlignment"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleAngle">
            <summary>
            Gets or sets the angle of rotation for the Y-axis title.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisTitleAngle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleAngle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleAngle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisTitleAngle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleAngle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleAngle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleBottomMargin">
            <summary>
            Gets or sets the bottom margin of a title on the Y-axis
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisTitleBottomMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleBottomMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleBottomMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisTitleBottomMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleBottomMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleBottomMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleFontFamily">
            <summary>
            Returns or sets the font family for the Y axis title.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleFontSize"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisTitleFontFamily">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleFontFamily"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleFontFamily"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisTitleFontFamily">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleFontFamily"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleFontFamily"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleFontSize">
            <summary>
            Returns or sets the font size for the Y axis title.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleFontFamily"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisTitleFontSize">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleFontSize"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleFontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisTitleFontSize">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleFontSize"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleFontSize"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleLeftMargin">
            <summary>
            Gets or sets the left margin of a title on the Y-axis
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisTitleLeftMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleLeftMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleLeftMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisTitleLeftMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleLeftMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleLeftMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleMargin">
            <summary>
            Gets or sets the margin around a title on the Y-axis
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisTitleMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisTitleMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleRightMargin">
            <summary>
            Gets or sets the right margin of a title on the Y-axis
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisTitleRightMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleRightMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleRightMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisTitleRightMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleRightMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleRightMargin"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleTextColor">
            <summary>
            Gets or sets color of title on the Y-axis
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisTitleTextColor">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleTextColor"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleTextColor"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisTitleTextColor">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleTextColor"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleTextColor"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleTextStyle">
            <summary>
            Returns or sets the font style for the Y axis title.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleFontFamily"/>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleFontSize"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisTitleTextStyle">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleTextStyle"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleTextStyle"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisTitleTextStyle">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleTextStyle"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleTextStyle"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleTopMargin">
            <summary>
            Gets or sets the top margin of a title on the Y-axis
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ShouldSerializeYAxisTitleTopMargin">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleTopMargin"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleTopMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.ResetYAxisTitleTopMargin">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleTopMargin"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.UltraXYChart.YAxisTitleTopMargin"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.GetScaledValueX(System.Double)">
            <summary>
            Converts the given visual location to a data value.
            </summary>
            <param name="unscaledValue">The x-coordinate of the location to scale.</param>
            <returns>The data value which corresponds with the given location.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.GetScaledValueY(System.Double)">
            <summary>
            Converts the given visual location to a data value.
            </summary>
            <param name="unscaledValue">The y-coordinate of the location to scale.</param>
            <returns>The data value which corresponds with the given location.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.GetUnscaledValueX(System.Double)">
            <summary>
            Converts the given data value to a visual location.
            </summary>
            <param name="scaledValue">The data value to un-scale.</param>
            <returns>The x-coordinate of the location which corresponds with the given data value.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.GetUnscaledValueY(System.Double)">
            <summary>
            Converts the given data value to a visual location.
            </summary>
            <param name="scaledValue">The data value to un-scale.</param>
            <returns>The y-coordinate of the location which corresponds with the given data value.</returns>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.UltraXYChart.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.UltraXYChart.About">
            <summary>
            Display the about dialog.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.ValueBrushScale">
            <summary>
            Represents a brush scale that uses value-based brush selection.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueBrushScale.#ctor">
            <summary>
            Creates a new instance of the ValueBrushScale.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ValueBrushScale.IsLogarithmic">
            <summary>
            Gets or sets whether the scale is logarithmic.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueBrushScale.ShouldSerializeIsLogarithmic">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ValueBrushScale.IsLogarithmic"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueBrushScale.IsLogarithmic"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueBrushScale.ResetIsLogarithmic">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ValueBrushScale.IsLogarithmic"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueBrushScale.IsLogarithmic"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ValueBrushScale.LogarithmBase">
            <summary>
            Gets or sets the logarithm base for this scale.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueBrushScale.ShouldSerializeLogarithmBase">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ValueBrushScale.LogarithmBase"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueBrushScale.LogarithmBase"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueBrushScale.ResetLogarithmBase">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ValueBrushScale.LogarithmBase"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueBrushScale.LogarithmBase"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ValueBrushScale.MaximumValue">
            <summary>
            Gets or sets the maximum value for this scale.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueBrushScale.ShouldSerializeMaximumValue">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ValueBrushScale.MaximumValue"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueBrushScale.MaximumValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueBrushScale.ResetMaximumValue">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ValueBrushScale.MaximumValue"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueBrushScale.MaximumValue"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.ValueBrushScale.MinimumValue">
            <summary>
            Gets or sets the minimum value for this scale.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueBrushScale.ShouldSerializeMinimumValue">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.ValueBrushScale.MinimumValue"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueBrushScale.MinimumValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueBrushScale.ResetMinimumValue">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.ValueBrushScale.MinimumValue"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.ValueBrushScale.MinimumValue"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.ValueBrushScale.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.WaterfallSeries">
            <summary>
            Represents a UltraDataChart waterfall column series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.WaterfallSeries.#ctor">
            <summary>
            Initializes a new instance of the WaterfallSeries class. 
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WaterfallSeries.NegativeBrush">
            <summary>
            Gets or sets the brush to use for negative portions of the series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.WaterfallSeries.ShouldSerializeNegativeBrush">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.WaterfallSeries.NegativeBrush"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.WaterfallSeries.NegativeBrush"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.WaterfallSeries.ResetNegativeBrush">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.WaterfallSeries.NegativeBrush"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.WaterfallSeries.NegativeBrush"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WaterfallSeries.NegativeOutline">
            <summary>
            Brush to use for outlining negative elements in the waterfall series.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.WaterfallSeries.ShouldSerializeNegativeOutline">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.WaterfallSeries.NegativeOutline"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.WaterfallSeries.NegativeOutline"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.WaterfallSeries.ResetNegativeOutline">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.WaterfallSeries.NegativeOutline"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.WaterfallSeries.NegativeOutline"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WaterfallSeries.RadiusX">
            <summary>
            Gets or sets the x-radius of the ellipse that is used to round the corners of the column.
            </summary> 
        </member>
        <member name="M:Infragistics.Win.DataVisualization.WaterfallSeries.ShouldSerializeRadiusX">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.WaterfallSeries.RadiusX"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.WaterfallSeries.RadiusX"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.WaterfallSeries.ResetRadiusX">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.WaterfallSeries.RadiusX"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.WaterfallSeries.RadiusX"/>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WaterfallSeries.RadiusY">
            <summary>
            Gets or sets the y-radius of the ellipse that is used to round the corners of the column.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.WaterfallSeries.ShouldSerializeRadiusY">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.WaterfallSeries.RadiusY"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.WaterfallSeries.RadiusY"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.WaterfallSeries.ResetRadiusY">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.WaterfallSeries.RadiusY"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.WaterfallSeries.RadiusY"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.WaterfallSeries.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.WeightedCloseIndicator">
            <summary>
            Represents a UltraDataChart Weigted Close indicator series.
            </summary>
            <remarks>
            The weighted close indicator shows an average of the high low and close
            for a day but with the closing price counted twice in the average.
            <para>
            Default required members: High, Low, Close
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.WeightedCloseIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.WeightedCloseIndicator"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.WeightedCloseIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.WilliamsPercentRIndicator">
            <summary>
            Represents a UltraDataChart Williams %R indicator series.
            </summary>
            <remarks>
            Default required members: High, Low, Close
            </remarks>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.WilliamsPercentRIndicator.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Win.DataVisualization.WilliamsPercentRIndicator"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.WilliamsPercentRIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current StandardDeviationIndicator object.
            <remarks>
            The typical, and initial, value for Williams %R periods is 14.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.WilliamsPercentRIndicator.ShouldSerializePeriod">
            <summary>
            Indicates if the <see cref="P:Infragistics.Win.DataVisualization.WilliamsPercentRIndicator.Period"/> property needs to be serialized.
            </summary>
            <returns>A boolean indicating if the property needs to be serialized.</returns>
            <seealso cref="P:Infragistics.Win.DataVisualization.WilliamsPercentRIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.WilliamsPercentRIndicator.ResetPeriod">
            <summary>
            Resets the <see cref="P:Infragistics.Win.DataVisualization.WilliamsPercentRIndicator.Period"/> property to its default value.
            </summary>
            <seealso cref="P:Infragistics.Win.DataVisualization.WilliamsPercentRIndicator.Period"/>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.WilliamsPercentRIndicator.Reset">
            <summary>
            Resets all the properties to their default values
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.WindowResponse">
            <summary>
            Describes available types of UI response to user panning and zooming operations.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.WindowResponse.Deferred">
            <summary>
            Defer the view update until after the user action is complete.
            </summary>
        </member>
        <member name="F:Infragistics.Win.DataVisualization.WindowResponse.Immediate">
            <summary>
            Update the view immediately while the user action is happening.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.TextMarkerTemplate">
            <summary>
            MarkerTemplate used to display text.
            </summary>
            <seealso cref="T:Infragistics.Graphics.CustomRenderTemplate" />
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TextMarkerTemplate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Win.DataVisualization.TextMarkerTemplate"/> class.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Infragistics.Win.DataVisualization.TextMarkerTemplate.PassStarting" -->
        <member name="P:Infragistics.Win.DataVisualization.TextMarkerTemplate.Measure">
            <summary>
            Overriden to hide: Called to measure the text for the marker.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TextMarkerTemplate.Render">
            <summary>
            Overriden to hide: Called to render the text of the marker.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TextMarkerTemplate.PassCompleted">
            <summary>
            Overriden to hide: Called after the last text marker has been rendered.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TextMarkerTemplate.FontColor">
            <summary>
            Gets or sets the color of the font used to render the text marker.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TextMarkerTemplate.FontFamily">
            <summary>
            Gets or sets the font family of the font used to render the text marker.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TextMarkerTemplate.FontSize">
            <summary>
            Gets or sets the size of the font used to render the text marker.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TextMarkerTemplate.FontStyle">
            <summary>
            Gets or sets the style of the font used to render the text marker
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TextMarkerTemplate.TextMemberPath">
            <summary>
            Gets or sets the Label mapping property for the text marker.
            </summary>
        </member>
        <member name="E:Infragistics.Win.DataVisualization.TextMarkerTemplate.BeforeRenderTextMarker">
            <summary>
            Raised before a text marger is measured and rendered.
            </summary>
        </member>
        <member name="M:Infragistics.Win.DataVisualization.TextMarkerTemplate.OnBeforeRenderTextMarker(Infragistics.Win.DataVisualization.TextMarkerEventArgs)">
            <summary>
            Used to invoke the <see cref="E:Infragistics.Win.DataVisualization.TextMarkerTemplate.BeforeRenderTextMarker"/> event.
            </summary>
            <param name="e">The data for this event.</param>
            <seealso cref="T:Infragistics.Win.DataVisualization.TextMarkerEventArgs"/>
            <seealso cref="E:Infragistics.Win.DataVisualization.TextMarkerTemplate.BeforeRenderTextMarker"/>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.TextMarkerEventArgs">
            <summary>
            EventArgs class used to pass information about a text marker.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TextMarkerEventArgs.Text">
            <summary>
            Gets or sets the text to be displayed in the marker.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TextMarkerEventArgs.FontColor">
            <summary>
            Gets or sets the color of the font used to render the marker.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TextMarkerEventArgs.FontFamily">
            <summary>
            Gets or sets the font family of the font used to render the marker.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TextMarkerEventArgs.FontSize">
            <summary>
            Gets or sets the size of the font used to render the marker.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TextMarkerEventArgs.FontStyle">
            <summary>
            Gets or sets the style of the font used to render the marker.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TextMarkerEventArgs.Data">
            <summary>
            Gets the data context.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.TextMarkerEventArgs.Offset">
            <summary>
            Gets or sets the distance to offset the text from the marker location.
            </summary>
        </member>
        <member name="T:Infragistics.Win.DataVisualization.FunnelChartDataContext">
            <summary>
            Represents contextual data for the funnel chart.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FunnelChartDataContext.Item">
            <summary>
            The data item that is in context.
            </summary>
        </member>
        <member name="P:Infragistics.Win.DataVisualization.FunnelChartDataContext.Index">
            <summary>
            The index of the data item that is in context.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CategoryChart">
            <summary>
            Represents a chart with an ordinal X-axis and a numeric Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.TransitionInDuration">
            <summary>
            Gets or sets the duration used for animating series plots when the chart is loading into view
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.TransitionInEasingFunction">
            <summary>
            Gets or sets the easing function used for animating series plots when the chart is loading into view
            </summary>
            <remarks>
            This can be set to one of the known values "linear" or "cubic," or it can be set to an easing function which takes a single numeric parameter and returns a number.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.ShowDefaultToolTip">
            <summary>
            Gets or sets whether or not the default tooltip will be shown.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryChart.InitializeChart(Infragistics.Controls.Charts.XamDataChart)">
            <summary>
            Initializes the given DataChart to be displayed in this chart.
            </summary>
            <param name="dataChart">The DataChart to initialize.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryChart.InitializeSeries(Infragistics.Controls.Charts.Series,System.Int32)">
            <summary>
            Initializes the given series.
            </summary>
            <param name="series">The series to initialize.</param>
            <param name="index">A number representing the position of the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryChart.CreateAxes">
            <summary>
            Creates the axes for this chart.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryChart.InitializeYAxis(Infragistics.Controls.Charts.Axis)">
            <summary>
            Initializes the given Y-axis.
            </summary>
            <param name="yAxis">The Y-axis to initialize.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.ChartType">
            <summary>
            Gets or sets the type of chart series to generate from the data.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.MarkerCollisionAvoidance">
            <summary>
            Gets or sets the behavior for markers in each series which are placed too close together for the current view, resulting in a collision.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.IsTransitionInEnabled">
            <summary>
            Gets or sets whether animation of series plots is enabled when the chart is loading into view
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.TransitionInMode">
            <summary>
            Gets or sets the method that determines how to animate series plots when the chart is loading into view
            </summary> 
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.TransitionInSpeedType">
            <summary>
            Gets or sets the arrival speed used for animating series plots when the chart is loading into view
            </summary> 
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.XAxisInterval">
            <summary>
            Gets or sets the frequency of displayed labels along the X-axis.
            </summary>
            <remarks>
            Gets or sets the set value is a factor that determines which labels will be hidden. For example, an interval of 2 will display every other label.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.XAxisMinorInterval">
            <summary>
            Gets or sets the frequency of displayed minor lines along the X-axis.
            </summary>
            <remarks>
            Gets or sets the set value is a factor that determines how the minor lines will be displayed.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.XAxisGap">
            <summary>
            Gets or sets the amount of space between adjacent categories for the X-axis.
            </summary>
            <remarks>
            The gap is silently clamped to the range [0, 1] when used.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.XAxisOverlap">
            <summary>
            Gets or sets the amount of overlap between adjacent categories for the X-axis.
            </summary>
            <remarks>
            Gets or sets the overlap is silently clamped to the range [-1, 1] when used.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.YAxisInterval">
            <summary>
            Gets or sets the distance between each label and grid line along the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.YAxisIsLogarithmic">
            <summary>
            Gets or sets whether the Y-axis should use a logarithmic scale instead of a linear one.
            </summary>
            <remarks>
            Since log(-1) is imaginary and log(0) is undefined, it is recommended to enable this property only when the Y-axis minimum is greater than zero.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.YAxisLogarithmBase">
            <summary>
            Gets or sets the base value to use in the log function when mapping the position of data items along the Y-axis.
            </summary>
            <remarks>
            This property is effective only when YAxisIsLogarithmic is true.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.YAxisMinimumValue">
            <summary>
            Gets or sets the data value corresponding to the minimum value of the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.YAxisMaximumValue">
            <summary>
            Gets or sets the data value corresponding to the maximum value of the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.YAxisMinorInterval">
            <summary>
            Gets or sets the frequency of displayed minor lines along the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.XAxisActualMinimum">
            <summary>
            Gets the current minimum value for the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.XAxisActualMaximum">
            <summary>
            Gets the current maximum value for the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.YAxisActualMinimum">
            <summary>
            Gets the current minimum value for the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.YAxisActualMaximum">
            <summary>
            Gets the current maximum value for the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.NegativeBrushes">
            <summary>
            Gets or sets the palette used for coloring negative items of Waterfall chart type.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.NegativeOutlines">
            <summary>
            Brushes to use for drawing negative elements, when using a chart type with contextual coloring, such as Waterfall.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.YAxisAbbreviateLargeNumbers">
            <summary>
            Gets or sets whether the large numbers on the Y-axis labels are abbreviated.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.IsCategoryHighlightingEnabled">
            <summary>
            Gets or sets whether the category should be highlighted when hovered
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.IsItemHighlightingEnabled">
            <summary>
            Gets or sets whether the item should be highlighted when hovered
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.SupportedDataSeries">
            <summary>
            Gets a list of DataSeriesTypes supported by this chart control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryChart.RepopulateSeriesFromDataAdapter">
            <summary>
            Clears and refreshes the chart series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryChart.GetSeriesType(Infragistics.Win.DataVisualization.DataAdapters.DataSeries)">
            <summary>
            Gets a series type to create based on the given DataSeries.
            </summary>
            <param name="ds">The DataSeries with contextual information which will determine the type of series to create.</param>
            <returns>The DataSeriesType to create based on the given DataSeries.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryChart.CreateSeries(Infragistics.Win.DataVisualization.DataAdapters.DataSeries,Infragistics.Win.DataVisualization.DataAdapters.DataSeriesType)">
            <summary>
            Creates a series based on the given DataSeries and the resolved series type.
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryChart.RepopulateAxisBasedOn(Infragistics.Win.DataVisualization.DataAdapters.DataSeries)">
            <summary>
            Applies settings to the axes based on the given DataSeries.
            </summary>
            <param name="ds">The DataSeries under consideration.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryChart.ResetAxes">
            <summary>
            Resets the axes to their default state.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryChart.SupportedDataRules">
            <summary>
            Gets a list of DataSeriesTypes supported by this chart control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryChart.ApplyMarkers(Infragistics.Controls.Charts.Series,System.Int32)">
            <summary>
            Apply marker settings from this chart to the given series.
            </summary>
            <param name="series">The series to apply marker settings to.</param>
            <param name="index">An integer representing the position of the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryChart.ForEachSeries(System.Action{Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries})">
            <summary>
            Applies the given action to each series in the chart.
            </summary>
            <param name="action">The action to apply to each series in the chart.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryChart.ForEachSeries(System.Action{Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries,System.Int32})">
            <summary>
            Applies the given action to each series in the chart.
            </summary>
            <param name="action">The action to apply to each series in the chart.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryChart.GetXAxis">
            <summary>
            Gets the X-axis.
            </summary>
            <returns>The X-axis.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryChart.GetYAxis">
            <summary>
            Gets the Y-axis.
            </summary>
            <returns>The Y-axis.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryChart.OnPropertyUpdated(System.String,System.Object,System.Object)">
            <summary>
            Called when a property is updated.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.DomainChart">
            <summary>
            Represents a base class for all domain charts that can plot scatter data and shapefiles
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.TitleTextStyle">
            <summary>
            Gets or sets CSS font property for the chart title
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.SubtitleTextStyle">
            <summary>
            Gets or sets CSS font property for the chart subtitle
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.Container">
            <summary>
            The UI container element.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.ProvideContainer(System.Object)">
            <summary>
            Provides a container for this control
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.Destroy">
            <summary>
            Destroy this control 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.TooltipTemplate">
            <summary>
            Gets or sets the id of a template element to use for tooltips, or markup representing the tooltip template.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.TooltipTemplates">
            <summary>
            Gets or sets the names of tooltip templates
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.PixelScalingRatio">
            <summary>
            Gets or sets the scaling value used to affect the pixel density of the control.
            </summary>
            <remarks>
            A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control
            to appear blurry.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.ToolTip">
            <summary>
            Gets or sets the tooltip of chart 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.TitleLeftMargin">
            <summary>
            Gets or sets the left margin of chart title 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.TitleRightMargin">
            <summary>
            Gets or sets the right margin of chart title 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.TitleTopMargin">
            <summary>
            Gets or sets the top margin of chart title 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.TitleBottomMargin">
            <summary>
            Gets or sets the bottom margin of chart title 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.SubtitleLeftMargin">
            <summary>
            Gets or sets the left margin of chart subtitle 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.SubtitleTopMargin">
            <summary>
            Gets or sets the top margin of chart subtitle 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.SubtitleRightMargin">
            <summary>
            Gets or sets the right margin of chart subtitle 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.SubtitleBottomMargin">
            <summary>
            Gets or sets the bottom margin of chart subtitle 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.SubtitleTextColor">
            <summary>
            Gets or sets color of chart subtitle
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.TitleTextColor">
            <summary>
            Gets or sets color of chart title
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.LeftMargin">
            <summary>
            Gets or sets the left margin of the chart content.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.TopMargin">
            <summary>
            Gets or sets the top margin of the chart content.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.RightMargin">
            <summary>
            Gets or sets the right margin of the chart content.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.BottomMargin">
            <summary>
            Gets or sets the bottom margin around the chart content.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.TransitionDuration">
            <summary>
            Gets or sets the duration used for animating series plots when the data is changing
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.TransitionEasingFunction">
            <summary>
            Gets or sets the easing function used for animating series plots when the data is changing.
            </summary>
            <remarks>
            This can be set to one of the known values "linear" or "cubic," or it can be set to an easing function which takes a single numeric parameter and returns a number.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.DataChart">
            <summary>
            Gets the underlying DataChart which is encapsulated by this ShapeChart.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.#ctor">
            <summary>
            Create an instance of domain chart
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.SupportedDataSeries">
            <summary>
            Gets a list of DataSeriesTypes supported by this chart control.
            </summary>     
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.SupportedDataRules">
            <summary>
            Gets a list of DataSeriesTypes supported by this chart control.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.SuggestedMarkerTypes">
            <summary> Gets or sets marker types suggested by data adapter </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.NotifyResized">
            <summary>
            Called when the control has been resized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.Flush">
            <summary>
            Forces any pending refresh to the chart to be finished.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.HideToolTip">
            <summary>
            Hides the active main tooltip, if displayed.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.DomainChart.PropertyChanged">
            <summary>
            Event raised when a property value is changed on this chart
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.ForEachSeries(System.Action{Infragistics.Controls.Charts.Series})">
            <summary>
            Applies the given action to each series in the chart.
            </summary>
            <param name="action">The action to apply to each series in the chart.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.ForEachSeries(System.Action{Infragistics.Controls.Charts.Series,System.Int32})">
            <summary>
            Applies the given action to each series in the chart.
            </summary>
            <param name="action">The action to apply to each series in the chart.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.OnDataChart(System.Action{Infragistics.Controls.Charts.XamDataChart})">
            <summary>
            Applies the given action to the DataChart, and, optionally, sub-charts.
            </summary>
            <param name="action">The action to apply to the DataChart(s).</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.OnDataChart(System.Action{Infragistics.Controls.Charts.XamDataChart},System.Boolean)">
            <summary>
            Applies the given action to the DataChart, and, optionally, sub-charts.
            </summary>
            <param name="action">The action to apply to the DataChart(s).</param>
            <param name="subCharts">Whether the action should also be applied to sub-charts.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.OnDataChart(System.Action{Infragistics.Controls.Charts.XamDataChart},System.Boolean,System.String)">
            <summary>
            Applies the given action to the DataChart, and, optionally, sub-charts.
            </summary>
            <param name="action">The action to apply to the DataChart(s).</param>
            <param name="subCharts">Whether the action should also be applied to sub-charts.</param>
            <param name="propertyName">The name of the property that changed on the FinancialChart.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.GetSeriesType(Infragistics.Win.DataVisualization.DataAdapters.DataSeries)">
            <summary>
            Gets series type based on suggested DataSeries and the chart type
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.CreateSeries(Infragistics.Win.DataVisualization.DataAdapters.DataSeries,Infragistics.Win.DataVisualization.DataAdapters.DataSeriesType)">
            <summary>
            Creates a series based on the given DataSeries and the resolved series type.
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.RepopulateSeriesFromDataAdapter">
            <summary>
            Clears and refreshes the chart series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.RepopulateSeriesBasedOn(Infragistics.Win.DataVisualization.DataAdapters.DataSeries)">
            <summary> Update series properties based on suggestions from a DataSeries </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.RepopulateAxisBasedOn(Infragistics.Win.DataVisualization.DataAdapters.DataSeries)">
            <summary>
            Applies settings to the axes based on the given DataSeries.
            </summary>
            <param name="ds">The DataSeries under consideration.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.ResetSeries(Infragistics.Controls.Charts.Series)">
            <summary>
            Resets a series and its properties before it is removed from the DataChart
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.ResetAxes">
            <summary>
            Resets axes and their properties before they are updated based on data series 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.GetBrushByIndex(System.Int32)">
            <summary>
            Gets a brush based on a series index.
            </summary>
            <param name="index">The index of a series.</param> 
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.GetOutlineByIndex(System.Int32)">
            <summary>
            Gets the appropriate outline color based on the series index.
            </summary>
            <param name="index">The index to use.</param> 
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.GetMarkerBrushByIndex(System.Int32)">
            <summary>
            Gets the appropriate marker color to use based on the series index.
            </summary>
            <param name="index">The index to use.</param> 
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.GetMarkerOutlineByIndex(System.Int32)">
            <summary>
            Gets the appropriate marker outline color to use based on the series index.
            </summary>
            <param name="index">The index to use.</param> 
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.GetPaletteColor(System.Int32)">
            <summary>
            Gets the appropriate palette color to use based on the series index.
            </summary>
            <param name="index">The index to use.</param> 
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.GetPaletteColors(Infragistics.Portable.Graphics.Media.Color)">
            <summary>
            Gets a collection of colors where 1st color is 50% lighter than the last color
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.GetPaletteBrushes(Infragistics.Portable.Graphics.Media.Color)">
            <summary>
            Gets a collection of brushes where 1st brush is 50% lighter than the last color
            </summary> 
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.DefaultPaletteColors">
            <summary>
            Gets default palette colors used only when the chart does not have any brushes set
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.ExportVisualData">
            <summary>
            Returns a representation of the current chart visuals.
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.GetMarkerType(Infragistics.Win.DataVisualization.DataAdapters.DataSeriesMarker)">
            <summary>
            Converts a DataSeriesMarker enum to a MarkerType enum
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.NotifySetItem(System.Object,System.Int32,System.Object,System.Object)">
            <summary>
            Called to notify the chart that the data source has had an item set. 
            </summary>
            <param name="source_">The data source changed.</param>
            <param name="index">The index of the change</param>
            <param name="oldItem">The old item.</param>
            <param name="newItem">The new item.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.NotifyClearItems(System.Object)">
            <summary>
            Used to manually notify the chart that the data source has reset or cleared its items.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.NotifyInsertItem(System.Object,System.Int32,System.Object)">
            <summary>
            Called to notify the chart that the data source has had an item inserted. 
            </summary>
            <param name="source_">The data source changed.</param>
            <param name="index">The index of the new item</param>
            <param name="newItem">The new item.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.NotifyRemoveItem(System.Object,System.Int32,System.Object)">
            <summary>
            Used to manually notify the chart that the data source has had an item removed.
            </summary>
            <param name="source_">The data source changed.</param>
            <param name="index">The index of the old item.</param>
            <param name="oldItem">The old item.</param>
        </member>
        <member name="E:Infragistics.Controls.Charts.DomainChart.SeriesAdded">
            <summary> Event raised when a series is initialized and added to this chart. </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.DomainChart.SeriesRemoved">
            <summary> Event raised when a series is removed from this chart. </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.DomainChart.SeriesPointerEnter">
            <summary>
            Occurs when the pointer enters a Series.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.DomainChart.SeriesPointerLeave">
            <summary>
            Occurs when the pointer leaves a Series.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.DomainChart.SeriesPointerMove">
            <summary>
            Occurs when the pointer moves over a Series.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.DomainChart.SeriesPointerDown">
            <summary>
            Occurs when the pointer is pressed down over a Series.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.DomainChart.SeriesPointerUp">
            <summary>
            Occurs when the pointer is released over a Series.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.DomainChart.CalloutStyleUpdating">
            <summary>
            Occurs when the style of a callout is updated.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.IsVerticalZoomAllowed">
            <summary>
            Boolean indicating whether this chart can be zoomed vertically.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.InitializeChart(Infragistics.Controls.Charts.XamDataChart)">
            <summary>
            Initializes the given DataChart to be displayed in this chart.
            </summary>
            <param name="dataChart">The DataChart to initialize.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.InitializeSeries(Infragistics.Controls.Charts.Series,System.Int32)">
            <summary>
            Initializes the given series.
            </summary>
            <param name="series">The series to initialize.</param>
            <param name="index">A number representing the position of the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.CreateAxes">
            <summary>
            Creates the axes for this chart.
            </summary>    
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.ApplyMarkers(Infragistics.Controls.Charts.Series,System.Int32)">
            <summary>
            Apply marker settings from this chart to the given series.
            </summary>
            <param name="series">The series to apply marker settings to.</param>
            <param name="index">An integer representing the position of the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.InitializeSeriesOverridePlatform(Infragistics.Controls.Charts.Series,System.Int32)">
            <summary>
            Initializes the given series.
            </summary>
            <param name="series">The series to initialize.</param>
            <param name="index">A number representing the position of the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DomainChart.OnPropertyUpdated(System.String,System.Object,System.Object)">
            <summary>
            Called when a property is updated.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.ItemsSource">
            <summary>
            Gets or sets a collection of data items used to generate the chart.
            </summary>
            <remarks>
            The ItemsSource of this chart can be a list of objects containing one or more numeric properties.  
            Additionally, if the objects in the list implement the IEnumerable interface, 
            the Chart will attempt to delve into the sub-collections when reading through the data source. 
            Databinding can be further configured by attributing the data item classes 
            with the DataSeriesMemberIntentAttribute. 
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.IncludedProperties">
            <summary>
            Gets or sets a set of property paths that should be included for consideration by the category chart, leaving the remainder excluded. If null, all properties will be considered.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.ExcludedProperties">
            <summary>
            Gets or sets a set of property paths that should be excluded from consideration by the category chart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.Brushes">
            <summary>
            Gets or sets the palette of brushes to use for coloring the chart series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.Outlines">
            <summary>
            Gets or sets the palette of brushes to use for outlines on the chart series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.Legend">
            <summary>
            Gets or sets the legend to connect this chart to.
            </summary>
            <remarks>
            When the legend property is set, the chart will use it to display information about its series.  Legends can be shared by multiple chart controls.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.IsHorizontalZoomEnabled">
            <summary>
            Gets or sets whether the chart can be horizontally zoomed through user interactions. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.IsVerticalZoomEnabled">
            <summary>
            Gets or sets whether the chart can be vertically zoomed through user interactions.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.IsSeriesHighlightingEnabled">
            <summary>
            Gets or sets whether the chart can highlight series through user interactions.
            <para>This property applies to Category Chart and Financial Chart controls.</para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.WindowRect">
            <summary>
            Gets or sets the rectangle representing the current scroll and zoom state of the chart.
            </summary>
            <remarks>
            WindowRect is expressed as a Rectangle with coordinates and sizes between 0 and 1.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.Viewport">
            <summary>
            Gets a rectangle representing the bounds of the plot area.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.Title">
            <summary>
            Gets or sets text to display above the plot area.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.Subtitle">
            <summary>
            Gets or sets text to display below the Title, above the plot area.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.TitleAlignment">
            <summary>
            Gets or sets horizontal alignment which determines the title position, relative to the left and right edges of the control.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.SubtitleAlignment">
            <summary>
            Gets or sets horizontal alignment which determines the subtitle position, relative to the left and right edges of the control.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.UnknownValuePlotting">
            <summary>
            Gets or sets the behavior that determines how unknown values will be plotted on the chart.
            </summary>
            <remarks>
            Null and Double.NaN are two examples of unknown values.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.Resolution">
            <summary>
            Gets or sets the rendering resolution for all series in this chart.
            </summary>
            <remarks>
            Where n = Resolution, for every n horizontal pixels, combine all items into a single datapoint.  When Resolution = 0, all datapoints will be rendered as graphical objects.  Charts with a higher resolution will have faster performance.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.Thickness">
            <summary>
            Gets or sets the thickness for all series in this chart. Depending on the ChartType, this can be the main brush used, or just the outline.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.MarkerTypes">
            <summary>
            Gets or sets the marker shapes used for indicating location of data points in this chart.
            </summary>
            <remarks>This property applies only to these chart types: point, line, spline, bubble, and polygon </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.MarkerBrushes">
            <summary>
            Gets or sets the palette of brushes used for rendering fill area of data point markers.
            </summary>
            <remarks>This property applies only to these chart types: point, line, spline, bubble, and polygon </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.MarkerOutlines">
            <summary>
            Gets or sets the palette of brushes used for rendering outlines of data point markers. 
            </summary>
            <remarks>This property applies only to these chart types: point, line, spline, bubble, and polygon </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.MarkerMaxCount">
            <summary>
            Gets or sets the maximum number of markers displyed in the plot area of the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.AnimateSeriesWhenAxisRangeChanges">
            <summary>
            Gets or sets whether the series animations should be allowed when a range change has been detected on an axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.TrendLineBrushes">
            <summary>
            Gets or sets the palette of brushes to used for coloring trend lines in this chart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.TrendLineType">
            <summary>
            Gets or sets the formula used for calculating trend lines in this chart.
            </summary>
            <remarks>This property applies only to these chart types: point, line, spline, and bubble </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.TrendLineThickness">
            <summary>
            Gets or sets the thickness of the trend lines in this chart.
            </summary>
            <remarks>This property applies only to these chart types: point, line, spline, and bubble </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.AlignsGridLinesToPixels">
            <summary>
            Gets or sets a value indicating whether grid and tick lines are aligned to device pixels.
            </summary>
            <value>
            <c>true</c> if grid and tick lines are aligned to device pixels; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.ToolTipType">
            <summary>
            Gets or sets the style of tooltip to be displayed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.CrosshairsDisplayMode">
            <summary>
            Gets or sets the crosshairs to be displayed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.CrosshairsSnapToData">
            <summary>
            Gets or sets whether crosshairs will snap to the nearest data point.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.CrosshairsAnnotationEnabled">
            <summary>
            Gets or sets whether annotations are shown along the axis for crosshair values
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.FinalValueAnnotationsVisible">
            <summary>
            Gets or sets whether annotations for the final value of each series is displayed on the axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.CalloutsVisible">
            <summary>
            Gets or sets if callouts should be displayed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.CalloutStyleUpdatingEventEnabled">
            <summary>
            Gets or sets if event annotations should be displayed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.CalloutsItemsSource">
            <summary>
            Gets or sets the collection of callout data to be annotated.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.CalloutsXMemberPath">
            <summary>
            Gets or sets the member path of the X data for the callouts.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.CalloutsYMemberPath">
            <summary>
            Gets or sets the member path of the Y data for the callouts.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.CalloutsLabelMemberPath">
            <summary>
            Gets or sets the member path of the label data for the callouts.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChart.CalloutsContentMemberPath">
            <summary>
            Gets or sets the member path of the content data for the callouts.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.XYChart">
            <summary>
            Represents a base class for domain charts with X/Y axes 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisLabelTextStyle">
            <summary>
            Gets or sets CSS font property for labels on X-axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisLabelTextStyle">
            <summary>
            Gets or sets CSS font property for labels on Y-axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisTitleTextStyle">
            <summary>
            Gets or sets CSS font property for labels on X-axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisTitleTextStyle">
            <summary>
            Gets or sets CSS font property for labels on X-axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisFormatLabel">
            <summary>
            Gets or sets function which takes an context object and returns a formatted label for the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisFormatLabel">
            <summary>
            Gets or sets function which takes a context object and returns a formatted label for the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisLabelLeftMargin">
            <summary>
            Gets or sets the left margin of labels on the X-axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisLabelTopMargin">
            <summary>
            Gets or sets the top margin of labels on the X-axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisLabelRightMargin">
            <summary>
            Gets or sets the right margin of labels on the X-axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisLabelBottomMargin">
            <summary>
            Gets or sets the bottom margin of labels on the X-axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisLabelLeftMargin">
            <summary>
            Gets or sets the left margin of labels on the Y-axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisLabelTopMargin">
            <summary>
            Gets or sets the top margin of labels on the Y-axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisLabelRightMargin">
            <summary>
            Gets or sets the right margin of labels on the Y-axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisLabelBottomMargin">
            <summary>
            Gets or sets the bottom margin of labels on the Y-axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisLabelTextColor">
            <summary>
            Gets or sets color of labels on the X-axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisLabelTextColor">
            <summary>
            Gets or sets color of labels on the Y-axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisTitleMargin">
            <summary>
            Gets or sets the margin around a title on the X-axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisTitleMargin">
            <summary>
            Gets or sets the margin around a title on the Y-axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisTitleLeftMargin">
            <summary>
            Gets or sets the left margin of a title on the X-axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisTitleLeftMargin">
            <summary>
            Gets or sets the left margin of a title on the Y-axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisTitleTopMargin">
            <summary>
            Gets or sets the top margin of a title on the X-axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisTitleTopMargin">
            <summary>
            Gets or sets the top margin of a title on the Y-axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisTitleRightMargin">
            <summary>
            Gets or sets the right margin of a title on the X-axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisTitleRightMargin">
            <summary>
            Gets or sets the right margin of a title on the Y-axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisTitleBottomMargin">
            <summary>
            Gets or sets the bottom margin of a title on the X-axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisTitleBottomMargin">
            <summary>
            Gets or sets the bottom margin of a title on the Y-axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisTitleTextColor">
            <summary>
            Gets or sets color of title on the X-axis 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisTitleTextColor">
            <summary>
            Gets or sets color of title on the Y-axis
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYChart.RepopulateSeriesBasedOn(Infragistics.Win.DataVisualization.DataAdapters.DataSeries)">
            <summary> Update series properties based on suggestions from DataSeries </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYChart.GetXAxis">
            <summary>
            Gets the X-axis.
            </summary>
            <returns>The X-axis.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYChart.GetYAxis">
            <summary>
            Gets the Y-axis.
            </summary>
            <returns>The Y-axis.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYChart.OnXAxis(System.Action{Infragistics.Controls.Charts.Axis})">
            <summary>
            Applies an action to the X-axis.
            </summary>
            <param name="action">The action to apply to the X-axis.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYChart.OnXAxis(System.Action{Infragistics.Controls.Charts.Axis},System.String)">
            <summary>
            Applies an action to the X-axis.
            </summary>
            <param name="action">The action to apply to the X-axis.</param>
            <param name="propertyName">The name of the property that changed on the XYChart.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYChart.OnYAxis(System.Action{Infragistics.Controls.Charts.Axis},System.Boolean)">
            <summary>
            Applies an action to the Y-axis.
            </summary>
            <param name="action">The action to apply to the Y-axis.</param>
            <param name="subCharts">Whether to apply the action to the Y-axis of sub-charts.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYChart.OnYAxis(System.Action{Infragistics.Controls.Charts.Axis})">
            <summary>
            Applies an action to the Y-axis.
            </summary>
            <param name="action">The action to apply to the Y-axis.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYChart.OnXAxisTitle(System.Action{Infragistics.Controls.Charts.TitleSettings})">
            <summary>
            Applies an action to the X-axis title settings.
            </summary>
            <param name="action">The action to apply to the X-axis title settings.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYChart.OnYAxisTitle(System.Action{Infragistics.Controls.Charts.TitleSettings})">
            <summary>
            Applies an action to the Y-axis title settings.
            </summary>
            <param name="action">The action to apply to the Y-axis title settings.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYChart.OnYAxisLabel(System.Action{Infragistics.Controls.Charts.AxisLabelSettings})">
            <summary>
            Applies an action to the Y-axis label settings.
            </summary>
            <param name="action">The action to apply to the Y-axis label settings.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYChart.OnXAxisLabel(System.Action{Infragistics.Controls.Charts.AxisLabelSettings})">
            <summary>
            Applies an action to the X-axis label settings.
            </summary>
            <param name="action">The action to apply to the X-axis label settings.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYChart.GetScaledValueX(System.Double)">
            <summary>
            Converts the given visual location to a data value.
            </summary>
            <param name="unscaledValue">The x-coordinate of the location to scale.</param>
            <returns>The data value which corresponds with the given location.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYChart.GetUnscaledValueX(System.Double)">
            <summary>
            Converts the given data value to a visual location.
            </summary>
            <param name="scaledValue">The data value to un-scale.</param>
            <returns>The x-coordinate of the location which corresponds with the given data value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYChart.GetScaledValueY(System.Double)">
            <summary>
            Converts the given visual location to a data value.
            </summary>
            <param name="unscaledValue">The y-coordinate of the location to scale.</param>
            <returns>The data value which corresponds with the given location.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYChart.GetUnscaledValueY(System.Double)">
            <summary>
            Converts the given data value to a visual location.
            </summary>
            <param name="scaledValue">The data value to un-scale.</param>
            <returns>The y-coordinate of the location which corresponds with the given data value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYChart.ReleaseChart(Infragistics.Controls.Charts.XamDataChart)">
            <summary>
            Cleans up the given chart after it is no longer in use.
            </summary>
            <param name="chart">The chart to clean up.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYChart.InitializeChart(Infragistics.Controls.Charts.XamDataChart)">
            <summary>
            Initializes the given DataChart to be displayed in this chart.
            </summary>
            <param name="dataChart">The DataChart to initialize.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYChart.InitializeXAxis(Infragistics.Controls.Charts.Axis)">
            <summary>
            Initializes the given X-axis.
            </summary>
            <param name="xAxis">The X-axis to initialize.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYChart.InitializeYAxis(Infragistics.Controls.Charts.Axis)">
            <summary>
            Initializes the given Y-axis.
            </summary>
            <param name="yAxis">The Y-axis to initialize.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XYChart.OnPropertyUpdated(System.String,System.Object,System.Object)">
            <summary>
            Called when a property is updated.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisLabel">
            <summary>
            Gets or sets the format for labels along the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisLabel">
            <summary>
            Gets or sets the property or string from which the labels are derived.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisMajorStroke">
            <summary>
            Gets or sets the color to apply to major gridlines along the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisMajorStroke">
            <summary>
            Gets or sets the color to apply to major gridlines along the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisMajorStrokeThickness">
            <summary>
            Gets or sets the thickness to apply to major gridlines along the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisMajorStrokeThickness">
            <summary>
            Gets or sets the thickness to apply to major gridlines along the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisMinorStrokeThickness">
            <summary>
            Gets or sets the thickness to apply to minor gridlines along the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisMinorStrokeThickness">
            <summary>
            Gets or sets the thickness to apply to minor gridlines along the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisStrip">
            <summary>
            Gets or sets the color to apply to stripes along the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisStrip">
            <summary>
            Gets or sets the color to apply to stripes along the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisStroke">
            <summary>
            Gets or sets the color to apply to the X-axis line.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisStroke">
            <summary>
            Gets or sets the color to apply to the Y-axis line.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisStrokeThickness">
            <summary>
            Gets or sets the thickness to apply to the X-axis line.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisStrokeThickness">
            <summary>
            Gets or sets the thickness to apply to the Y-axis line.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisTickLength">
            <summary>
            Gets or sets the length of tickmarks along the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisTickLength">
            <summary>
            Gets or sets the length of tickmarks along the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisTickStroke">
            <summary>
            Gets or sets the color to apply to tickmarks along the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisTickStroke">
            <summary>
            Gets or sets the color to apply to tickmarks along the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisTickStrokeThickness">
            <summary>
            Gets or sets the thickness to apply to tickmarks along the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisTickStrokeThickness">
            <summary>
            Gets or sets the thickness to apply to tickmarks along the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisTitle">
            <summary>
            Gets or sets the Text to display below the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisTitle">
            <summary>
            Gets or sets the Text to display to the left of the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisMinorStroke">
            <summary>
            Gets or sets the color to apply to minor gridlines along the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisMinorStroke">
            <summary>
            Gets or sets the color to apply to minor gridlines along the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisLabelAngle">
            <summary>
            Gets or sets the angle of rotation for labels along the X-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisLabelAngle">
            <summary>
            Gets or sets the angle of rotation for labels along the Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisExtent">
            <summary>
            Gets or sets the distance between the X-axis and the bottom of the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisExtent">
            <summary>
            Gets or sets the distance between the Y-axis and the left edge of the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisTitleAngle">
            <summary>
            Gets or sets the angle of rotation for the X-axis title.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisTitleAngle">
            <summary>
            Gets or sets the angle of rotation for the Y-axis title.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisInverted">
            <summary>
            Gets or sets whether to invert the direction of the X-axis by placing the first data items on the right side of the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisInverted">
            <summary>
            Gets or sets whether to invert the direction of the Y-axis by placing the minimum numeric value at the top of the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisTitleAlignment">
            <summary>
            Gets or sets Horizontal alignment of the X-axis title.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisTitleAlignment">
            <summary>
            Gets or sets Vertical alignment of the Y-axis title.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisLabelHorizontalAlignment">
            <summary>
            Gets or sets Horizontal alignment of X-axis labels.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisLabelHorizontalAlignment">
            <summary>
            Gets or sets Horizontal alignment of Y-axis labels.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisLabelVerticalAlignment">
            <summary>
            Gets or sets Vertical alignment of X-axis labels.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisLabelVerticalAlignment">
            <summary>
            Gets or sets Vertical alignment of Y-axis labels.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.XAxisLabelVisibility">
            <summary>
            Gets or sets Visibility of X-axis labels.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisLabelVisibility">
            <summary>
            Gets or sets Visibility of Y-axis labels.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XYChart.YAxisLabelLocation">
            <summary>
            The location of Y-axis labels, relative to the plot area.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ValueOverlay">
            <summary>
            Represents the class of the value overlay. The value overlay is a line or circle representing a value on an axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueOverlay.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.ValueOverlay"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueOverlay.Axis">
            <summary>
            Gets or sets the axis used by the value overlay.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ValueOverlay.AxisProperty">
            <summary>
            Identifies the Axis dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueOverlay.Value">
            <summary>
            Gets or sets the value of the overlay.
            </summary>
            <value>The value.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.ValueOverlay.ValueProperty">
            <summary>
            Ideitifies the Value dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueOverlay.GetSeriesValue(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available main value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, when searching for the best avaialble value any unknown values will be skipped.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueOverlay.GetSeriesValuePosition(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueOverlay.GetItemIndex(Infragistics.Portable.Point)">
            <summary>
            Gets the item item index associated with the specified world position
            </summary>
            <param name="world"></param>
            <returns>
            Item index or -1 if no item is assocated with the specified world position.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueOverlay.GetItem(Infragistics.Portable.Point)">
            <summary>
            Gets the item that is the best match for the specified world coordinates.
            </summary>
            <param name="world">The world coordinates to use.</param>
            <returns>The item that is the best match.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueOverlay.ScrollIntoView(System.Object)">
            <summary>
            Requests that the provided item should be brought into view if possible.
            </summary>
            <param name="item">The item to attempt to bring into view.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueOverlay.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueOverlay.RenderSeriesOverride(System.Boolean)">
            <summary>
            Renders the series override.
            </summary>
            <param name="animate">if set to <c>true</c> [animate].</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueOverlay.ValidateSeries(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueOverlay.WindowRectChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            When overridden in a derived class, is invoked whenever the series window rectangle
            is changed.
            </summary>
            <param name="oldWindowRect">Old window rectangle in normalised world coordinates.</param>
            <param name="newWindowRect">New window rectangle in normalised world coordinates.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueOverlay.ViewportRectChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            When overridden in a derived class, is invoked whenever the series viewport rectangle
            is changed.
            </summary>
            <param name="oldViewportRect">Old viewport rectangle in device coordinates.</param>
            <param name="newViewportRect">New viewport rectangle in device coordinates.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueOverlay.DataUpdatedOverride(Infragistics.Portable.FastItemsSourceEventAction,System.Int32,System.Int32,System.String)">
            <summary>
            When overridden in a derived class, DataChangedOverride is called whenever a change is made to
            the series data.
            </summary>
            <param name="action">The action performed on the data</param>
            <param name="position">The index of the first item involved in the update.</param>
            <param name="count">The number of items in the update.</param>
            <param name="propertyName">The name of the updated property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueOverlay.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueOverlay.InvalidateAxes">
            <summary>
            Invalidates the axes that use this overlay.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueOverlay.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueOverlay.Infragistics#Controls#Charts#IHasCategoryModePreference#PreferredCategoryMode(Infragistics.Controls.Charts.CategoryAxisBase)">
            <summary>
            Gets the preferred category mode.
            </summary>
            <param name="axis">The axis.</param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueOverlay.Infragistics#Controls#Charts#IHasCategoryAxis#CategoryAxis">
            <summary>
            Gets the category axis.
            </summary>
            <value>The category axis.</value>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueOverlay.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueOverlay.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series has been created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueOverlay.RenderThumbnail(Infragistics.Portable.Rect,Infragistics.Controls.Charts.RenderSurface)">
            <summary>
            Called when the series needs to render a thumbnail view.
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="surface">The surface to attach the view to.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueOverlay.IsAxisAnnotationEnabled">
            <summary>
            Gets or sets whether to draw annotations over the axes where the crosshair meets with them.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ValueOverlay.IsAxisAnnotationEnabledProperty">
            <summary>
            Identifies the IsAxisAnnotationEnabled Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueOverlay.AxisAnnotationFormatLabel">
            <summary>
            Sets or gets a function which takes an object that produces a formatted label for the axis annotation.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ValueOverlay.AxisAnnotationFormatLabelProperty">
            <summary>
            Identifies the AxisAnnotationFormatLabel dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueOverlay.AxisAnnotationTextColor">
            <summary>
            Gets or sets the color to use for the axis annotation text. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ValueOverlay.AxisAnnotationTextColorProperty">
            <summary>
            Identifies the AxisAnnotationTextColor Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueOverlay.AxisAnnotationBackground">
            <summary>
            Gets or sets the color to use for the axis annotation backing. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ValueOverlay.AxisAnnotationBackgroundProperty">
            <summary>
            Identifies the AxisAnnotationBackground Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueOverlay.AxisAnnotationInterpolatedValuePrecision">
            <summary>
            Gets or sets the precision to use displaying values for interpolated positions.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ValueOverlay.AxisAnnotationInterpolatedValuePrecisionProperty">
            <summary>
            Identifies the AxisAnnotationInterpolatedValuePrecision Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueOverlay.AxisAnnotationOutline">
            <summary>
            Gets or sets the color to use for the axis annotation outline. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ValueOverlay.AxisAnnotationOutlineProperty">
            <summary>
            Identifies the AxisAnnotationOutline Dependency Property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ValueOverlay.AxisAnnotationPaddingLeftProperty">
            <summary>
            Identifies the AxisAnnotationPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueOverlay.AxisAnnotationPaddingLeft">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ValueOverlay.AxisAnnotationPaddingTopProperty">
            <summary>
            Identifies the AxisAnnotationPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueOverlay.AxisAnnotationPaddingTop">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ValueOverlay.AxisAnnotationPaddingRightProperty">
            <summary>
            Identifies the AxisAnnotationPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueOverlay.AxisAnnotationPaddingRight">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ValueOverlay.AxisAnnotationPaddingBottomProperty">
            <summary>
            Identifies the AxisAnnotationPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueOverlay.AxisAnnotationPaddingBottom">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueOverlay.AxisAnnotationStrokeThickness">
            <summary>
            Gets or sets the stroke thickness for the axis annotation backing. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ValueOverlay.AxisAnnotationStrokeThicknessProperty">
            <summary>
            Identifies the AxisAnnotationStrokeThickness Dependency Property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueOverlay.GetAxes">
            <summary>
            Gets this series' axes as an array.
            </summary>
            <returns>An array containing all axes used by this series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueOverlay.UpdateAnnotation(System.Double,System.Boolean)">
            <summary>
            Uodates annotations of specified frame
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueOverlay.IsValueOverlay">
            <summary>
            Gets whether the series is a value overlay.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueOverlay.GetLabel(System.Double)">
            <summary>
            Gets the label for a data item.
            </summary>
            <param name="value">The unscaled value to get a label for.</param>
            <returns>The requested label.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.AbsoluteVolumeOscillatorIndicator">
            <summary>
            Represents a XamDataChart Absolute Volume Oscillator indicator series.
            </summary>
            <remarks>
            Default required members: Volume
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.AbsoluteVolumeOscillatorIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AbsoluteVolumeOscillatorIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AbsoluteVolumeOscillatorIndicator.ShortPeriod">
            <summary>
            Gets or sets the short moving average period for the current AbsoluteVolumeOscillatorIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for short AVO periods is 10.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AbsoluteVolumeOscillatorIndicator.ShortPeriodProperty">
            <summary>
            Identifies the ShortPeriod dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AbsoluteVolumeOscillatorIndicator.ShortPeriodOverride">
            <summary>
            Specifies the short period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AbsoluteVolumeOscillatorIndicator.LongPeriod">
            <summary>
            Gets or sets the short moving average period for the current AbsoluteVolumeOscillatorIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for long AVO periods is 30.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AbsoluteVolumeOscillatorIndicator.LongPeriodProperty">
            <summary>
            Identifies the LongPeriod dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AbsoluteVolumeOscillatorIndicator.LongPeriodOverride">
            <summary>
            Specifies the long period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.AccumulationDistributionIndicator">
            <summary>
            Represents a XamDataChart Accumulation/Distribution indicator series.
            </summary>
            <remarks>
            Default required members: Close, Low, High, Volume
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.AccumulationDistributionIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AccumulationDistributionIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.AnchoredCategorySeries">
            <summary>
            Represents the base class for all XamDataChart anchored category/value series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredCategorySeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredCategorySeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredCategorySeries.ShouldSuspendChangedNotification">
            <summary>
            Identifies whether RaisePropertyChanged will be called for ValueColumn property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredCategorySeries.#ctor">
            <summary>
            Initializes a new instance of the AnchoredCategorySeries class. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredCategorySeries.ValueMemberPath">
            <summary>
            Gets or sets the value mapping property for the current series object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredCategorySeries.GetItemValue(System.Object,System.String)">
            <summary>
            Gets a value based on one of the valid member paths for this series type.
            </summary>
            <param name="item">An item from the data source bound to the series.</param>
            <param name="memberPathName">The property name of a valid member path for the series</param>
            <returns></returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnchoredCategorySeries.ValueMemberPathProperty">
            <summary>
            Identifies the ValueMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredCategorySeries.ValueColumn">
            <summary>
            Gets the FastItemColumn representing the mapped values in the items source.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredCategorySeries.TrendLineType">
            <summary>
            Gets or sets the trend type for the current series object.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnchoredCategorySeries.TrendLineTypeProperty">
            <summary>
            Identifies the TrendLineType dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredCategorySeries.TrendLineBrush">
            <summary>
            Gets or sets the brush to use to draw the trend line.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnchoredCategorySeries.TrendLineBrushProperty">
            <summary>
            Identifies the TrendLineBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredCategorySeries.ActualTrendLineBrush">
            <summary>
            Gets the effective TrendLineBrush for this series.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnchoredCategorySeries.ActualTrendLineBrushProperty">
            <summary>
            Identifies the ActualTrendLineBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredCategorySeries.TrendLineThickness">
            <summary>
            Gets or sets the thickness of the current series object's trend line.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnchoredCategorySeries.TrendLineThicknessProperty">
            <summary>
            Identifies the TrendLineThickness dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredCategorySeries.TrendLineDashCap">
            <summary>
            Gets or sets the PenLineCap enumeration value that specifies how the current
            series object's trend line dash ends are drawn. 
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnchoredCategorySeries.TrendLineDashCapProperty">
            <summary>
            Identifies the TrendLineDashCap dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredCategorySeries.TrendLineDashArray">
            <summary>
            Gets or sets a collection of double values that indicate the pattern of dashes and gaps that
            is used to draw the trend line for the current series object. 
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnchoredCategorySeries.TrendLineDashArrayProperty">
            <summary>
            Identifies the TrendLineDashArray dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredCategorySeries.TrendLinePeriod">
            <summary>
            Gets or sets the trend line period for the current series.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            The typical, and initial, value for trend line period is 7.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnchoredCategorySeries.TrendLinePeriodProperty">
            <summary>
            Identifies the TrendLinePeriod dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnchoredCategorySeries.TrendLineZIndexProperty">
            <summary>
            Identifies the TrendLineZIndex dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredCategorySeries.TrendLineZIndex">
            <summary>
            Gets or sets the trend line Z index for the current series.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The trend line renders over the series and markers by default, lower this value to shift it to the background.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredCategorySeries.ScrollIntoView(System.Object)">
            <summary>
            Scrolls the series to display the item for the specified data item.
            </summary>
            <remarks>
            The series is scrolled by the minimum amount required to place the specified data item within
            the central 80% of the visible axis.
            </remarks>
            <param name="item">The data item (item) to scroll to.</param>
            <returns>True if the specified item could be displayed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredCategorySeries.GetCategoryItemsHelper(System.Int32,System.Int32,Infragistics.Controls.Charts.Axis)">
            <summary>
            Gets an array of category items for specified range of indices. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredCategorySeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated 
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredCategorySeries.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredCategorySeries.DataUpdatedOverride(Infragistics.Portable.FastItemsSourceEventAction,System.Int32,System.Int32,System.String)">
            <summary>
            When overridden in a derived class, DataChangedOverride is called whenever a change is made to
            the series data.
            </summary>
            <param name="action">The action performed on the data</param>
            <param name="position">The index of the first item involved in the update.</param>
            <param name="count">The number of items in the update.</param>
            <param name="propertyName">The name of the updated property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredCategorySeries.GetTransitionFromZeroValue">
            <summary>
            Gets transition from zero value of the series: chart's left edge for vertical series or chart's bottom edge for horizontal series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredCategorySeries.ValidateSeries(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredCategorySeries.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredCategorySeries.RenderAlternateView(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.RenderSurface,System.String,System.Double)">
            <summary>
            Renders an alternate view for of this series
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="surface">The render target.</param>
            <param name="viewIdentifier">String key to use for this view target</param>
            <param name="effectiveScalingRatio">The effective scaling ratio.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredCategorySeries.UpdateIndexedProperties">
            <summary>
            Updates properties that are based on the index of the series in the series collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredCategorySeries.Item(System.Object,Infragistics.Portable.Point)">
            <summary>
            Returns the item that is found at the given point.
            </summary>
            <param name="sender">The origin of the mouse interaction.</param>
            <param name="point">The point to search for the item near.</param>
            <returns>The found item.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredCategorySeries.CachedValueMemberPath">
            <summary>
            A cached version of ValueMemberPath.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredCategorySeries.ExportVisualDataOverride(System.Object)">
            <summary>
            Exports visual information about the series for use by external tools and functionality.
            </summary>
            <param name="svd">The data container.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnchoredCategorySeries.MarkerCollisionAvoidanceProperty">
            
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredCategorySeries.MarkerCollisionAvoidance">
            <summary>
            The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredCategorySeries.GetItem(Infragistics.Portable.Point)">
            <summary>
            Gets the item that is the best match for the specified world coordinates.
            </summary>
            <param name="world">The world coordinates to use.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnchoredCategorySeries.ConsolidatedItemHitTestBehaviorProperty">
            <summary>
            Identifies the ConsolidatedItemHitTestBehavior dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredCategorySeries.ConsolidatedItemHitTestBehavior">
            <summary>
            Determines the item returned in hit-testing when the pointer is over an object which represents several consolidated items.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredCategorySeries.GetReferenceValue">
            <summary>
            Gets a numeric value representing the initial value of this series.
            </summary>
            <returns>A numeric value representing the initial value of this series.</returns>
            <remarks>The reference value is used by the PercentChangeYAxis, where all values in the series are scaled relative to the initial value.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredCategorySeries.GetVisibleRange">
            <summary>
            Gets the range of values contained within the current horizontal window.
            </summary>
            <returns>The minimum and maximum data values within the current horizontal window.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.AnchoredRadialSeries">
            <summary>
            Represents the base class for all XamDataChart anchored radial category series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeries.ClearAxes">
            <summary>
            Call to null out the axes of a series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeries.GetItemValue(System.Object,System.String)">
            <summary>
            Gets a value based on one of the valid member paths for this series type.
            </summary>
            <param name="item">An item from the data source bound to the series.</param>
            <param name="memberPathName">The property name of a valid member path for the series</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeries.#ctor">
            <summary>
            Initializes a new instance of the AnchoredRadialSeries
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeries.GetPreviousOrExactIndex(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Getting the previous index that is near a given world position, if possible, otherwise NaN.
            </summary>
            <param name="world">The world position to use in searching.</param>
            <param name="skipUnknowns">Should unknown values be skipped when searching.</param>
            <returns>The found index, otherwise, -1.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeries.GetNextOrExactIndex(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Getting the next index that is near a given world position, if possible, otherwise NaN.
            </summary>
            <param name="world">The world position to use in searching.</param>
            <param name="skipUnknowns">Should unknown values be skipped when searching.</param>
            <returns>The found index, otherwise, -1.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeries.GetDistanceToIndex(Infragistics.Portable.Point,System.Int32,Infragistics.Controls.Charts.Axis,Infragistics.Controls.Charts.ScalerParams,System.Double)">
            <summary>
            Returns a distance value (not necessarily pixels), that indicates how 'close' a world position is to an indexed value in the series.
            Not every series can necessarily answer this question, it can't or the world position or index is invalid, NaN will be returned.
            </summary>
            <param name="world">The world position for which to get a distance.</param>
            <param name="index">The index to get a distance to.</param>
            <param name="axis">The axis in context.</param>
            <param name="p">The scaler parameters in context.</param>
            <param name="offset">The category offset, or distance between the edge of the axis and the first or last data item.</param>
            <returns>A distance value to the world position.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeries.GetSeriesValue(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available main value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, when searching for the best avaialble value any unknown values will be skipped.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeries.GetSeriesValuePosition(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredRadialSeries.ValueMemberPath">
            <summary>
            Gets or sets the item path that provides the values for the current series.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnchoredRadialSeries.ValueMemberPathProperty">
            <summary>
            Identifies the ValueMapping dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredRadialSeries.ValueColumn">
            <summary>
            Holds the values for the series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredRadialSeries.TrendLineType">
            <summary>
            Gets or sets the trend type for the current series object.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnchoredRadialSeries.TrendLineTypeProperty">
            <summary>
            Identifies the TrendLineType dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredRadialSeries.TrendLineBrush">
            <summary>
            Gets or sets the brush that specifies how to the current series
            object's Trend line is drawn.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnchoredRadialSeries.TrendLineBrushProperty">
            <summary>
            Identifies the TrendLineBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredRadialSeries.ActualTrendLineBrush">
            <summary>
            Gets the effective TrendLineBrush for this series.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnchoredRadialSeries.ActualTrendLineBrushProperty">
            <summary>
            Identifies the ActualTrendLineBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredRadialSeries.TrendLineThickness">
            <summary>
            Gets or sets the thickness of the current series object's trend line.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnchoredRadialSeries.TrendLineThicknessProperty">
            <summary>
            Identifies the TrendLineThickness dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredRadialSeries.TrendLineDashCap">
            <summary>
            Gets or sets the PenLineCap enumeration value that specifies how the the current
            series object's trend line dash ends are drawn. 
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnchoredRadialSeries.TrendLineDashCapProperty">
            <summary>
            Identifies the TrendLineDashCap dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredRadialSeries.TrendLineDashArray">
            <summary>
            Gets or sets a collection of double values that indicate the pattern of dashes and gaps that
            is used to draw the trend line for the current series object. 
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnchoredRadialSeries.TrendLineDashArrayProperty">
            <summary>
            Identifies the TrendLineDashArray dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredRadialSeries.TrendLinePeriod">
            <summary>
            Gets or sets the trend line period for the current series.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for bollinger band periods is 20.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnchoredRadialSeries.TrendLinePeriodProperty">
            <summary>
            Identifies the TrendLinePeriod dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnchoredRadialSeries.TrendLineZIndexProperty">
            <summary>
            Identifies the TrendLineZIndex Dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredRadialSeries.TrendLineZIndex">
            <summary>
            Sets or Gets the Z index of the trendline.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeries.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeries.DataUpdatedOverride(Infragistics.Portable.FastItemsSourceEventAction,System.Int32,System.Int32,System.String)">
            <summary>
            When overridden in a derived class, DataChangedOverride is called whenever a change is made to
            the series data.
            </summary>
            <param name="action">The action performed on the data</param>
            <param name="position">The index of the first item involved in the update.</param>
            <param name="count">The number of items in the update.</param>
            <param name="propertyName">The name of the updated property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeries.ValidateSeries(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeries.GetOffsetValue">
            <summary>
            Returns the offset value for this series if grouped on a category axis.
            </summary>
            <returns>The offset value</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeries.GetCategoryWidth">
            <summary>
            Returns the width of the category grouping this series is in.
            </summary>
            <returns>The width of the category group.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnchoredRadialSeries.IsClosed">
            <summary>
            Gets whether the shape of the series is a closed polygon.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeries.GetOffset(Infragistics.Controls.Charts.CategoryAngleAxis,Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Gets offsets of an axis 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnchoredRadialSeries.TerminationPoint">
            <summary>
            A point used to complete the polygon.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeries.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeries.UpdateIndexedProperties">
            <summary>
            Updates properties that are based on the index of the series in the series collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeries.Item(System.Object,Infragistics.Portable.Point)">
            <summary>
            Returns the item that is the best match for the provided point.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="point">The point associated with the event.</param>
            <returns>The best match for the point.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeries.ScrollIntoView(System.Object)">
            <summary>
            Scrolls the specified item into the view.
            </summary>
            <param name="item">The item to scroll into view.</param>
            <returns>True if the item has been scrolled into view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeries.RenderThumbnail(Infragistics.Portable.Rect,Infragistics.Controls.Charts.RenderSurface)">
            <summary>
            Renders the thumbnail for the OPD.
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="surface">The render target.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeries.RenderAlternateView(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.RenderSurface,System.String,System.Double)">
            <summary>
            Renders an alternate view for of this series
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="surface">The render target.</param>
            <param name="viewIdentifier">String key to use for this view target</param>
            <param name="effectiveScalingRatio">The effective scaling ratio.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeries.ExportVisualDataOverride(System.Object)">
            <summary>
            Exports visual information about the series for use by external tools and functionality.
            </summary>
            <param name="svd">The data container.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.AnnotationLayer">
            <summary>
            Represents the base class for annotation layer types. Annotations will usually disable some of the default hover/touch behaviors of the chart when they are introduced to the series collection.
            In return they provide some valuable information as the cursor is moved by hovering over the chart, or performing a press-hold-drag interaction in touch mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnnotationLayer.#ctor">
            <summary>
            Constructs an annotation layer.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnnotationLayer.CreateView">
            <summary>
            Overridden to provide the view for this series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnnotationLayer.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Overridden to process the created view for this series at creation time.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnnotationLayer.IsSeriesValid(Infragistics.Controls.Charts.Series)">
            <summary>
            Checks if specified series is valid for rendering 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnnotationLayer.AnnotationView">
            <summary>
            The view for this series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnnotationLayer.UseIndex">
            <summary>
            Gets or sets whether this series should take up an index for auto brush coloring.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnnotationLayer.UseIndexProperty">
            <summary>
            Identifies the UseIndex Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnnotationLayer.UseLegend">
            <summary>
            Gets or sets whether this series interacts with the chart legend.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnnotationLayer.UseLegendProperty">
            <summary>
            Identifies the UseLegend Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnnotationLayer.CursorPosition">
            <summary>
            Gets or sets the world position to use instead of the pointer position for this annotation layer. If you set this value, rather than responding to the pointer, this layer will be fixed on the provided world position.
            A world position has x and y values that range from 0 to 1 that represent the global position of the cursor relative to the entire ranges of the axes. The default of (NaN, NaN) means that the layer should react to pointer movement.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnnotationLayer.CursorPositionProperty">
            <summary>
            Identifies the CursorPosition Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnnotationLayer.IsDefaultCrosshairDisabled">
            <summary>
            Gets or sets whether the series viewer's default crosshair should be disabled by the presence of this layer.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnnotationLayer.IsDefaultCrosshairDisabledProperty">
            <summary>
            Identifies the IsDefaultCrosshairDisabled Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnnotationLayer.IsDefaultCrosshairBehaviorDisabled">
            <summary>
            Gets whether or not the default crosshair behavior is disabled.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnnotationLayer.GetResolvedHitTestMode">
            <summary>
            Gets the resolved hit test mode of this series.
            </summary>
            <returns>The resolved hit test mode of this series.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnnotationLayer.IsIndexed">
            <summary>
            Gets if the series uses an index, which can be used to auto-assign it a color.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnnotationLayer.IsUsableInLegend">
            <summary>
            Gets if the series should appear in any legends.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnnotationLayer.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            Overridden to react to changes in series property values.
            </summary>
            <param name="sender">The series being altered.</param>
            <param name="propertyName">The property name of the property being altered.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">THe new value of the property.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnnotationLayer.UserCursorPosition">
            <summary>
            Gets or Sets the value that the user has provided for the cursor position, overriding the position coming from mouse/touch events.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnnotationLayer.IsDependentOnAxis(Infragistics.Controls.Charts.Axis)">
            <summary>
            Override to decide if an axis rendering should incur a re-render for the layer.
            </summary>
            <param name="axis">The axis in question</param>
            <returns>true if the annotation layer should re-render</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnnotationLayer.IsDependentOnSeries(Infragistics.Controls.Charts.Series)">
            <summary>
            Override to decide if a series rendering should incur a re-render for the layer.
            </summary>
            <param name="series">The series in question</param>
            <returns>true if the annotation layer should re-render</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnnotationLayer.OnDependentAxisRender(Infragistics.Controls.Charts.Axis,System.Boolean)">
            <summary>
            Overridden to react to when an axis on which the annotation layer is possibly dependent is rendering.
            </summary>
            <param name="axis">The axis being rendered.</param>
            <param name="animate">Whether animation was requested when the axis was rendered.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnnotationLayer.OnDependentSeriesRender(Infragistics.Controls.Charts.Series,System.Boolean)">
            <summary>
            Overridden to react to when a series on which the annotation layer is possibly dependent is rendering.
            </summary>
            <param name="series">The series being rendered.</param>
            <param name="animate">Whether animation was requested when the series was rendered.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnnotationLayer.GetBrush">
            <summary>
            Provides the main brush to use for the annotation visuals.
            </summary>
            <returns>A brush to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnnotationLayer.GetOutline">
            <summary>
            Provides the main outline brush to use for the annotation visuals.
            </summary>
            <returns>A brush to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnnotationLayer.OnAxisCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when the collection of axes this annotation layer may care about has changed.
            </summary>
            <param name="e">The collection changed parameters.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnnotationLayer.OnSeriesCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when the collection of series this annotation layer may care about has changed.
            </summary>
            <param name="e">The collection changed parameters.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnnotationLayer.PreviousFrame">
            <summary>
            The previous animation frame.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnnotationLayer.CurrentFrame">
            <summary>
            The next animation frame.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnnotationLayer.TransitionFrame">
            <summary>
            The current interpolated animation frame.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnnotationLayer.WindowRectChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Overridden in derived classes when they want to respond to the chart's window changing.
            </summary>
            <param name="oldWindowRect">The old window rectangle of the chart.</param>
            <param name="newWindowRect">The new window rectangle of the chart.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnnotationLayer.ViewportRectChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Overridden in derived classes when they want to respond to the chart's window changing.
            </summary>
            <param name="oldWindowRect">The old window rectangle of the chart.</param>
            <param name="newWindowRect">The new window rectangle of the chart.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnnotationLayer.RenderSeriesOverride(System.Boolean)">
            <summary>
            Called when the series should update its visuals to react to changes in settings or data.
            </summary>
            <param name="animate">Whether the visual change should be animated, if possible.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnnotationLayer.IsAnnotationLayer">
            <summary>
            Gets whether this series is an annotation layer.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnnotationLayer.PrepareFrame(Infragistics.Controls.Charts.Frame,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the series should prepare the next animation frame.
            </summary>
            <param name="frame">The animation frame to populate.</param>
            <param name="view">The view for which we are preparing a frame.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnnotationLayer.RenderFrame(Infragistics.Controls.Charts.Frame,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the series should render the provided animation frame.
            </summary>
            <param name="frame">The frame to be rendered.</param>
            <param name="view">The view to be rendered.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnnotationLayer.GetCategoryPosition(Infragistics.Controls.Charts.Series)">
            <summary>
            Returns categpry postion of specified series
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.AnnotationLayer.OnCursorPointMoved(Infragistics.Portable.Point)">
            <summary>
            Called when the cursor point has been moved by the user or mouse/touch events.
            </summary>
            <param name="point">The current cursor point in world coordinates.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.AnnotationLayer.CurrentPosition">
            <summary>
            The actual current position, which is a result of either the mouse/touch cursor position or the user setting a cursor position directly.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnnotationLayer.ValidateSeries(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called to determine if the series is in a valid state or not.
            </summary>
            <param name="viewportRect">The current viewport of the series.</param>
            <param name="windowRect">The current window rectangle of the series.</param>
            <param name="view">The current view being used.</param>
            <returns>True if the series is valid and should be rendered, false if it is invalid and should be cleared.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AnnotationLayer.ShouldRenderAsOverlay">
            <summary>
            Gets or sets whether this layer renders as an overlay or not.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Arc">
            <summary>
            Represents Infragistics Arc control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Arc.#ctor">
            <summary>
            Creates a new instance of Arc.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Arc.Ring">
            <summary>
            Gets or sets the ring.
            </summary>
            <value>The ring.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.Arc.EndAngleProperty">
            <summary>
            Identifies the EndAngle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Arc.EndAngle">
            <summary>
            Gets or sets the ending angle of the chart.
            </summary>
            <remarks>
            The default value is 360.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.Arc.SelectedIndicesChangedOverride(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Selecteds the indices changed override.
            </summary>
            <param name="args">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Arc.PrepareSlices">
            <summary>
            Prepares data needed to create pie slices.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Arc.RenderLegendItems">
            <summary>
            Renders legend items.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Arc.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Arc.GetContainer">
            <summary>
            Gets the UI container for this Arc.
            </summary>
            <returns>The UI container for this Arc.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.AreaFragment">
            <summary>
            Represents one part of a StackedAreaSeries.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AreaFragment.#ctor">
            <summary>
            Initializes a new instance of the AreaSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AreaFragment.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AreaFragment.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.AreaFragment.IsAreaOrLine">
            <summary>
            Gets whether the current series shows an area or line shape.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AreaFragment.TestRangeAreaOver(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Tests if the given position should trigger an interaction.
            </summary>
            <param name="position">The point being evaluated.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if the given position should trigger an interaction, otherwise False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AreaFragment.TestHit(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks for a matching data item at the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if a matching data item was found; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AreaFragment.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AreaFragment.UpdateActualAreaFillOpacity">
            <summary>
            Updates the ActualAreaFillOpacity property based on the state of this series.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.AreaSeries">
            <summary>
            Represents a XamDataChart area series.
            <para>Displays trend over time or ordered categories.</para>
            <para>Useful when there are many data points and the order is important.</para>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AreaSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AreaSeries.GetDefaultTransitionInMode">
            <summary>
            Gets default transition-in mode 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AreaSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.AreaSeries.IsAreaOrLine">
            <summary>
            Gets whether the current series shows an area or line shape.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AreaSeries.#ctor">
            <summary>
            Initializes a new instance of the AreaSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AreaSeries.TestHit(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks for a matching data item at the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if a matching data item was found; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AreaSeries.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.AreaSeries.UnknownValuePlottingProperty">
            <summary>
            Identifies the UnknownValuePlotting dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AreaSeries.UnknownValuePlotting">
            <summary>
            Determines how unknown values will be plotted on the chart.
            </summary>
            <remarks>
            Null and Double.NaN are two examples of unknown values.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.AreaSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.AssigningCategoryMarkerStyleEventArgs">
            <summary>
            Represents event arguments class for the AssigningCategoryStyleEvent
            </summary>[EditorBrowsable(AssigningCategoryMarkerStyleEvent.Never)]
        </member>
        <member name="T:Infragistics.Controls.Charts.AssigningCategoryStyleEventArgs">
            <summary>
            Represents event arguments class for the AssigningCategoryStyleEvent
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AssigningCategoryStyleEventArgs.StrokeThickness">
            <summary> Gets or sets stroke thickness to use for the current item.</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AssigningCategoryStyleEventArgs.StrokeDashArray">
            <summary> Gets or sets stroke dash array to use for the current item.</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AssigningCategoryStyleEventArgs.StrokeDashCap">
            <summary> Gets or sets stroke dash cap to use for the current item. </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AssigningCategoryStyleEventArgs.RadiusX">
            <summary> Gets or sets corner radius X to use for the current item, if applicable. </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AssigningCategoryStyleEventArgs.RadiusY">
            <summary> Gets or sets corner radius Y to use for the current item, if applicable. </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.AssigningCategoryStyleEventArgsBase">
            <summary>
            Represents event arguments base class for the AssigningCategoryStyleEventArgsBase
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AssigningCategoryStyleEventArgsBase.StartIndex">
            <summary> Gets the start index</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AssigningCategoryStyleEventArgsBase.EndIndex">
            <summary> Gets the end index</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AssigningCategoryStyleEventArgsBase.StartDate">
            <summary> Gets the start date</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AssigningCategoryStyleEventArgsBase.EndDate">
            <summary> Gets the end date</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AssigningCategoryStyleEventArgsBase.GetItems">
            <summary> Gets a function that will return the items associated with this event.</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AssigningCategoryStyleEventArgsBase.Fill">
            <summary> Gets or sets fill brush to use for the current item.</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AssigningCategoryStyleEventArgsBase.Stroke">
            <summary> Gets or sets stroke to use for the current item.</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AssigningCategoryStyleEventArgsBase.Opacity">
            <summary> Gets or sets opacity to use for the current item.</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AssigningCategoryStyleEventArgsBase.HighlightingInfo">
            <summary> Gets or sets highlighting info </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AssigningCategoryStyleEventArgsBase.MaxAllSeriesHighlightingProgress">
            <summary> Gets the max highlighting progress from all series.</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AssigningCategoryStyleEventArgsBase.SumAllSeriesHighlightingProgress">
            <summary> Gets the sum of highlighting progress from all series.</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AssigningCategoryStyleEventArgsBase.HighlightingHandled">
            <summary> Gets or sets if highlighting was handled by this event handler, and whether internal highlighting logic should be skipped.</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AssigningCategoryStyleEventArgsBase.HasDateRange">
            <summary> Gets if this event has a valid date range</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AssigningCategoryStyleEventArgsBase.IsNegativeShape">
            <summary>
            Gets if the current shape is identified as a negative shape if this series supports discrete negative shapes.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AssigningCategoryStyleEventArgsBase.IsThumbnail">
            <summary>
            Gets if the current event is being raised for the thumbnail image.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.AverageDirectionalIndexIndicator">
            <summary>
            Represents a XamDataChart Average Directional indicator series.
            </summary>
            <remarks>
            Default required members: High, Low, Close
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.AverageDirectionalIndexIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AverageDirectionalIndexIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AverageDirectionalIndexIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current AverageDirectionalIndexIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for AverageDirectionalIndexIndicator periods is 14.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AverageDirectionalIndexIndicator.PeriodProperty">
            <summary>
            Identifies the Period dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AverageDirectionalIndexIndicator.PeriodOverride">
            <summary>
            Specifies the period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AverageDirectionalIndexIndicator.SetPeriodOverride(System.Int32)">
            <summary>
            Sets the Period property.
            </summary>
            <param name="period">The value for the Period property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.AverageTrueRangeIndicator">
            <summary>
            Represents a XamDataChart Average True Range indicator series.
            </summary>
            <remarks>
            Default required members: High, Low, Close
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.AverageTrueRangeIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AverageTrueRangeIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AverageTrueRangeIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current AverageTrueRangeSeries object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for AverageTrueRange periods is 14.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AverageTrueRangeIndicator.PeriodProperty">
            <summary>
            Identifies the Period dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AverageTrueRangeIndicator.PeriodOverride">
            <summary>
            Specifies the period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AverageTrueRangeIndicator.SetPeriodOverride(System.Int32)">
            <summary>
            Sets the Period property.
            </summary>
            <param name="period">The value for the Period property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.Axis">
            <summary>
            Represents the base class from which all axis types are derived.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.GetResolutionExtent">
            <summary>
            Gets the resolution available to the axis.  Typically the axis width or height, depending on the axis orientation.
            </summary>
            <returns>The available resolution of the axis.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.ResolveActualMinimumValue">
            <summary>
            Gets the resolved actual minimum value.
            </summary>
            <returns>The resolved minimum value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.ResolveActualMaximumValue">
            <summary>
            Gets the resolved actual maximum value.
            </summary>
            <returns>The resolved maximum value.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.IsCategory">
            <summary>
            Gets or sets if the current axis is of category axis type
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.IsNumeric">
            <summary>
            Gets or sets if the current axis is of numeric axis type
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.IsAngular">
            <summary>
            Gets if the current axis is of angular axis type
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.IsRadial">
            <summary>
            Gets or sets if the current axis is of radial axis type
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.IsVertical">
            <summary>
            Gets if the current axis is a vertical axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.IsSorting">
            <summary>
            Gets or sets if the current axis is sorting data items
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.IsDateTime">
            <summary>
            Gets or sets if the current axis is of date time axis type
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.IsCategoryDateTime">
            <summary>
            Gets if the current axis is of category date time axis type
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.IsContinuous">
            <summary>
            Gets if the current axis is a continuous rather than a discrete scale
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.ResolveCrossingAxis">
            <summary>
            Gets the resolved crossing axis.
            </summary>
            <returns>The resolved crossing axis.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.#ctor">
            <summary>
            Constructs a new Axis instance.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.FormatLabel">
            <summary>
            Sets or gets a function which takes an object that produces a formatted label for displaying in the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.FormatLabelProperty">
            <summary>
            Identifies the FormatLabel dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.RootCanvas">
            <summary>
            Gets the current Axis object's root canvas.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.SeriesViewer">
            <summary>
            Gets the ChartArea for the current Axis object.
            </summary>
            <remarks>
            This property is maintained by the chart control and is not guaranteed to be
            valid until at least after the owner chart has been loaded.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.Chart">
            <summary>
            Gets or sets the Chart control reference.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.SeriesViewer_ActualWindowRectChanged">
            <summary>
            Listener for the owner chart area's window rect changed
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.Title">
            <summary>
            Gets or sets the Title property.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.Stroke">
            <summary>
            Gets or sets the Stroke property.
            <para>This is a dependency property.</para>
            </summary>
            <remarks>Null is treated as auto. The axis stroke will be displayed or not based on the axis type and series used with it.</remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.StrokeProperty">
            <summary>
            Identifies the Stroke dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.ActualStroke">
            <summary>
            Gets or sets the effective stroke used for the axis.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.ActualStrokeProperty">
            <summary>
            Identifies the ActualStroke dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.StrokeThickness">
            <summary>
            Gets or sets the StrokeThickness property.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.StrokeThicknessProperty">
            <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.StrokeDashArray">
            <summary>
            Gets or sets the StrokeDashArray property.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.StrokeDashArrayProperty">
            <summary>
            Identifies the StrokeDashArray dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.Strip">
            <summary>
            Gets or sets the Strip property.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.StripProperty">
            <summary>
            Identifies the Strip dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.MajorStroke">
            <summary>
            Gets or sets the MajorStroke property.
            <para>This is a dependency property.</para>
            </summary>
            <remarks>Null is treated as auto. Major lines will be displayed or not based on the axis type and series used with it.</remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.MajorStrokeProperty">
            <summary>
            Identifies the MajorStroke dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.ActualMajorStroke">
            <summary>
            Gets or sets the ActualMajorStroke property.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.ActualMajorStrokeProperty">
            <summary>
            Identifies the ActualMajorStroke dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.MajorStrokeThickness">
            <summary>
            Gets or sets the MajorStrokeThickness property.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.MajorStrokeThicknessProperty">
            <summary>
            Identifies the MajorStrokeThickness dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.MajorStrokeDashArray">
            <summary>
            Gets or sets the MajorStrokeDashArray property.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.MajorStrokeDashArrayProperty">
            <summary>
            Identifies the MajorStrokeDashArray dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.MinorStroke">
            <summary>
            Gets or sets the MinorStroke property.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.MinorStrokeProperty">
            <summary>
            Identifies the MinorStroke dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.ActualMinorStroke">
            <summary>
            Gets or sets the ActualMinorStroke property.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.ActualMinorStrokeProperty">
            <summary>
            Identifies the ActualMinorStroke dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.MinorStrokeThickness">
            <summary>
            Gets or sets the MinorStrokeThickness property.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.MinorStrokeThicknessProperty">
            <summary>
            Identifies the MinorStrokeThickness dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.MinorStrokeDashArray">
            <summary>
            Gets or sets the MinorStrokeDashArray property.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.MinorStrokeDashArrayProperty">
            <summary>
            Identifies the MinorStrokeDashArray dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.TickStroke">
            <summary>
            Gets or sets the TickStroke property.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.TickStrokeProperty">
            <summary>
            Identifies the TickStroke dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.TickStrokeThickness">
            <summary>
            Gets or sets the TickStrokeThickness property.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.TickStrokeThicknessProperty">
            <summary>
            Identifies the TickStrokeThickness dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.TickStrokeDashArray">
            <summary>
            Gets or sets the TickStrokeDashArray property.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.TickStrokeDashArrayProperty">
            <summary>
            Identifies the TickStrokeDashArray dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.TickLength">
            <summary>
            Gets or sets the TickLength property.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.TickLengthProperty">
            <summary>
            Identifies the TickLength dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.IsDisabled">
            <summary>
            Gets or sets the IsDisabled property. If true, the axis will not be rendered.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.IsDisabledProperty">
            <summary>
            Identifies the IsDisabled dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.IsInverted">
            <summary>
            Gets or sets the IsInverted property.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.IsInvertedCached">
            <summary>
            Gets or sets whether the axis is inverted.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.IsInvertedProperty">
            <summary>
            Identifies the IsInverted dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.UseEnhancedIntervalManagement">
            <summary>
            Gets or sets whether to use more advanced heuristics when determining the initial number of labels to render, before resolving collisions, etc.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.UseEnhancedIntervalManagementProperty">
            <summary>
            Identifies the UseEnhancedIntervalManagement dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.EnhancedIntervalMinimumCharacters">
            <summary>
            Gets or sets the mininum desired characters to be displayed for horizontal axes when using advanced label heuristics. -1 will attempt to adjust the interval to precisely fit the horizontal labels.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.EnhancedIntervalMinimumCharactersProperty">
            <summary>
            Identifies the EnhancedIntervalMinimumCharacters dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.LabelSettingsProperty">
            <summary>
            Identifies the LabelSettings dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.LabelSettings">
            <summary>
            Gets or sets the settings for the axis labels.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.CrossingAxis">
            <summary>
            Gets or sets the CrossingAxis property.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.CrossingAxisProperty">
            <summary>
            Identifies the CrossingAxis dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.CrossingValue">
            <summary>
            Gets or sets the CrossingValue property.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.CrossingValueProperty">
            <summary>
            Identifies the CrossingValue dependency property.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.Axis.RangeChanged">
            <summary>
            Occurs when the axis range changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.RaiseRangeChanged(Infragistics.Controls.Charts.AxisRangeChangedEventArgs)">
            <summary>
            Raises the RangeChanged event.
            </summary>
            <param name="ea">The AxisRangeChangedEventArgs for the event.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.TitleSettingsProperty">
            <summary>
            Identifies the TitleSettings dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.TitleSettings">
            <summary>
            Gets or sets the settings for the axis title.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.GetAxisInterval">
            <summary>
            Gets the axis interval.
            </summary>
            <returns>The axis interval.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.Annotations">
            <summary>
            Gets the current annotations for the axis. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.AutoAnnotations">
            <summary>
            Gets the automated annotations for the axis. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.ViewportRect">
            <summary>
            Gets the viewport of the axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.IsValid">
            <summary>
            Checks if axis is valid by validating axis using window rect
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.LabelDataContext">
            <summary>
            Gets the label data contexts.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.ViewportChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Overridden in derived classes when they want to respond to the viewport changing.
            </summary>
            <param name="oldRect">The old viewport rectangle.</param>
            <param name="newRect">The new viewport rectangle.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.GetEffectiveViewportForUnitViewport">
            <summary>
            Gets the effective viewport within the axis viewport.
            </summary>
            <returns>The effective viewport.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.WindowRectChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Overridden in derived classes when they want to respond to the chart's window changing.
            </summary>
            <param name="oldRect">The old window rectangle.</param>
            <param name="newRect">The new window rectangle.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the axis. Gives the axis a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.CoercionMethods">
            <summary>
            Gets or sets the coercion methods to use when loading data from data sources.
            Should be specified before setting any member paths, if being used. Setting it later 
            will not cause data to be re-imported into the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.ExpectFunctions">
            <summary>
            Gets or sets whether the series should expect that properties in its items source may be functions that need to be
            evaluated to yield their value. This defaults to false, as there will be a subtle performance impact to using this feature.
            This value must be set before assigning an item's source to take effect.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.ShouldRenderMinorLines">
            <summary>
            Gets or sets whether the minor gridlines should be displayed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.HorizontalStrip(Infragistics.Portable.Graphics.Media.GeometryCollection,System.Double,System.Double,Infragistics.Portable.Rect)">
            <summary>
            Generates the visual for a horizontal strip.
            </summary>
            <param name="geometry">The geometry into which to generate the visual.</param>
            <param name="y0">The starting y value for the strip.</param>
            <param name="y1">The ending y value for the strip.</param>
            <param name="viewportRect">The viewport of the axis.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.HorizontalLine(Infragistics.Portable.Graphics.Media.GeometryCollection,System.Double,Infragistics.Portable.Rect,Infragistics.Controls.Charts.PathRenderingInfo,System.Boolean)">
            <summary>
            Generates the visual for a horizontal line.
            </summary>
            <param name="geometry">The geometry into which to generate the visual.</param>
            <param name="y">The y value for the horizontal line.</param>
            <param name="viewportRect">The viewport of the axis.</param>
            <param name="renderingInfo">The rendering info.</param>
            <param name="isAxisLine">True if the line represents the axis line.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.VerticalStrip(Infragistics.Portable.Graphics.Media.GeometryCollection,System.Double,System.Double,Infragistics.Portable.Rect)">
            <summary>
            Generates the visual for a vertical strip.
            </summary>
            <param name="geometry">The geometry into which to generated the visual.</param>
            <param name="x0">The starting x value for the strip.</param>
            <param name="x1">The ending x value for the strip.</param>
            <param name="viewportRect">The viewport of the axis.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.VerticalLine(Infragistics.Portable.Graphics.Media.GeometryCollection,System.Double,Infragistics.Portable.Rect,Infragistics.Controls.Charts.PathRenderingInfo,System.Boolean)">
            <summary>
            Generates the visual for a vertical line.
            </summary>
            <param name="geometry">The geometry into which to generate the visual.</param>
            <param name="x">The x value for the line.</param>
            <param name="viewportRect">The viewport of the axis.</param>
            <param name="renderingInfo">The rendering info.</param>
            <param name="isAxisLine">True if the line represents the axis line.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.ScaleCrossingValue(System.Double@,System.Double@,Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Rect,System.Double,System.Double)">
            <summary>
            Scales a location in the axis viewport by the CrossingAxis in order to get that locations value.
            </summary>
            <param name="crossingValue">Takes in a location.  Outputs a crossing value.</param>
            <param name="relativeCrossingValue">Outputs a crossing value relative to constraintLeft.</param>
            <param name="window">The window rect.</param>
            <param name="viewport">The viewport rect.</param>
            <param name="effectiveViewport">The effective viewport rect.</param>
            <param name="constraintLeft">The left location constraint.</param>
            <param name="constraintRight">The right location constraint.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.AlignLineToPixels(System.Double,System.Double,System.Double,Infragistics.Controls.Charts.PathRenderingInfo)">
            <summary>
            Aligns the line to pixels.
            </summary>
            <param name="value">The value to align.</param>
            <param name="min">The minimum acceptable result.</param>
            <param name="max">The maximum acceptable result.</param>
            <param name="renderingInfo">The rendering info.</param>
            <returns>The aligned value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.ClearMarks(Infragistics.Portable.Graphics.Media.GeometryCollection)">
            <summary>
            Clears the marks from a geometry.
            </summary>
            <param name="geometry">The geometry to clear the marks from.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.ClearAllMarks">
            <summary>
            Clears all marks from the axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.RenderAxis">
            <summary>
            Renders the axis with no animation.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.Axis.RenderRequested">
            <summary>
            This event is raised every time a render has been requested from a series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.ShouldUsePreciseWidthHeuristic">
            <summary>
            Gets whether the axis will use precise width heuristics.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.ResetCachedEnhancedInterval">
            <summary>
            If using enhanced interval management and precise interval fitting, this will reset the cached maximum label width, and recalculate using the current labels.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.UpdateRange">
            <summary>
            Updates the axis range.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.UpdateRange(System.Boolean)">
            <summary>
            Updates the axis range.
            </summary>
            <param name="immediate">True if the change should be made immediately, or False if it can be deferred to the next refresh.</param>
            <returns>True if the axis range has changed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.RenderAxisOverride(System.Boolean)">
            <summary>
            Creates or updates the visuals for the axis.
            </summary>
            <param name="animate">Whether the updates to the visuals should be animated.</param>
        </member>
        <member name="E:Infragistics.Controls.Charts.Axis.PropertyChanged">
            <summary>
            Occurs when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.Axis.PropertyUpdated">
            <summary>
            Occurs when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.RaisePropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            Raises the property changed and updated events.
            </summary>
            <param name="name">The name of the property being changed.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.Series">
            <summary>
            The series that are registered to this axis.
            </summary>
            
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.RegisterSeries(Infragistics.Controls.Charts.Series)">
            <summary>
            Registers a series that uses an axis with the axis.
            </summary>
            <param name="series">The series to register.</param>
            <returns>If the registration was a success.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.DeregisterSeries(Infragistics.Controls.Charts.Series)">
            <summary>
            Deregisters a series that uses an axis from the axis.
            </summary>
            <param name="series">The series to deregister.</param>
            <returns>If the deregistration was a success.</returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis.LabelProperty">
            <summary>
            Identifies the Label dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.Label">
            <summary>
            Gets or sets the axis label format string.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.GetItemValue(System.Object,System.String)">
            <summary>
            Gets a value based on one of the valid member paths for this axis type.
            </summary>
            <param name="item">An item from the data source bound to the axis.</param>
            <param name="memberPathName">The property name of a valid member path for the axis</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.GetLabel(System.Object)">
            <summary>
            Gets the label for a data item.
            </summary>
            <param name="dataItem">The data item to get the label for.</param>
            <returns>The requested label.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.GetValueLabel(System.Double)">
            <summary>
            Gets the label for a data item.
            </summary>
            <param name="value">The unscaled value to get a label for.</param>
            <returns>The requested label.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.ResolveActualInterval">
            <summary>
            Gets the effective value for the current Interval.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.GetScaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the scaled viewport value from an unscaled axis value.
            </summary>
            <param name="unscaledValue">The unscaled axis value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The scaled viewport value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.GetScaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams,Infragistics.Controls.Charts.CategoryMode)">
            <summary>
            Gets the scaled viewport value from an unscaled axis value.
            </summary>
            <param name="unscaledValue">The unscaled axis value.</param>
            <param name="p">Scaler parameters.</param>
            <param name="categoryMode">Axis category mode.</param>
            <returns>The scaled viewport value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.GetCurrentEffectiveViewportForViewport(Infragistics.Portable.Rect)">
            <summary>
            Gets the current effective viewport for the provided viewport.
            </summary>
            <param name="forViewport">A viewport to get the effective viewport of.</param>
            <returns>The effective viewport.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.GetCurrentEffectiveViewport">
            <summary>
            Gets the current effective viewport.
            </summary>
            <returns>The effective viewport.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.GetContentViewport">
            <summary>
            Gets the content viewport.
            </summary>
            <returns>The content viewport.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.GetInitialSafeViewport(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Returns the effective viewport unless empty, in which case it returns the normal viewport.
            </summary>
            <param name="viewport">The normal viewport.</param>
            <param name="effectiveViewport">The effective viewport.</param>
            <returns>The non-empty viewport.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.GetScaledValue(System.Double,Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Gets the scaled viewport value from an unscaled axis value.
            </summary>
            <param name="unscaledValue">The unscaled axis value.</param>
            <param name="windowRect">The current window of the chart.</param>
            <param name="viewportRect">The current viewport.</param>
            <returns>The scaled viewport value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.GetScaledValueList(System.Collections.Generic.IList{System.Double},System.Int32,System.Int32,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Get a list of scaled viewport values from a list of unscaled axis values.
            </summary>
            <param name="unscaledValues">The list of unscaled axis values.</param>
            <param name="startIndex">Index at which to begin in the list.</param>
            <param name="count">Number of items to scale in the list.</param>
            <param name="p">The scaler parameters in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.GetScaledBucketValueList(System.Collections.Generic.IList{System.Double[]},System.Collections.Generic.IList{System.Int32},System.Int32,System.Int32,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Get a list of scaled viewport values from a list of unscaled axis values in buckets.
            </summary>
            <param name="unscaledValues">The list of unscaled axis values.</param>
            <param name="bucketIndexes">The indexes inside the buckets to scale.</param>
            <param name="startIndex">Index at which to begin in the list.</param>
            <param name="count">Number of items to scale in the list.</param>
            <param name="p">Scaler parameters</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.GetUnscaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the unscaled axis value from an scaled viewport value.
            </summary>
            <param name="scaledValue">The scaled viewport value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The unscaled axis value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.GetUnscaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams,Infragistics.Controls.Charts.CategoryMode)">
            <summary>
            Gets the unscaled axis value from an scaled viewport value.
            </summary>
            <param name="scaledValue">The scaled viewport value.</param>
            <param name="p">Scaler parameters.</param>
            <param name="categoryMode">Axis category mode.</param>
            <returns>The unscaled axis value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.GetUnscaledValue(System.Double,Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Gets the unscaled axis value from an scaled viewport value.
            </summary>
            <param name="scaledValue">The scaled viewport value.</param>
            <param name="windowRect">The current window of the chart.</param>
            <param name="viewportRect">The current viewport.</param>
            <returns>The unscaled axis value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.GetUnscaledValueList(System.Collections.Generic.IList{System.Double},System.Int32,System.Int32,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets a list of unscaled axis values from a list of scaled viewport values.
            </summary>
            <param name="scaledValues">A list containing the scaled viewport values to unscale.</param>
            <param name="startIndex">The start index in the list.</param>
            <param name="count">The number of items to unscale.</param>
            <param name="p">Scaler parameters</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.ScaleValue(System.Double)">
            <summary>
            Scales a value from axis space into screen space.
            </summary>
            <param name="unscaledValue">The unscaled axis value to scale.</param>
            <returns>The scaled value in screen coordinates.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.Orientation">
            <summary>
            Gets the axis orientation.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.ApplyDefaultSettings">
            <summary>
            Applies default settings
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.AxisLines">
            <summary>
            Gets the visuals representing the Axis line.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.MajorLines">
            <summary>
            Gets the visuals representing the major lines.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.Strips">
            <summary>
            Gets the visuals representing the strips.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Axis.MinorLines">
            <summary>
            Gets the visuals representing the minor lines.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Axis._currentLabelSettings">
            <summary>
            Reference to the axis label settings class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.ExportVisualData">
            <summary>
            Exports visual information about the series for use by external tools and functionality.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Axis.DirectSeries">
            <summary>
            Gets a list of direct series
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.AxisAnnotation">
            <summary>
            Represents an axis annotation
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.AxisAnnotation.PropertyChanged">
            <summary>
            Event raised when a property value is changed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisAnnotation.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotation.Value">
            <summary>
            Gets or sets the value at which this annotation is displayed on the axis.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisAnnotation.TextProperty">
            <summary>
            Identifies the Text dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotation.Text">
            <summary>
            Gets or sets the text that should be displayed for the annotation. Leave null to display the value automatically.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotation.FormatLabel">
            <summary>
            Sets or gets a function which takes an object that produces a formatted label for the value of this annotation.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisAnnotation.TextColorProperty">
            <summary>
            Identifies the TextColor dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotation.TextColor">
            <summary>
            Gets or sets the color to use for the text in the annotation.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisAnnotation.BackgroundProperty">
            <summary>
            Identifies the Background dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotation.Background">
            <summary>
            Gets or sets the background to use for tha axis annotation box.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisAnnotation.OutlineProperty">
            <summary>
            Identifies the Outline dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotation.Outline">
            <summary>
            Gets or sets the Outline to use for tha axis annotation box.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisAnnotation.StrokeThicknessProperty">
            <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotation.StrokeThickness">
            <summary>
            Gets or sets the border stroke thickness to use for tha axis annotation box.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisAnnotation.BackgroundPaddingLeftProperty">
            <summary>
            Identifies the BackgroundPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotation.BackgroundPaddingLeft">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisAnnotation.BackgroundPaddingTopProperty">
            <summary>
            Identifies the BackgroundPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotation.BackgroundPaddingTop">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisAnnotation.BackgroundPaddingRightProperty">
            <summary>
            Identifies the BackgroundPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotation.BackgroundPaddingRight">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisAnnotation.BackgroundPaddingBottomProperty">
            <summary>
            Identifies the BackgroundPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotation.BackgroundPaddingBottom">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.AxisAnnotationCollection.CollectionResetting">
            <summary>
            CollectionResetting is raised before the collection reset occurs.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisAnnotationCollection.ClearItems">
            <summary>
            Clears the contained items of the collection, but provides a preview of the occurrance 
            in the form of the CollectionResetting event.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.AxisCollection">
            <summary>
            Represents an observable collection of Axis objects.
            </summary>
            <remarks>
            It is not possible to clear the contents of a AxisCollection collection; the Axis
            objects must be removed one at a time.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisCollection.#ctor">
            <summary>
            Initializes a default, empty AxisCollection.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.AxisCollection.CollectionResetting">
            <summary>
            Occurs just before the current axis collection contents are reset
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisCollection.ClearItems">
            <summary>
            Clears the contained items of the collection, but provides a preview of the occurrence 
            in the form of the CollectionResetting event.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.AxisRangeChangedEventArgs">
            <summary>
            Provides data for Axis RangeChanged events. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisRangeChangedEventArgs.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initialises an AxisRangeChangedEventArgs object.
            </summary>
            <param name="oldMinimumValue">The axis minimum value before the range changed.</param>
            <param name="minimumValue">The axis minimum value after the range changed.</param>
            <param name="oldMaximumValue">The axis maximum value before the range changed.</param>
            <param name="maximumValue">The axis minimum value after the range changed.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisRangeChangedEventArgs.#ctor">
            <summary>
            Initialises an AxisRangeChangedEventArgs object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisRangeChangedEventArgs.OldMinimumValue">
            <summary>
            Gets the minimum value before the range changed. The reported minimum is the effective,
            not the set value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisRangeChangedEventArgs.MinimumValue">
            <summary>
            Gets the minimum value after the range changed. The reported minimum is the effective,
            not the set value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisRangeChangedEventArgs.OldMaximumValue">
            <summary>
            Gets the maximum value before the range changed. The reported maximum is the effective,
            not the set value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisRangeChangedEventArgs.MaximumValue">
            <summary>
            Gets the maximum value after the range changed. The reported maximum is the effective,
            not the set value.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.BarFragment">
            <summary>
            Represents one part of a StackedBarSeries.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.BarFragment.XAxis">
            <summary>
            The X-Axis for this BarFragment.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.BarFragment.YAxis">
            <summary>
            The Y-Axis for this BarFragment.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarFragment.GetCategoryAxis">
            <summary>
            Returns the Category Axis assigned to this series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarFragment.GetExactItemIndex(Infragistics.Portable.Point)">
            <summary>
            Gets the precise item index, if possible, based on the closeness to the previous or next whole integer. If the series cannot provide this information, GetExactItemIndex will return the same integer value as GetItemIndex.
            </summary>
            <param name="world">The world position for which to return the index.</param>
            <returns>The double index indicating which whole number index the point is closest to.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarFragment.GetValueAxis">
            <summary>
            Returns the Numeric Axis assigned to this series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarFragment.InflateBox(Infragistics.Portable.Rect,System.Double)">
            <summary>
            Makes the given Rect larger.
            </summary>
            <param name="box">The Rect to enlarge.</param>
            <param name="p">The size to enlarge the Rect by.</param>
            <returns>An enlarged copy of the given Rect.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarFragment.GetSeriesValueBoundingBox(Infragistics.Portable.Point)">
            <summary>
            If possible, will return the best available value bounding box within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value bounding box for</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarFragment.TestHit(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks for a matching data item at the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if a matching data item was found; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarFragment.GetItem(Infragistics.Portable.Point)">
            <summary>
            Gets the item that is the best match for the specified world coordinates.
            </summary>
            <param name="world">The world coordinates to use.</param>
            <returns>The item that is the best match.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarFragment.GetItemIndexSorted(Infragistics.Portable.Point)">
            <summary>
            Gets the index of the item based on world coordinates.
            </summary>
            <param name="world">The world coordinates to use.</param>
            <returns>The index of the item for the specified coordinates.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarFragment.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.BarSeries">
            <summary>
            Represents a XamDataChart bar series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarSeries.GetDefaultTransitionInMode">
            <summary>
            Gets default transition-in mode 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.BarSeries.HasIndividualElements">
            <summary>
            Checks if the series has individual elements
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarSeries.GetSeriesValueBoundingBox(Infragistics.Portable.Point)">
            <summary>
            If possible, will return the best available value bounding box within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value bounding box for</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarSeries.TestHit(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks for a matching data item at the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if a matching data item was found; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarSeries.#ctor">
            <summary>
            Initializes a new instance of the BarSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarSeries.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes
            call ApplyTemplate.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.BarSeries.RadiusX">
            <summary>
            Gets or sets the x-radius of the ellipse that is used to round the corners of the bar.
            <para>
            This is a dependency property.
            </para>
            </summary> 
        </member>
        <member name="F:Infragistics.Controls.Charts.BarSeries.RadiusXProperty">
            <summary>
            Identifies the RadiusX dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.BarSeries.RadiusY">
            <summary>
            Gets or sets the y-radius of the ellipse that is used to round the corners of the bar.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.BarSeries.RadiusYProperty">
            <summary>
            Identifies the RadiusY dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarSeries.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarSeries.GetMode2Index">
            <summary>
            Returns the mode 2 index to use for the series.
            </summary>
            <returns>The mode 2 index.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarSeries.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarSeries.ScrollIntoView(System.Object)">
            <summary>
            Scrolls the series to display the item for the specified data item.
            </summary>
            <remarks>
            The series is scrolled by the minimum amount required to place the specified data item within
            the central 80% of the visible axis.
            </remarks>
            <param name="item">The data item (item) to scroll to.</param>
            <returns>True if the specified item could be displayed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarSeries.GetItemSpan">
            <summary>
            For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.BarSeries.DataUpdatedOverride(Infragistics.Portable.FastItemsSourceEventAction,System.Int32,System.Int32,System.String)">
            <summary>
            When overridden in a derived class, DataChangedOverride is called whenever a change is made to
            the series data.
            </summary>
            <param name="action">The action performed on the data</param>
            <param name="position">The index of the first item involved in the update.</param>
            <param name="count">The number of items in the update.</param>
            <param name="propertyName">The name of the updated property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.BollingerBandsOverlay">
            <summary>
            Represents a XamDataChart Bollinger Bands financial overlay series.
            </summary>
            <remarks>
            Default required members: High, Low, Close
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.BollingerBandsOverlay.#ctor">
            <summary>
            Initializes a new instance of the BollingerBandsOverlay class. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.BollingerBandsOverlay.Period">
            <summary>
            Gets or sets the moving average period for the current BollingerBandOverlay object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for Bollinger band periods is 14.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.BollingerBandsOverlay.PeriodProperty">
            <summary>
            Identifies the Period dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.BollingerBandsOverlay.Multiplier">
            <summary>
            Gets or sets the moving average period for the current BollingerBandOverlay object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for Bollinger band multipliers is 2.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.BollingerBandsOverlay.MultiplierProperty">
            <summary>
            Identifies the Multiplier dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BollingerBandsOverlay.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.BollingerBandsOverlay.ValidateOverlay">
            <summary>
            Ensures the data for the overlay is calculated and valid before rendering.
            </summary>
            <returns>If re-rendering is required.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.BollingerBandsOverlay.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.BollingerBandsOverlay.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.BollingerBandsOverlay.GetSeriesValue(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available main value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, when searching for the best available value any unknown values will be skipped.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.BollingerBandsOverlay.GetPreviousOrExactIndex(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Getting the previous index that is near a given world position, if possible, otherwise NaN.
            </summary>
            <param name="world">The world position to use in searching.</param>
            <param name="skipUnknowns">Should unknown values be skipped when searching.</param>
            <returns>The found index, otherwise, -1.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.BollingerBandsOverlay.GetNextOrExactIndex(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Getting the next index that is near a given world position, if possible, otherwise NaN.
            </summary>
            <param name="world">The world position to use in searching.</param>
            <param name="skipUnknowns">Should unknown values be skipped when searching.</param>
            <returns>The found index, otherwise, -1.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.BollingerBandsOverlay.ValidateSeries(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.BollingerBandsOverlay.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.BollingerBandsOverlay.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.BollingerBandsOverlay.GetHighIndexInBucket">
            <summary>
            Gets the index of the High values in the multidimensional bucket array.
            </summary>
            <returns>The index of the High values in the multidimensional bucket array.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.BollingerBandsOverlay.GetReferenceValue">
            <summary>
            Gets a numeric value representing the initial value of this series.
            </summary>
            <returns>A numeric value representing the initial value of this series.</returns>
            <remarks>The reference value is used by the PercentChangeYAxis, where all values in the series are scaled relative to the initial value.</remarks>
        </member>
        <member name="T:Infragistics.Controls.Charts.BollingerBandWidthIndicator">
            <summary>
            Represents a XamDataChart Bollinger Bandwidth indicator series.
            </summary>
            <remarks>
            Represents the normalized width of the Bollinger bands for each provided value.
            For more info see: <see cref="T:Infragistics.Controls.Charts.BollingerBandsOverlay"/>
            <para>
            Default required members: High, Low, Close
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.BollingerBandWidthIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.BollingerBandWidthIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.BollingerBandWidthIndicator.Period">
            <summary>
            Gets or sets the moving average period for the Bollinger Band Width Indicator.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for CCI periods is 20.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.BollingerBandWidthIndicator.PeriodProperty">
            <summary>
            Identifies the Period dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BollingerBandWidthIndicator.PeriodOverride">
            <summary>
            Specifies the period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.BollingerBandWidthIndicator.Multiplier">
            <summary>
            Gets or sets the multiplier for the Bollinger Band width.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for Bollinger Band width multiplier is 2.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.BollingerBandWidthIndicator.MultiplierProperty">
            <summary>
            Identifies the ScalingFactor dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BollingerBandWidthIndicator.MultiplierOverride">
            <summary>
            Specifies the scaling factor to be used for the calculation.
            </summary>
            <returns>The scaling factor to use.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.BrushScale">
            <summary>
            Represents a base class for brush scales.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BrushScale.#ctor">
            <summary>
            Creates a new instance of BrushScale class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BrushScale.Brushes_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when the members of the brushes collection change.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.BrushScale.Brushes">
            <summary>
            Gets the brushes collection used by this scale.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BrushScale.RegisterSeries(Infragistics.Controls.Charts.Series)">
            <summary>
            Registers a series with the scale. Under normal circumstances you should not need to call this manually.
            </summary>
            <param name="series">The series to register with the scale.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.BrushScale.UnregisterSeries(Infragistics.Controls.Charts.Series)">
            <summary>
            Unregisters a series with the scale. Under normal circumstances you should not need to call this manually.
            </summary>
            <param name="series">The series to unregister from the scale.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.BrushScale.GetBrush(System.Int32)">
            <summary>
            Gets a brush from the brushes collection by index.
            </summary>
            <returns>Brush for a given index.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.BrushScale.IsReady">
            <summary>
            Gets the status of the scale 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BrushScale.GetInterpolatedBrush(System.Double)">
            <summary>
            Returns an interpolated brush value based on index.
            </summary>
            <param name="index">The index to use.</param>
            <returns>The interpolated brush.</returns>
        </member>
        <member name="E:Infragistics.Controls.Charts.BrushScale.PropertyChanged">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.BrushScale.PropertyUpdated">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BrushScale.RaisePropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            Raises the property changed and updated events.
            </summary>
            <param name="name">The name of the property being changed.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.BrushScale.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            Called when a property is updated.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="propertyName">The name of the property that was changed.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.BubbleSeries">
            <summary>
            Represents a XamDataChart bubble series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BubbleSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.BubbleSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.BubbleSeries.#ctor">
            <summary>
            Initializes a new instance of the BubbleSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BubbleSeries.HasLegendSubItemsOverride">
            <summary>
            Checks if this series had legend sub-items
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.BubbleSeries.ForLegendSubItemsOverride(System.Action{System.Object})">
            <summary>
            Performs an action for each legend sub-item
            </summary> 
        </member>
        <member name="P:Infragistics.Controls.Charts.BubbleSeries.InternalRadiusColumn">
            <summary>
            Gets the radius column from the data source.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.BubbleSeries.RadiusMemberPath">
            <summary>
            Gets or sets the radius mapping property for the current series object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BubbleSeries.GetItemValue(System.Object,System.String)">
            <summary>
            Gets a value based on one of the valid member paths for this series type.
            </summary>
            <param name="item">An item from the data source bound to the series.</param>
            <param name="memberPathName">The property name of a valid member path for the series</param>
            <returns></returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.BubbleSeries.RadiusMemberPathProperty">
            <summary>
            Identifies the RadiusMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.BubbleSeries.RadiusColumn">
            <summary>
            The IFastItemColumn containing Radius values.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.BubbleSeries.RadiusScaleProperty">
            <summary>
            Identifies the RadiusScale dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.BubbleSeries.RadiusScale">
            <summary>
            Gets or sets the radius size scale for the bubbles.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.BubbleSeries.LabelMemberPathProperty">
            <summary>
            Identifies the LabelMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.BubbleSeries.LabelMemberPath">
            <summary>
            Gets or sets the Label mapping property for the current series object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.BubbleSeries.LabelColumn">
            <summary>
            Gets or sets the data column used for labels.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.BubbleSeries.FillMemberPathProperty">
            <summary>
            Identifies the FillMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.BubbleSeries.FillMemberPath">
            <summary>
            Gets or sets the fill mapping property for the current series object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.BubbleSeries.FillScaleProperty">
            <summary>
            Identifies the FillScale dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.BubbleSeries.FillScale">
            <summary>
            Gets or sets the brush scale for the marker brush.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.BubbleSeries.FillColumn">
            <summary>
            Represents the column of fill values to use.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BubbleSeries.PrepareFrame(Infragistics.Controls.Charts.ScatterFrame,Infragistics.Controls.Charts.ScatterBaseView)">
            <summary>
            Prepare the current bubble series for rendering.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BubbleSeries.GetLinearSize(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Returns the a marker size for a given value based on a linear scale.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BubbleSeries.GetLogarithmicSize(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Returns the marker size for a given value based on a logarithmic scale.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BubbleSeries.ValidateSeries(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.BubbleSeries.MustReact(System.String,Infragistics.Portable.FastItemsSourceEventAction)">
            <summary>
            Returns whether or not a property changed event should be raised for the given property name.
            </summary>
            <param name="propertyName">Property name</param>
            <param name="action">DataSource event action</param>
            <returns>True if property changed event should be raised, otherwise false</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.BubbleSeries.DataUpdatedOverride(Infragistics.Portable.FastItemsSourceEventAction,System.Int32,System.Int32,System.String)">
            <summary>
            Called when the underlying data changes.
            </summary>
            <param name="action">DataSource event action</param>
            <param name="position">Item index</param>
            <param name="count">Item count</param>
            <param name="propertyName">Property name</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.BubbleSeries.NotifyBrushScalesDirty">
            <summary>
            Notifies about dirty state of the brush scale
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BubbleSeries.NotifySizeScalesDirty">
            <summary>
            Notifies about dirty state of the size scale
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BubbleSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.BubbleSeries.IsMarkerlessDisplayPreferred">
            <summary>
            Overridden by derived series classes to indicate when markerless display is preferred or not.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalloutAnnotation">
            <summary>
            Represents a callout annotation
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.CalloutAnnotation.PropertyChanged">
            <summary>
            Event raised when a property value is changed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutAnnotation.XValueProperty">
            <summary>
            Identifies the XValue dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutAnnotation.XValue">
            <summary>
            Gets or sets the XValue at which this annotation is displayed on the axis.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutAnnotation.YValueProperty">
            <summary>
            Identifies the YValue dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutAnnotation.YValue">
            <summary>
            Gets or sets the YValue at which this annotation is displayed on the axis.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutAnnotation.TextProperty">
            <summary>
            Identifies the Text dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutAnnotation.Text">
            <summary>
            Gets or sets the text that should be displayed for the annotation. Leave null to display the value automatically.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutAnnotation.KeyProperty">
            <summary>
            Identifies the Key dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutAnnotation.Key">
            <summary>
            Gets or sets the Key that should be annotated. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutAnnotation.ContentProperty">
            <summary>
            Identifies the Content dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutAnnotation.Content">
            <summary>
            Gets or sets the Content that should be annotated. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutAnnotation.SeriesProperty">
            <summary>
            Identifies the Series dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutAnnotation.Series">
            <summary>
            Gets or sets the series to which the callout pertains to. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutAnnotation.FormatLabel">
            <summary>
            Sets or gets a function which takes an object that produces a formatted label for the value of this annotation.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutAnnotation.TextColorProperty">
            <summary>
            Identifies the TextColor dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutAnnotation.TextColor">
            <summary>
            Gets or sets the color to use for the text in the annotation.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutAnnotation.BackgroundProperty">
            <summary>
            Identifies the Background dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutAnnotation.Background">
            <summary>
            Gets or sets the background to use for tha axis annotation box.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutAnnotation.OutlineProperty">
            <summary>
            Identifies the Outline dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutAnnotation.Outline">
            <summary>
            Gets or sets the Outline to use for tha axis annotation box.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutAnnotation.LeaderBrushProperty">
            <summary>
            Identifies the LeaderBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutAnnotation.LeaderBrush">
            <summary>
            Gets or sets the LeaderBrush to use for tha axis annotation box.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutAnnotation.StrokeThicknessProperty">
            <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutAnnotation.StrokeThickness">
            <summary>
            Gets or sets the border stroke thickness to use for tha axis annotation box.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutAnnotation.BackgroundPaddingLeftProperty">
            <summary>
            Identifies the BackgroundPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutAnnotation.BackgroundPaddingLeft">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutAnnotation.BackgroundPaddingTopProperty">
            <summary>
            Identifies the BackgroundPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutAnnotation.BackgroundPaddingTop">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutAnnotation.BackgroundPaddingRightProperty">
            <summary>
            Identifies the BackgroundPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutAnnotation.BackgroundPaddingRight">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutAnnotation.BackgroundPaddingBottomProperty">
            <summary>
            Identifies the BackgroundPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutAnnotation.BackgroundPaddingBottom">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalloutAnnotationCollection">
            <summary>
            Represents a collection of callout annotations
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.CalloutAnnotationCollection.CollectionResetting">
            <summary>
            CollectionResetting is raised before the collection reset occurs.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalloutAnnotationCollection.ClearItems">
            <summary>
            Clears the contained items of the collection, but provides a preview of the occurrance 
            in the form of the CollectionResetting event.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalloutContentUpdatingEventArgs">
            <summary>
            Represents event arguments for updating content of callout layer
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutContentUpdatingEventArgs.XValue">
            <summary>
            Gets data X-value assositated with callout layer
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutContentUpdatingEventArgs.YValue">
            <summary>
            Gets data Y-value assositated with callout layer
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutContentUpdatingEventArgs.Item">
            <summary>
            Gets data item assositated with callout layer
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutContentUpdatingEventArgs.Content">
            <summary>
            Gets or sets content displayed by callout layer
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalloutLabelUpdatingEventArgs">
            <summary>
            Represents event arguments for updating label of callout layer
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLabelUpdatingEventArgs.XValue">
            <summary>
            Gets data X-value assositated with callout layer
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLabelUpdatingEventArgs.YValue">
            <summary>
            Gets data Y-value assositated with callout layer
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLabelUpdatingEventArgs.Item">
            <summary>
            Gets data item assositated with callout layer
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLabelUpdatingEventArgs.Label">
            <summary>
            Gets or sets label displayed by callout layer
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalloutLayer">
            <summary>
            Represents an annotation layer that displays crosshair lines that cross through the closest value of the target series under the cursor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalloutLayer.#ctor">
            <summary>
            Constructs a CalloutLayer
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.CalloutLayer.CalloutStyleUpdating">
            <summary>
            Event raised when updating style of callout layer
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.LabelMemberPath">
            <summary>
            Gets or sets the label mapping property for the callouts.
            <para> This is a dependency property. </para>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalloutLayer.GetItemValue(System.Object,System.String)">
            <summary>
            Gets a value based on one of the valid member paths for this series type.
            </summary>
            <param name="item">An item from the data source bound to the series.</param>
            <param name="memberPathName">The property name of a valid member path for the series</param>
            <returns></returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.LabelMemberPathProperty">
            <summary>
            Identifies the LabelMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.LabelColumn">
            <summary>
            Gets the FastItemColumn representing the mapped values in the items source.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.XMemberPath">
            <summary>
            Gets or sets the label mapping property for the callouts.
            <para> This is a dependency property. </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.XMemberPathProperty">
            <summary>
            Identifies the XMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.XColumn">
            <summary>
            Gets the FastItemColumn representing the mapped values in the items source.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.YMemberPath">
            <summary>
            Gets or sets the label mapping property for the callouts.
            <para> This is a dependency property. </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.YMemberPathProperty">
            <summary>
            Identifies the YMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.YColumn">
            <summary>
            Gets the FastItemColumn representing the mapped values in the items source.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.KeyMemberPath">
            <summary>
            Gets or sets the key mapping property for the callouts.
            <para> This is a dependency property. </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.KeyMemberPathProperty">
            <summary>
            Identifies the KeyMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.KeyColumn">
            <summary>
            Gets the FastItemColumn representing the mapped values in the items source.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.IsCalloutOffsettingEnabled">
            <summary>
            Gets or sets whether to allow the callouts to be variable distances from the target points, for suppporting collision modes.
            <para> This is a dependency property. </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.IsCalloutOffsettingEnabledProperty">
            <summary>
            Identifies the IsCalloutOffsettingEnabled dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.ContentMemberPath">
            <summary>
            Gets or sets the content mapping property for the callouts.
            <para> This is a dependency property. </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.ContentMemberPathProperty">
            <summary>
            Identifies the ContentMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.ContentColumn">
            <summary>
            Gets the FastItemColumn representing the mapped values in the items source.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalloutLayer.CreateView">
            <summary>
            Overridden to provide the view for this series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalloutLayer.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Overridden to process the created view for this series at creation time.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.CalloutView">
            <summary>
            Gets or sets the view of series
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.TargetSeries">
            <summary>
            Gets or sets the series to target this annotation to. If null, this annotation targets all series simultaneously.
            <para> This is a dependency property. </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.TargetSeriesProperty">
            <summary>
            Identifies the TargetSeries Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.CollisionChannel">
            <summary>
            Gets or sets a channel name to identify other callout layers within the chart to share collision information with.
            <para> This is a dependency property. </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.CollisionChannelProperty">
            <summary>
            Identifies the CollisionChannel Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.IsAutoCalloutBehaviorEnabled">
            <summary>
            Gets or sets how to select the final value to annotate.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.IsAutoCalloutBehaviorEnabledProperty">
            <summary>
            Identifies the IsFinalVisibleValueAnnotated Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.UseValueForAutoCalloutLabels">
            <summary>
            Gets or sets whether to use values, rather than labels for auto callout labels.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.UseValueForAutoCalloutLabelsProperty">
            <summary>
            Identifies the IsFinalVisibleValueAnnotated Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.IsCustomCalloutStyleEnabled">
            <summary>
            Gets or sets whether to allow for custom callout styles.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.IsCustomCalloutStyleEnabledProperty">
            <summary>
            Identifies the IsFinalVisibleValueAnnotated Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.AutoCalloutLabelPrecision">
            <summary>
            Gets or sets the precision to use when values are used for the auto callout labels.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.AutoCalloutLabelPrecisionProperty">
            <summary>
            Identifies the IsFinalVisibleValueAnnotated Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.CalloutTextColor">
            <summary>
            Gets or sets the color to use for the callout text. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.CalloutTextColorProperty">
            <summary>
            Identifies the CalloutTextColor Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.CalloutBackground">
            <summary>
            Gets or sets the brush that specifies how the backgrounds for the callouts of the layer are painted. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.CalloutBackgroundProperty">
            <summary>
            Identifies the CalloutBackground Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.CalloutInterpolatedValuePrecision">
            <summary>
            Gets or sets the precision to use displaying values for interpolated crosshair positions.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.CalloutInterpolatedValuePrecisionProperty">
            <summary>
            Identifies the CalloutInterpolatedValuePrecision Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.CalloutOutline">
            <summary>
            Gets or sets the brush that specifies how the outlines for the callouts of the layer are painted.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.CalloutOutlineProperty">
            <summary>
            Identifies the CalloutOutline Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.CalloutLeaderBrush">
            <summary>
            Gets or sets the brush that specifies how the leader lines for the callouts of the layer are painted.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.CalloutLeaderBrushProperty">
            <summary>
            Identifies the CalloutLeaderBrush Dependency Property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.CalloutPaddingLeftProperty">
            <summary>
            Identifies the CalloutPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.CalloutPaddingLeft">
            <summary>
            Gets or sets the left padding to use withing the callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.CalloutPaddingTopProperty">
            <summary>
            Identifies the CalloutPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.CalloutPaddingTop">
            <summary>
            Gets or sets the top padding to use within the callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.CalloutPaddingRightProperty">
            <summary>
            Identifies the CalloutPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.CalloutPaddingRight">
            <summary>
            Gets or sets the right padding to use within the callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.CalloutPaddingBottomProperty">
            <summary>
            Identifies the CalloutPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.CalloutPaddingBottom">
            <summary>
            Gets or sets the bottom padding to use within the callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.CalloutCollisionMode">
            <summary>
            Gets or sets the strategy to use for avoiding collisions between the callouts in this layer. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.CalloutCollisionModeProperty">
            <summary>
            Identifies the CalloutCollisionMode Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.CalloutPositionPadding">
            <summary>
            Gets or sets the padding to add to the callout positioning. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.CalloutPositionPaddingProperty">
            <summary>
            Identifies the CalloutPositionPadding Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.CalloutStrokeThickness">
            <summary>
            Gets or sets the stroke thickness for the callout backing. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.CalloutStrokeThicknessProperty">
            <summary>
            Identifies the CalloutStrokeThickness Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.TextStyle">
            <summary>
            Gets or sets the stroke thickness for the axis annotation backing. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutLayer.TextStyleProperty">
            <summary>
            Identifies the TextStyle Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayer.FontInfo">
            <summary>
            Gets the FontInfo object that represents the labels' font information.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalloutLayer.OnDependentSeriesRender(Infragistics.Controls.Charts.Series,System.Boolean)">
            <summary>
            Overridden to react to when a series on which the annotation layer is possibly dependent is rendering.
            </summary>
            <param name="series">The series being rendered.</param>
            <param name="animate">Whether animation was requested when the series was rendered.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalloutLayer.PrepareFrame(Infragistics.Controls.Charts.Frame,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the series should prepare the next animation frame.
            </summary>
            <param name="frame">The animation frame to populate.</param>
            <param name="view">The view for which we are preparing a frame.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalloutLayer.IsSeriesValid(Infragistics.Controls.Charts.Series)">
            <summary>
            Checks if specified series is valid for rendering 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalloutLayer.OnBeforeContentRefresh">
            <summary>
            Method invoked before the series refreshes its visual content.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalloutLayer.InvalidateCalloutContent">
            <summary>
            Invalidates content of callout layer
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.CalloutLayer.CalloutContentUpdating">
            <summary>
            Raised to allow you to decide on the content for an automatically created callout.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.CalloutLayer.CalloutLabelUpdating">
            <summary>
            Raised to allow you to decide on the label for an automatically created callout.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.CalloutLayer.CalloutSeriesSelecting">
            <summary>
            Raised to allow you to select a target series for a data bound callout.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalloutLayer.TestHit(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks if specified position is over the callout layer
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalloutLayer.UpdateAnnotations(Infragistics.Controls.Charts.CalloutLayerFrame,System.Boolean)">
            <summary>
            Updates annotations for specified frame
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalloutLayer.RenderFrame(Infragistics.Controls.Charts.Frame,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the series should render the provided animation frame.
            </summary>
            <param name="frame">The frame to be rendered.</param>
            <param name="view">The view to be rendered.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalloutLayer.RequiresPrepare">
            <summary>
            Informs whether this series requires PrepareFrame to be called before RenderFrame.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalloutLayer.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            Overridden to react to changes in series property values.
            </summary>
            <param name="sender">The series being altered.</param>
            <param name="propertyName">The property name of the property being altered.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">THe new value of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalloutSeriesSelectingEventArgs">
            <summary>
            Represents event arguments for selecting callout layer
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutSeriesSelectingEventArgs.XValue">
            <summary>
            Gets data X-value assositated with callout layer
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutSeriesSelectingEventArgs.YValue">
            <summary>
            Gets data Y-value assositated with callout layer
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutSeriesSelectingEventArgs.Item">
            <summary>
            Gets data item assositated with callout layer
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutSeriesSelectingEventArgs.Series">
            <summary>
            Gets or sets series object assositated with callout layer
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutSeriesSelectingEventArgs.SeriesName">
            <summary>
            Gets or sets series name assositated with callout layer
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CategoryAngleAxis">
            <summary>
            Represents a XamDataChart category angle axis. Useful for displaying radial categories.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryAngleAxis.IsAngular">
            <summary>
            Checks if the axis is of angular type
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAngleAxis.#ctor">
            <summary>
            Initializes a new CategoryAngleAxis instance.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAngleAxis.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes
            call ApplyTemplate.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryAngleAxis.RadiusAxis">
            <summary>
            The radius axis for this angle axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAngleAxis.ResolveCrossingAxis">
            <summary>
            Gets the resolved crossing axis.
            </summary>
            <returns>The resolved crossing axis.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryAngleAxis.StartAngleOffset">
            <summary>
            Indicates the angle in degress that the chart's 0th angle should be offset.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryAngleAxis.StartAngleOffsetProperty">
            <summary>
            Identifies the StartAngleOffset dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAngleAxis.RenderAxisOverride(System.Boolean)">
            <summary>
            Renders the visuals for the current axis.
            </summary>
            <param name="animate">True if the changes should be animated.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAngleAxis.GetScaledAngle(System.Double)">
            <summary>
            Gets the scaled angle in radians from the raw axis value.
            </summary>
            <param name="unscaledAngle">The raw axis value.</param>
            <returns>The scaled angle in radians.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAngleAxis.GetUnscaledAngle(System.Double)">
            <summary>
            Gets the raw axis value from the scaled angle in radians.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAngleAxis.GetScaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the scaled angle in radians from the raw axis value.
            </summary>
            <param name="unscaledValue">The raw axis value.</param>
            <param name="p">Scaler parameters</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAngleAxis.GetUnscaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the raw axis value from the scaled angle in radians.
            </summary>
            <param name="scaledValue">The raw axis value.</param>
            <param name="p">Scaler parameters</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAngleAxis.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            Handles property updated events.
            </summary>
            <param name="sender">The sender of the updated event.</param>
            <param name="propertyName">The name of the property that was updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryAngleAxis.IntervalProperty">
            <summary>
            Identifies the Interval dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryAngleAxis.Interval">
            <summary>
            Gets or sets the frequency of displayed labels.
            </summary>
            <remarks>
            The set value is a factor that determines which labels will be hidden. For example, an interval of 2 will display every other label.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryAngleAxis.ActualInterval">
            <summary>
            Gets the effective value for the current Interval.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAngleAxis.ResolveActualInterval">
            <summary>
            Gets the effective value for the current Interval.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryAngleAxis.MinorIntervalProperty">
            <summary>
            Identifies the MinorInterval dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryAngleAxis.MinorInterval">
            <summary>
            Gets or sets the frequency of displayed minor lines.
            </summary>
            <remarks>
            The set value is a factor that determines how the minor lines will be displayed.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryAngleAxis.ActualMinorInterval">
            <summary>
            Gets the effective value for the current MinorInterval.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAngleAxis.HasUserInterval">
            <summary>
            Determines if the axis has a user-defined interval.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryAngleAxis.Orientation">
            <summary>
            Gets the axis orientation.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CategoryAxisBase">
            <summary>
            Represents the base class for all XamDataChart category-based axes.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryAxisBase.IsContinuous">
            <summary>
            Gets if the current axis is a continuous rather than a discrete scale
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAxisBase.#ctor">
            <summary>
            CategoryAxisBase constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryAxisBase.MajorLinePositions">
            <summary>
            Gets or sets major line positions
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryAxisBase.IsCategory">
            <summary>
            Checks if the axis is of category axis type
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAxisBase.GetCategoryBoundingBox(Infragistics.Portable.Point,System.Boolean,System.Double)">
            <summary>
            Gets bounding box of this category axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAxisBase.GetCategoryBoundingBoxHelper(Infragistics.Portable.Point,System.Boolean,System.Double,System.Boolean)">
            <summary>
            Gets bounding box of the category axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryAxisBase.FastItemsSource">
            <summary>
            Gets the FastItemsSource for the current CategoryAxis object
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryAxisBase._fastItemsSource">
            <summary>
            Link to the fast items source.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryAxisBase.FastItemsSourceProperty">
            <summary>
            Identifies the FastItemsSource dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryAxisBase.ItemsSource">
            <summary>
            Gets or sets the ItemsSource property for the current axis.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryAxisBase.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryAxisBase.ItemsCount">
            <summary>
            Gets the number of items in the current category axis items source.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryAxisBase.Gap">
            <summary>
            Gets or sets the amount of space between adjacent categories for the current axis object.
            <para>This is a dependency property.</para>
            </summary>
            <remarks>
            The gap is silently clamped to the range [0, 1] when used.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryAxisBase.GapProperty">
            <summary>
            Identifies the Gap dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryAxisBase.Overlap">
            <summary>
            Gets or sets the amount of overlap between adjacent categories for the current axis object.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            The overlap is silently clamped to the range [-1, 1] when used.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryAxisBase.OverlapProperty">
            <summary>
            Identifies the Overlap dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryAxisBase.UseClusteringMode">
            <summary>
            Gets or sets whether the category axis should use clustering display mode even if no series are present that would force clustering mode.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryAxisBase.UseClusteringModeProperty">
            <summary>
            Identifies the UseClusteringMode dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryAxisBase.Mode2GroupCount">
            <summary>
            Gets the number of category groups in the current Chart object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAxisBase.GetUnscaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the unscaled axis value from a scaled viewport value.
            </summary>
            <param name="scaledValue">The scaled viewport value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The unscaled axis value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAxisBase.UnscaleValue(System.Double)">
            <summary>
            Unscales a value from screen space into axis space.
            </summary>
            <param name="unscaledValue">The scaled value in screen coordinates to unscale into axis space.</param>
            <returns>The unscaled value in axis space.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAxisBase.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the axis. Gives the axis a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAxisBase.ForceSeriesUpdate">
            <summary>
            Forces a render for all series connected to this axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAxisBase.HandleFastItemsSourceEvent(System.Object,Infragistics.Portable.FastItemsSourceEventArgs)">
            <summary>
            Updates the axis based on a change in the data source.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The FastItemsSource event arguments.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAxisBase.OnFastItemsSourceEvent(Infragistics.Portable.FastItemsSourceEventArgs)">
            <summary>
            Updates the axis based on a change in the data source.
            </summary>
            <param name="e">The FastItemsSource event arguments.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAxisBase.RegisterSeries(Infragistics.Controls.Charts.Series)">
            <summary>
            Registers a series that uses an axis with the axis.
            </summary>
            <param name="series">The series to register.</param>
            <returns>If the registration was a success.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAxisBase.DeregisterSeries(Infragistics.Controls.Charts.Series)">
            <summary>
            Deregisters a series that uses an axis from the axis.
            </summary>
            <param name="series">The series to deregister.</param>
            <returns>If the deregistration was a success.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAxisBase.RenderCrossingAxis">
            <summary>
            Updates the crossing axis. Useful when category mode changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAxisBase.HandleCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the ItemsSource's CollectionChanged event.
            </summary>
            <param name="e">Contextual information about the data that was changed.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAxisBase.NotifySetItem(System.Int32,System.Object,System.Object)">
            <summary>
            Used to manually notify the axis that the data source has had an item set.
            </summary>
            <param name="index">The index of the change</param>
            <param name="oldItem">The old item.</param>
            <param name="newItem">The new item.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAxisBase.NotifyClearItems">
            <summary>
            Used to manually notify the axis that the data source has reset or cleared its items.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAxisBase.NotifyInsertItem(System.Int32,System.Object)">
            <summary>
            Used to manually notify the axis that the data source has had an item inserted. Only necessary if that datasource is not observable.
            </summary>
            <param name="index">The index of the new item</param>
            <param name="newItem">The new item.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAxisBase.NotifyRemoveItem(System.Int32,System.Object)">
            <summary>
            Used to manually notify the axis that the data source has had an item removed.
            </summary>
            <param name="index">The index of the old item.</param>
            <param name="oldItem">The old item.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAxisBase.GetOffset(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Rect,System.Int32)">
            <summary>
            Gets the horizontal offset to apply to series on this axis.
            </summary>
            <param name="windowRect">The window rectangle.</param>
            <param name="viewportRect">The viewport rectangle.</param>
            <param name="effectiveViewportRect">The effective viewport rectangle.</param>
            <param name="seriesIndex">The index of the series being horizontally offset.</param>
            <returns>The horizontal offset to apply to series on this axis.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryAxisBase.GetOffset(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Rect,System.Int32,System.Int32)">
            <summary>
            Gets the horizontal offset to apply to series on this axis.
            </summary>
            <param name="windowRect">The window rectangle.</param>
            <param name="viewportRect">The viewport rectangle.</param>
            <param name="effectiveViewportRect">The effective viewport rectangle.</param>
            <param name="seriesIndex">The index of the series being horizontally offset.</param>
            <param name="categoryMode">The Category Mode in context.  0 for overlaid series, 1 for non-grouped offset series, or 2 for grouped and offset series.</param>
            <returns>The horizontal offset to apply to series on this axis.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CategoryDateTimeXAxis">
            <summary>
            Represents a category-based horizontal X axis that uses a DateTime scale.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryDateTimeXAxis.#ctor">
            <summary>
            Creates an new instance of CategoryDateTimeXAxis class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryDateTimeXAxis.IsContinuous">
            <summary>
            Gets if the current axis is a continuous rather than a discrete scale
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryDateTimeXAxis.DisplayTypeProperty">
            <summary>
            Identifies the DisplayType dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryDateTimeXAxis.DisplayType">
            <summary>
            Gets or sets the axis display type. 
            Continuous display type divides the axis into even intervals, where labels will not necessarily be aligned with data points.
            Discrete display type will not use a constant interval, but will align each label with its data point.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryDateTimeXAxis.IntervalProperty">
            <summary>
            Identifies the Interval dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryDateTimeXAxis.Interval">
            <summary>
            Gets or sets the X axis time interval.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryDateTimeXAxis.ActualInterval">
            <summary>
            Gets the effective value for the current Interval.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryDateTimeXAxis.ResolveActualInterval">
            <summary>
            Gets the effective value for the current Interval.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryDateTimeXAxis.MinorIntervalProperty">
            <summary>
            Identifies the MinorInterval dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryDateTimeXAxis.MinorInterval">
            <summary>
            Gets or sets the frequency of displayed minor lines.
            </summary>
            <remarks>
            The set value is a factor that determines how the minor lines will be displayed.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryDateTimeXAxis.ActualMinorInterval">
            <summary>
            Gets the effective value for the current MinorInterval.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryDateTimeXAxis.GetAxisInterval">
            <summary>
            Gets the axis interval.
            </summary>
            <returns>The axis interval.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryDateTimeXAxis.RenderAxisOverride(System.Boolean)">
            <summary>
            Creates or updates the visual elements of the Axis.
            </summary>
            <param name="animate">Indicates if the visual changes should be animated.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryDateTimeXAxis.GetUserIntervalTicks">
            <summary>
            Gets the application-defined axis interval, expressed as a number of ticks.
            </summary>
            <returns>The application-defined axis interval, expressed as a number of ticks.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryDateTimeXAxis.ScrollIntoView(System.DateTime,System.DateTime)">
            <summary>
            Scrolls the CategoryDateTimeXAxis so that the provided date range is brought into view.
            </summary>
            <param name="minimum">The minimum date to bring into view.</param>
            <param name="maximum">The maximum date to bring into view.</param>
            <remarks>
            This method adjusts the WindowRect in order to scroll horizontally to the desired location.  This means that
            the X axis zoom level may change as it tries to fit the minimum and maximum in view.  It will not adjust the Y axis
            zoom level.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryDateTimeXAxis.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the axis. Gives the axis a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryDateTimeXAxis.InitializeActualMinimumAndMaximum">
            <summary>
            Initializes the ActualMinimum and ActualMaximum properties based on the data values in the DateTime column.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryDateTimeXAxis.Mode2TimeOffset(System.DateTime,System.DateTime)">
            <summary>
            Gets the horizontal offset for series which require horizontal offsetting in order to center data points over axis labels.
            </summary>
            <param name="min">The visible minimum date on this axis.</param>
            <param name="max">The visible maximum date on this axis.</param>
            <returns>The horizontal offset to apply to series that require it.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryDateTimeXAxis.IsCategoryDateTime">
            <summary>
            Gets if the current axis is of category date time axis type
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CategoryHighlightLayer">
            <summary>
            Represents an annotation layer that targets a category axis, or all category axes in the chart. 
            If the axis contains any series that are aligned between major gridlines of the axis (column, waterfall, etc) this will render a shape that fills the current category. 
            Otherwise it will render a band with an adjustable thickness at the closest gridline to the pointer position.
            <remarks>
            Setting UseIterpolation to true will cause the x position in the latter case to become affixed to the x position of the pointer.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryHighlightLayer.#ctor">
            <summary>
            Constructs a CategoryHighlightLayer
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryHighlightLayer.CreateView">
            <summary>
            Overridden to provide the view for this series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryHighlightLayer.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Overridden to process the created view for this series at creation time.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryHighlightLayer.HighlightView">
            <summary>
            The view for this series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryHighlightLayer.TargetAxis">
            <summary>
            Gets or sets the axis to target this annotation to. If null, this annotation targets all category axes simultaneously.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryHighlightLayer.TargetAxisProperty">
            <summary>
            Identifies the TargetSeries Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryHighlightLayer.UseInterpolation">
            <summary>
            Gets or sets whether to use value interpolation when drawing a line through the best value for the pointer position.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryHighlightLayer.UseInterpolationProperty">
            <summary>
            Identifies the UseInterpolation Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryHighlightLayer.BandHighlightWidth">
            <summary>
            Gets or sets the width to use for the highlight region if drawing a band rather than filling a category.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryHighlightLayer.BandHighlightWidthProperty">
            <summary>
            Identifies the BandHighlightWidth Dependency Property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryHighlightLayer.OnDependentAxisRender(Infragistics.Controls.Charts.Axis,System.Boolean)">
            <summary>
            Overridden to react to when an axis on which the annotation layer is possibly dependent is rendering.
            </summary>
            <param name="axis">The axis being rendered.</param>
            <param name="animate">Whether animation was requested when the axis was rendered.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryHighlightLayer.PrepareFrame(Infragistics.Controls.Charts.Frame,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the series should prepare the next animation frame.
            </summary>
            <param name="frame">The animation frame to populate.</param>
            <param name="view">The view for which we are preparing a frame.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryHighlightLayer.RenderFrame(Infragistics.Controls.Charts.Frame,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the series should render the provided animation frame.
            </summary>
            <param name="frame">The frame to be rendered.</param>
            <param name="view">The view to be rendered.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryHighlightLayer.RequiresPrepare">
            <summary>
            Informs whether this series requires PrepareFrame to be called before RenderFrame.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryHighlightLayer.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            Overridden to react to changes in series property values.
            </summary>
            <param name="sender">The series being altered.</param>
            <param name="propertyName">The property name of the property being altered.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">THe new value of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.CategoryItemHighlightLayer">
            <summary>
            Represents an annotation layer that highlights items in a series that use a category axis 
            either by drawing a banded shape at their position, or by rendering a marker at their position.
            <remarks>
            Depending on the type of series, the default highlight will be affected. To override 
            the type of highlight used, you can set the HighlightType property.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryItemHighlightLayer.#ctor">
            <summary>
            Constructs a CategoryItemHightlightLayer
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryItemHighlightLayer.CreateView">
            <summary>
            Overridden to provide the view for this series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryItemHighlightLayer.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Overridden to process the created view for this series at creation time.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryItemHighlightLayer.ItemView">
            <summary>
            The view for this series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryItemHighlightLayer.TargetSeries">
            <summary>
            Gets or sets the series to target this annotation to. If null, this annotation targets all series simultaneously.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryItemHighlightLayer.TargetSeriesProperty">
            <summary>
            Identifies the TargetSeries Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryItemHighlightLayer.UseInterpolation">
            <summary>
            Gets or sets whether to use value interpolation when drawing a line through the best value for the pointer position.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryItemHighlightLayer.UseInterpolationProperty">
            <summary>
            Identifies the UseInterpolation Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryItemHighlightLayer.HighlightType">
            <summary>
            Gets or sets which type of highlight shape to use when highlighting items.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryItemHighlightLayer.HighlightTypeProperty">
            <summary>
            Identifies the HighlightType Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryItemHighlightLayer.MarkerTemplate">
            <summary>
             Gets or sets the template to use for marker visuals for the current series object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryItemHighlightLayer.MarkerTemplateProperty">
            <summary>
            Identifies the MarkerTemplate Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryItemHighlightLayer.BandHighlightWidth">
            <summary>
            Gets or sets the width to use for the highlight region if highlighting items in a grid aligned series (line, spline, etc), with a banded shape.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryItemHighlightLayer.BandHighlightWidthProperty">
            <summary>
            Identifies the ItemHighlightWidth Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryItemHighlightLayer.SkipUnknownValues">
            <summary>
            Gets or sets whether to skip unknown values when searching for series values.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryItemHighlightLayer.SkipUnknownValuesProperty">
            <summary>
            Identifies the SkipUnknownValues Dependency Property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryItemHighlightLayer.OnDependentSeriesRender(Infragistics.Controls.Charts.Series,System.Boolean)">
            <summary>
            Overridden to react to when a series on which the annotation layer is possibly dependent is rendering.
            </summary>
            <param name="series">The series being rendered.</param>
            <param name="animate">Whether animation was requested when the series was rendered.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryItemHighlightLayer.IsSeriesValid(Infragistics.Controls.Charts.Series)">
            <summary>
            Checks if specified series is valid for rendering 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryItemHighlightLayer.PrepareFrame(Infragistics.Controls.Charts.Frame,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the series should prepare the next animation frame.
            </summary>
            <param name="frame">The animation frame to populate.</param>
            <param name="view">The view for which we are preparing a frame.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryItemHighlightLayer.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            Overridden to react to changes in series property values.
            </summary>
            <param name="sender">The series being altered.</param>
            <param name="propertyName">The property name of the property being altered.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">THe new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryItemHighlightLayer.RenderFrame(Infragistics.Controls.Charts.Frame,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the series should render the provided animation frame.
            </summary>
            <param name="frame">The frame to be rendered.</param>
            <param name="view">The view to be rendered.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryItemHighlightLayer.RequiresPrepare">
            <summary>
            Informs whether this series requires PrepareFrame to be called before RenderFrame.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CategorySeries">
            <summary>
            Represents the base class for XamDataChart category series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetVisiblePointsOfInterest(System.Collections.Generic.List{Infragistics.Controls.Charts.SeriesPointOfInterest},System.Boolean,System.Int32)">
            <summary>
            Returns a number of points of interest for the series, if supported.
            </summary>
            <param name="points">a collection to fill with the ponts of interest.</param> 
            <param name="useValueAsLabel">Indicates if the primary value should be used for the label, rather than the primary label, if applicable.</param>
            <param name="labelPrecision">Indicates the precision to use for labelling with a numeric value. -1 indicates no rounding should be performed.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetCategoryAxis">
            <summary>
            Returns the Category Axis assigned to this series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetValueAxis">
            <summary>
            Returns the Numeric Axis assigned to this series
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategorySeries.IsCategory">
            <summary>
            Gets whether or not this series is Category series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.#ctor">
            <summary>
            Initialises a default CategorySeries object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategorySeries.IsCustomCategoryStyleAllowed">
            <summary>
            Gets or sets whether this category series should allow custom style overrides of its individual visuals.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeries.IsCustomCategoryStyleAllowedPropertyName">
            <summary>
            Property name for the IsCustomCategoryStyleAllowed property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeries.IsCustomCategoryStyleAllowedProperty">
            <summary>
            Identifies the IsCustomCategoryStyleAllowed dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategorySeries.IsCustomCategoryMarkerStyleAllowed">
            <summary>
            Gets or sets whether this category series should allow custom style overrides of its individual marker visuals.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeries.IsCustomCategoryMarkerStyleAllowedPropertyName">
            <summary>
            Property name for the IsCustomCategoryMarkerStyleAllowed property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeries.IsCustomCategoryMarkerStyleAllowedProperty">
            <summary>
            Identifies the IsCustomCategoryMarkerStyleAllowed dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategorySeries.ActualIsCustomCategoryStyleAllowed">
            <summary>
            Gets or sets restriction of ActualIsCustomCategoryStyle
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategorySeries.ActualIsCustomCategoryMarkerStyleAllowed">
            <summary>
            Gets or sets restriction of ActualIsCustomCategoryMarkerStyle
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.CategorySeries.AssigningCategoryStyle">
            <summary>
            Event raised when Assigning Category Style
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.CategorySeries.AssigningCategoryMarkerStyle">
            <summary>
            Event raised when Assigning Category Marker Style
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.ShouldOverrideCategoryStyle">
            <summary>
            Determines if the category style should be overridden.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.ShouldOverrideMarkerStyle">
            <summary>
            Determines if the marker style should be overridden.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.RaiseAssigningCategoryStyles(Infragistics.Controls.Charts.AssigningCategoryStyleEventArgs)">
            <summary>
            Raises the AssigningCategoryStyle event.
            </summary>
            <param name="args">The EventArgs in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.RaiseAssigningCategoryMarkerStyles(Infragistics.Controls.Charts.AssigningCategoryMarkerStyleEventArgs)">
            <summary>
            Raises the AssigningCategoryMarkerStyle event.
            </summary>
            <param name="args">The EventArgs in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetCategoryItems(System.Int32,System.Int32)">
            <summary>
            Gets an array of category items for specified range of indices. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.InvalidateAxes">
            <summary>
            Invalidates the axes associated with the series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategorySeries.UseHighMarkerFidelity">
            <summary>
            Sets or Gets whether to increase marker fidelity for extreme data shapes that have lots of Y variation over short X intervals.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeries.UseHighMarkerFidelityProperty">
            <summary>
            Identifies the UseHighMarkerFidelity dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.WindowRectChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Overridden in derived classes when they want to respond to the chart's window changing.
            </summary>
            <param name="oldWindowRect">The old window rectangle of the chart.</param>
            <param name="newWindowRect">The new window rectangle of the chart.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategorySeries.TransitionInMode">
            <summary>
            Gets or sets the method by which to animate the data into the chart when the chart data source is swapped.
            Note: Transitions are not currently supported for stacked series.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeries.TransitionInModeProperty">
            <summary>
            Identifies the TransitionInMode dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategorySeries.IsTransitionInEnabled">
            <summary>
            Gets or sets whether the series should transition into the plot area when a new data source is assigned.
            Note: Transitions are not currently supported for stacked series.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeries.IsTransitionInEnabledProperty">
            <summary>
            Identifies the IsTransitionInEnabled dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.ViewportRectChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Overridden in derived classes when they want to respond to the viewport changing.
            </summary>
            <param name="oldViewportRect">The old viewport rectangle.</param>
            <param name="newViewportRect">The new viewport rectangle.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetIsCustomCategoryStyleAllowed">
            <summary>
            Determines if a custom category style is allowed.
            </summary>
            <returns>True if a custom category style is allowed; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetIsCustomCategoryMarkerStyleAllowed">
            <summary>
            Determines if a custom category marker style is allowed.
            </summary>
            <returns>True if a custom category marker style is allowed; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetExactUnsortedItemIndex(Infragistics.Portable.Point)">
            <summary>
            Gets the exact unsorted index of the item based on world coordinates from the current sorting axis.
            </summary>
            <param name="world">The world coordinates to use.</param>
            <returns>The exact index of the item for the specified coordinates as a double, indicating which value is closer to the world point.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategorySeries.IsPrimaryAxisSortingAxis">
            <summary>
            Returns true if the primary axis is a sorting axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetCategoryAxisIfPresent">
            <summary>
            Gets the category axis in context, if one is present.
            </summary>
            <returns>The category axis in context, if one is present.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetItemIndexSorted(Infragistics.Portable.Point)">
            <summary>
            Gets the index of the item based on world coordinates.
            </summary>
            <param name="world">The world coordinates to use.</param>
            <returns>The index of the item for the specified coordinates.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetOffsetValue">
            <summary>
            Returns the offset value for this series if grouped on a category axis.
            </summary>
            <returns>The offset value</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetCategoryWidth">
            <summary>
            Returns the width of the category grouping this series is in.
            </summary>
            <returns>The width of the category group.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetItem(Infragistics.Portable.Point)">
            <summary>
            Gets the item that is the best match for the specified world coordinates.
            </summary>
            <param name="world">The world coordinates to use.</param>
            <returns>The item that is the best match.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetItemIndex(Infragistics.Portable.Point)">
            <summary>
            Gets the index of the item based on world coordinates.
            </summary>
            <param name="world">The world coordinates to use.</param>
            <returns>The index of the item for the specified coordinates.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetExactItemIndex(Infragistics.Portable.Point)">
            <summary>
            Gets the precise item index, if possible, based on the closeness to the previous or next whole integer. If the series cannot provide this information, GetExactItemIndex will return the same integer value as GetItemIndex.
            </summary>
            <param name="world">The world position for which to return the index.</param>
            <returns>The double index indicating which whole number index the point is closest to.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategorySeries.HasIndividualElements">
            <summary>
            Checks if the series has individual elements
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetMarkerHighlightingInfo(System.Object,Infragistics.Portable.Point)">
            <summary>
            Gets the highlighting info of a marker, if the series supports markers.
            </summary>
            <param name="item">The data item</param>
            <param name="world">The world coordinates to use</param> 
        </member>
        <member name="P:Infragistics.Controls.Charts.CategorySeries.IsHighlightingSupported">
            <summary>
            Checks if the series supports highlithing of its elements
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetHighlightingInfo(System.Object,Infragistics.Portable.Point)">
            <summary>
            Gets the highlighting info of the series
            </summary>
            <param name="item">The data item</param>
            <param name="world">The world coordinates to use</param> 
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetActiveMarkers">
            <summary>
            Returns a list of the active markers.
            </summary>
            <returns>A list of the active markers.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetSpecificMarkerHighlightingInfo(System.Object,Infragistics.Portable.Point,Infragistics.Controls.Charts.HighlightingInfo)">
            <summary>
            Gets the highlighting info of a marker, if the series supports markers.
            </summary>
            <param name="item">The data item</param>
            <param name="world">The world coordinates to use</param> 
            <param name="prevValue">Information related to the previously highlighted item</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetSpecificHighlightingInfo(System.Object,Infragistics.Portable.Point,Infragistics.Controls.Charts.HighlightingInfo)">
            <summary>
            Gets the highlighting info of the series
            </summary>
            <param name="item">The data item</param>
            <param name="world">The world coordinates to use</param>
            <param name="prevValue">Information related to the previously highlighted item</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetFullSeriesInfo(System.Object,Infragistics.Portable.Point,Infragistics.Controls.Charts.HighlightingInfo)">
            <summary>
            Gets the highlighting info of the series
            </summary>
            <param name="item">The data item</param>
            <param name="world">The world coordinates to use</param>
            <param name="prevValue">Information related to the previously highlighted item</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeries.RenderManager">
            <summary>
            The current render state of the series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.PerformCategoryMarkerStyleOverride(System.Collections.Generic.List{System.Double[]},System.Int32,System.Int32,Infragistics.Controls.Charts.CategoryAxisBase,Infragistics.Controls.Charts.ScalerParams,System.Boolean)">
            <summary>
            Raises the AssigningCategoryMarkerStyle event, and applies any changes made to the EventArgs.
            </summary>
            <param name="buckets">The series data values.</param>
            <param name="currentIndex">The index of the item in context.</param>
            <param name="valueCount">The number of items in the data source.</param>
            <param name="categoryAxis">The category axis in context.</param>
            <param name="axisParams">Scaler parameters for the category axis.</param>
            <param name="isThumbnail">True if this is for a thumbnail view of the series, otherwise False.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.PerformCategoryStyleOverride(System.Collections.Generic.List{System.Double[]},System.Int32,System.Int32,Infragistics.Controls.Charts.CategoryAxisBase,Infragistics.Controls.Charts.ScalerParams,System.Boolean)">
            <summary>
            Raises the AssigningCategoryStyle event, and applies any changes made to the EventArgs.
            </summary>
            <param name="buckets">The series data values.</param>
            <param name="currentIndex">The index of the item in context.</param>
            <param name="valueCount">The number of items in the data source.</param>
            <param name="categoryAxis">The category axis in context.</param>
            <param name="axisParams">Scaler parameters for the category axis.</param>
            <param name="isThumbnail">True if this is for a thumbnail view of the series, otherwise False.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.ValidateSeries(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.ShouldTransitionIn">
            <summary>
            Checks if this series should perform transion-in animation
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetDefaultTransitionInMode">
            <summary>
            Gets default transition-in mode 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.ClearSpeedModifiers">
            <summary>
            Clears the speed modifiers for this series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.RenderSeriesOverride(System.Boolean)">
            <summary>
            Renders the series visual.
            </summary>
            <param name="animate">True if the change should be animated.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetDefaultTransitionInSpeedType">
            <summary>
            Returns the default TransitionInSpeedType for this series.
            </summary>
            <returns>The default TransitionInSpeedType for this series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetTransitionFromZeroValue">
            <summary>
            Gets transition from zero value of the series: chart's left edge for vertical series or chart's bottom edge for horizontal series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetMode2Index">
            <summary>
            Gets the mode 2 index for the series.
            </summary>
            <returns>The mode 2 index.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetBucketSize(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Returns the number of data items per bucket.
            </summary>
            <param name="view">The SeriesView in context.</param>
            <returns>The number of data items per bucket.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetFirstBucket(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Returns the index of the first visible bucket.
            </summary>
            <param name="view">The SeriesView in context.</param>
            <returns>The index of the first visible bucket.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.RenderThumbnail(Infragistics.Portable.Rect,Infragistics.Controls.Charts.RenderSurface)">
            <summary>
            Renders the thumbnail for the OPD pane.
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="surface">The render target.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetMatchingAxis(Infragistics.Controls.Charts.Axis)">
            <summary>
            Gets the axis which should be paired with the given axis.
            </summary>
            <param name="axis">The axis to find a match for.</param>
            <returns>The axis which should be paired with the given axis.  For a typical series, passing the x-axis will return the y-axis, and vice versa.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeries.GetAxes">
            <summary>
            Gets this series' axes as an array.
            </summary>
            <returns>An array containing all axes used by this series.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CategoryToolTipLayer">
            <summary>
            Represents an annotation layer that displays grouped tooltips for series that use a category axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryToolTipLayer.#ctor">
            <summary>
            Constructs a CategoryTooltipLayer.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryToolTipLayer.CreateView">
            <summary>
            Overridden to provide the view for this series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryToolTipLayer.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Overridden to process the created view for this series at creation time.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryToolTipLayer.CategoryToolTipView">
            <summary>
            The view for this series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryToolTipLayer.IsDefaultTooltipBehaviorDisabled">
            <summary>
            Gets whether the default tooltip behaviors for the chart are disabled if this layer is present.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryToolTipLayer.TargetAxis">
            <summary>
            Gets or sets the Axis to target this annotation to. If null, this annotation layer will not render content.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryToolTipLayer.TargetAxisProperty">
            <summary>
            Identifies the TargetAxis Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryToolTipLayer.UseInterpolation">
            <summary>
            Gets or sets whether to use value interpolation when drawing the tooltips.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryToolTipLayer.UseInterpolationProperty">
            <summary>
            Identifies the UseInterpolation Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryToolTipLayer.ToolTipPosition">
            <summary>
            Gets or sets the Position to apply to the tooltip containers.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryToolTipLayer.ToolTipPositionProperty">
            <summary>
            Identifies the ToolTipPosition dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryToolTipLayer.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            Overridden to react to changes in series property values.
            </summary>
            <param name="sender">The series being altered.</param>
            <param name="propertyName">The property name of the property being altered.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">THe new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryToolTipLayer.OnDependentAxisRender(Infragistics.Controls.Charts.Axis,System.Boolean)">
            <summary>
            Overridden to react to when an axis on which the annotation layer is possibly dependent is rendering.
            </summary>
            <param name="axis">The axis being rendered.</param>
            <param name="animate">Whether animation was requested when the axis was rendered.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryToolTipLayer.OnDependentSeriesRender(Infragistics.Controls.Charts.Series,System.Boolean)">
            <summary>
            Overridden to react to when a series on which the annotation layer is possibly dependent is rendering.
            </summary>
            <param name="series">The series being rendered.</param>
            <param name="animate">Whether animation was requested when the series was rendered.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryToolTipLayer.PrepareFrame(Infragistics.Controls.Charts.Frame,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the series should prepare the next animation frame.
            </summary>
            <param name="frame">The animation frame to populate.</param>
            <param name="view">The view for which we are preparing a frame.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryToolTipLayer.HideToolTips">
            <summary>
            Hides any tooltips presented by the layer, if any.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryToolTipLayer.RenderFrame(Infragistics.Controls.Charts.Frame,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the series should render the provided animation frame.
            </summary>
            <param name="frame">The frame to be rendered.</param>
            <param name="view">The view to be rendered.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryToolTipLayer.RequiresPrepare">
            <summary>
            Informs whether this series requires PrepareFrame to be called before RenderFrame.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CategoryXAxis">
            <summary>
            Represents a XamDataChart category X axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryXAxis.#ctor">
            <summary>
            Initializes a new instance of the CategoryXAxis class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryXAxis.GetAxisInterval">
            <summary>
            Gets the axis interval.
            </summary>
            <returns>The axis interval.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryXAxis.ScrollIntoView(System.Object)">
            <summary>
            Scrolls the specified item into view.
            </summary>
            <param name="item">Data item to scroll into view</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryXAxis.GetScaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the scaled viewport coordinate value from the unscaled axis value.
            </summary>
            <param name="unscaledValue">The unscaled axis value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The scaled value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryXAxis.AsBucketArray(System.Collections.Generic.IList{System.Double[]})">
            <summary>
            Converts the given list into a 2-dimensional array.
            </summary>
            <param name="unscaledValues">The list to convert to an array.</param>
            <returns>The given list as a 2-dimensional array.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryXAxis.GetScaledBucketValueList(System.Collections.Generic.IList{System.Double[]},System.Collections.Generic.IList{System.Int32},System.Int32,System.Int32,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Get a list of scaled viewport values from a list of unscaled axis values in buckets.
            </summary>
            <param name="unscaledValues">The list of unscaled axis values.</param>
            <param name="bucketIndexes">The indexes inside the buckets to scale.</param>
            <param name="startIndex">Index at which to begin in the list.</param>
            <param name="count">Number of items to scale in the list.</param>
            <param name="p">Scaler parameters</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryXAxis.GetUnscaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the unscaled axis value from a scaled viewport value.
            </summary>
            <param name="scaledValue">The scaled viewport value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The unscaled axis value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryXAxis.ScrollRangeIntoView(System.Double,System.Double)">
            <summary>
            Scrolls the CategoryXAxis so that the provided range is brought into view.
            </summary>
            <param name="minimum">The minimum category index to bring into view.</param>
            <param name="maximum">The maximum category index to bring into view.</param>
            <remarks>
            This method adjusts the WindowRect in order to scroll horizontally to the desired location.  This means that
            the X axis zoom level may change as it tries to fit the minimum and maximum in view.  It will not adjust the Y axis
            zoom level.
            
            Note: The minimum and maximum are expected to be indexes referring to the items inside the CategoryXAxis ItemsSource.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryXAxis.RenderAxisOverride(System.Boolean)">
            <summary>
            Renders or updates the axis visuals.
            </summary>
            <param name="animate">Whether the visual changes should be animated.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryXAxis.IntervalProperty">
            <summary>
            Identifies the Interval dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryXAxis.Interval">
            <summary>
            Gets or sets the frequency of displayed labels.
            </summary>
            <remarks>
            The set value is a factor that determines which labels will be hidden. For example, an interval of 2 will display every other label.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryXAxis.ActualInterval">
            <summary>
            Gets the effective value for the current Interval.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryXAxis.ResolveActualInterval">
            <summary>
            Gets the effective value for the current Interval.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryXAxis.MinorIntervalProperty">
            <summary>
            Identifies the MinorInterval dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryXAxis.MinorInterval">
            <summary>
            Gets or sets the frequency of displayed minor lines.
            </summary>
            <remarks>
            The set value is a factor that determines how the minor lines will be displayed.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryXAxis.ActualMinorInterval">
            <summary>
            Gets the effective value for the current MinorInterval.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryXAxis.Orientation">
            <summary>
            Gets the axis orientation.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryXAxis.GetDataItems">
            <summary>
            Gets the data items to use for labeling.
            </summary>
            <returns>The data items to use for labeling.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryXAxis.GetMajorValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the major value at the given unscaled value.
            </summary>
            <param name="unscaledValue">The unscaled value to get a major value for.</param>
            <param name="xParams">Axis scaling parameters.</param>
            <returns>The major value corresponding with the given unscaled value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryXAxis.GetCategoryValue(System.Double,System.Double,System.Boolean,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the category position based on the given arguments.
            </summary>
            <param name="unscaledValue">The unscaled data value.</param>
            <param name="majorValue">The major value.</param>
            <param name="mode0">True if the category mode is zero.</param>
            <param name="xParams">Axis scaling parameters.</param>
            <returns>The scaled category position.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CategoryYAxis">
            <summary>
            Represents a XamDataChart category Y axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryYAxis.IsVertical">
            <summary>
            Gets if the current axis is a vertical axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryYAxis.GetResolutionExtent">
            <summary>
            Gets the resolution available to the axis.  Typically the axis width or height, depending on the axis orientation.
            </summary>
            <returns>The available resolution of the axis.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryYAxis.GetCategoryBoundingBox(Infragistics.Portable.Point,System.Boolean,System.Double)">
            <summary>
            Gets bounding box of this category axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryYAxis.AsBucketArray(System.Collections.Generic.IList{System.Double[]})">
            <summary>
            Converts the given list into a 2-dimensional array.
            </summary>
            <param name="unscaledValues">The list to convert to an array.</param>
            <returns>The given list as a 2-dimensional array.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryYAxis.GetScaledBucketValueList(System.Collections.Generic.IList{System.Double[]},System.Collections.Generic.IList{System.Int32},System.Int32,System.Int32,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Get a list of scaled viewport values from a list of unscaled axis values in buckets.
            </summary>
            <param name="unscaledValues">The list of unscaled axis values.</param>
            <param name="bucketIndexes">The indexes inside the buckets to scale.</param>
            <param name="startIndex">Index at which to begin in the list.</param>
            <param name="count">Number of items to scale in the list.</param>
            <param name="p">Scaler parameters</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryYAxis.#ctor">
            <summary>
            Initializes a new instance of the CategoryYAxis class. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryYAxis.IntervalProperty">
            <summary>
            Identifies the Interval dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryYAxis.Interval">
            <summary>
            Gets or sets the frequency of displayed labels.
            </summary>
            <remarks>
            The set value is a factor that determines which labels will be hidden. For example, an interval of 2 will display every other label.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryYAxis.ActualInterval">
            <summary>
            Gets the effective value for the current Interval.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryYAxis.ResolveActualInterval">
            <summary>
            Gets the effective value for the current Interval.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryYAxis.MinorIntervalProperty">
            <summary>
            Identifies the MinorInterval dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryYAxis.MinorInterval">
            <summary>
            Gets or sets the frequency of displayed minor lines.
            </summary>
            <remarks>
            The set value is a factor that determines how the minor lines will be displayed.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryYAxis.ActualMinorInterval">
            <summary>
            Gets the effective value for the current MinorInterval.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryYAxis.GetScaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the scaled viewport coordinate value from the unscaled axis value.
            </summary>
            <param name="unscaledValue">The unscaled axis value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The scaled value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryYAxis.GetUnscaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the unscaled axis value from a scaled viewport value.
            </summary>
            <param name="scaledValue">The scaled viewport value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The unscaled axis value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryYAxis.ScrollRangeIntoView(System.Double,System.Double)">
            <summary>
            Scrolls the CategoryYAxis so that the provided range is brought into view.
            </summary>
            <param name="minimum">The minimum category index to bring into view.</param>
            <param name="maximum">The maximum category index to bring into view.</param>
            <remarks>
            This method adjusts the WindowRect in order to scroll vertically to the desired location.  This means that
            the Y axis zoom level may change as it tries to fit the minimum and maximum in view.  It will not adjust the X axis
            zoom level.
            
            Note: The minimum and maximum are expected to be indexes referring to the items inside the CategoryYAxis ItemsSource.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryYAxis.GetAxisInterval">
            <summary>
            Gets the axis interval.
            </summary>
            <returns>The axis interval.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryYAxis.ScrollIntoView(System.Object)">
            <summary>
            Scrolls the specified item into view.
            </summary>
            <param name="item">Data item to scroll into view</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryYAxis.RenderAxisOverride(System.Boolean)">
            <summary>
            Renders or updates the axis visuals.
            </summary>
            <param name="animate">Whether the visual changes should be animated.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryYAxis.Orientation">
            <summary>
            Gets the axis orientation.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ChaikinOscillatorIndicator">
            <summary>
            Represents the XamDataChart Chaikin Oscillator indicator series.
            </summary>
            <remarks>
            Default required members: Close, Low, High, Volume
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.ChaikinOscillatorIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ChaikinOscillatorIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ChaikinOscillatorIndicator.ShortPeriod">
            <summary>
            Gets or sets the short moving average period for the current ChaikinOscillatorIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for short CHO periods is 3.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ChaikinOscillatorIndicator.ShortPeriodProperty">
            <summary>
            Identifies the ShortPeriod dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ChaikinOscillatorIndicator.ShortPeriodOverride">
            <summary>
            Specifies the short period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.ChaikinOscillatorIndicator.LongPeriod">
            <summary>
            Gets or sets the long moving average period for the current ChaikinOscillatorIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for long CHO periods is 10.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ChaikinOscillatorIndicator.LongPeriodProperty">
            <summary>
            Identifies the LongPeriod dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ChaikinOscillatorIndicator.LongPeriodOverride">
            <summary>
            Specifies the long period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.ChaikinVolatilityIndicator">
            <summary>
            Represents a XamDataChart Chaikin Volatility indicator series.
            </summary>
            <remarks>
            The ChaikinVolatility indicator attempts to show volatility by displaying the spread between
            the high and low values.
            <para>
            Default required members: High, Low
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.ChaikinVolatilityIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ChaikinVolatilityIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ChaikinVolatilityIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current ChaikinVolatilityIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for ChaikinVolatilityIndicator periods is 10.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ChaikinVolatilityIndicator.PeriodProperty">
            <summary>
            Identifies the Period dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ChaikinVolatilityIndicator.PeriodOverride">
            <summary>
            Specifies the period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ChaikinVolatilityIndicator.SetPeriodOverride(System.Int32)">
            <summary>
            Sets the Period property.
            </summary>
            <param name="period">The value for the Period property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ChartCursorEventArgs">
            <summary>
            Provides data for XamDataChart mouse button related events. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ChartCursorEventArgs.ToString">
            <summary>
            Provides a human readable expresion of the event arguments.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ChartCursorEventArgs.Item">
            <summary>
            Gets the ItemsSource item associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ChartCursorEventArgs.Series">
            <summary>
            Gets the series associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ChartCursorEventArgs.SeriesViewer">
            <summary>
            Gets the Chart associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ChartCursorEventArgs.Chart">
            <summary>
            Gets the chart associated with the event.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ChartMouseEventArgs">
            <summary>
            Provides data for XamDataChart mouse button related events. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ChartMouseEventArgs.ToString">
            <summary>
            Provides a human readable description of the mouse button event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ChartMouseEventArgs.GetPosition(Infragistics.Portable.Components.UI.UIElement)">
            <summary>
            Returns the x- and y- coordinates of the mouse pointer position, optionally evaluated
            against the origin of a supplied UIElement.
            </summary>
            <param name="relativeTo">Any UIElement derived object that is contained by the Silverlight plug-in
            and connected to the object tree. To specify the object relative to the overall Silverlight
            coordinate system, use a relativeTo value of null.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.ChartMouseEventArgs.OriginalSource">
            <summary>
            Gets a reference to the object that raised the event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ChartMouseEventArgs.Item">
            <summary>
            Gets the ItemsSource item associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ChartMouseEventArgs.Series">
            <summary>
            Gets the series associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ChartMouseEventArgs.Chart">
            <summary>
            Gets the Chart associated with the current event.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ChartSeriesEventArgs">
            <summary>
            Represents event arguments for chart's SeriesAdded and SeriesRemoved events
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ChartSeriesEventArgs.Series">
            <summary> Gets the series.  </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ColorScale">
            <summary>
            Base class for classes which provide colors corresponding to numeric values within a known list of numeric values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColorScale.GetColor(System.Double,System.Double,System.Double,System.Collections.Generic.IList{System.Double})">
            <summary>
            Return a color corresponding to the given numeric value.
            </summary>
            <param name="value">The numeric value to get a color for.</param>
            <param name="defaultMinimum">The minimum value of the value column.</param>
            <param name="defaultMaximum">The maximum value of the value column.</param>
            <param name="valueColumn">The list of all numeric values in the scale.</param>
            <returns>A color corresponding to the given numeric value.</returns>
        </member>
        <member name="E:Infragistics.Controls.Charts.ColorScale.PropertyChanged">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.ColorScale.PropertyUpdated">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColorScale.RaisePropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            Raises the property changed and updated events.
            </summary>
            <param name="name">The name of the property being changed.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColorScale.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            Called when a property is updated.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="propertyName">The name of the property that was changed.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ColumnFragment">
            <summary>
            Represents one part of a StackedColumnSeries.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragment.#ctor">
            <summary>
            Creates a new instance of the ColumnFragment.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragment.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragment.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.ColumnFragment.RadiusX">
            <summary>
            Gets or sets the x-radius of the ellipse that is used to round the corners of the column.
            <para>
            This is a dependency property.
            </para>
            </summary>  
        </member>
        <member name="F:Infragistics.Controls.Charts.ColumnFragment.RadiusXProperty">
            <summary>
            Identifies the RadiusX dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ColumnFragment.RadiusY">
            <summary>
            Gets or sets the y-radius of the ellipse that is used to round the corners of the column.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ColumnFragment.RadiusYProperty">
            <summary>
            Identifies the RadiusY dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ColumnFragment.XAxis">
            <summary>
            Gets or sets the effective x-axis for this series.
            </summary>  
        </member>
        <member name="P:Infragistics.Controls.Charts.ColumnFragment.YAxis">
            <summary>
            Gets or sets the effective y-axis for this series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragment.GetCategoryAxis">
            <summary>
            Returns the Category Axis assigned to this series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragment.GetValueAxis">
            <summary>
            Returns the Numeric Axis assigned to this series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragment.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragment.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragment.ValidateSeries(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragment.UseParentMarkerCanvas">
            <summary>
            Determines if the current series renders its markers to the MarkerCanvas of the parent series. 
            Ensures that StackedFragmentSeries don't reparent the MarkerCanvas.
            </summary>
            <returns>Whether or not to use parent series marker canvas.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragment.GetBucketSize(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Returns the number of data items per bucket.
            </summary>
            <param name="view">The SeriesView in context.</param>
            <returns>The number of data items per bucket.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragment.GetFirstBucket(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Returns the index of the first visible bucket.
            </summary>
            <param name="view">The SeriesView in context.</param>
            <returns>The index of the first visible bucket.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragment.GetSeriesValueBoundingBox(Infragistics.Portable.Point)">
            <summary>
            If possible, will return the best available value bounding box within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value bounding box for</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragment.TestHit(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks for a matching data item at the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if a matching data item was found; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragment.TestShapesOver(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Test if the given point is over a shape in this series.
            </summary>
            <param name="position">The position to test.</param>
            <param name="isFinger">True if this is a touch interaction.</param>
            <returns>True if this point is over a shape in the series, otherwise False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragment.InflateBox(Infragistics.Portable.Rect,System.Double)">
            <summary>
            Makes the given Rect larger.
            </summary>
            <param name="box">The Rect to enlarge.</param>
            <param name="p">The size to enlarge the Rect by.</param>
            <returns>An enlarged copy of the given Rect.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragment.Item(System.Object,Infragistics.Portable.Point)">
            <summary>
            When overridden in a derived class gives the opportunity to define how the data source item
            for a given set of mouse coordinates is fetched.
            </summary>
            <param name="sender">The element the mouse is over.</param>
            <param name="point">The mouse coordinates for which to fetch the item.</param>
            <returns>The retrieved item.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragment.GetItem(Infragistics.Portable.Point)">
            <summary>
            Gets the item that is the best match for the specified world coordinates.
            </summary>
            <param name="world">The world coordinates to use.</param>
            <returns>The item that is the best match.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragment.GetItemIndexSorted(Infragistics.Portable.Point)">
            <summary>
            Gets the index of the item based on world coordinates.
            </summary>
            <param name="world">The world coordinates to use.</param>
            <returns>The index of the item for the specified coordinates.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragment.GetItemIndex(Infragistics.Portable.Point)">
            <summary>
            Gets the index of the item that resides at the provided world coordinates.
            </summary>
            <param name="world">The world coordinates of the requested item.</param>
            <returns>The requested item's index.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragment.RenderAlternateView(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.RenderSurface,System.String,System.Double)">
            <summary>
            Renders an alternate view for of this series
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="surface">The render target.</param>
            <param name="viewIdentifier">String key to use for this view target</param>
            <param name="effectiveScalingRatio">The effective scaling ratio.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragment.PrepareFrame(Infragistics.Controls.Charts.CategoryFrame,Infragistics.Controls.Charts.CategorySeriesView)">
            <summary>
            Create buckets and markers for the column fragment.
            </summary>
            <remarks>
            The buckets of the column fragment are managed entirely by the parent series. 
            CurrentFrame will always be re-populated regardless of which frame got passed into PrepareFrame.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragment.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ColumnSeries">
            <summary>
            Represents a XamDataChart column series.
            <para>Compare values across categories by using vertical rectangles.</para>
            <para>Use it when the order of categories is not important or for displaying
            item counts such as a histogram.</para>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnSeries.GetDefaultTransitionInMode">
            <summary>
            Gets default transition-in mode 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnSeries.#ctor">
            <summary>
            Initializes a new instance of the ColumnSeries class. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ColumnSeries.RadiusX">
            <summary>
            Gets or sets the x-radius of the ellipse that is used to round the corners of the column.
            <para>
            This is a dependency property.
            </para>
            </summary>  
        </member>
        <member name="F:Infragistics.Controls.Charts.ColumnSeries.RadiusXProperty">
            <summary>
            Identifies the RadiusX dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ColumnSeries.RadiusY">
            <summary>
            Gets or sets the y-radius of the ellipse that is used to round the corners of the column.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ColumnSeries.RadiusYProperty">
            <summary>
            Identifies the RadiusY dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ColumnSeries.HasIndividualElements">
            <summary>
            Checks if the series has individual elements
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnSeries.GetSeriesValueBoundingBox(Infragistics.Portable.Point)">
            <summary>
            If possible, will return the best available value bounding box within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value bounding box for</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnSeries.TestHit(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks for a matching data item at the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if a matching data item was found; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnSeries.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnSeries.GetItemSpan">
            <summary>
            For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.
            </summary> 
        </member>
        <member name="P:Infragistics.Controls.Charts.ColumnSeries.ConsolidatedColumnVerticalPosition">
            <summary>
            The positioning logic to use for columns which have been consolidated into a single visual element.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CommodityChannelIndexIndicator">
            <summary>
            Represents a XamDataChart Commodity Channel Index indicator series.
            </summary>
            <remarks>
            Default required members: High, Low, Close
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.CommodityChannelIndexIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CommodityChannelIndexIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CommodityChannelIndexIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current CCISeries object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for CCI periods is 20.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CommodityChannelIndexIndicator.PeriodProperty">
            <summary>
            Identifies the Period dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CommodityChannelIndexIndicator.PeriodOverride">
            <summary>
            Specifies the period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CommodityChannelIndexIndicator.SetPeriodOverride(System.Int32)">
            <summary>
            Sets the Period property.
            </summary>
            <param name="period">The value for the Period property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ContourValueResolver">
            <summary>
            Class used to determine the numeric values of contour lines, given a larger list of numeric values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ContourValueResolver.GetContourValues(Infragistics.Portable.IFastItemColumn{System.Double})">
            <summary>
            Gets the numeric values of contour lines based on the given values.
            </summary>
            <param name="valueColumn">The FastItemColumn containing all numeric values for the series.</param>
            <returns>The numeric values at which contour lines should be placed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ContourValueResolver.PropertyUpdated(System.String,System.Object,System.Object)">
            <summary>
            Method invoked whenever a property value on the ContourValueResolver has changed.
            </summary>
            <param name="propertyName">The name of the changed property.</param>
            <param name="oldValue">The previous value of the changed property.</param>
            <param name="newValue">The new value of the changed property.</param>
        </member>
        <member name="E:Infragistics.Controls.Charts.ContourValueResolver.Updated">
            <summary>
            Raised when the ContourValueResolver has been updated and its contour values should be re-evaluated.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CrosshairLayer">
            <summary>
            Represents an annotation layer that displays crosshair lines that cross through the closest value of the target series under the cursor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CrosshairLayer.#ctor">
            <summary>
            Constructs a CrosshairLayer
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CrosshairLayer.CreateView">
            <summary>
            Overridden to provide the view for this series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CrosshairLayer.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Overridden to process the created view for this series at creation time.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.CrosshairView">
            <summary>
            Gets or sets the view of series
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.HorizontalLineStroke">
            <summary>
            Gets or sets the color to use for the horizontal line. Leave null for an automatic value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.HorizontalLineStrokeProperty">
            <summary>
            Identifies the HorizontalLineStroke Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.VerticalLineStroke">
            <summary>
            Gets or sets the color to use for vertical line. Leave null for an automatic value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.VerticalLineStrokeProperty">
            <summary>
            Identifies the VerticalLineStroke Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.TargetSeries">
            <summary>
            Gets or sets the series to target this annotation to. If null, this annotation targets all series simultaneously.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.TargetSeriesProperty">
            <summary>
            Identifies the TargetSeries Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.UseInterpolation">
            <summary>
            Gets or sets whether to use value interpolation when drawing a line through the best value for the cursor position.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.UseInterpolationProperty">
            <summary>
            Identifies the UseInterpolation Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.IsAxisAnnotationEnabled">
            <summary>
            Gets or sets whether to draw annotations over the axes where the crosshair meets with them.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.IsAxisAnnotationEnabledProperty">
            <summary>
            Identifies the IsAxisAnnotationEnabled Dependency Property.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.CrosshairLayer.XAxisAnnotationFormatLabel">
            <summary>
            Event raised for the purpose of determining the text of each x axis annotation label.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.CrosshairLayer.YAxisAnnotationFormatLabel">
            <summary>
            Event raised for the purpose of determining the text of each y axis annotation label.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.XAxisAnnotationTextColor">
            <summary>
            Gets or sets the color to use for the x axis annotation text. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.XAxisAnnotationTextColorProperty">
            <summary>
            Identifies the XAxisAnnotationTextColor Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.XAxisAnnotationBackground">
            <summary>
            Gets or sets the color to use for the x axis annotation backing. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.XAxisAnnotationBackgroundProperty">
            <summary>
            Identifies the XAxisAnnotationBackground Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.XAxisAnnotationInterpolatedValuePrecision">
            <summary>
            Gets or sets the precision to use displaying values for interpolated crosshair positions.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.XAxisAnnotationInterpolatedValuePrecisionProperty">
            <summary>
            Identifies the XAxisAnnotationInterpolatedValuePrecision Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.XAxisAnnotationOutline">
            <summary>
            Gets or sets the color to use for the x axis annotation outline. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.XAxisAnnotationOutlineProperty">
            <summary>
            Identifies the XAxisAnnotationOutline Dependency Property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.XAxisAnnotationPaddingLeftProperty">
            <summary>
            Identifies the XAxisAnnotationPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.XAxisAnnotationPaddingLeft">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.XAxisAnnotationPaddingTopProperty">
            <summary>
            Identifies the XAxisAnnotationPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.XAxisAnnotationPaddingTop">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.XAxisAnnotationPaddingRightProperty">
            <summary>
            Identifies the XAxisAnnotationPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.XAxisAnnotationPaddingRight">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.XAxisAnnotationPaddingBottomProperty">
            <summary>
            Identifies the XAxisAnnotationPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.XAxisAnnotationPaddingBottom">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.YAxisAnnotationPaddingLeftProperty">
            <summary>
            Identifies the YAxisAnnotationPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.YAxisAnnotationPaddingLeft">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.YAxisAnnotationPaddingTopProperty">
            <summary>
            Identifies the YAxisAnnotationPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.YAxisAnnotationPaddingTop">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.YAxisAnnotationPaddingRightProperty">
            <summary>
            Identifies the YAxisAnnotationPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.YAxisAnnotationPaddingRight">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.YAxisAnnotationPaddingBottomProperty">
            <summary>
            Identifies the YAxisAnnotationPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.YAxisAnnotationPaddingBottom">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.XAxisAnnotationStrokeThickness">
            <summary>
            Gets or sets the stroke thickness for the x axis annotation backing. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.XAxisAnnotationStrokeThicknessProperty">
            <summary>
            Identifies the XAxisAnnotationStrokeThickness Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.YAxisAnnotationTextColor">
            <summary>
            Gets or sets the color to use for the y axis annotation text. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.YAxisAnnotationTextColorProperty">
            <summary>
            Identifies the YAxisAnnotationTextColor Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.YAxisAnnotationBackground">
            <summary>
            Gets or sets the color to use for the y axis annotation backing. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.YAxisAnnotationBackgroundProperty">
            <summary>
            Identifies the YAxisAnnotationBackground Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.YAxisAnnotationInterpolatedValuePrecision">
            <summary>
            Gets or sets the precision to use displaying values for interpolated crosshair positions.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.YAxisAnnotationInterpolatedValuePrecisionProperty">
            <summary>
            Identifies the YAxisAnnotationInterpolatedValuePrecision Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.YAxisAnnotationOutline">
            <summary>
            Gets or sets the color to use for the y axis annotation outline. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.YAxisAnnotationOutlineProperty">
            <summary>
            Identifies the YAxisAnnotationOutline Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.YAxisAnnotationStrokeThickness">
            <summary>
            Gets or sets the stroke thickness for the y axis annotation backing. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.YAxisAnnotationStrokeThicknessProperty">
            <summary>
            Identifies the YAxisAnnotationStrokeThickness Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.VerticalLineVisibility">
            <summary>
            Gets or sets whether to display the vertical line.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.VerticalLineVisibilityProperty">
            <summary>
            Identifies the VerticalLineVisiblity Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.HorizontalLineVisibility">
            <summary>
            Gets or sets whether to display the horizontal line.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.HorizontalLineVisibilityProperty">
            <summary>
            Identifies the HorizontalLineVisiblity Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayer.SkipUnknownValues">
            <summary>
            Gets or sets whether to skip unknown values when searching for series values.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairLayer.SkipUnknownValuesProperty">
            <summary>
            Identifies the SkipUnknownValues Dependency Property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CrosshairLayer.OnDependentSeriesRender(Infragistics.Controls.Charts.Series,System.Boolean)">
            <summary>
            Overridden to react to when a series on which the annotation layer is possibly dependent is rendering.
            </summary>
            <param name="series">The series being rendered.</param>
            <param name="animate">Whether animation was requested when the series was rendered.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CrosshairLayer.PrepareFrame(Infragistics.Controls.Charts.Frame,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the series should prepare the next animation frame.
            </summary>
            <param name="frame">The animation frame to populate.</param>
            <param name="view">The view for which we are preparing a frame.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CrosshairLayer.IsSeriesValid(Infragistics.Controls.Charts.Series)">
            <summary>
            Checks if specified series is valid for rendering 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CrosshairLayer.OnBeforeContentRefresh">
            <summary>
            Method invoked before the series refreshes its visual content.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CrosshairLayer.UpdateAnnotations(Infragistics.Controls.Charts.CrosshairLayerFrame,System.Boolean)">
            <summary>
            Uodates annotations of specified frame
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CrosshairLayer.RenderFrame(Infragistics.Controls.Charts.Frame,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the series should render the provided animation frame.
            </summary>
            <param name="frame">The frame to be rendered.</param>
            <param name="view">The view to be rendered.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CrosshairLayer.RequiresPrepare">
            <summary>
            Informs whether this series requires PrepareFrame to be called before RenderFrame.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CrosshairLayer.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            Overridden to react to changes in series property values.
            </summary>
            <param name="sender">The series being altered.</param>
            <param name="propertyName">The property name of the property being altered.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">THe new value of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.CustomContourValueResolver">
            <summary>
            ContourValueResolver class which fires an event to resolve the contour values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CustomContourValueResolver.#ctor">
            <summary>
            CustomContourValueResolver constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CustomContourValueResolver.GetContourValues(Infragistics.Portable.IFastItemColumn{System.Double})">
            <summary>
            Gets the numeric values of contour lines based on the given values.
            </summary>
            <param name="valueColumn">The FastItemColumn containing all numeric values for the series.</param>
            <returns>The numeric values at which contour lines should be placed.</returns>
        </member>
        <member name="E:Infragistics.Controls.Charts.CustomContourValueResolver.GetCustomContourValues">
            <summary>
            Event raised when retrieving the contour values.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CustomContourValueResolverEventArgs">
            <summary>
            Provides data for GetCustomContourValues event. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CustomContourValueResolverEventArgs.#ctor(Infragistics.Portable.IFastItemColumn{System.Double})">
            <summary>
            CustomContourValueResolverEventArgs constructor.
            </summary>
            <param name="valueColumn">The valueData</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.CustomContourValueResolverEventArgs.ValueColumn">
            <summary>
            Gets the value column
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CustomContourValueResolverEventArgs.ContourValuesEnumerable">
            <summary>
            Gets or set the value column
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CustomIndicator">
            <summary>
            Represents a XamDataChart Custom Indicator series.
            <para>
            The indicator value is calculated in the user specified Indicator event handler. 
            </para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CustomIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CustomIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CustomIndicator.BasedOn(System.Int32,System.Int32)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="E:Infragistics.Controls.Charts.CustomIndicator.Indicator">
            <summary>
            Handle this event in order to perform a custom indicator calculation.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.CustomIndicator.BasedOnColumns">
            <summary>
            Handle this event in order to indicate which columns this custom indicator
            is based on.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CustomIndicator.IndicatorOverride(System.Int32,System.Int32)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="position">The position to calculate from.</param>
            <param name="count">The number of positions to calculate for.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CustomPaletteBrushScale">
            <summary>
            Represents a brush scale that uses index-based brush selection mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CustomPaletteBrushScale.#ctor">
            <summary>
            Creates a new instance of the CustomPaletteBrushScale.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CustomPaletteBrushScale.BrushSelectionModeProperty">
            <summary>
            Identifies the BrushSelectionMode dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CustomPaletteBrushScale.BrushSelectionMode">
            <summary>
            Gets or sets the brush selection mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CustomPaletteBrushScale.GetBrush(System.Int32,System.Int32)">
            <summary>
            Returns calculated brush for the given index.
            </summary>
            <param name="index">Point index.</param>
            <param name="total">Total number of markers in the series.</param>
            <returns>Brush object at a specified index.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.CustomPaletteBrushScale.IsReady">
            <summary>
            Checks if this scale is ready for useage with a series
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CustomPaletteColorScale">
            <summary>
            ColorScale class for selecting a color from a given palette, or interpolating between adjacent colors in that palette.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CustomPaletteColorScale.#ctor">
            <summary>
            CustomPaletteColorScale constructor.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CustomPaletteColorScale.MinimumValueProperty">
            <summary>
            Identifies the MinimumValue dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CustomPaletteColorScale.MinimumValue">
            <summary>
            The lowest value to assign a color.  Any given value less than this value will be made Transparent.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CustomPaletteColorScale.MaximumValueProperty">
            <summary>
            Identifies the MaximumValue dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CustomPaletteColorScale.MaximumValue">
            <summary>
            The highest value to assign a color.  Any given value greater than this value will be made Transparent.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CustomPaletteColorScale.Palette">
            <summary>
            A list of colors to select from or interpolate between.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CustomPaletteColorScale.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            Invoked whenever a property value on this ColorScale is updated.
            </summary>
            <param name="propertyName">The name of the property which was updated.</param>
            <param name="oldValue">The previous value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CustomPaletteColorScale.GetColor(System.Double,System.Double,System.Double,System.Collections.Generic.IList{System.Double})">
            <summary>
            Return a color corresponding to the given numeric value.
            </summary>
            <param name="value">The numeric value to get a color for.</param>
            <param name="defaultMinimum">The default value for minimum, if no minimum setting is present on this color scale.</param>
            <param name="defaultMaximum">The default value for maximum, if no maximum setting is present on this color scale.</param>
            <param name="valueColumn">The list of all numeric values in the scale.</param>
            <returns>A color corresponding to the given numeric value.</returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.CustomPaletteColorScale.InterpolationModeProperty">
            <summary>
            Identifies the InterpolationMode dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CustomPaletteColorScale.InterpolationMode">
            <summary>
            The approach to use when getting a color from the palette.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CustomPaletteColorScale.ProvidePalette(System.String[])">
            <summary>
            Sets the color palette.
            </summary>
            <param name="colors">The color palette.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.DataChartMouseButtonEventArgs">
            <summary>
            Provides data for XamDataChart mouse button related events. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DataChartMouseButtonEventArgs.ToString">
            <summary>
            Provides a human readable description of the mouse button event.
            </summary>
            <returns>The description.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.DataChartMouseButtonEventArgs.OriginalEvent">
            <summary>
            Gets or sets the original control event that resulted in this event being raised.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DataChartMouseButtonEventArgs.Handled">
            <summary>
            Gets or sets a value that indicates the present state of the event handling for a routed 
            event as it travels the route.
            </summary>
            <remarks>
            ChartMouseButton events are not routed events; setting this property effects the underlying
            MouseButtonEvent.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.DataChartMouseButtonEventArgs.GetPosition(Infragistics.Portable.Components.UI.UIElement)">
            <summary>
            Returns the x- and y- coordinates of the mouse pointer position, optionally evaluated
            against the origin of a supplied UIElement.
            </summary>
            <param name="relativeTo">Any UIElement derived object that is contained by the Silverlight plug-in
            and connected to the object tree. To specify the object relative to the overall Silverlight
            coordinate system, use a relativeTo value of null.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DataChartMouseButtonEventArgs.GetPosition">
            <summary>
            Returns the x- and y- coordinates of the mouse pointer position.
            </summary>
            <returns>The mouse position requested.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.DataChartMouseButtonEventArgs.OriginalSource">
            <summary>
            Gets a reference to the object that raised the event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DataChartMouseButtonEventArgs.Item">
            <summary>
            Gets the ItemsSource item associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DataChartMouseButtonEventArgs.Series">
            <summary>
            Gets the series associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DataChartMouseButtonEventArgs.Chart">
            <summary>
            Gets the Chart associated with the current event.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DetrendedPriceOscillatorIndicator">
            <summary>
            Represents a XamDataChart Detrended Price Oscillator indicator series.
            </summary>
            <remarks>
            Default required members: Close
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.DetrendedPriceOscillatorIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DetrendedPriceOscillatorIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DetrendedPriceOscillatorIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current DetrendedPriceOscillatorIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for DPO periods is 20.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DetrendedPriceOscillatorIndicator.PeriodProperty">
            <summary>
            Identifies the Period dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DetrendedPriceOscillatorIndicator.PeriodOverride">
            <summary>
            Specifies the period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.DetrendedPriceOscillatorIndicator.SetPeriodOverride(System.Int32)">
            <summary>
            Sets the Period property.
            </summary>
            <param name="period">The value for the Period property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.DomainChartSeriesPointerEventArgs">
            <summary>
            Represents event arguments for chart's SeriesAdded and SeriesRemoved events
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChartSeriesPointerEventArgs.Series">
            <summary> Gets the series hit by the pointer.</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DomainChartSeriesPointerEventArgs.Item">
            <summary> Gets the item hit by the pointer.</summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.EaseOfMovementIndicator">
            <summary>
            Represents a XamDataChart Ease of Movement indicator series.
            </summary>
            <remarks>
            The ease of movement indicator by Richard W. Arms, Jr relates the price change of an asset to
            its volume. Normally smoothed with a moving average.
            <para>
            Default required members: Low, High, Volume
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.EaseOfMovementIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.EaseOfMovementIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.FastStochasticOscillatorIndicator">
            <summary>
            Represents a XamDataChart Fast Stochastic Oscillator indicator series.
            </summary>
            <remarks>
            Default required members: High, Low, Close
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.FastStochasticOscillatorIndicator.#ctor">
            <summary>
            Creates an instance of the FastStochasticOscillatorIndicator
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FastStochasticOscillatorIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FastStochasticOscillatorIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FastStochasticOscillatorIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current FastStochasticOscillatorIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for FastStochasticOscillatorIndicator periods is 14.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FastStochasticOscillatorIndicator.PeriodProperty">
            <summary>
            Identifies the Period dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FastStochasticOscillatorIndicator.PeriodOverride">
            <summary>
            Specifies the period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FastStochasticOscillatorIndicator.SetPeriodOverride(System.Int32)">
            <summary>
            Sets the Period property.
            </summary>
            <param name="period">The value for the Period property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.FinalValueLayer">
            <summary>
            Represents an annotation layer that displays crosshair lines that cross through the closest value of the target series under the cursor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinalValueLayer.#ctor">
            <summary>
            Constructs a FinalValueLayer
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinalValueLayer.CreateView">
            <summary>
            Overridden to provide the view for this series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinalValueLayer.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Overridden to process the created view for this series at creation time.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinalValueLayer.FinalValueView">
            <summary>
            Gets or sets the view of series
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinalValueLayer.TargetSeries">
            <summary>
            Gets or sets the series to target this annotation to. If null, this annotation targets all series simultaneously.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinalValueLayer.TargetSeriesProperty">
            <summary>
            Identifies the TargetSeries Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinalValueLayer.FinalValueSelectionMode">
            <summary>
            Gets or sets how to select the final value to annotate.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinalValueLayer.FinalValueSelectionModeProperty">
            <summary>
            Identifies the IsFinalVisibleValueAnnotated Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinalValueLayer.AxisAnnotationTextColor">
            <summary>
            Gets or sets the color to use for the axis annotation text. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinalValueLayer.AxisAnnotationTextColorProperty">
            <summary>
            Identifies the AxisAnnotationTextColor Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinalValueLayer.AxisAnnotationBackground">
            <summary>
            Gets or sets the color to use for the axis annotation backing. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinalValueLayer.AxisAnnotationBackgroundProperty">
            <summary>
            Identifies the AxisAnnotationBackground Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinalValueLayer.AxisAnnotationInterpolatedValuePrecision">
            <summary>
            Gets or sets the precision to use displaying values for interpolated crosshair positions.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinalValueLayer.AxisAnnotationInterpolatedValuePrecisionProperty">
            <summary>
            Identifies the AxisAnnotationInterpolatedValuePrecision Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinalValueLayer.AxisAnnotationOutline">
            <summary>
            Gets or sets the color to use for the axis annotation outline. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinalValueLayer.AxisAnnotationOutlineProperty">
            <summary>
            Identifies the AxisAnnotationOutline Dependency Property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinalValueLayer.AxisAnnotationPaddingLeftProperty">
            <summary>
            Identifies the AxisAnnotationPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinalValueLayer.AxisAnnotationPaddingLeft">
            <summary>
            Gets or sets the left padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinalValueLayer.AxisAnnotationPaddingTopProperty">
            <summary>
            Identifies the AxisAnnotationPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinalValueLayer.AxisAnnotationPaddingTop">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinalValueLayer.AxisAnnotationPaddingRightProperty">
            <summary>
            Identifies the AxisAnnotationPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinalValueLayer.AxisAnnotationPaddingRight">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinalValueLayer.AxisAnnotationPaddingBottomProperty">
            <summary>
            Identifies the AxisAnnotationPadding dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinalValueLayer.AxisAnnotationPaddingBottom">
            <summary>
            Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.FinalValueLayer.AxisAnnotationFormatLabel">
            <summary>
            Event raised for the purpose of determining the text of each x axis annotation label.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinalValueLayer.AxisAnnotationStrokeThickness">
            <summary>
            Gets or sets the stroke thickness for the axis annotation backing. Leave unset for an automatic value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinalValueLayer.AxisAnnotationStrokeThicknessProperty">
            <summary>
            Identifies the AxisAnnotationStrokeThickness Dependency Property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinalValueLayer.OnDependentSeriesRender(Infragistics.Controls.Charts.Series,System.Boolean)">
            <summary>
            Overridden to react to when a series on which the annotation layer is possibly dependent is rendering.
            </summary>
            <param name="series">The series being rendered.</param>
            <param name="animate">Whether animation was requested when the series was rendered.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinalValueLayer.PrepareFrame(Infragistics.Controls.Charts.Frame,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the series should prepare the next animation frame.
            </summary>
            <param name="frame">The animation frame to populate.</param>
            <param name="view">The view for which we are preparing a frame.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinalValueLayer.IsSeriesValid(Infragistics.Controls.Charts.Series)">
            <summary>
            Checks if specified series is valid for rendering 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinalValueLayer.OnBeforeContentRefresh">
            <summary>
            Method invoked before the series refreshes its visual content.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinalValueLayer.RenderFrame(Infragistics.Controls.Charts.Frame,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the series should render the provided animation frame.
            </summary>
            <param name="frame">The frame to be rendered.</param>
            <param name="view">The view to be rendered.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinalValueLayer.RequiresPrepare">
            <summary>
            Informs whether this series requires PrepareFrame to be called before RenderFrame.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinalValueLayer.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            Overridden to react to changes in series property values.
            </summary>
            <param name="sender">The series being altered.</param>
            <param name="propertyName">The property name of the property being altered.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">THe new value of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.FinancialEventArgs">
            <summary>
            Parameterizes a financial calculation event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialEventArgs.#ctor(System.Int32,System.Int32,Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Constructs a FinancialEventArgs object.
            </summary>
            <param name="position">The beginning position that should be calculated from.</param>
            <param name="count">The number of positions that should be calculated from the start.</param>
            <param name="dataSource">The data to use for the calculation.</param>
            <param name="supportingCalculations">The supporting calculations to use in the calculation.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialEventArgs.Position">
            <summary>
            The beginning position that should be calculated from.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialEventArgs.Count">
            <summary>
            The number of positions that should be calculated from the start.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialEventArgs.DataSource">
            <summary>
            The data to use for the calculation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialEventArgs.SupportingCalculations">
            <summary>
            The supporting calculations to use in the calculation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialEventArgs.BasedOn">
            <summary>
            Used to specify which columns changing will invalidate the series and cause it to 
            be recalculated.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.FinancialIndicator">
            <summary>
            Represents the base functionality for a XamDataChart financial indicator series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicator.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicator.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicator.#ctor">
            <summary>
            Initializes a new instance of the FinancialIndicator class. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicator.TestAreaOver(Infragistics.Portable.Point,Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks if the series has area visuals at specified postion 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicator.GetResolvedHitTestMode">
            <summary>
            Gets the resolved hit test mode of this series.
            </summary>
            <returns>The resolved hit test mode of this series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicator.GetSeriesValueBoundingBox(Infragistics.Portable.Point)">
            <summary>
            If possible, will return the best available value bounding box within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value bounding box for</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicator.TestHit(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks for a matching data item at the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if a matching data item was found; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicator.DataUpdatedOverride(Infragistics.Portable.FastItemsSourceEventAction,System.Int32,System.Int32,System.String)">
            <summary>
            When overridden in a derived class, DataChangedOverride is called whenever a change is made to
            the series data.
            </summary>
            <param name="action">The action performed on the data</param>
            <param name="position">The index of the first item involved in the update.</param>
            <param name="count">The number of items in the update.</param>
            <param name="propertyName">The name of the updated property.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialIndicator.DisplayType">
            <summary>
            Gets or sets the display for the current FinancialIndicator object.
            <para/>
            This is a dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialIndicator.DisplayTypeProperty">
            <summary>
            Identifies the DisplayType dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialIndicator.IgnoreFirst">
            <summary>
            Gets or sets the number of values to hide at the beginning of the indicator.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialIndicator.IgnoreFirstProperty">
            <summary>
            Identifies the IgnoreFirst dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialIndicator.TrendLineType">
            <summary>
            Gets or sets the trend type for the current indicator series.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialIndicator.TrendLineTypeProperty">
            <summary>
            Identifies the TrendLineType dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialIndicator.TrendLineBrush">
            <summary>
            Gets or sets the brush to use to draw the trend line.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialIndicator.TrendLineBrushProperty">
            <summary>
            Identifies the TrendLineBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialIndicator.ActualTrendLineBrush">
            <summary>
            Gets the effective TrendLineBrush for this indicator.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialIndicator.ActualTrendLineBrushProperty">
            <summary>
            Identifies the ActualTrendLineBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialIndicator.TrendLineThickness">
            <summary>
            Gets or sets the thickness of the current indicator object's trend line.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialIndicator.TrendLineThicknessProperty">
            <summary>
            Identifies the TrendLineThickness dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialIndicator.TrendLineDashCap">
            <summary>
            Gets or sets the PenLineCap enumeration value that specifies how the current
            indicator object's trend line dash ends are drawn. 
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialIndicator.TrendLineDashCapProperty">
            <summary>
            Identifies the TrendLineDashCap dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialIndicator.TrendLineDashArray">
            <summary>
            Gets or sets a collection of double values that indicate the pattern of dashes and gaps that
            is used to draw the trend line for the current indicator object. 
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialIndicator.TrendLineDashArrayProperty">
            <summary>
            Identifies the TrendLineDashArray dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialIndicator.TrendLinePeriod">
            <summary>
            Gets or sets the trend line period for the current series.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            The typical, and initial, value for trend line period is 7.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialIndicator.TrendLinePeriodProperty">
            <summary>
            Identifies the TrendLinePeriod dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicator.TrendPeriodOverride">
            <summary>
            Should be overridden in derived classes to specify a value 
            to use for the trendlineperiod regardless of what is set on the 
            series.
            </summary>
            <returns>The to use for the period.</returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialIndicator.TrendLineZIndexProperty">
            <summary>
            Identifies the TrendLineZIndex dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialIndicator.TrendLineZIndex">
            <summary>
            Gets or sets the trend line z index for the current series.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The trend line renders over the series and markers by default, lower this value to shift it to the background.
            </remarks>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialIndicator.IndicatorColumn">
            <summary>
            The calculated indicator values
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialIndicator.IndicatorRange">
            <summary>
            The Y range defined by the Indicator values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicator.IndicatorOverride(System.Int32,System.Int32)">
            <summary>
            Overridden in derived classes to calculate the value of the indicator based on the input columns.
            </summary>
            <param name="position">The starting position to calculate from.</param>
            <param name="count">The number of positions to calculate.</param>
            <returns>Whether updates are required.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicator.BasedOn(System.Int32,System.Int32)">
            <summary>
            Overridden in derived classes to provide a list of column names on which the calculation depends.
            </summary>
            <param name="position">The starting position of the calculation.</param>
            <param name="count">The number of positions required to be calculated.</param>
            <returns>The list of columns on which the calculation depends.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicator.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicator.GetSeriesValue(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available main value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, when searching for the best avaialble value any unknown values will be skipped.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicator.GetPreviousOrExactIndex(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Getting the previous index that is near a given world position, if possible, otherwise NaN.
            </summary>
            <param name="world">The world position to use in searching.</param>
            <param name="skipUnknowns">Should unknown values be skipped when searching.</param>
            <returns>The found index, otherwise, -1.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicator.GetNextOrExactIndex(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Getting the next index that is near a given world position, if possible, otherwise NaN.
            </summary>
            <param name="world">The world position to use in searching.</param>
            <param name="skipUnknowns">Should unknown values be skipped when searching.</param>
            <returns>The found index, otherwise, -1.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialIndicator.UsesPresortedValueColumn">
            <summary>
            Determines whether or not this series requires data values to be sorted.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicator.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicator.ScrollIntoView(System.Object)">
            <summary>
            Scrolls the series to display the item for the specified data item.
            </summary>
            <remarks>
            The series is scrolled by the minimum amount required to place the specified data item within
            the central 80% of the visible axis.
            </remarks>
            <param name="item">The data item (item) to scroll to.</param>
            <returns>True if the specified item could be displayed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicator.ValidateSeries(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicator.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicator.GetDefaultTransitionInMode">
            <summary>
            Gets default transition-in mode 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicator.UpdateIndexedProperties">
            <summary>
            Updates properties that are based on the index of the series in the series collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicator.FullIndicatorRefresh">
            <summary>
            Refreshes all the indicator values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicator.ExportVisualDataOverride(System.Object)">
            <summary>
            Exports visual information about the series for use by external tools and functionality.
            </summary>
            <param name="svd">The data container.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.FinancialLegend">
            <summary>
            Represents a legend that displays information about each series, most often used in financial charting.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialLegend.#ctor">
            <summary>
            Creates and returns a new instance of a FinancialLegend.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialLegend.AddChildInOrder(Infragistics.Portable.Components.UI.UIElement,Infragistics.Controls.Charts.ILegendSeries)">
            <summary>
            Adds a child, in order, to the legend.
            </summary>
            <param name="legendItem">The item to add.</param>
            <param name="series">The series with which the item is associated.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialLegend.IsFinancial">
            <summary>
            Gets if the legend is a financial legend.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.FinancialOverlay">
            <summary>
            Represents the base functionality for a XamDataChart financial overlay series.
            </summary>
            <remarks>
            The difference between a FinancialIndicator and a FinancialOverlay is small.
            Overlays are usually drawn against the same axes as the price, but they don't
            have to be. Overlays mostly display multiple values, but not all of them, and so
            so some indicators.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialOverlay.#ctor">
            <summary>
            FinancialOverlay constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialOverlay.DataUpdatedOverride(Infragistics.Portable.FastItemsSourceEventAction,System.Int32,System.Int32,System.String)">
            <summary>
            When overridden in a derived class, DataChangedOverride is called whenever a change is made to
            the series data.
            </summary>
            <param name="action">The action performed on the data</param>
            <param name="position">The index of the first item involved in the update.</param>
            <param name="count">The number of items in the update.</param>
            <param name="propertyName">The name of the updated property.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialOverlay.IgnoreFirst">
            <summary>
            Gets or sets the number of values to hide at the beginning of the indicator.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialOverlay.IgnoreFirstProperty">
            <summary>
            Identifies the IgnoreFirst dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialOverlay.UsesPresortedValueColumn">
            <summary>
            Determines whether or not this series requires data values to be sorted.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialOverlay.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialOverlay.GetResolvedHitTestMode">
            <summary>
            Gets the resolved hit test mode of this series.
            </summary>
            <returns>The resolved hit test mode of this series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialOverlay.TestHit(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks for a matching data item at the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if a matching data item was found; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialOverlay.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes
            call ApplyTemplate.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialOverlay.ScrollIntoView(System.Object)">
            <summary>
            Scrolls the series to display the item for the specified data item.
            </summary>
            <remarks>
            The series is scrolled by the minimum amount required to place the specified data item within
            the central 80% of the visible axis.
            </remarks>
            <param name="item">The data item (item) to scroll to.</param>
            <returns>True if the specified item could be displayed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialOverlay.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialOverlay.OverlayValid">
            <summary>
            Boolean property indicating whether or not this overlay is valid.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialOverlay.ValidateOverlay">
            <summary>
            Validates this overlay.
            </summary>
            <returns>True if the overlay is valid, otherwise False.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.FinancialPriceSeries">
            <summary>
            Represents a XamDataChart financial price series that renders as Candlestick or OHLC representations.
            </summary>
            <remarks>
            Default required members: Open, Low, High, Close
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeries.#ctor">
            <summary>
            Initializes a new instance of the FinancialIndicator class. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialPriceSeries.TrendLineType">
            <summary>
            Gets or sets the trend type for the current financial series.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialPriceSeries.TrendLineTypeProperty">
            <summary>
            Identifies the TrendLineType dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialPriceSeries.TrendLineBrush">
            <summary>
            Gets or sets the brush to use to draw the trend line.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialPriceSeries.TrendLineBrushProperty">
            <summary>
            Identifies the TrendLineBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialPriceSeries.ActualTrendLineBrush">
            <summary>
            Gets the effective TrendLineBrush for this FinancialPriceSeries.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialPriceSeries.ActualTrendLineBrushProperty">
            <summary>
            Identifies the ActualTrendLineBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialPriceSeries.TrendLineThickness">
            <summary>
            Gets or sets the thickness of the current FinancialPriceSeries object's trend line.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialPriceSeries.TrendLineThicknessProperty">
            <summary>
            Identifies the TrendLineThickness dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialPriceSeries.TrendLineDashCap">
            <summary>
            Gets or sets the PenLineCap enumeration value that specifies how the current
            FinancialPriceSeries object's trend line dash ends are drawn. 
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialPriceSeries.TrendLineDashCapProperty">
            <summary>
            Identifies the TrendLineDashCap dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialPriceSeries.TrendLineDashArray">
            <summary>
            Gets or sets a collection of double values that indicate the pattern of dashes and gaps that
            is used to draw the trend line for the current FinancialPriceSeries object. 
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialPriceSeries.TrendLineDashArrayProperty">
            <summary>
            Identifies the TrendLineDashArray dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialPriceSeries.TrendLinePeriod">
            <summary>
            Gets or sets the trend line period for the current series.
            <para>
            This is a dependency property.
            </para>        
            </summary>
            <remarks>
            The typical, and initial, value for trend line period is 7.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialPriceSeries.TrendLinePeriodProperty">
            <summary>
            Identifies the TrendLinePeriod dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialPriceSeries.TrendLineZIndexProperty">
            <summary>
            Identifies the TrendLineZIndex dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialPriceSeries.TrendLineZIndex">
            <summary>
            Gets or sets the trend line Z index for the current series.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The trend line renders over the series and markers by default, lower this value to shift it to the background.
            </remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeries.DataUpdatedOverride(Infragistics.Portable.FastItemsSourceEventAction,System.Int32,System.Int32,System.String)">
            <summary>
            When overridden in a derived class, DataChangedOverride is called whenever a change is made to
            the series data.
            </summary>
            <param name="action">The action performed on the data</param>
            <param name="position">The index of the first item involved in the update.</param>
            <param name="count">The number of items in the update.</param>
            <param name="propertyName">The name of the updated property.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialPriceSeries.DisplayType">
            <summary>
            Gets or sets the display type for the current FinancialPriceSeries object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialPriceSeries.DisplayTypeProperty">
            <summary>
            Identifies the DisplayType dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeries.GetResolvedHitTestMode">
            <summary>
            Gets the resolved hit test mode of this series.
            </summary>
            <returns>The resolved hit test mode of this series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeries.GetSeriesValueBoundingBox(Infragistics.Portable.Point)">
            <summary>
            If possible, will return the best available value bounding box within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value bounding box for</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeries.GetSeriesValueFineGrainedBoundingBoxes(Infragistics.Portable.Point)">
            <summary>
            If possible, will return the best available value fine grained bounding boxes within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get value fine grained bounding boxes for</param>
            <returns>The fine grained bounding boxes in question, or empty if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeries.TestHit(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks for a matching data item at the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if a matching data item was found; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeries.TestShapesOver(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Test if the given point is over a shape in this series.
            </summary>
            <param name="position">The position to test.</param>
            <param name="isFinger">True if this is a touch interaction.</param>
            <returns>True if this point is over a shape in the series, otherwise False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeries.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeries.GetVisibleRange">
            <summary>
            Gets the range of values contained within the current horizontal window.
            </summary>
            <returns>The minimum and maximum data values within the current horizontal window.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeries.GetReferenceValue">
            <summary>
            Gets a numeric value representing the initial value of this series.
            </summary>
            <returns>A numeric value representing the initial value of this series.</returns>
            <remarks>The reference value is used by the PercentChangeYAxis, where all values in the series are scaled relative to the initial value.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeries.ScrollIntoView(System.Object)">
            <summary>
            Scrolls the series to display the item for the specified data item.
            </summary>
            <remarks>
            The categorySeries is scrolled by the minimum amount required to place the specified data item within
            the central 80% of the visible axis.
            </remarks>
            <param name="item">The data item (item) to scroll to.</param>
            <returns>True if the specified item could be displayed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeries.ValidateSeries(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeries.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialPriceSeries.HasIndividualElements">
            <summary>
            Checks if the series has individual elements
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeries.GetItemSpan">
            <summary>
            For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeries.Item(System.Object,Infragistics.Portable.Point)">
            <summary>
            Returns the item that is found at the given point.
            </summary>
            <param name="sender">The origin of the mouse interaction.</param>
            <param name="point">The point to search for the item near.</param>
            <returns>The found item.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeries.UpdateIndexedProperties">
            <summary>
            Updates properties that are based on the index of the series in the series collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeries.ExportVisualDataOverride(System.Object)">
            <summary>
            Exports visual information about the series for use by external tools and functionality.
            </summary>
            <param name="svd">The data container.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialPriceSeries.NegativeOutline">
            <summary>
            Brush to use for outlining negative elements in the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialPriceSeries.NegativeOutlineProperty">
            <summary>
            Identifies the NegativeOutline dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeries.SetNegativeColors(Infragistics.Portable.Graphics.Media.Brush,Infragistics.Portable.Graphics.Media.Brush)">
            <summary>
            Sets the negative brush and outline properties for this series to the given arguments.
            </summary>
            <param name="negativeBrush">The negative fill brush.</param>
            <param name="negativeOutline">The negative outline brush.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.FinancialSeries">
            <summary>
            Represents the base class for all financial indicator and overlay series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.IsFinancial">
            <summary>
            Gets whether the current series is a financial type series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetAxes">
            <summary>
            Gets this series' axes as an array.
            </summary>
            <returns>An array containing all axes used by this series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetItemValue(System.Object,System.String)">
            <summary>
            Gets a value based on one of the valid member paths for this series type.
            </summary>
            <param name="item">An item from the data source bound to the series.</param>
            <param name="memberPathName">The property name of a valid member path for the series</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetHighIndexInBucket">
            <summary>
            Gets the index of the High values in the multidimensional bucket array.
            </summary>
            <returns>The index of the High values in the multidimensional bucket array.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetHighStrokeSegments(Infragistics.Portable.Point)">
            <summary>
            Returns postions of high stroke segements for a specified position over this series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetLowStrokeSegments(Infragistics.Portable.Point)">
            <summary>
            Returns postions of low stroke segements for a specified position over this series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.#ctor">
            <summary>
            Initialises a default FinancialSeries object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.NegativeBrush">
            <summary>
            Gets or sets the brush to use for negative portions of the series.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.ResolveNegativeBrush">
            <summary>
            If this series has a negative color, returns that brush.
            </summary>
            <returns>The negative color to use.</returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialSeries.NegativeBrushProperty">
            <summary>
            Identifies the Fill dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.ClearAxes">
            <summary>
            Call to null out the axes of a series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.XAxis">
            <summary>
            Gets or sets the effective x-axis for the current FinancialSeries object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialSeries.XAxisProperty">
            <summary>
            Identifies the ActualXAxis dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.YAxis">
            <summary>
            Gets or sets the effective y-axis for the current FinancialSeries object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialSeries.YAxisProperty">
            <summary>
            Identifies the ActualYAxis dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.OpenMemberPath">
            <summary>
            Gets or sets the open mapping property for the current series object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialSeries.OpenMemberPathProperty">
            <summary>
            Identifies the OpenMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.OpenColumn">
            <summary>
            Gets the Open data values gathered from the data source.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.HighMemberPath">
            <summary>
            Gets or sets the high mapping property for the current series object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialSeries.HighMemberPathProperty">
            <summary>
            Identifies the HighMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.HighColumn">
            <summary>
            Gets the high data values gathered from the data source.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.LowMemberPath">
            <summary>
            Gets or sets the low mapping property for the current series object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialSeries.LowMemberPathProperty">
            <summary>
            Identifies the LowMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.LowColumn">
            <summary>
            Gets the low data values gathered from the data source.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.CloseMemberPath">
            <summary>
            Gets or sets the close mapping property for the current series object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialSeries.CloseMemberPathProperty">
            <summary>
            Identifies the CloseMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.CloseColumn">
            <summary>
            Gets the Close data values gathered from the data source.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.VolumeMemberPath">
            <summary>
            Gets or sets the volume mapping property for the current series object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialSeries.VolumeMemberPathProperty">
            <summary>
            Identifies the VolumeMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.VolumeColumn">
            <summary>
            Gets the Volume data values gathered from the data source.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.IsCustomCategoryStyleAllowed">
            <summary>
            Gets or sets whether this category series should allow custom style overrides of its individual visuals.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialSeries.IsCustomCategoryStyleAllowedPropertyName">
            <summary>
            Property name for the IsCustomCategoryStyleAllowed property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialSeries.IsCustomCategoryStyleAllowedProperty">
            <summary>
            Identifies the IsCustomCategoryStyleAllowed dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.ActualIsCustomCategoryStyleAllowed">
            <summary>
            Gets or sets restriction of ActualIsCustomCategoryStyle
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.FinancialSeries.AssigningCategoryStyle">
            <summary>
            Event raised when Assigning Category Style
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.ShouldOverrideCategoryStyle">
            <summary>
            Determines if the category style should be overridden.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.RaiseAssigningCategoryStyles(Infragistics.Controls.Charts.AssigningCategoryStyleEventArgs)">
            <summary>
            Raises the AssigningCategoryStyle event.
            </summary>
            <param name="args">The EventArgs in context.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialSeries.RenderManager">
            <summary>
            The current render state of the series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.PerformCategoryStyleOverride(System.Collections.Generic.List{System.Double[]},System.Int32,System.Int32,Infragistics.Controls.Charts.CategoryAxisBase,Infragistics.Controls.Charts.ScalerParams,System.Boolean)">
            <summary>
            Raises the AssigningCategoryStyle event, and applies any changes made to the EventArgs.
            </summary>
            <param name="buckets">The series data values.</param>
            <param name="currentIndex">The index of the item in context.</param>
            <param name="valueCount">The number of items in the data source.</param>
            <param name="categoryAxis">The category axis in context.</param>
            <param name="axisParams">Scaler parameters for the category axis.</param>
            <param name="isThumbnail">True if this is for a thumbnail view of the series, otherwise False.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetExactUnsortedItemIndex(Infragistics.Portable.Point)">
            <summary>
            Gets the exact unsorted index of the item based on world coordinates from the current sorting axis.
            </summary>
            <param name="world">The world coordinates to use.</param>
            <returns>The exact index of the item for the specified coordinates as a double, indicating which value is closer to the world point.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetPreviousOrExactIndex(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Getting the previous index that is near a given world position, if possible, otherwise NaN.
            </summary>
            <param name="world">The world position to use in searching.</param>
            <param name="skipUnknowns">Should unknown values be skipped when searching.</param>
            <returns>The found index, otherwise, -1.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetNextOrExactIndex(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Getting the next index that is near a given world position, if possible, otherwise NaN.
            </summary>
            <param name="world">The world position to use in searching.</param>
            <param name="skipUnknowns">Should unknown values be skipped when searching.</param>
            <returns>The found index, otherwise, -1.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetDistanceToIndex(Infragistics.Portable.Point,System.Int32,Infragistics.Controls.Charts.Axis,Infragistics.Controls.Charts.ScalerParams,System.Double)">
            <summary>
            Returns a distance value (not necessarily pixels), that indicates how 'close' a world position is to an indexed value in the series.
            Not every series can necessarily answer this question, it can't or the world position or index is invalid, NaN will be returned.
            </summary>
            <param name="world">The world position for which to get a distance.</param>
            <param name="index">The index to get a distance to.</param>
            <param name="axis">The axis in context.</param>
            <param name="p">The scaler parameters in context.</param>
            <param name="offset">The distance between the edge of the axis and the first or last data item.</param>
            <returns>A distance value to the world position.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetOffsetValue">
            <summary>
            Returns the offset value for this series if grouped on a category axis.
            </summary>
            <returns>The offset value</returns>
            
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetCategoryWidth">
            <summary>
            Returns the width of the category grouping this series is in.
            </summary>
            <returns>The width of the category group.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetSeriesValuePosition(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetSeriesValue(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available main value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, when searching for the best avaialble value any unknown values will be skipped.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetSeriesHighValue(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available high value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetSeriesLowValue(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available low value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetSeriesCloseValue(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available close value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetSeriesOpenValue(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available open value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetSeriesVolumeValue(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available volume value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetSeriesHighValuePosition(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best high value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetSeriesLowValuePosition(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best low value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetSeriesOpenValuePosition(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best open value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetSeriesCloseValuePosition(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best close value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetSeriesVolumeValuePosition(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best volume value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.InvalidateAxes">
            <summary>
            Invalidates the associated axes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.WindowRectChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Overridden in derived classes when they want to respond to the chart's window being updated.
            </summary>
            <param name="oldWindowRect">The old window rectangle.</param>
            <param name="newWindowRect">The new window rectangle.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.ViewportRectChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Overridden in derived classes when they want to respond to the viewport being updated.
            </summary>
            <param name="oldViewportRect">The old viewport rectangle.</param>
            <param name="newViewportRect">The new viewport rectangle.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialSeries.columnToMapping">
            <summary>
            Maps from fast item columns to member paths.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialSeries.mappingToColumnName">
            <summary>
            Maps from member paths to column names.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.CanUseAsYAxis(System.Object)">
            <summary>
            Determine if object can be used as YAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.CanUseAsXAxis(System.Object)">
            <summary>
            Determine if object can be used as XAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetCategoryItemsHelper(System.Int32,System.Int32,Infragistics.Controls.Charts.Axis)">
            <summary>
            Gets an array of category items for specified range of indices. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetBucketSize(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Returns the number of data items per bucket.
            </summary>
            <param name="view">The SeriesView in context.</param>
            <returns>The number of data items per bucket.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetFirstBucket(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Returns the index of the first visible bucket.
            </summary>
            <param name="view">The SeriesView in context.</param>
            <returns>The index of the first visible bucket.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetCategoryItems(System.Int32,System.Int32)">
            <summary>
            Gets an array of category items for specified range of indices. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.HasIndividualElements">
            <summary>
            Checks if the series has individual elements
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.IsHighlightingSupported">
            <summary>
            Checks if the series supports highlithing of its elements
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetHighlightingInfo(System.Object,Infragistics.Portable.Point)">
            <summary>
            Gets the highlighting info of the series
            </summary>
            <param name="item">The data item</param>
            <param name="world">The world coordinates to use</param> 
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetSpecificHighlightingInfo(System.Object,Infragistics.Portable.Point,Infragistics.Controls.Charts.HighlightingInfo)">
            <summary>
            Gets the highlighting info of the series
            </summary>
            <param name="item">The data item</param>
            <param name="world">The world coordinates to use</param>
            <param name="prevValue">Information related to the previously highlighted item</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetFullSeriesInfo(System.Object,Infragistics.Portable.Point,Infragistics.Controls.Charts.HighlightingInfo)">
            <summary>
            Gets the highlighting info of the series
            </summary>
            <param name="item">The data item</param>
            <param name="world">The world coordinates to use</param>
            <param name="prevValue">Information related to the previously highlighted item</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetIsCustomCategoryStyleAllowed">
            <summary>
            Determines if a custom category style is allowed.
            </summary>
            <returns>True if a custom category style is allowed; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetExactItemIndex(Infragistics.Portable.Point)">
            <summary>
            Gets the precise item index, if possible, based on the closeness to the previous or next whole integer. If the series cannot provide this information, GetExactItemIndex will return the same integer value as GetItemIndex.
            </summary>
            <param name="world">The world position for which to return the index.</param>
            <returns>The double index indicating which whole number index the point is closest to.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetItemIndex(Infragistics.Portable.Point)">
            <summary>
            Gets the index of the item that resides at the provided world coordinates.
            </summary>
            <param name="world">The world coordinates of the requested item.</param>
            <returns>The requested item's index.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.IsPrimaryAxisSortingAxis">
            <summary>
            Returns true if the primary axis is a sorting axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetCategoryAxisIfPresent">
            <summary>
            Gets the category axis in context, if one is present.
            </summary>
            <returns>The category axis in context, if one is present.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetItemIndexSorted(Infragistics.Portable.Point)">
            <summary>
            Gets the item index based on world coordinates.
            </summary>
            <param name="world">The world coordinates to get the item for.</param>
            <returns>The index of the item.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetItem(Infragistics.Portable.Point)">
            <summary>
            Gets the item that is the best match for the specified world coordinates.
            </summary>
            <param name="world">The world coordinates to use.</param>
            <returns>The item that is the best match.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetOffset(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Gets the horizontal offset to apply to visual elements of this series.
            </summary>
            <param name="windowRect">The window rectangle.</param>
            <param name="viewportRect">The viewport rectangle.</param>
            <param name="effectiveViewportRect">The effective viewport rectangle.</param>
            <returns>The horizontal offset to apply to visual elements of this series.  This is the distance from the beginning or end of the axis line to the center of the first data item.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.TransitionInMode">
            <summary>
            Gets or sets the method by which to animate the data into the chart when the chart data source is swapped.
            Note: Transitions are not currently supported for stacked series.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialSeries.TransitionInModeProperty">
            <summary>
            Identifies the TransitionInMode dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.IsTransitionInEnabled">
            <summary>
            Gets or sets whether the series should transition into the plot area when a new data source is assigned.
            Note: Transitions are not currently supported for stacked series.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinancialSeries.IsTransitionInEnabledProperty">
            <summary>
            Identifies the IsTransitionInEnabled dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.ShouldTransitionIn">
            <summary>
            Checks if this series should perform transion-in animation
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetDefaultTransitionInMode">
            <summary>
            Gets default transition-in mode 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetDefaultTransitionInSpeedType">
            <summary>
            Returns the default TransitionInSpeedType for this series.
            </summary>
            <returns>The default TransitionInSpeedType for this series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.ValidateSeries(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetViewInfo(Infragistics.Portable.Rect@,Infragistics.Portable.Rect@)">
            <summary>
            Gets the view info for the series.
            </summary>
            <param name="viewportRect">The viewport of the series.</param>
            <param name="windowRect">The window of the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.ClearSpeedModifiers">
            <summary>
            Clears the speed modifiers for this series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.RenderSeriesOverride(System.Boolean)">
            <summary>
            Renders the series.
            </summary>
            <param name="animate">True if the change should be animated.</param>
        </member>
        <member name="E:Infragistics.Controls.Charts.FinancialSeries.Typical">
            <summary>
            Handle this event in order to perform a custom typical price calculation.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.FinancialSeries.TypicalBasedOn">
            <summary>
            Handle this event in order to specify which columns the Typical price calculation is based on.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.ValidateBasedOn(System.Collections.Generic.IList{System.String})">
            <summary>
            Validates the the required columns have been mapped for the required calculation.
            </summary>
            <param name="basedOn">The columns the calculation is based on.</param>
            <returns>Whether the required columns are mapped.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.HasTypical">
            <summary>
            Returns true if the Typical event is handled.
            </summary>
            <returns>True, if the Typical event is handled.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.CallTypical(Infragistics.Controls.Charts.FinancialEventArgs)">
            <summary>
            Raises the Typical event.
            </summary>
            <param name="args">The EventArgs in context.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.TypicalColumn">
            <summary>
            Typical column enumerable. The precise meaning of "typical" should be configurable
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.TR">
            <summary>
            True range enumerable
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.TL">
            <summary>
            True low enumerable
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetTypicalBasedOn">
            <summary>
            Gets the columns the current Typical Price calculation are based on.
            </summary>
            <returns>The list of column names the calculation is based on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.ProvideDataSource(System.Int32,System.Int32)">
            <summary>
            Provides the data requires by the data contract between the financial series
            and the calculation strategies.
            </summary>
            <returns>The data which the calculation strategies need.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.ProvideSupportingCalculations(Infragistics.Portable.Charts.FinancialCalculationDataSource)">
            <summary>
            Provides the supporting calculation strategies so that the indicator 
            calculation strategy can perform its calculations.
            </summary>
            <returns>The supporting calculation strategies.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.RenderThumbnail(Infragistics.Portable.Rect,Infragistics.Controls.Charts.RenderSurface)">
            <summary>
            Renders the thumbnail for the OPD.
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="surface">The render target.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.RenderAlternateView(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.RenderSurface,System.String,System.Double)">
            <summary>
            Renders an alternate view for of this series
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="surface">The render target.</param>
            <param name="viewIdentifier">String key to use for this view target</param>
            <param name="effectiveScalingRatio">The effective scaling ratio.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetMatchingAxis(Infragistics.Controls.Charts.Axis)">
            <summary>
            Gets the axis which should be paired with the given axis.
            </summary>
            <param name="axis">The axis to find a match for.</param>
            <returns>The axis which should be paired with the given axis.  For a typical series, passing the x-axis will return the y-axis, and vice versa.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialSeries.IsNegativeColorSupported">
            <summary>
            Overridden by derived series classes to indicate when negative colors are supported or not.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.SetNegativeColors(Infragistics.Portable.Graphics.Media.Brush,Infragistics.Portable.Graphics.Media.Brush)">
            <summary>
            Sets the negative brush and outline properties for this series to the given arguments.
            </summary>
            <param name="negativeBrush">The negative fill brush.</param>
            <param name="negativeOutline">The negative outline brush.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeries.GetItemLabel(System.Object)">
            <summary>
            Gets an item label, if available, for the given data item.
            </summary>
            <param name="dataItem">The data item in context.</param>
            <returns>An item label for the given data item.</returns>
            <remarks>This item label is used by some tooltip templates.</remarks>
        </member>
        <member name="T:Infragistics.Controls.Charts.ForceIndexIndicator">
            <summary>
            Represents a XamDataChart Force Index indicator series.
            </summary>
            <remarks>
            Default required members: Close, Volume
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.ForceIndexIndicator.#ctor">
            <summary>
            Creates an instance of the ForceIndexIndicator
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ForceIndexIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ForceIndexIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ForceIndexIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current AverageTrueRangeSeries object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for ForceIndiex periods is 0.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ForceIndexIndicator.PeriodProperty">
            <summary>
            Identifies the Period dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ForceIndexIndicator.PeriodOverride">
            <summary>
            Specifies the period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ForceIndexIndicator.SetPeriodOverride(System.Int32)">
            <summary>
            Sets the Period property.
            </summary>
            <param name="period">The value for the Period property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.FragmentBase">
            <summary>
            Represents one part of a stacked series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FragmentBase.#ctor">
            <summary>
            FragmentBase constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FragmentBase.IsHighlightingSupported">
            <summary>
            Checks if the series supports highlithing of its elements
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FragmentBase.IsDropShadowSupported">
            <summary>
            Gets if the current series supports drop shadows.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FragmentBase.IsFragment">
            <summary>
            Gets whether the current series is a stack fragment.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FragmentBase.GetFragmentIndex">
            <summary>
            Gets the index of this fragment in its parent series.
            </summary>
            <returns>The index of this fragment in its parent series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FragmentBase.GetLogicalFragmentIndex">
            <summary>
            Gets the index of this fragment's series in its parent series.
            </summary>
            <returns>The index of this fragment's series in its parent series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FragmentBase.ResolveLegendIndex">
            <summary>
            Resolves the index to use for ordering the legend.
            </summary>
            <returns>The ordering index to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FragmentBase.ResolveParentSeries">
            <summary>
            Returns the parent series.
            </summary>
            <returns>The parent series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FragmentBase.GetCategoryAxis">
            <summary>
            Returns the Category Axis assigned to this series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FragmentBase.GetValueAxis">
            <summary>
            Returns the Numeric Axis assigned to this series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FragmentBase.ValidateSeries(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FragmentBase.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FragmentBase.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FragmentBase.RenderThumbnail(Infragistics.Portable.Rect,Infragistics.Controls.Charts.RenderSurface)">
            <summary>
            Renders the thumbnail for the OPD pane.
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="surface">The render target.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.FullStochasticOscillatorIndicator">
            <summary>
            Represents a XamDataChart Full Stochastic Oscillator indicator series.
            </summary>
            <remarks>
            Default required members: High, Low, Close
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.FullStochasticOscillatorIndicator.#ctor">
            <summary>
            Creates an instance of the FullStochasticOscillatorIndicator
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FullStochasticOscillatorIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FullStochasticOscillatorIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FullStochasticOscillatorIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current FullStochasticOscillatorIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for FullStochasticOscillatorIndicator periods is 14.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FullStochasticOscillatorIndicator.PeriodProperty">
            <summary>
            Identifies the Period dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FullStochasticOscillatorIndicator.PeriodOverride">
            <summary>
            Specifies the period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FullStochasticOscillatorIndicator.SetPeriodOverride(System.Int32)">
            <summary>
            Sets the Period property.
            </summary>
            <param name="period">The value for the Period property.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.FullStochasticOscillatorIndicator.SmoothingPeriod">
            <summary>
            Gets or sets the moving average SmoothingPeriod for the current FullStochasticOscillatorIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for FullStochasticOscillatorIndicator SmoothingPeriod is 3.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FullStochasticOscillatorIndicator.SmoothingPeriodProperty">
            <summary>
            Identifies the SmoothingPeriod dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FullStochasticOscillatorIndicator.ShortPeriodOverride">
            <summary>
            Specifies the short period to use for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.FullStochasticOscillatorIndicator.TriggerPeriod">
            <summary>
            Gets or sets the moving average TriggerPeriod for the current FullStochasticOscillatorIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for FullStochasticOscillatorIndicator TriggerPeriod is 3.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FullStochasticOscillatorIndicator.TriggerPeriodProperty">
            <summary>
            Identifies the TriggerPeriod dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FullStochasticOscillatorIndicator.LongPeriodOverride">
            <summary>
            Specifies the long period to use for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FullStochasticOscillatorIndicator.TrendPeriodOverride">
            <summary>
            Specifies the trend period to use for the trend line, overriding 
            the TrendLinePeriod for the series.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.FunnelSliceClickedEventArgs">
            <summary>
            Information about the clicked slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FunnelSliceClickedEventArgs.Index">
            <summary>
            The index of the clicked slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FunnelSliceClickedEventArgs.Item">
            <summary>
            The data item for the clicked slice.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.FunnelSliceDataContext">
            <summary>
            Represents the funnel slice data currently in context.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FunnelSliceDataContext.ItemOutline">
            <summary>
            Gets or sets the Outline to use to color the item.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.HierarchicalRingSeries">
            <summary>
            Represents a <see cref="T:Infragistics.Controls.Charts.XamDoughnutChart"/> hierarchical series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HierarchicalRingSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.HierarchicalRingSeries"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.HierarchicalRingSeries.Rings">
            <summary>
            Gets the rings which the series contains.
            </summary>
            <value>The rings collection.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.HierarchicalRingSeries.ChildrenMemberPathProperty">
            <summary>
            Identifies the ChildrenMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.HierarchicalRingSeries.ChildrenMemberPath">
            <summary>
            Gets or sets the property name that contains the children items collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HierarchicalRingSeries.AnalyzeRings">
            <summary>
            Called when the series should analyze data and return the rings which should be displayed.
            </summary>
            <returns>
            	<see cref="T:Infragistics.Controls.Charts.RingCollection"/> with object which should be displayed.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HierarchicalRingSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.HierarchicalRingSeries.PrepareData">
            <summary>
            Called when <see cref="P:Infragistics.Controls.Charts.RingSeriesBase.ItemsSource"/> is changed and data should be updated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HierarchicalRingSeries.PrepareBrushes">
            <summary>
            Called when <see cref="P:Infragistics.Controls.Charts.RingSeriesBase.Brushes"/> is changed and data should be updated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HierarchicalRingSeries.RenderSeries">
            <summary>
            Renders the series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HierarchicalRingSeries.RenderLegendItems">
            <summary>
            Renders the legend items.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HierarchicalRingSeries.TraverseTree(System.Collections.IEnumerable)">
            <summary>
            Breadth first: visit nodes according to level (all nodes at level 0, then all nodes at level 1, then all nodes at level 2, etc). (go wide before you go deep...)
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.HighlightingInfo">
            <summary>
            Contains contextual information about a highlighting.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HighlightingInfo.#ctor">
            <summary>
            HighlightingInfo constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.HighlightingInfo.StartIndex">
            <summary>
            The index of the first highlighted item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.HighlightingInfo.EndIndex">
            <summary>
            The index of the last highlighted item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.HighlightingInfo.State">
            <summary>
            The state of the highlighting.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.HighlightingInfo.Progress">
            <summary>
            A number between 0 and 1 representing the progress of the highlighting.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.HighlightingInfo.IsMarker">
            <summary>
            True if this HighlightingInfo represents a marker highlighting.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.HighlightingInfo.Series">
            <summary>
            The series in context.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.HoleDimensionsChangedEventArgs">
            <summary>
            EventArgs class holding information about the dimensions of a hole in a doughnut chart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.HoleDimensionsChangedEventArgs.Center">
            <summary>
            The center point of the hole.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.HoleDimensionsChangedEventArgs.Radius">
            <summary>
            The radius of the hole.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries">
            <summary>
            Base class for anchored category series with a category x-axis and a numeric y-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.ClearAxes">
            <summary>
            Call to null out the axes of a series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.XAxis">
            <summary>
            Gets or sets the effective x-axis for this series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.XAxisProperty">
            <summary>
            Identifies the XAxis dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.YAxis">
            <summary>
            Gets or sets the effective y-axis for this series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.YAxisProperty">
            <summary>
            Identifies the YAxis dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.GetResolvedHitTestMode">
            <summary>
            Gets the resolved hit test mode of this series.
            </summary>
            <returns>The resolved hit test mode of this series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.GetCategoryAxis">
            <summary>
            Returns the Category Axis assigned to this series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.GetValueAxis">
            <summary>
            Returns the Numeric Axis assigned to this series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.GetSeriesValueMarkerBoundingBox(Infragistics.Portable.Point)">
            <summary>
            If possible, will return the best available value marker bounding box within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinates for which to get a value marker bounding box for</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.TestAreaOver(Infragistics.Portable.Point,Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks if the series has area visuals at specified postion 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.GetHighStrokeSegments(Infragistics.Portable.Point)">
            <summary>
            Returns postions of high stroke segements for a specified position over this series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.GetLowStrokeSegments(Infragistics.Portable.Point)">
            <summary>
            Returns postions of low stroke segements for a specified position over this series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.TestHit(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks for a matching data item at the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if a matching data item was found; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.GetOffsetValue">
            <summary>
            Returns the offset value for this series if grouped on a category axis.
            </summary>
            <returns>The offset value</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.GetCategoryWidth">
            <summary>
            Returns the width of the category grouping this series is in.
            </summary>
            <returns>The width of the category group.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.GetSeriesValue(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available main value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, when searching for the best avaialble value any unknown values will be skipped.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.GetPreviousOrExactIndex(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Getting the previous index that is near a given world position, if possible, otherwise NaN.
            </summary>
            <param name="world">The world position to use in searching.</param>
            <param name="skipUnknowns">Should unknown values be skipped when searching.</param>
            <returns>The found index, otherwise, -1.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.GetNextOrExactIndex(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Getting the next index that is near a given world position, if possible, otherwise NaN.
            </summary>
            <param name="world">The world position to use in searching.</param>
            <param name="skipUnknowns">Should unknown values be skipped when searching.</param>
            <returns>The found index, otherwise, -1.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.GetDistanceToIndex(Infragistics.Portable.Point,System.Int32,Infragistics.Controls.Charts.Axis,Infragistics.Controls.Charts.ScalerParams,System.Double)">
            <summary>
            Returns a distance value (not necessarily pixels), that indicates how 'close' a world position is to an indexed value in the series.
            Not every series can necessarily answer this question, it can't or the world position or index is invalid, NaN will be returned.
            </summary>
            <param name="world">The world position for which to get a distance.</param>
            <param name="index">The index to get a distance to.</param>
            <param name="axis">The axis in context.</param>
            <param name="p">The scaler parameters in context.</param>
            <param name="offset">The category offset, or distance between the edge of the axis and the first or last data item.</param>
            <returns>A distance value to the world position.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.GetSeriesValuePosition(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.CachedXAxis">
            <summary>
            A cached value for the x axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.CachedYAxis">
            <summary>
            A cached value for the y axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.GetCategoryItems(System.Int32,System.Int32)">
            <summary>
            Gets an array of category items for specified range of indices. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.DataUpdatedOverride(Infragistics.Portable.FastItemsSourceEventAction,System.Int32,System.Int32,System.String)">
            <summary>
            Called when the data assigned to the series has been updated.
            </summary>
            <param name="action">The action that was performed on the data.</param>
            <param name="position">The position that was updated in the data.</param>
            <param name="count">The number of items that were affected by the data change.</param>
            <param name="propertyName">The name of the property that has been changed on a data item.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.CanUseAsXAxis(System.Object)">
            <summary>
            Determine if object can be used as XAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAnchoredCategorySeries.CanUseAsYAxis(System.Object)">
            <summary>
            Determine if object can be used as YAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.HorizontalRangeCategorySeries">
            <summary>
            Base class for ranged category series with a category X-axis and a numeric Y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.HorizontalRangeCategorySeries.XAxis">
            <summary>
            Gets or sets the effective x-axis for the current CategorySeries object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.HorizontalRangeCategorySeries.XAxisProperty">
            <summary>
            Identifies the ActualXAxis dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.HorizontalRangeCategorySeries.YAxis">
            <summary>
            Gets or sets the effective y-axis for the current CategorySeries object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.HorizontalRangeCategorySeries.YAxisProperty">
            <summary>
            Identifies the ActualYAxis dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalRangeCategorySeries.ClearAxes">
            <summary>
            Call to null out the axes of a series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalRangeCategorySeries.GetHighStrokeSegments(Infragistics.Portable.Point)">
            <summary>
            Returns postions of high stroke segements for a specified position over this series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalRangeCategorySeries.GetLowStrokeSegments(Infragistics.Portable.Point)">
            <summary>
            Returns postions of low stroke segements for a specified position over this series
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.HorizontalRangeCategorySeries.IsRange">
            <summary>
            Checks if this series is a range series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalRangeCategorySeries.GetResolvedHitTestMode">
            <summary>
            Gets the resolved hit test mode of this series.
            </summary>
            <returns>The resolved hit test mode of this series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalRangeCategorySeries.GetOffsetValue">
            <summary>
            Returns the offset value for this series if grouped on a category axis.
            </summary>
            <returns>The offset value</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalRangeCategorySeries.GetCategoryWidth">
            <summary>
            Returns the width of the category grouping this series is in.
            </summary>
            <returns>The width of the category group.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalRangeCategorySeries.GetNextOrExactIndex(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Getting the next index that is near a given world position, if possible, otherwise NaN.
            </summary>
            <param name="world">The world position to use in searching.</param>
            <param name="skipUnknowns">Should unknown values be skipped when searching.</param>
            <returns>The found index, otherwise, -1.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalRangeCategorySeries.GetPreviousOrExactIndex(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Getting the previous index that is near a given world position, if possible, otherwise NaN.
            </summary>
            <param name="world">The world position to use in searching.</param>
            <param name="skipUnknowns">Should unknown values be skipped when searching.</param>
            <returns>The found index, otherwise, -1.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalRangeCategorySeries.GetDistanceToIndex(Infragistics.Portable.Point,System.Int32,Infragistics.Controls.Charts.Axis,Infragistics.Controls.Charts.ScalerParams,System.Double)">
            <summary>
            Returns a distance value (not necessarily pixels), that indicates how 'close' a world position is to an indexed value in the series.
            Not every series can necessarily answer this question, it can't or the world position or index is invalid, NaN will be returned.
            </summary>
            <param name="world">The world position for which to get a distance.</param>
            <param name="index">The index to get a distance to.</param>
            <param name="axis">The axis in context.</param>
            <param name="p">The scaler parameters in context.</param>
            <param name="offset">The category offset, or distance between the edge of the axis and the first or last data item.</param>
            <returns>A distance value to the world position.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalRangeCategorySeries.GetSeriesValue(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available main value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalRangeCategorySeries.GetSeriesLowValue(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available low value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalRangeCategorySeries.GetSeriesHighValue(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available high value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalRangeCategorySeries.GetSeriesHighValuePosition(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best high value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalRangeCategorySeries.GetSeriesLowValuePosition(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best low value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalRangeCategorySeries.GetSeriesValuePosition(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalRangeCategorySeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalRangeCategorySeries.CanUseAsYAxis(System.Object)">
            <summary>
            Determine if object can be used as YAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalRangeCategorySeries.CanUseAsXAxis(System.Object)">
            <summary>
            Determine if object can be used as XAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.HorizontalStackedSeriesBase">
            <summary>
            Base class for stacked series with a category x-axis and a numeric y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.HorizontalStackedSeriesBase.XAxis">
            <summary>
            Gets or sets the effective x-axis for this series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.HorizontalStackedSeriesBase.XAxisProperty">
            <summary>
            Identifies the XAxis dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.HorizontalStackedSeriesBase.YAxis">
            <summary>
            Gets or sets the effective y-axis for this series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.HorizontalStackedSeriesBase.YAxisProperty">
            <summary>
            Identifies the YAxis dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalStackedSeriesBase.GetOffsetValue">
            <summary>
            Returns the offset value for this series if grouped on a category axis.
            </summary>
            <returns>The offset value</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalStackedSeriesBase.GetCategoryWidth">
            <summary>
            Returns the width of the category grouping this series is in.
            </summary>
            <returns>The width of the category group.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalStackedSeriesBase.GetAxes">
            <summary>
            Gets this series' axes as an array.
            </summary>
            <returns>An array containing all axes used by this series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalStackedSeriesBase.UpdateActualAreaFillOpacity">
            <summary>
            Updates the ActualAreaFillOpacity property based on the state of this series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalStackedSeriesBase.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalStackedSeriesBase.CanUseAsYAxis(System.Object)">
            <summary>
            Determine if object can be used as YAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalStackedSeriesBase.CanUseAsXAxis(System.Object)">
            <summary>
            Determine if object can be used as XAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ItemLegend">
            <summary>
            Represents a legend that displays an item for each point in the series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemLegend.#ctor">
            <summary>
            Creates a new instance of the item legend.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemLegend.AddChildInOrder(Infragistics.Portable.Components.UI.UIElement,Infragistics.Controls.Charts.ILegendSeries)">
            <summary>
            Adds a child, in order, to the legend.
            </summary>
            <param name="legendItem">The item to add.</param>
            <param name="series">The series with which the item is associated.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemLegend.IsItemwise">
            <summary>
            Gets whether or not this legend supports itemwise visuals
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemLegend.CreateItemwiseLegendItemsInternal(System.Collections.Generic.List{Infragistics.Portable.Components.UI.UIElement},Infragistics.Controls.Charts.ILegendSeries)">
            <summary>
            Creates legend items for the legend.
            </summary>
            <param name="legendItems">The legend items to add.</param>
            <param name="itemsHost">The host for the items.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemLegend.CreateLegendItemsInsertInternal(System.Collections.Generic.List{Infragistics.Portable.Components.UI.UIElement},Infragistics.Controls.Charts.ILegendSeries)">
            <summary>
            Creates legend items for the legend, but the items are inserted in collection at a given index.
            </summary>
            <param name="legendItems">The legend items to add.</param>
            <param name="itemsHost">The host for the items.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ItemToolTipLayer">
            <summary>
            Represents an annotation layer that displays tooltips for all target series individually.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemToolTipLayer.#ctor">
            <summary>
            Constructs an ItemTooltipLayer.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemToolTipLayer.CreateView">
            <summary>
            Overridden to provide the view for this series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemToolTipLayer.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Overridden to process the created view for this series at creation time.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemToolTipLayer.ItemTooltipView">
            <summary>
            The view for this series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemToolTipLayer.IsDefaultTooltipBehaviorDisabled">
            <summary>
            Gets whether the default tooltip behaviors for the chart are disabled if this layer is present.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemToolTipLayer.TargetSeries">
            <summary>
            Gets or sets the series to target this annotation to. If null, this annotation targets all series simultaneously.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ItemToolTipLayer.TargetSeriesProperty">
            <summary>
            Identifies the TargetSeries Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemToolTipLayer.UseInterpolation">
            <summary>
            Gets or sets whether to use value interpolation when drawing the tooltips.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ItemToolTipLayer.UseInterpolationProperty">
            <summary>
            Identifies the UseInterpolation Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemToolTipLayer.SkipUnknownValues">
            <summary>
            Gets or sets whether to skip past unknown values when searching for series values.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ItemToolTipLayer.SkipUnknownValuesProperty">
            <summary>
            Identifies the SkipUnknownValues Dependency Property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemToolTipLayer.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            Overridden to react to changes in series property values.
            </summary>
            <param name="sender">The series being altered.</param>
            <param name="propertyName">The property name of the property being altered.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">THe new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemToolTipLayer.OnDependentSeriesRender(Infragistics.Controls.Charts.Series,System.Boolean)">
            <summary>
            Overridden to react to when a series on which the annotation layer is possibly dependent is rendering.
            </summary>
            <param name="series">The series being rendered.</param>
            <param name="animate">Whether animation was requested when the series was rendered.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemToolTipLayer.IsSeriesValid(Infragistics.Controls.Charts.Series)">
            <summary>
            Checks if specified series is valid for rendering 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemToolTipLayer.PrepareFrame(Infragistics.Controls.Charts.Frame,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the series should prepare the next animation frame.
            </summary>
            <param name="frame">The animation frame to populate.</param>
            <param name="view">The view for which we are preparing a frame.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemToolTipLayer.HideToolTips">
            <summary>
            Hides any tooltips presented by the layer, if any.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemToolTipLayer.RenderFrame(Infragistics.Controls.Charts.Frame,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the series should render the provided animation frame.
            </summary>
            <param name="frame">The frame to be rendered.</param>
            <param name="view">The view to be rendered.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemToolTipLayer.RequiresPrepare">
            <summary>
            Informs whether this series requires PrepareFrame to be called before RenderFrame.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ItemwiseStrategyBasedIndicator">
            <summary>
            Financial indicator base class for doing calculating an itemwize indicator.
            </summary>
            <remarks>
            An itemwise indicator's individual values don't depend on any other values in the 
            collection so can always be independently recalculated. Also, because of this, the 
            base class handles all the looping logic and inheritors only need to provide the 
            actual calculation.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemwiseStrategyBasedIndicator.CalculationStrategy">
            <summary>
            Specifies the strategy to use for the calculation.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemwiseStrategyBasedIndicator.#ctor">
            <summary>
            Constructs the ItemwiseStrategyBasedIndicator.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemwiseStrategyBasedIndicator.InitializeIndicator">
            <summary>
            Initializes the indicator.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.LabelClickEventArgs">
            <summary>
            Contains PieChart label click event data.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LabelClickEventArgs.Slice">
            <summary>
            Gets the current slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LabelClickEventArgs.Item">
            <summary>
            Gets the slice data context.
            </summary>
            <value>The data context.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.LabelClickEventArgs.AllowSliceClick">
            <summary>
            Gets and sets whether or not the owning pie chart should fire its SliceClick event
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Legend">
            <summary>
            Represents a legend in a XamDataChart control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Legend.#ctor">
            <summary>
            Initializes a default, empty Legend object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Legend.AddChildInOrder(Infragistics.Portable.Components.UI.UIElement,Infragistics.Controls.Charts.ILegendSeries)">
            <summary>
            Adds a child to the Legend maintaining the correct ordering.
            </summary>
            <param name="legendItem">The item to add.</param>
            <param name="series">The series represented by the item.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.LegendBase">
            <summary>
            Represents the base class for a legend in XamDataChart.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LegendBase.#ctor">
            <summary>
            Creates a new legend instance.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LegendBase.AddChildInOrder(Infragistics.Portable.Components.UI.UIElement,Infragistics.Controls.Charts.ILegendSeries)">
            <summary>
            Adds a child, in order, to the legend.
            </summary>
            <param name="legendItem">The item to add.</param>
            <param name="series">The series with which the item is associated.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.LegendBase.CreateItemwiseLegendItemsInternal(System.Collections.Generic.List{Infragistics.Portable.Components.UI.UIElement},Infragistics.Controls.Charts.ILegendSeries)">
            <summary>
            Creates legend items for the legend.
            </summary>
            <param name="legendItems">The legend items to add.</param>
            <param name="itemsHost">The host for the items.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.LegendBase.Children">
            <summary>
            Gets the current Legend object's collection of child UIElements.
            <para>
            The Children collection is maintained automatically by the chart and should not
            be modified by the user.
            </para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LegendBase.SeriesOwner">
            <summary>
            Gets the series that owns the legend.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LegendBase.ChartOwner">
            <summary>
            Gets the chart that owns the legend.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LegendBase.IsItemwise">
            <summary>
            Gets if the legend is item-wise.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LegendBase.IsScale">
            <summary>
            Gets if the legend is a scale legend.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LegendBase.ClearLegendItemsForSeries(Infragistics.Controls.Charts.ILegendSeries)">
            <summary>
            Clears all items from the legend for a given series.
            </summary>
            <param name="itemsHost">The host for the items.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.LegendBase.ContainsChild(Infragistics.Portable.Components.UI.UIElement)">
            <summary>
            Returns if the provided child is present in the legend.
            </summary>
            <param name="child">The child to check for.</param>
            <returns>True, if the child is in the legend.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.LegendBase.RemoveChild(Infragistics.Portable.Components.UI.UIElement)">
            <summary>
            Removes a child from the legend.
            </summary>
            <param name="child">The child to remove</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.LegendBase.Owner">
            <summary>
            Gets the owner object, if known.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.LegendBase.PropertyChanged">
            <summary>
            Event raised when a property value changes.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.LegendBase.PropertyUpdated">
            <summary>
            Event raised when a property value is updated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LegendBase.RaisePropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            Raises the property changed and updated events.
            </summary>
            <param name="name">The name of the property being changed.</param>
            <param name="oldValue">The old value of the property</param>
            <param name="newValue">The new value of the property</param>
        </member>
        <member name="E:Infragistics.Controls.Charts.LegendBase.LegendItemMouseLeftButtonDown">
            <summary>
            Event raised when the left mouse button is pressed while the mouse pointer is over a legend item
            in this Legend.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.LegendBase.LegendItemMouseLeftButtonUp">
            <summary>
            Event raised when the left mouse button is released while the mouse pointer is over a legend item
            in this Legend.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.LegendBase.LegendItemMouseEnter">
            <summary>
            Event raised when the mouse pointer enters a legend item of this legend.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.LegendBase.LegendItemMouseLeave">
            <summary>
            Event raised when the mouse pointer leaves a legend item of this legend.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.LegendBase.LegendItemMouseMove">
            <summary>
            Event raised when the mouse pointer moves over a legend item of this legend.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LegendBase.ProvideContainer(System.Object)">
            <summary>
            Called by the UI framework to provide a UI container for rendering this control.
            </summary>
            <param name="container">The UI container element.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.LegendBase.ExportVisualData">
            <summary>
            Returns the legend visuals expressed as a LegendVisualData object.
            </summary>
            <returns>A LegendVisualData object representing the current legend visuals.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.LegendBase.ExportSerializedVisualData">
            <summary>
            Returns the legend visuals expressed as a serialized string.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LegendBase.IsFinancial">
            <summary>
            Gets if the legend is a financial legend.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.LegendMouseButtonEventArgs">
            <summary>
            Provides data for legend mouse button related events. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LegendMouseButtonEventArgs.ToString">
            <summary>
            Provides a human readable description of the mouse button event.
            </summary>
            <returns>The description.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.LegendMouseButtonEventArgs.OriginalEvent">
            <summary>
            Gets or sets the original control event that resulted in this event being raised.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LegendMouseButtonEventArgs.Handled">
            <summary>
            Gets or sets a value that indicates the present state of the event handling for a routed 
            event as it travels the route.
            </summary>
            <remarks>
            ChartMouseButton events are not routed events; setting this property effects the underlying
            MouseButtonEvent.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.LegendMouseButtonEventArgs.GetPosition(Infragistics.Portable.Components.UI.UIElement)">
            <summary>
            Returns the x- and y- coordinates of the mouse pointer position, optionally evaluated
            against the origin of a supplied UIElement.
            </summary>
            <param name="relativeTo">Any UIElement derived object that is contained by the Silverlight plug-in
            and connected to the object tree. To specify the object relative to the overall Silverlight
            coordinate system, use a relativeTo value of null.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.LegendMouseButtonEventArgs.OriginalSource">
            <summary>
            Gets a reference to the object that raised the event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LegendMouseButtonEventArgs.Item">
            <summary>
            Gets the ItemsSource item associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LegendMouseButtonEventArgs.Series">
            <summary>
            Gets the series associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LegendMouseButtonEventArgs.Chart">
            <summary>
            Gets the Chart associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LegendMouseButtonEventArgs.LegendItem">
            <summary>
            The legend item that was the target of the mouse event.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.LegendMouseEventArgs">
            <summary>
            Provides data for legend mouse button related events. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LegendMouseEventArgs.ToString">
            <summary>
            Provides a human readable description of the mouse button event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LegendMouseEventArgs.GetPosition(Infragistics.Portable.Components.UI.UIElement)">
            <summary>
            Returns the x- and y- coordinates of the mouse pointer position, optionally evaluated
            against the origin of a supplied UIElement.
            </summary>
            <param name="relativeTo">Any UIElement derived object that is contained by the Silverlight plug-in
            and connected to the object tree. To specify the object relative to the overall Silverlight
            coordinate system, use a relativeTo value of null.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.LegendMouseEventArgs.OriginalSource">
            <summary>
            Gets a reference to the object that raised the event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LegendMouseEventArgs.Item">
            <summary>
            Gets the ItemsSource item associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LegendMouseEventArgs.Series">
            <summary>
            Gets the series associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LegendMouseEventArgs.Chart">
            <summary>
            Gets the Chart associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LegendMouseEventArgs.LegendItem">
            <summary>
            The legend item in context.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.LinearContourValueResolver">
            <summary>
            ContourValueResolver class which resolves contour lines to be distributed at linear intervals from the data minimum to the data maximum.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearContourValueResolver.#ctor">
            <summary>
            LinearContourValueResolver constructor.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LinearContourValueResolver.ValueCountProperty">
            <summary>
            Identifies the ValueCount dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearContourValueResolver.ValueCount">
            <summary>
            Gets or sets how many contour values to return.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearContourValueResolver.GetContourValues(Infragistics.Portable.IFastItemColumn{System.Double})">
            <summary>
            Gets the numeric values of contour lines based on the given values.
            </summary>
            <param name="valueColumn">The FastItemColumn containing all numeric values for the series.</param>
            <returns>The numeric values at which contour lines should be placed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.LineFragment">
            <summary>
            Represents one part of a StackedLineSeries.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LineFragment.#ctor">
            <summary>
            Initializes a new instance of the LineFragment class. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LineFragment.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.LineFragment.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.LineFragment.TestRangeAreaOver(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Tests if the given position should trigger an interaction.
            </summary>
            <param name="position">The point being evaluated.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if the given position should trigger an interaction, otherwise False.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.LineFragment.IsAreaOrLine">
            <summary>
            Gets whether the current series shows an area or line shape.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LineFragment.TestHit(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks for a matching data item at the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if a matching data item was found; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.LineFragment.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.LineSeries">
            <summary>
            Represents a XamDataChart line series.
            <para>Displays trend over time or ordered categories.</para>
            <para>Useful when there are many data points and the order is important.</para>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LineSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.LineSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.LineSeries.IsAreaOrLine">
            <summary>
            Gets whether the current series shows an area or line shape.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LineSeries.#ctor">
            <summary>
            Initializes a new instance of the LineSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LineSeries.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.LineSeries.UnknownValuePlottingProperty">
            <summary>
            Identifies the UnknownValuePlotting dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LineSeries.UnknownValuePlotting">
            <summary>
            Determines how unknown values will be plotted on the chart.
            </summary>
            <remarks>
            Null and Double.NaN are two examples of unknown values.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.LineSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.MarkerSeries">
            <summary>
            Represents the base class for series containing markers.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerSeries.#ctor">
            <summary>
            Creates an instance of the MarkerSeries
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.MarkerSeries.HasMarkers">
            <summary>
            Returns whether the current series supports visual markers.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerSeries.GetActualMarkerBrush">
            <summary>
            Returns the actual marker brush used by the series if the series has markers.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerSeries.GetActualMarkerOutlineBrush">
            <summary>
            Returns the actual marker outline used by the series if the series has markers.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerSeries.GetActualMarkerTemplate">
            <summary>
            Returns the actual marker template used by the series if the series has markers.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MarkerSeries.MarkerType">
            <summary>
            Gets or sets the marker type for the current series object.
            </summary>
            <remarks>
            If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.MarkerSeries.MarkerTypeProperty">
            <summary>
            Identifies the MarkerType dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MarkerSeries.MarkerTemplate">
            <summary>
            Gets or sets the MarkerTemplate for the current series object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MarkerSeries.MarkerTemplateProperty">
            <summary>
            Identifies the MarkerTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MarkerSeries.ActualMarkerTemplate">
            <summary>
            Gets the effective marker template for the current series object.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MarkerSeries.ActualMarkerTemplateProperty">
            <summary>
            Identifies the ActualMarkerTemplate dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MarkerSeries._nullMarkerTemplate">
            <summary>
            The marker template to use if the MarkerTemplate property is set to null.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MarkerSeries.NullMarkerTemplate">
            <summary>
            Represents the marker template that has no content.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MarkerSeries.MarkerBrush">
            <summary>
            Gets or sets the brush that specifies how the current series object's marker interiors are painted.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MarkerSeries.MarkerBrushProperty">
            <summary>
            Identifies the MarkerBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MarkerSeries.ActualMarkerBrush">
            <summary>
            Gets the effective marker brush for the current series object.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MarkerSeries.ActualMarkerBrushProperty">
            <summary>
            Identifies the ActualMarkerBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MarkerSeries.MarkerOutline">
            <summary>
            Gets or sets the brush that specifies how the current series object's marker outlines are painted.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MarkerSeries.MarkerOutlineProperty">
            <summary>
            Identifies the MarkerOutline dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MarkerSeries.ActualMarkerOutline">
            <summary>
            Gets the effective marker outline for the current series object.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MarkerSeries.ActualMarkerOutlineProperty">
            <summary>
            Identifies the ActualMarkerOutline dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MarkerSeries.MarkerStyle">
            <summary>
            Gets or sets the Style to be used for the markers.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MarkerSeries.MarkerStyleProperty">
            <summary>
            Identifies the MarkerStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MarkerSeries.UseLightweightMarkers">
            <summary>
            Determines if high performance mode should be enabled for the markers.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MarkerSeries.UseLightweightMarkersProperty">
            <summary>
            Identifies the UseLightweightMarkers dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerSeries.ShouldDisplayMarkers">
            <summary>
            Returns true if the markers should be displayed.
            </summary>
            <returns>True if the marker should be displayed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerSeries.GetMarkerTemplatePropertyName(Infragistics.Controls.Charts.MarkerType)">
            <summary>
            Provides the property name of the marker template on the chart that should be bound to based on a MarkerType enumeration value.
            </summary>
            <param name="markerType">The enumeration value to map to a property name.</param>
            <returns>The property name.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerSeries.ResolveMarkerType(Infragistics.Controls.Charts.Series,Infragistics.Controls.Charts.MarkerType)">
            <summary>
            Returns the marker type that should be used for a series.
            </summary>
            <param name="series">The series to resolve for.</param>
            <param name="seriesMarkerType">The input marker type.</param>
            <returns>The resolved marker type.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerSeries.UpdateIndexedProperties">
            <summary>
            Updates properties that are based on the index of the series in the series collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerSeries.ExportVisualDataOverride(System.Object)">
            <summary>
            Exports visual information about the series for use by external tools and functionality.
            </summary>
            <param name="svd">The data container.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerSeries.TestMarkersOver(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Simulates hovering over a marker at specified position within series plot area
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerSeries.GetHitDataContext(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Gets the DataContext matching the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>The DataContext matching an item found at the given position.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.MarkerTypeCollection">
            <summary>
            Represents a collection of MarkerType enumerable objects
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.MarketFacilitationIndexIndicator">
            <summary>
            Represents a XamDataChart Market Facilitation Index indicator series.
            </summary>
            <remarks>
            The Market Facilitation Index (MFI) indicator is represented by
            the difference of the high and the low for a bar divided by the volume.
            <para>
            Default required members: High, Low, Volume
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarketFacilitationIndexIndicator.#ctor">
            <summary>
            Creates an instance of the MarketFacilitationIndexIndicator
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MarketFacilitationIndexIndicator.ItemwiseStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MarketFacilitationIndexIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.MassIndexIndicator">
            <summary>
            Represents a XamDataChart Mass Index indicator series.
            </summary>
            <remarks>
            Default required members: High, Low
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.MassIndexIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MassIndexIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.MedianPriceIndicator">
            <summary>
            Represents a XamDataChart Median Price indicator series.
            </summary>
            <remarks>
            Default required members: High, Low
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.MedianPriceIndicator.ItemwiseStrategy">
            <summary>
            Returns the itemwise calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MedianPriceIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.MoneyFlowIndexIndicator">
            <summary>
            Represents a XamDataChart Money Flow Index indicator series.
            </summary>
            <remarks> 
            <para>
            Default required members: Close, Low, High, Volume
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.MoneyFlowIndexIndicator.#ctor">
            <summary>
            Creates an instance of the MoneyFlowIndexIndicator
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MoneyFlowIndexIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MoneyFlowIndexIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MoneyFlowIndexIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current MoneyFlowIndexIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for MoneyFlowIndexIndicator periods is 14.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MoneyFlowIndexIndicator.PeriodProperty">
            <summary>
            Identifies the Period dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.MoneyFlowIndexIndicator.PeriodOverride">
            <summary>
            Specifies the period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.MoneyFlowIndexIndicator.SetPeriodOverride(System.Int32)">
            <summary>
            Sets the Period property.
            </summary>
            <param name="period">The value for the Period property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.MovingAverageConvergenceDivergenceIndicator">
            <summary>
            Represents a XamDataChart Moving Average Convergence/Divergence (MACD) indicator series.
            </summary>
            <remarks>
            <para>
            Default required members: High, Low, Close
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.MovingAverageConvergenceDivergenceIndicator.#ctor">
            <summary>
            Creates an instance of the MovingAverageConvergenceDivergenceIndicator
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MovingAverageConvergenceDivergenceIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MovingAverageConvergenceDivergenceIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MovingAverageConvergenceDivergenceIndicator.ShortPeriod">
            <summary>
            Gets or sets the short moving average period for the current MovingAverageConvergenceDivergenceIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for short MACD periods is 10.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MovingAverageConvergenceDivergenceIndicator.ShortPeriodProperty">
            <summary>
            Identifies the ShortPeriod dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.MovingAverageConvergenceDivergenceIndicator.ShortPeriodOverride">
            <summary>
            Specifies the short period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.MovingAverageConvergenceDivergenceIndicator.LongPeriod">
            <summary>
            Gets or sets the long moving average period for the current MovingAverageConvergenceDivergenceIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for long MACD periods is 30.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MovingAverageConvergenceDivergenceIndicator.LongPeriodProperty">
            <summary>
            Identifies the LongPeriod dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.MovingAverageConvergenceDivergenceIndicator.LongPeriodOverride">
            <summary>
            Specifies the long period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.MovingAverageConvergenceDivergenceIndicator.SignalPeriod">
            <summary>
            Gets or sets the long moving average period for the current MovingAverageConvergenceDivergenceIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for long PVO periods is 30.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MovingAverageConvergenceDivergenceIndicator.SignalPeriodProperty">
            <summary>
            Identifies the SignalPeriod dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.MovingAverageConvergenceDivergenceIndicator.TrendPeriodOverride">
            <summary>
            Specifies the trend period to use for the trend line, overriding 
            the TrendLinePeriod for the series.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.NegativeVolumeIndexIndicator">
            <summary>
            Represents a XamDataChart Negative Volume Index indicator (NVI) series.
            </summary>
            <remarks>
            Default required members: Close, Volume
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.NegativeVolumeIndexIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NegativeVolumeIndexIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.NumericAngleAxis">
            <summary>
            Represents a XamDataChart angle based axis for polar series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAngleAxis.IsAngular">
            <summary>
            Gets if the current axis is of angular axis type
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericAngleAxis.#ctor">
            <summary>
            Constructs a numeric angle axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericAngleAxis.CreateRenderer">
            <summary>
            Creates the renderer for this axis.
            </summary>
            <returns>The renderer object.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericAngleAxis.GetScaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the scaled angle value in radians from the raw axis value.
            </summary>
            <param name="unscaledValue">The raw axis value.</param>
            <param name="p">Scaler parameters</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericAngleAxis.GetScaledAngle(System.Double)">
            <summary>
            Gets the scaled angle value in radians based on the raw input.
            </summary>
            <param name="unscaledValue">The raw input value.</param>
            <returns>The scaled angle value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericAngleAxis.GetUnscaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the raw axis value back from the angle that would be used on the chart.
            </summary>
            <param name="scaledValue">The raw axis value.</param>
            <param name="p">Scaler parameters</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericAngleAxis.GetUnscaledAngle(System.Double)">
            <summary>
            Gets the raw axis value back from the angle that would be used on the chart.
            </summary>
            <param name="scaledValue">The chart angle value.</param>
            <returns>The raw axis value.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAngleAxis.StartAngleOffset">
            <summary>
            Indicates the angle in degress that the chart's 0th angle should be offset.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NumericAngleAxis.StartAngleOffsetProperty">
            <summary>
            Identifies the StartAngleOffset dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericAngleAxis.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            Handles property updated events.
            </summary>
            <param name="sender">The sender of the updated event.</param>
            <param name="propertyName">The name of the property that was updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericAngleAxis.CreateRenderingParams(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Creates the parameters for the rendering.
            </summary>
            <param name="viewportRect">The viewport rectangle.</param>
            <param name="windowRect">The window rectangle.</param>
            <param name="effectiveViewportRect">The effective viewport rectangle.</param>
            <param name="contentViewport">The viewport rectangle for the content area.</param>
            <returns>The rendering parameters.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericAngleAxis.RenderAxisOverride(System.Boolean)">
            <summary>
            Performs the rendering of the axis.
            </summary>
            <param name="animate">Indicates whether the rendering should be animated.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAngleAxis.RadiusAxis">
            <summary>
            Gets or sets the radius axis reference.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericAngleAxis.ResolveCrossingAxis">
            <summary>
            Gets the resolved crossing axis.
            </summary>
            <returns>The resolved crossing axis.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericAngleAxis.ViewportChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Overridden in derived classes to respond to the viewport of the axis changing.
            </summary>
            <param name="oldRect">The old viewport rectangle.</param>
            <param name="newRect">The new viewport rectangle.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAngleAxis.Orientation">
            <summary>
            Gets the axis orientation.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.NumericAxisBase">
            <summary>
            Represents the base class for all XamDataChart numeric axes.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAxisBase.IsNumeric">
            <summary>
            Gets or sets if the current axis is of numeric axis type
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericAxisBase.#ctor">
            <summary>
            Constructs a new NumericAxisBase instance.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAxisBase.MinimumValue">
            <summary>
            Gets or sets the MinimumValue property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NumericAxisBase.MinimumValueProperty">
            <summary>
            Identifies the MinimumValue dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAxisBase.ActualMinimumValue">
            <summary>
            Gets the effective minimum value for the current numeric axis object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericAxisBase.ResolveActualMinimumValue">
            <summary>
            Gets the resolved actual minimum value.
            </summary>
            <returns>The resolved minimum value.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAxisBase.ActualVisibleMinimumValue">
            <summary>
            Gets the effective minimum value for the current numeric axis object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAxisBase.MaximumValue">
            <summary>
            Gets or sets the MaximumValue property.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NumericAxisBase.MaximumValueProperty">
            <summary>
            Identifies the MaximumValue dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAxisBase.ActualMaximumValue">
            <summary>
            Gets the effective maximum value for the current numeric axis object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericAxisBase.ResolveActualMaximumValue">
            <summary>
            Gets the resolved actual maximum value.
            </summary>
            <returns>The resolved maximum value.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAxisBase.ActualVisibleMaximumValue">
            <summary>
            Gets the effective visible maximum value for the current numeric axis object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NumericAxisBase.IntervalProperty">
            <summary>
            Identifies the Interval dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAxisBase.Interval">
            <summary>
            Gets or sets the Interval property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAxisBase.ActualInterval">
            <summary>
            Gets the effective value for the current Interval.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericAxisBase.ResolveActualInterval">
            <summary>
            Gets the effective value for the current Interval.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NumericAxisBase.MinorIntervalProperty">
            <summary>
            Identifies the MinorInterval dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAxisBase.MinorInterval">
            <summary>
            Gets or sets the MinorInterval property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAxisBase.ActualMinorInterval">
            <summary>
            Gets the effective value for the current MinorInterval.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAxisBase.ReferenceValue">
            <summary>
            Gets or sets the ReferenceValue property.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NumericAxisBase.ReferenceValueProperty">
            <summary>
            Identifies the ReferenceValue dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAxisBase.IsLogarithmic">
            <summary>
            Gets or sets the IsLogarithmic property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NumericAxisBase.IsLogarithmicProperty">
            <summary>
            Identifies the IsLogarithmic dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAxisBase.ActualIsLogarithmic">
            <summary>
            Determines if the axis has a valid logarithmic scale.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAxisBase.LogarithmBase">
            <summary>
            Gets or sets the LogarithmBase property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NumericAxisBase.LogarithmBaseProperty">
            <summary>
            Identifies the LogarithmBase dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAxisBase.LogarithmBaseCached">
            <summary>
            Gets or sets the cached value of the log base.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAxisBase.Renderer">
            <summary>
            Houses the rendering logic for the axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAxisBase.LogDirty">
            <summary>
            True if a range and visual refresh is needed to reflect a changed IsLogarithmic or LogarithmBase property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericAxisBase.RenderAxisOverride(System.Boolean)">
            <summary>
            Creates or updates the visuals for the axis.
            </summary>
            <param name="animate">Whether the updates to the visuals should be animated.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericAxisBase.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the axis. Gives the axis a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericAxisBase.InvalidateSeries">
            <summary>
            Invalidates all series associated with the current axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericAxisBase.GetAxisRange">
            <summary>
            Gets the minimum and maximum values for this axis.
            </summary>
            <returns>An AxisRange object containing the minimum and maximum values for this axis.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericAxisBase.CalculateRange(Infragistics.Controls.Charts.NumericAxisBase,System.Double,System.Double,System.Boolean,System.Int32,System.Double@,System.Double@)">
            <summary>
            Calculates the axis range.
            </summary>
            <param name="target">Target axis</param>
            <param name="minimumValue">Minimum value</param>
            <param name="maximumValue">Maximum value</param>
            <param name="isLogarithmic">Whether or not the axis is logarithmic</param>
            <param name="logarithmBase">Logarithm base</param>
            <param name="actualMinimumValue">Actual coerced minimum value</param>
            <param name="actualMaximumValue">Actual coerced maximum value</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericAxisBase.RegisterSeries(Infragistics.Controls.Charts.Series)">
            <summary>
            Registers a series that uses an axis with the axis.
            </summary>
            <param name="series">The series to register.</param>
            <returns>If the registration was a success.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericAxisBase.DeregisterSeries(Infragistics.Controls.Charts.Series)">
            <summary>
            Deregisters a series that uses an axis from the axis.
            </summary>
            <param name="series">The series to deregister.</param>
            <returns>If the deregistration was a success.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericAxisBase.CreateScalerOverride">
            <summary>
            Creates a new numeric axis scaler.
            </summary>
            <returns>A new numeric axis scaler.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericAxisBase.UnscaleValue(System.Double)">
            <summary>
            Unscales a value from screen space into axis space.
            </summary>
            <param name="unscaledValue">The scaled value in screen coordinates to unscale into axis space.</param>
            <returns>The unscaled value in axis space.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAxisBase.HasUserMinimum">
            <summary>
            Determines if the axis has a user-defined minimum.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAxisBase.HasUserMaximum">
            <summary>
            Determines if the axis has a user-defined maximum.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NumericAxisBase.TickmarkValuesProperty">
            <summary>
            Identifies the TickmarkValues dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAxisBase.TickmarkValues">
            <summary>
            Gets or sets tickmark values.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAxisBase.ActualTickmarkValues">
            <summary>
            Gets or sets the actual tickmark values.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericAxisBase.AbbreviateLargeNumbers">
            <summary>
            A boolean indicating whether or not to abbreviate large numbers.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.NumericRadiusAxis">
            <summary>
            Represents a XamDataChart radius axis for polar and radial series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericRadiusAxis.IsRadial">
            <summary>
            Checks if the axis is of radial axis type
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericRadiusAxis.GetResolutionExtent">
            <summary>
            Gets the resolution available to the axis.
            </summary>
            <returns>The available resolution of the axis.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericRadiusAxis.#ctor">
            <summary>
            Constructs a numeric radius axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericRadiusAxis.CreateRenderer">
            <summary>
            Creates the rendering provider for the axis.
            </summary>
            <returns>The axis renderer.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericRadiusAxis.GetScaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the window length for the provided radius.
            </summary>
            <param name="unscaledValue">The radius for which to get the window length.</param>
            <param name="p">Scaler parameters</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericRadiusAxis.GetScaledValue(System.Double)">
            <summary>
            Returns a world coordinates radius length (0 - 0.5) from a raw axis value.
            </summary>
            <param name="unscaledValue">The raw axis value.</param>
            <returns>The world coordinates radius value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericRadiusAxis.GetUnscaledValue(System.Double)">
            <summary>
            Returns a raw axis value from the world coordinates radius length provided.
            </summary>
            <param name="scaledValue">The scaled world coordinates radius length.</param>
            <returns>The raw axis value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericRadiusAxis.GetUnscaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Returns a raw axis value from the world coordinates radius length provided.
            </summary>
            <param name="scaledValue">The scaled world coordinates radius length.</param>
            <param name="p">The scaler parameters in context.</param>
            <returns>The raw axis value.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericRadiusAxis.RadiusExtentScale">
            <summary>
            Defines the percentage of the maximum radius extent to use as the maximum radius. Should be 
            a value between 0.0 and 1.0.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NumericRadiusAxis.RadiusExtentScaleProperty">
            <summary>
            Identifies the RadiusExtentScale dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericRadiusAxis.InnerRadiusExtentScale">
            <summary>
            Defines the percentage of the maximum radius extent to leave blank at the center of the chart. Should be 
            a value between 0.0 and 1.0.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NumericRadiusAxis.InnerRadiusExtentScaleProperty">
            <summary>
            Identifies the RadiusExtentScale dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericRadiusAxis.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            Handles property updated events.
            </summary>
            <param name="sender">The sender of the updated event.</param>
            <param name="propertyName">The name of the property that was updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericRadiusAxis.CrossingValueRadians">
            <summary>
            Gets or sets the axis crossing value in radians.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericRadiusAxis.OnAngleAxisChanged(Infragistics.Controls.Charts.Axis)">
            <summary>
            Handles axis changed event.
            </summary>
            <param name="angleAxis">source axis</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericRadiusAxis.AngleAxis">
            <summary>
            Gets or sets the reference to the angle axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericRadiusAxis.ResolveCrossingAxis">
            <summary>
            Gets the resolved crossing axis.
            </summary>
            <returns>The resolved crossing axis.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericRadiusAxis.CreateRenderingParams(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Creates the parameters for the rendering.
            </summary>
            <param name="viewportRect">The viewport rectangle.</param>
            <param name="windowRect">The window rectangle.</param>
            <param name="effectiveViewportRect">The effective viewport rectangle.</param>
            <param name="contentViewport">The viewport rectangle for the content area.</param>
            <returns>The rendering parameters.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericRadiusAxis.RenderAxisOverride(System.Boolean)">
            <summary>
            Renders the axis.
            </summary>
            <param name="animate">Whether or not to use animation</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericRadiusAxis.ViewportChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Overridden in derived classes to respond to the viewport of the axis changing.
            </summary>
            <param name="oldRect">The old viewport rectangle.</param>
            <param name="newRect">The new viewport rectangle.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericRadiusAxis.Orientation">
            <summary>
            Gets the axis orientation.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.NumericXAxis">
            <summary>
            Represents a XamDataChart numeric X axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericXAxis.#ctor">
            <summary>
            Initializes a new instance of the NumericXAxis class. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericXAxis.CreateRenderer">
            <summary>
            Creates the rendering provider for the axis.
            </summary>
            <returns>The axis renderer.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericXAxis.GetScaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the scaled viewport value from an unscaled axis value.
            </summary>
            <param name="unscaledValue">The unscaled axis value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The scaled viewport value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericXAxis.GetUnscaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the unscaled axis value from an scaled viewport value.
            </summary>
            <param name="scaledValue">The scaled viewport value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The unscaled axis value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericXAxis.GetScaledValueList(System.Collections.Generic.IList{System.Double},System.Int32,System.Int32,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Get a list of scaled viewport values from a list of unscaled axis values.
            </summary>
            <param name="unscaledValues">The list of unscaled axis values.</param>
            <param name="startIndex">Index at which to begin in the list.</param>
            <param name="count">Number of items to scale in the list.</param>
            <param name="p">The scaler parameters in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericXAxis.GetScaledBucketValueList(System.Collections.Generic.IList{System.Double[]},System.Collections.Generic.IList{System.Int32},System.Int32,System.Int32,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Get a list of scaled viewport values from a list of unscaled axis values in buckets.
            </summary>
            <param name="unscaledValues">The list of unscaled axis values.</param>
            <param name="bucketIndexes">The indexes inside the buckets to scale.</param>
            <param name="startIndex">Index at which to begin in the list.</param>
            <param name="count"></param>
            <param name="p">Scaler parameters</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericXAxis.GetUnscaledValueList(System.Collections.Generic.IList{System.Double},System.Int32,System.Int32,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets a list of unscaled axis values from a list of scaled viewport values.
            </summary>
            <param name="scaledValues">A list containing the scaled viewport values to unscale.</param>
            <param name="startIndex">Index at which to begin in the list.</param>
            <param name="count">Number of items to scale in the list.</param>
            <param name="p">Scaler parameters</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericXAxis.ScrollRangeIntoView(System.Double,System.Double)">
            <summary>
            Scrolls the NumericXAxis so that the provided range is brought into view.
            </summary>
            <param name="minimum">The minimum value to bring into view.</param>
            <param name="maximum">The maximum value to bring into view.</param>
            <remarks>
            This method adjusts the WindowRect in order to scroll horizontally to the desired location.  This means that
            the X axis zoom level may change as it tries to fit the minimum and maximum in view.  It will not adjust the Y axis
            zoom level.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericXAxis.CreateRenderingParams(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Creates the parameters for the rendering.
            </summary>
            <param name="viewportRect">The viewport rectangle.</param>
            <param name="windowRect">The window rectangle.</param>
            <param name="effectiveViewportRect">The effective viewport rectangle.</param>
            <param name="contentViewport">The viewport rectangle for the content area.</param>
            <returns>The rendering parameters.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericXAxis.RenderAxisOverride(System.Boolean)">
            <summary>
            Renders or updates the axis visuals.
            </summary>
            <param name="animate">Whether of not the visual changes should be animated.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericXAxis.ViewportChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Overridden in derived classes to respond to the viewport of the axis changing.
            </summary>
            <param name="oldRect">The old viewport rectangle.</param>
            <param name="newRect">The new viewport rectangle.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericXAxis.Orientation">
            <summary>
            Gets the axis orientation.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericXAxis.CreateScalerOverride">
            <summary>
            Creates a new numeric axis scaler.
            </summary>
            <returns>A new numeric axis scaler.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.NumericYAxis">
            <summary>
            Represents a XamDataChart numeric Y axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericYAxis.#ctor">
            <summary>
            Initializes a new instance of the NumericYAxis class. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericYAxis.IsVertical">
            <summary>
            Gets if the current axis is of vertical axis  
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericYAxis.GetResolutionExtent">
            <summary>
            Gets the resolution available to the axis.  Typically the axis width or height, depending on the axis orientation.
            </summary>
            <returns>The available resolution of the axis.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericYAxis.GetScaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the scaled viewport value from an unscaled axis value.
            </summary>
            <param name="unscaledValue">The unscaled axis value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The scaled viewport value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericYAxis.GetScaledValueList(System.Collections.Generic.IList{System.Double},System.Int32,System.Int32,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Get a list of scaled viewport values from a list of unscaled axis values.
            </summary>
            <param name="unscaledValues">The list of unscaled axis values.</param>
            <param name="startIndex">Index at which to begin in the list.</param>
            <param name="count">Number of items to scale in the list.</param>
            <param name="p">The scaler parameters in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericYAxis.GetScaledBucketValueList(System.Collections.Generic.IList{System.Double[]},System.Collections.Generic.IList{System.Int32},System.Int32,System.Int32,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Get a list of scaled viewport values from a list of unscaled axis values in buckets.
            </summary>
            <param name="unscaledValues">The list of unscaled axis values.</param>
            <param name="bucketIndexes">The indexes inside the buckets to scale.</param>
            <param name="p">Scaler parameters</param>
            <param name="startIndex">Index at which to start in the list.</param>
            <param name="count">Number of items to scale in the list.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericYAxis.GetUnscaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the unscaled axis value from an scaled viewport value.
            </summary>
            <param name="scaledValue">The scaled viewport value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The unscaled axis value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericYAxis.GetUnscaledValueList(System.Collections.Generic.IList{System.Double},System.Int32,System.Int32,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets a list of unscaled axis values from a list of scaled viewport values.
            </summary>
            <param name="scaledValues">A list containing the scaled viewport values to unscale.</param>
            <param name="startIndex">Index at which to begin in the list.</param>
            <param name="count">Number of items to scale in the list.</param>
            <param name="p">Scaler parameters</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericYAxis.ScrollRangeIntoView(System.Double,System.Double)">
            <summary>
            Scrolls the NumericYAxis so that the provided range is brought into view.
            </summary>
            <param name="minimum">The minimum value to bring into view.</param>
            <param name="maximum">The maximum value to bring into view.</param>
            <remarks>
            This method adjusts the WindowRect in order to scroll vertically to the desired location.  This means that
            the Y axis zoom level may change as it tries to fit the minimum and maximum in view.  It will not adjust the X axis
            zoom level.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericYAxis.CreateRenderingParams(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Creates the parameters for the rendering.
            </summary>
            <param name="viewportRect">The viewport rectangle.</param>
            <param name="windowRect">The window rectangle.</param>
            <param name="effectiveViewportRect">The effective viewport rectangle.</param>
            <param name="contentViewport">The viewport rectangle for the content area.</param>
            <returns>The rendering parameters.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericYAxis.RenderAxisOverride(System.Boolean)">
            <summary>
            Creates or updates the visuals for the axis.
            </summary>
            <param name="animate">Whether the updates to the visuals should be animated.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericYAxis.ViewportChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Overridden in derived classes when they want to respond to the viewport of the axis updating.
            </summary>
            <param name="oldRect">The old viewport rectangle.</param>
            <param name="newRect">The new viewport rectangle.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericYAxis.Orientation">
            <summary>
            Gets the axis orientation
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericYAxis.CreateScalerOverride">
            <summary>
            Creates a new numeric axis scaler.
            </summary>
            <returns>A new numeric axis scaler.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.OnBalanceVolumeIndicator">
            <summary>
            Represents a XamDataChart On Balance Bolume indicator series.
            </summary>
            <remarks>
            <para>
            Default required members: Close, Volume
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.OnBalanceVolumeIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.OnBalanceVolumeIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.OrdinalTimeXAxis">
            <summary>
            A horizontal axis that uses an ordinal DateTime scale.
            </summary>
            <remarks>
            On an ordinal time axis, datapoints are aligned according to their order in the ItemsSource, like a category axis.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.OrdinalTimeXAxis.#ctor">
            <summary>
            Creates and returns a new instance of OrdinalTimeXAxis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.OrdinalTimeXAxis.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            Called when a property is updated.
            </summary>
            <param name="sender">The source of the property change.</param>
            <param name="propertyName">The name of the property.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.OrdinalTimeXAxis.UpdateVisibleRange">
            <summary>
            Updates the VisibleRange property based on the current view.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.OrdinalTimeXAxis.DateTimeMemberPath">
            <summary>
            Gets or sets the DateTime mapping property for the axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.OrdinalTimeXAxis.DateTimeColumn">
            <summary>
            Gets column of date time values for the axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.OrdinalTimeXAxis.WindowRectChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Responds to the chart's window changing, as it does during zooming.
            </summary>
            <param name="oldRect">The previous window rectangle, expressed as a Rectangle within the bounds of 0 to 1.</param>
            <param name="newRect">The new window rectangle, expressed as a Rectangle within the bounds of 0 to 1.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.OrdinalTimeXAxis.LabelFormats">
            <summary>
            A list of axis label formats to apply, which are selected according to the visible axis range.
            </summary>
            <remarks>
            The label format selected will be the one with the largest range smaller than the visible range of the axis.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.OrdinalTimeXAxis.GetLabel(System.Object)">
            <summary>
            Gets the label for a data item.
            </summary>
            <param name="dataItem">The data item to get the label for.</param>
            <returns>The requested label.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.OrdinalTimeXAxis.GetDataItems">
            <summary>
            Gets the data items to use for labeling.
            </summary>
            <returns>The data items to use for labeling.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.OrdinalTimeXAxis.ViewportChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Responds to the chart's viewport changing, as it does during zooming.
            </summary>
            <param name="oldRect">The previous viewport rectangle.</param>
            <param name="newRect">The new viewport rectangle.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.OrdinalTimeXAxis.GetMajorValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the major value at the given unscaled value.
            </summary>
            <param name="unscaledValue">The unscaled value to get a major value for.</param>
            <param name="xParams">Axis scaling parameters.</param>
            <returns>The major value corresponding with the given unscaled value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.OrdinalTimeXAxis.GetCategoryValue(System.Double,System.Double,System.Boolean,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the category position based on the given arguments.
            </summary>
            <param name="unscaledValue">The unscaled data value.</param>
            <param name="majorValue">The major value.</param>
            <param name="mode0">True if the category mode is zero.</param>
            <param name="xParams">Axis scaling parameters.</param>
            <returns>The scaled category position.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.OrdinalTimeXAxis.MinimumValue">
            <summary>
            Sets the minimum DateTime value to be displayed on this axis.
            </summary>
            <remarks>
            This property can be used to constrain the items displayed on the axis, within the range of DateTimes in the ItemsSource.  It will ignore any setting outside the actual range of data.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.OrdinalTimeXAxis.MaximumValue">
            <summary>
            Sets the maximum DateTime value to be displayed on this axis.
            </summary>
            <remarks>
            This property can be used to constrain the items displayed on the axis, within the range of DateTimes in the ItemsSource.  It will ignore any setting outside the actual range of data.
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Charts.PercentagePriceOscillatorIndicator">
            <summary>
            Represents a XamDataChart percentage price oscillator series.
            </summary>
            <remarks>
            Default required members: High, Low, Volume
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.PercentagePriceOscillatorIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PercentagePriceOscillatorIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PercentagePriceOscillatorIndicator.ShortPeriod">
            <summary>
            Gets or sets the short moving average period for the current PercentagePriceOscillatorIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for short PPO periods is 10.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PercentagePriceOscillatorIndicator.ShortPeriodProperty">
            <summary>
            Identifies the ShortPeriod dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PercentagePriceOscillatorIndicator.ShortPeriodOverride">
            <summary>
            Specifies the short period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.PercentagePriceOscillatorIndicator.LongPeriod">
            <summary>
            Gets or sets the long moving average period for the current PercentagePriceOscillatorIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for long PVO periods is 30.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PercentagePriceOscillatorIndicator.LongPeriodProperty">
            <summary>
            Identifies the LongPeriod dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PercentagePriceOscillatorIndicator.LongPeriodOverride">
            <summary>
            Specifies the long period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.PercentageVolumeOscillatorIndicator">
            <summary>
            Represents a XamDataChart Percentage Volume Oscillator (PVO) series.
            </summary>
            <remarks>
            Default required members: Volume
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.PercentageVolumeOscillatorIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PercentageVolumeOscillatorIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PercentageVolumeOscillatorIndicator.ShortPeriod">
            <summary>
            Gets or sets the short moving average period for the current PercentageVolumeOscillatorIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for short PVO periods is 10.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PercentageVolumeOscillatorIndicator.ShortPeriodProperty">
            <summary>
            Identifies the ShortPeriod dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PercentageVolumeOscillatorIndicator.ShortPeriodOverride">
            <summary>
            Specifies the short period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.PercentageVolumeOscillatorIndicator.LongPeriod">
            <summary>
            Gets or sets the short moving average period for the current PercentageVolumeOscillatorIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for long PVO periods is 30.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PercentageVolumeOscillatorIndicator.LongPeriodProperty">
            <summary>
            Identifies the LongPeriod dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PercentageVolumeOscillatorIndicator.LongPeriodOverride">
            <summary>
            Specifies the long period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.PercentChangeYAxis">
            <summary>
            A horizontal axis that uses a DateTime scale.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PercentChangeYAxis.CreateScalerOverride">
            <summary>
            Creates a new numeric axis scaler.
            </summary>
            <returns>A new numeric axis scaler.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PercentChangeYAxis.GetAxisRange">
            <summary>
            Gets the minimum and maximum values for this axis.
            </summary>
            <returns>An AxisRange object containing the minimum and maximum values for this axis.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.PieChartBase">
            <summary>
            Represents the base class for the pie chart.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.#ctor">
            <summary>
            Creates a new instance of PieChartBase
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.FastItemsSourceProperty">
            <summary>
            Identifies the FastItemsSource dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.FastItemsSource">
            <summary>
            Gets or sets the ItemsSource property for the pie chart.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <para>
            The FastItemsSource is a proxy which handles caching, conversion and
            weak event listeners.
            </para>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.ValueColumn">
            <summary>
            Gets the FastItemColumn representing the mapped values in the items source.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.ItemsSource">
            <summary>
            Gets or sets the data source for the chart.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.InnerExtentProperty">
            <summary>
            Identifies the InnerExtent dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.InnerExtent">
            <summary>
            Gets or sets the amount of space between the center and the start of the arc. This property should be set between 0 and 1.
            </summary>
            <remarks>
            If InnerExtent is set to a value greater than 1, it will be interpreted as a percentage, effectively divided by 100.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.ValueMemberPathProperty">
            <summary>
            Identifies the ValueMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.ValueMemberPath">
            <summary>
            Gets or Sets the property name that contains the values.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.LabelMemberPathProperty">
            <summary>
            Identifies the LabelMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.LabelMemberPath">
            <summary>
            Gets or sets the property name that contains the labels.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.LegendLabelMemberPathProperty">
            <summary>
            Identifies the LegendLabelMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.LegendLabelMemberPath">
            <summary>
            Gets or sets the property name that contains the legend labels.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.LabelColumn">
            <summary>
            Gets the data column used for labels.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.LegendLabelColumn">
            <summary>
            Gets the data column used for legend labels.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.LabelsPositionProperty">
            <summary>
            Identifies the LabelsPosition dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.LabelsPosition">
            <summary>
            Gets or sets the position of chart labels.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.LabelOuterColor">
            <summary>
            Gets or sets the color for labels rendered outside of the pie chart.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.LabelOuterColorProperty">
            <summary>
            Identifies the LabelOuterColor dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.LabelInnerColor">
            <summary>
            Gets or sets the color for labels rendered inside of the pie chart.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.LabelInnerColorProperty">
            <summary>
            Identifies the LabelInnerColor dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.LeaderLineVisibilityProperty">
            <summary>
            Identifies the LeaderLineVisibility dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.LeaderLineVisibility">
            <summary>
            Gets or sets whether the leader lines are visible.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.LeaderLineStyleProperty">
            <summary>
            Identifies the LeaderLineStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.LeaderLineStyle">
            <summary>
            Gets or sets the style for the leader lines.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.LeaderLineTypeProperty">
            <summary>
            Identifies the LeaderLineType dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.LeaderLineType">
            <summary>
            Gets or sets what type of leader lines will be used for the outside end labels.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.LeaderLineMarginProperty">
            <summary>
            Identifies the LeaderLineMargin dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.LeaderLineMargin">
            <summary>
            Gets or sets the margin between a label and the end of its leader line. The default is 6 pixels.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.ToolTipProperty">
            <summary>
            Identifies the ToolTip dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.ToolTip">
            <summary>
            Gets or sets the ToolTip for the chart.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.OthersCategoryThresholdProperty">
            <summary>
            Identifies the OthersCategoryThreshold dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.OthersCategoryThreshold">
            <summary>
            Gets or sets the threshold value that determines if slices are grouped into the Others slice.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.OthersCategoryTypeProperty">
            <summary>
            Identifies the OthersCategoryType dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.OthersCategoryType">
            <summary>
            Gets or sets whether to use numeric or percent-based threshold value.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.OthersCategoryTextProperty">
            <summary>
            Identifies the OthersCateogryText dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.OthersCategoryText">
            <summary>
            Gets or sets the label of the Others slice.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.ExplodedRadiusProperty">
            <summary>
            Identifies the ExplodedRadius dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.ExplodedRadius">
            <summary>
            Determines how much the exploded slice is offset from the center. Value between 0 and 1.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.ActualExplodedRadius">
            <summary>
            Gets a coerced ExplodedRadius property value between 0 and 1.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.RadiusFactorProperty">
            <summary>
            Identifies the RadiusFactor dependency property.
            </summary>        
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.RadiusFactor">
            <summary>
            Gets or sets the scaling factor of the chart's radius. Value between 0 and 1.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.ActualRadiusFactor">
            <summary>
            Gets a coerced version of RadiusFactor property between 0 and 1.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.AllowSliceSelectionProperty">
            <summary>
            Identifies the AllowSliceSelection dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.AllowSliceSelection">
            <summary>
            Gets or sets whether the slices can be selected.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.AllowSliceExplosionProperty">
            <summary>
            Identifies the AllowSliceExplosion dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.AllowSliceExplosion">
            <summary>
            Gets or sets whether the slices can be exploded.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.ExplodedSlices">
            <summary>
            Gets or sets the collection of exploded slice indices.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.LegendProperty">
            <summary>
            Identifies the Legend dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.Legend">
            <summary>
            Gets or sets the legend used for the current chart.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.LabelExtentProperty">
            <summary>
            Identifies the LabelExtent dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.LabelExtent">
            <summary>
            Gets or sets the pixel amount by which the labels are offset from the edge of the slices.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.StartAngleProperty">
            <summary>
            Identifies the StartAngle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.StartAngle">
            <summary>
            Gets or sets the starting angle of the chart.
            <para>This is a dependency property.</para>
            </summary>
            <remarks>
            The default zero value is equivalent to 3 o'clock.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.SweepDirectionProperty">
            <summary>
            Identifies the SweepDirection dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.SweepDirection">
            <summary>
            Gets or sets the rotational direction of the chart.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.SelectedSlices">
            <summary>
            Gets or sets the collection of selected slice indices.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.OthersCategoryStyleProperty">
            <summary>
            Identifies the OthersCategoryStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.OthersCategoryStyle">
            <summary>
            Gets or sets the style used for the Others slice.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.SelectedStyleProperty">
            <summary>
            Identifies the SelectedStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.SelectedStyle">
            <summary>
            Gets or sets the style used when a slice is selected.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.ToolTipStyleProperty">
            <summary>
            Identifies the ToolTipStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.ToolTipStyle">
            <summary>
            Gets or sets the style used for the tooltip.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.BrushesProperty">
            <summary>
            Identifies the Brushes dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.Brushes">
            <summary>
            Gets or sets the palette of brushes to use for coloring the slices.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.OutlinesProperty">
            <summary>
            Identifies the Outlines dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.Outlines">
            <summary>
            Gets or sets the palette of brushes to use for outlines on the slices.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.LegendItemTemplate">
            <summary>
            Gets or sets the LegendItemTemplate property.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            The legend item control content is created according to the LegendItemTemplate on-demand by
            the chart object itself.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.LegendItemTemplateProperty">
            <summary>
            Identifies the LegendItemTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.LegendItemBadgeTemplate">
            <summary>
            Gets or sets the LegendItemBadgeTemplate property.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            The legend item badge is created according to the LegendItemBadgeTemplate on-demand by
            the chart object itself.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.LegendItemBadgeTemplateProperty">
            <summary>
            Identifies the LegendItemBadgeTemplate dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.LabelTemplateProperty">
            <summary>
            Identifies the LabelTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.LabelTemplate">
            <summary>
            The DataTemplate to use when creating pie chart labels.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.IsSurfaceInteractionDisabled">
            <summary>
            Gets or sets whether all surface interactions with the plot area should be disabled.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.IsSurfaceInteractionDisabledProperty">
            <summary>
            Identifies the IsSurfaceInteractionDisabled dependency property.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.PieChartBase.FormatLabel">
            <summary>
            Used to customize the labels for the slices in the chart based on the item in context.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.PieChartBase.FormatLegendLabel">
            <summary>
            Used to format the legend labels for the slices in the chart based on the item in context.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.HasFormatLabel">
            <summary>
            Returns whether the pie chart has a FormatLabel event handler attached.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.HasFormatLegendLabel">
            <summary>
            Returns whether the pie chart has a FormatLegendLabel event handler attached.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.PixelScalingRatio">
            <summary>
            Gets or sets the scaling value used to affect the pixel density of the control.
            </summary>
            <remarks>
            A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control
            to appear blurry.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.ActualPixelScalingRatio">
            <summary>
            Resolved pixel scaling ratio. Unless explicitly overridden by the <see cref="P:Infragistics.Controls.Charts.PieChartBase.PixelScalingRatio"/> property,
            this one returns the default ratio enforced by device. High resolution devices will initialize this property
            to a higher value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.SelectionMode">
            <summary>
            Gets or sets which mode to use for selecting slices.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.SelectionModeProperty">
            <summary>
            Identifies the SelectionMode dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.SelectedItem">
            <summary>
            Gets or sets the currently selected data item.  If a different data item is provided the pie chart
            will select the slice associated with the new item.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PieChartBase.SelectedItemProperty">
            <summary>
            Identifies the SelectedItem dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.SelectedItems">
            <summary>
            Gets the currently selected data items.  Adding or removing data items from this collection will
            select or deselect the slices associated with those items.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.PieChartBase.LabelClick">
            <summary>
            Raised when the slice's label is clicked.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.PieChartBase.SelectedItemChanging">
            <summary>
            Raised when the SelectedItem property is changing.  This event is cancelable.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.PieChartBase.SelectedItemsChanging">
            <summary>
            Raised when the SelectedItems collection is changing.  This event is cancelable.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.PieChartBase.SelectedItemChanged">
            <summary>
            Raised when the SelectedItem property has changed.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.PieChartBase.SelectedItemsChanged">
            <summary>
            Raised when the SelectedItems collection has changed.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.PieChartBase.SliceClick">
            <summary>
            Raised when the slice is clicked.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.GetLabel(Infragistics.Controls.Charts.Slice)">
            <summary>
            Gets the label for a data item.
            </summary>
            <param name="slice">The data item to get the label for.</param>
            <returns>The requested label.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.FindAngle(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculates the angle in degrees on the unit circle.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.DataUpdatedOverride(Infragistics.Portable.FastItemsSourceEventAction,System.Int32,System.Int32,System.String)">
            <summary>
            Called whenever a change is made to the data in the ItemsSource.
            </summary>
            <param name="action">The action performed on the data</param>
            <param name="position">The index of the first item involved in the update.</param>
            <param name="count">The number of items in the update.</param>
            <param name="propertyName">The name of the updated property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.RenderChart">
            <summary>
            Renders the piechart.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.PrepareData">
            <summary>
            Extracts data from the data source.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.PrepareSlices">
            <summary>
            Prepares data needed to create pie slices.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.PrepareLabels">
            <summary>
            Prepares data needed to create piechart labels.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.Viewport">
            <summary>
            Gets or sets the chart's viewport.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.RenderSlices">
            <summary>
            Renders pie slices.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.RenderLabels">
            <summary>
            Renders pie labels.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.RenderLegendItems">
            <summary>
            Renders legend items.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.ExportVisualData">
            <summary>
            Returns the chart visuals expressed as a PieChartVisualData object.
            </summary>
            <returns>A PieChartVisualData object representing the current chart visuals.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.RegisterDoubleColumn(System.String)">
            <summary>
            Registers a numeric column in the FastItemsSource.
            </summary>
            <param name="memberPath">The name on the property on each data item to get a value from.</param>
            <returns>A FastItemColumn containing the numeric values retrieved the given memberPath of each item in the FastItemsSource.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.RegisterObjectColumn(System.String)">
            <summary>
            Registers a column in the FastItemsSource.
            </summary>
            <param name="memberPath">The name on the property on each data item to get a value from.</param>
            <returns>A FastItemColumn containing the values retrieved the given memberPath of each item in the FastItemsSource.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.SelectedIndicesChangedOverride(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Fired when the SelectedIndices collection has changed.
            </summary>
            <param name="args">The event data that describes how the collection has changed.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.OnSelectedItemsChangedOverride(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Fired when the SelectedItems collection has changed.
            </summary>
            <param name="args">The event data that describes how the collection has changed.</param>
        </member>
        <member name="E:Infragistics.Controls.Charts.PieChartBase.PropertyChanged">
            <summary>
            Notifies clients that a property value has changed.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.PieChartBase.PropertyUpdated">
            <summary>
            Occurs when the value of a property is updated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.RaisePropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            Raises the property changed.
            </summary>
            <param name="name">The name.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.SyncSelectionProperties">
            <summary>
            Update the SelectedItem and SelectedItems properties with the current SelectedSlices.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.SyncSelectionIndices">
            <summary>
            Update the SelectedSlices with the current SelectedItem or SelectedItems properties.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.SimulateLeftClick(Infragistics.Portable.Point)">
            <summary>
            Simulates a mouse click action at the specified point.
            </summary>
            <param name="point">The point to click at.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.ProvideContainer(System.Object)">
            <summary>
            Invoked by the containing object to provide reference to the container.
            </summary>
            <param name="container">Reference to the container.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.OnContainerResized(System.Double,System.Double)">
            <summary>
            Invoked by a containing object to pass along the new container dimensions.
            </summary>
            <param name="width">New container width.</param>
            <param name="height">New container height.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.NotifyContainerResized">
            <summary>
            Notification from the containing object that the container has been resized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.GetContainerRect">
            <summary>
            Gets container size.
            </summary>
            <returns>Rectangle with the dimensions of the container.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.GetContainerOffsets">
            <summary>
            Gets left and top offsets inside of the container.
            </summary>
            <returns>A Point with the left and top coordinates within the container.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.Destroy">
            <summary>
            Invoked when the instance is being destroyed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.Flush">
            <summary>
            Use to force the pie chart to finish any deferred work before printing or evaluating its visual.
            </summary>
            <remarks>
            This should only be called if the visual of the pie chart needs to be synchronously saved or evaluated. 
            Calling this method too often will hinder the performance of the pie chart.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.FontBrush">
            <summary>
            Gets or sets the font brush for the labels.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBase.TextStyle">
            <summary>
            Manually overrides the style to use for the labels.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.NotifySetItem(System.Object,System.Int32,System.Object,System.Object)">
            <summary>
            Manually notifies the pie chart's data source that an item has been changed in the data it is bound to.
            This should not be called the data that the pie chart is bound to is already observable.
            </summary>
            <param name="source_">The data source.</param>
            <param name="index">The index of the changed item.</param>
            <param name="oldItem">The old item at the designated index.</param>
            <param name="newItem">The new item at the designated index.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.NotifyClearItems(System.Object)">
            <summary>
            Manually notifies the pie chart's data source that the data it has bound to has been cleared and needs to be re-examined.
            This should not be called if the data that the pie chart is bound to is already observable.
            </summary>
            <param name="source_">The data source.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.NotifyInsertItem(System.Object,System.Int32,System.Object)">
            <summary>
            Manually notifies the pie chart's data source that an item has been inserted in the data it is bound to.
            This should not be called if the data that the pie chart is bound to is already observable.
            </summary>
            <param name="source_">The data source.</param>
            <param name="index">The index of the inserted item.</param>
            <param name="newItem">The new item at the designated index.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.NotifyRemoveItem(System.Object,System.Int32,System.Object)">
            <summary>
            Manually notifies the pie chart's data source that an item has been removed in the data it is bound to.
            This should not be called if the data that the grid is bound to is already observable.
            </summary>
            <param name="source_">The data source.</param>
            <param name="index">The index of the removed item.</param>
            <param name="oldItem">The old item at the designated index.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.SetWidgetLevelDataSource(System.Object)">
            <summary>
            Assigns data source for the items.
            </summary>
            <param name="source_">Array of the data source items.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.RemoveWidgetLevelDataSource">
            <summary>
            Resets items data source.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBase.StyleUpdated">
            <summary>
            Invoked when style is updated.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.PieChartFormatLabelEventArgs">
            <summary>
            Represents event arguments for PieChartFormatLabel.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartFormatLabelEventArgs.Item">
            <summary>
            Gets the data context for this label.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartFormatLabelEventArgs.Label">
            <summary>
            Gets or sets the label text.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.PieSliceDataContext">
            <summary>
            DataContext for a pie slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieSliceDataContext.Slice">
            <summary>
            Gets or sets the reference to the slice object in context.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieSliceDataContext.PercentValue">
            <summary>
            Gets or sets the value of this slice as a percentage of the total pie.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieSliceDataContext.IsOthersSlice">
            <summary>
            Gets or sets whether this slice is an Others slice or not.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.PieSliceOthersContext">
            <summary>
            Represents the selected data contained inside the Others slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieSliceOthersContext.Data">
            <summary>
            The underlying data contained by the Others pie slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieSliceOthersContext.Slice">
            <summary>
            The Others slice
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.PointSeries">
            <summary>
            Represents a XamDataChart point series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PointSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PointSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PointSeries.#ctor">
            <summary>
            Initializes a new instance of the PointSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PointSeries.TestHit(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks for a matching data item at the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if a matching data item was found; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PointSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.PointSeries.IsMarkerlessDisplayPreferred">
            <summary>
            Overridden by derived series classes to indicate when markerless display is preferred or not.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.PolarAreaSeries">
            <summary>
            Represents a XamDataChart polar area series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAreaSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAreaSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAreaSeries.#ctor">
            <summary>
            Initializes a new PolarAreaSeries instance.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAreaSeries.ClearPoints(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Overridden in derived classes to clear the series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAreaSeries.RenderPoints(Infragistics.Controls.Charts.PolarFrame,Infragistics.Controls.Charts.PolarBaseView)">
            <summary>
            Overridden in derived classes to render the series.
            </summary>
            <param name="frame">The frame to render</param>
            <param name="view">The PolarBaseView in context.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarAreaSeries.IsClosed">
            <summary>
            Gets whether the shape of the series is a closed shape.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PolarAreaSeries.UnknownValuePlottingProperty">
            <summary>
            Identifies the UnknownValuePlotting dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarAreaSeries.UnknownValuePlotting">
            <summary>
            Determines how unknown values will be plotted on the chart.
            </summary>
            <remarks>
            Null and Double.NaN are two examples of unknown values.
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Charts.PolarBase">
            <summary>
            Represents the base class from which all XamDataChart polar series are derived.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBase.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBase.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBase.ClearAxes">
            <summary>
            Call to null out the axes of a series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarBase.IsPolar">
            <summary>
            Checks if this series is a polar series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBase.#ctor">
            <summary>
            Initializes a new instance of the PolarBase class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarBase.AngleMemberPath">
            <summary>
            Gets or sets the path to use to find the angle values for the series.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PolarBase.AngleMemberPathProperty">
            <summary>
            Identifies the AngleMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarBase.RadiusMemberPath">
            <summary>
            Gets or sets the path to use to get the radius values for the series.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PolarBase.RadiusMemberPathProperty">
            <summary>
            Identifies the RadiusMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarBase.AngleColumn">
            <summary>
            The column of angle values.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarBase.RadiusColumn">
            <summary>
            The column of radius values.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarBase.AngleAxis">
            <summary>
            Gets the effective angle axis for the current series object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PolarBase.AngleAxisProperty">
            <summary>
            Identifies the ActualXAxis dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarBase.RadiusAxis">
            <summary>
            Gets the effective radius axis for the current series object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PolarBase.RadiusAxisProperty">
            <summary>
            Identifies the ActualXAxis dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarBase.UseCartesianInterpolation">
            <summary>
            Gets or sets whether Cartesian Interpolation should be used rather than Archimedian 
            spiral based interpolation.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PolarBase.UseCartesianInterpolationProperty">
            <summary>
            Identifies the UseCartesianInterpolation dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarBase.MaximumMarkers">
            <summary>
            Gets or sets the maximum number of markers displayed by the current series.
            <para>If more than the specified number of markers are visible, the polar series will automatically
            choose a representative set.</para>
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PolarBase.MaximumMarkersProperty">
            <summary>
            Identifies the MaximumMarkers dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarBase.TrendLineType">
            <summary>
            Gets or sets the trend type for the current series object.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PolarBase.TrendLineTypeProperty">
            <summary>
            Identifies the TrendLineType dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarBase.TrendLineBrush">
            <summary>
            Gets or sets the brush that specifies how the current series
            object's trend line is drawn.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PolarBase.TrendLineBrushProperty">
            <summary>
            Identifies the TrendLineBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarBase.ActualTrendLineBrush">
            <summary>
            Gets the effective TrendLineBrush for this series.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PolarBase.ActualTrendLineBrushProperty">
            <summary>
            Identifies the ActualTrendLineBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarBase.TrendLineThickness">
            <summary>
            Gets or sets the thickness of the current series object's trend line.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PolarBase.TrendLineThicknessProperty">
            <summary>
            Identifies the TrendLineThickness dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarBase.TrendLineDashCap">
            <summary>
            Gets or sets the PenLineCap enumeration value that specifies how the the current
            series object's trend line dash ends are drawn. 
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PolarBase.TrendLineDashCapProperty">
            <summary>
            Identifies the TrendLineDashCap dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarBase.TrendLineDashArray">
            <summary>
            Gets or sets a collection of double values that indicate the pattern of dashes and gaps that
            is used to draw the trend line for the current series object. 
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PolarBase.TrendLineDashArrayProperty">
            <summary>
            Identifies the TrendLineDashArray dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarBase.TrendLinePeriod">
            <summary>
            Gets or sets the moving average period for the current series object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PolarBase.TrendLinePeriodProperty">
            <summary>
            Identifies the TrendLinePeriod dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PolarBase.TrendLineZIndexProperty">
            <summary>
            Identifies the TrendLineZIndex dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarBase.TrendLineZIndex">
            <summary>
            Sets or Gets the Trendline Z index.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarBase.ClipSeriesToBounds">
            <summary>
            Gets or sets whether to clip the series to the bounds.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            Setting this to true can effect performance.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.PolarBase.ClipSeriesToBoundsProperty">
            <summary>
            Identifies the ClipSeriesToBounds dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBase.InvalidateAxes">
            <summary>
            Invalidates the axes associated with the series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBase.DataUpdatedOverride(Infragistics.Portable.FastItemsSourceEventAction,System.Int32,System.Int32,System.String)">
            <summary>
            Overridden in derived classes to respond to data updates.
            </summary>
            <param name="action">The action performed on the bound data.</param>
            <param name="position">The position at which the action was performed.</param>
            <param name="count">The count of affected positions.</param>
            <param name="propertyName">The property name changed.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBase.ViewportRectChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Overridden in derived classes to respond to the viewport changing.
            </summary>
            <param name="oldViewportRect">The old viewport dimensions.</param>
            <param name="newViewportRect">The new viewport dimensions.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBase.WindowRectChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Overridden in derived classes to respond to the window changing.
            </summary>
            <param name="oldWindowRect">The old window.</param>
            <param name="newWindowRect">The new window.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBase.ValidateSeries(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBase.RenderSeriesOverride(System.Boolean)">
            <summary>
            Called to render the series.
            </summary>
            <param name="animate">True if the change should be animated.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBase.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBase.ScrollIntoView(System.Object)">
            <summary>
            Scrolls the requested item into view, if possible.
            </summary>
            <param name="item">The item to scroll into view.</param>
            <returns>True if it was possible to scroll the item into view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBase.GetItem(Infragistics.Portable.Point)">
            <summary>
            Gets the item that is the best match for the specified world coordinates.
            </summary>
            <param name="world">The world coordinates to use.</param>
            <returns>The item that is the best match.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBase.GetItemIndex(Infragistics.Portable.Point)">
            <summary>
            Gets the index of the item that resides at the provided world coordinates.
            </summary>
            <param name="world">The world coordinates of the requested item.</param>
            <returns>The requested item's index.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBase.GetAxes">
            <summary>
            Gets this series' axes as an array.
            </summary>
            <returns>An array containing all axes used by this series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBase.GetItemValue(System.Object,System.String)">
            <summary>
            Gets a value based on one of the valid member paths for this series type.
            </summary>
            <param name="item">An item from the data source bound to the series.</param>
            <param name="memberPathName">The property name of a valid member path for the series</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBase.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBase.CanUseAsRadiusAxis(System.Object)">
            <summary>
            Determine if object can be used as RadiusAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBase.CanUseAsAngleAxis(System.Object)">
            <summary>
            Determine if object can be used as AngleAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBase.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBase.UpdateIndexedProperties">
            <summary>
            Updates properties that are based on the index of the series in the series collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBase.RenderThumbnail(Infragistics.Portable.Rect,Infragistics.Controls.Charts.RenderSurface)">
            <summary>
            Renders the thumbnail for the OPD.
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="surface">The render target.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBase.RenderAlternateView(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.RenderSurface,System.String,System.Double)">
            <summary>
            Renders an alternate view for of this series
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="surface">The render target.</param>
            <param name="viewIdentifier">String key to use for this view target</param>
            <param name="effectiveScalingRatio">The effective scaling ratio.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBase.ExportVisualDataOverride(System.Object)">
            <summary>
            Exports visual information about the series for use by external tools and functionality.
            </summary>
            <param name="svd">The data container.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.PolarLineSeries">
            <summary>
            Represents a XamDataChart polar line series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarLineSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarLineSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarLineSeries.#ctor">
            <summary>
            Initializes a new PolarLineSeries instance.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarLineSeries.ClearPoints(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Overridden in derived classes to clear the series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarLineSeries.RenderPoints(Infragistics.Controls.Charts.PolarFrame,Infragistics.Controls.Charts.PolarBaseView)">
            <summary>
            Overridden in derived classes to render the series.
            </summary>
            <param name="frame">The frame to render.</param>
            <param name="view">The PolarBaseView in context.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.PolarLineSeries.UnknownValuePlottingProperty">
            <summary>
            Identifies the UnknownValuePlotting dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarLineSeries.UnknownValuePlotting">
            <summary>
            Determines how unknown values will be plotted on the chart.
            </summary>
            <remarks>
            Null and Double.NaN are two examples of unknown values.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarLineSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.PolarLineSeriesBase">
            <summary>
            Represents the base class from which all XamDataChart polar line series are derived.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarLineSeriesBase.CreateView">
            <summary>
            Called to create the view for the series
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarLineSeriesBase.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarLineSeriesBase.#ctor">
            <summary>
            Instantiates a polar line series base series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarLineSeriesBase.ClippingDisabled">
            <summary>
            Gets whether the clipper is disabled.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarLineSeriesBase.IsClosed">
            <summary>
            Gets whether the shape of the series is a closed polygon.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarLineSeriesBase.ClearPoints(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Overridden in derived classes to clear the series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarLineSeriesBase.RenderPoints(Infragistics.Controls.Charts.PolarFrame,Infragistics.Controls.Charts.PolarBaseView)">
            <summary>
            Overridden in derived classes to render the series.
            </summary>
            <param name="frame">The frame to render.</param>
            <param name="view">The PolarBaseView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarLineSeriesBase.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.PolarScatterSeries">
            <summary>
            Represents a XamDataChart polar scatter series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarScatterSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarScatterSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarScatterSeries.#ctor">
            <summary>
            Initializes a new instance of the ScatterSeries class. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.PolarSplineAreaSeries">
            <summary>
            Represents a XamDataChart polar spline area series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarSplineAreaSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarSplineAreaSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarSplineAreaSeries.#ctor">
            <summary>
            Initializes a new PolarAreaSeries instance.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarSplineAreaSeries.ClearPoints(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Overridden in derived classes to clear the series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarSplineAreaSeries.RenderPoints(Infragistics.Controls.Charts.PolarFrame,Infragistics.Controls.Charts.PolarBaseView)">
            <summary>
            Overridden in derived classes to render the series.
            </summary>
            <param name="frame">The frame to render</param>
            <param name="view">The PolarBaseView in context.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarSplineAreaSeries.IsClosed">
            <summary>
            Gets whether the shape of the series is a closed polygon.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarSplineAreaSeries.Stiffness">
            <summary>
            Gets or sets the Stiffness property.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PolarSplineAreaSeries.StiffnessProperty">
            <summary>
            Identifies the Stiffness dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarSplineAreaSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.PolarSplineSeries">
            <summary>
            Represents a XamDataChart polar spline series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarSplineSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarSplineSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarSplineSeries.#ctor">
            <summary>
            Initializes a new instance of the PolarSplineSeries class. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarSplineSeries.Stiffness">
            <summary>
            Gets or sets the Stiffness property.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PolarSplineSeries.StiffnessProperty">
            <summary>
            Identifies the Stiffness dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarSplineSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarSplineSeries.ClearPoints(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Overridden in derived classes to clear the series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarSplineSeries.RenderPoints(Infragistics.Controls.Charts.PolarFrame,Infragistics.Controls.Charts.PolarBaseView)">
            <summary>
            Overridden in derived classes to render the series.
            </summary>
            <param name="frame">The frame to render</param>
            <param name="view">The PolarBaseView in context.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.PositiveVolumeIndexIndicator">
            <summary>
            Represents a XamDataChart Positive Volume Index (PVI) indicator series.
            </summary>
            <remarks>
            Default required members: Close, Volume
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.PositiveVolumeIndexIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PositiveVolumeIndexIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.PriceChannelOverlay">
            <summary>
            Represents a XamDataChart Financial Price Channel Overlay series.
            </summary>
            <remarks>
            Default required members: High, Low
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.PriceChannelOverlay.#ctor">
            <summary>
            Initializes a new instance of the PriceChannelOverlay class. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PriceChannelOverlay.Period">
            <summary>
            Gets or sets the moving average period for the current PriceChannelOverlay object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for Bollinger band periods is 14.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PriceChannelOverlay.PeriodProperty">
            <summary>
            Identifies the Period dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PriceChannelOverlay.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PriceChannelOverlay.ValidateSeries(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PriceChannelOverlay.ValidateOverlay">
            <summary>
            Ensures the data for the overlay is calculated and valid before rendering.
            </summary>
            <returns>If rerendering is required.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PriceChannelOverlay.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PriceChannelOverlay.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PriceChannelOverlay.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PriceChannelOverlay.GetSeriesValue(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available main value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PriceChannelOverlay.GetNextOrExactIndex(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Getting the next index that is near a given world position, if possible, otherwise NaN.
            </summary>
            <param name="world">The world position to use in searching.</param>
            <param name="skipUnknowns">Should unknown values be skipped when searching.</param>
            <returns>The found index, otherwise, -1.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PriceChannelOverlay.GetPreviousOrExactIndex(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Getting the previous index that is near a given world position, if possible, otherwise NaN.
            </summary>
            <param name="world">The world position to use in searching.</param>
            <param name="skipUnknowns">Should unknown values be skipped when searching.</param>
            <returns>The found index, otherwise, -1.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PriceChannelOverlay.GetReferenceValue">
            <summary>
            Gets a numeric value representing the initial value of this series.
            </summary>
            <returns>A numeric value representing the initial value of this series.</returns>
            <remarks>The reference value is used by the PercentChangeYAxis, where all values in the series are scaled relative to the initial value.</remarks>
        </member>
        <member name="T:Infragistics.Controls.Charts.PriceVolumeTrendIndicator">
            <summary>
            Represents a XamDataChart Price Volume Trend Indicator series.
            </summary>
            <remarks>
            Default required members: Volume, Close
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.PriceVolumeTrendIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PriceVolumeTrendIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.RadialAreaSeries">
            <summary>
            Represents a XamDataChart radial area series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAreaSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The view that was created.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAreaSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAreaSeries.#ctor">
            <summary>
            Initializes a new instance of the RadialAreaSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAreaSeries.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialAreaSeries.UnknownValuePlottingProperty">
            <summary>
            Identifies the UnknownValuePlotting dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialAreaSeries.UnknownValuePlotting">
            <summary>
            Determines how unknown values will be plotted on the chart.
            </summary>
            <remarks>
            Null and Double.NaN are two examples of unknown values.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAreaSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialAreaSeries.IsClosed">
            <summary>
            Gets whether the shape of the series polygon is a closed shape.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.RadialBase">
            <summary>
            Represents the base class for all XamDataChart radial series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialBase.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialBase.#ctor">
            <summary>
            Initializes a new instance of the RadialBase class. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialBase.GetCategoryAxisIfPresent">
            <summary>
            Gets the category axis in context, if one is present.
            </summary>
            <returns>The category axis in context, if one is present.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialBase.IsRadial">
            <summary>
            Checks if this series is a radial series
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialBase.AngleAxis">
            <summary>
            Gets the effective angle axis for the current series object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialBase.AngleAxisProperty">
            <summary>
            Identifies the ActualAngleAxis dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialBase.ValueAxis">
            <summary>
            Gets the effective value axis for the current series object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialBase.ValueAxisProperty">
            <summary>
            Identifies the ValueAxis dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialBase.GetAxes">
            <summary>
            Gets this series' axes as an array.
            </summary>
            <returns>An array containing all axes used by this series.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialBase.ClipSeriesToBounds">
            <summary>
            Gets or sets whether to clip the series to the bounds.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            Setting this property to true will decrease chart performance.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialBase.ClipSeriesToBoundsProperty">
            <summary>
            Identifies the ClipSeriesToBounds dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialBase.WindowRectChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Overridden in derived classes when they want to respond to the chart's window changing.
            </summary>
            <param name="oldWindowRect">The old window rectangle of the chart.</param>
            <param name="newWindowRect">The new window rectangle of the chart.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialBase.ViewportRectChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Overridden in derived classes when they want to respond to the viewport changing.
            </summary>
            <param name="oldViewportRect">The old viewport rectangle.</param>
            <param name="newViewportRect">The new viewport rectangle.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialBase.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialBase.CanUseAsValueAxis(System.Object)">
            <summary>
            Determine if object can be used as ValueAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialBase.CanUseAsAngleAxis(System.Object)">
            <summary>
            Determine if object can be used as AngleAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialBase.GetItem(Infragistics.Portable.Point)">
            <summary>
            Gets the item that is the best match for the specified world coordinates.
            </summary>
            <param name="world">The world coordinates to use.</param>
            <returns>The item that is the best match.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialBase.GetAngleFromWorld(Infragistics.Portable.Point)">
            <summary>
            Gets the angle to the provided world position from the center of the radial series.
            </summary>
            <param name="world">The world position to get the angle for</param>
            <returns>The angle for the world position.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialBase.GetExactItemIndex(Infragistics.Portable.Point)">
            <summary>
            Gets the precise item index, if possible, based on the closeness to the previous or next whole integer. If the series cannot provide this information, GetExactItemIndex will return the same integer value as GetItemIndex.
            </summary>
            <param name="world">The world position for which to return the index.</param>
            <returns>The double index indicating which whole number index the point is closest to.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialBase.GetItemIndex(Infragistics.Portable.Point)">
            <summary>
            Get the index of the item near the provided world coordinates.
            </summary>
            <param name="world">The world coordinates for which to getch the item index.</param>
            <returns>The index of the item near the coordinates.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialBase.ScrollIntoView(System.Object)">
            <summary>
            Scrolls the specified item into the view.
            </summary>
            <param name="item">The item to scroll into view.</param>
            <returns>True if the item has been scrolled into view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialBase.GetOffsetValue">
            <summary>
            Returns the offset value for this series if grouped on a category axis.
            </summary>
            <returns>The offset value</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialBase.GetCategoryWidth">
            <summary>
            Returns the width of the category grouping this series is in.
            </summary>
            <returns>The width of the category group.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialBase.InvalidateAxes">
            <summary>
            Invalidates the axes associatede with the series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialBase.ValidateSeries(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialBase.RenderSeriesOverride(System.Boolean)">
            <summary>
            Called to render the series.
            </summary>
            <param name="animate">True if the change should be animated.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.RadialColumnSeries">
            <summary>
            Represents a XamDataChart radial column series.
            <remarks>Compare values across categories by using radial rectangles.</remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialColumnSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialColumnSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialColumnSeries.#ctor">
            <summary>
            Initializes a new instance of the RadialColumnSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialColumnSeries.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes
            call ApplyTemplate.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialColumnSeries.RadiusX">
            <summary>
            Gets or sets the x-radius of the ellipse that is used to round the corners of the column.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialColumnSeries.RadiusXProperty">
            <summary>
            Identifies the RadiusX dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialColumnSeries.RadiusY">
            <summary>
            Gets or sets the y-radius of the ellipse that is used to round the corners of the column.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialColumnSeries.RadiusYProperty">
            <summary>
            Identifies the RadiusY dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialColumnSeries.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialColumnSeries.GetItemSpan">
            <summary>
            For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.
            </summary> 
        </member>
        <member name="T:Infragistics.Controls.Charts.RadialLineSeries">
            <summary>
            Represents a XamDataChart radial line series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialLineSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The view that was created.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialLineSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialLineSeries.#ctor">
            <summary>
            Initializes a new instance of the RadialLineSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialLineSeries.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes
            call ApplyTemplate.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialLineSeries.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialLineSeries.UnknownValuePlottingProperty">
            <summary>
            Identifies the UnknownValuePlotting dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialLineSeries.UnknownValuePlotting">
            <summary>
            Determines how unknown values will be plotted on the chart.
            </summary>
            <remarks>
            Null and Double.NaN are two examples of unknown values.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialLineSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialLineSeries.IsClosed">
            <summary>
            Gets whether the shape for the series is a closed polygon.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.RadialPieSeries">
            <summary>
            Represents a XamDataChart radial pie series.
            <remarks>Compare values across categories by using radial pie slices.</remarks>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialPieSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialPieSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for a series is created.
            </summary>
            <param name="view">The view that was created.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialPieSeries.#ctor">
            <summary>
            Initializes a new instance of the ColumnSeries class. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialPieSeries.RadiusX">
            <summary>
            Gets or sets the x-radius of the ellipse that is used to round the corners of the column.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialPieSeries.RadiusXProperty">
            <summary>
            Identifies the RadiusX dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialPieSeries.RadiusY">
            <summary>
            Gets or sets the y-radius of the ellipse that is used to round the corners of the column.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialPieSeries.RadiusYProperty">
            <summary>
            Identifies the RadiusY dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialPieSeries.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialPieSeries.GetItemSpan">
            <summary>
            For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialPieSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.RangeAreaSeries">
            <summary>
            Represents a XamDataChart range area series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeAreaSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeAreaSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.RangeAreaSeries.IsAreaOrLine">
            <summary>
            Gets whether the current series shows an area or line shape.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeAreaSeries.TestRangeAreaOver(Infragistics.Portable.Point,Infragistics.Portable.Point,Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Tests if the given position should trigger an interaction, based on the given low and high positions.
            </summary>
            <param name="position">The point to evaluate.</param>
            <param name="lowPosition">The low position to compare to.</param>
            <param name="highPosition">The high position to compare to.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if the given position should trigger an interaction, otherwise False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeAreaSeries.TestHit(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks for a matching data item at the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if a matching data item was found; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeAreaSeries.#ctor">
            <summary>
            Initializes a new instance of the RangeAreaSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeAreaSeries.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.RangeCategorySeries">
            <summary>
            Represents the base class for all XamDataChart ranged category/value series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeCategorySeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeCategorySeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeCategorySeries.#ctor">
            <summary>
            Initialises a default, empty RangeCategorySeries object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RangeCategorySeries.LowMemberPath">
            <summary>
            Gets or sets the value mapping property for the current series object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeCategorySeries.GetItemValue(System.Object,System.String)">
            <summary>
            Gets a value based on one of the valid member paths for this series type.
            </summary>
            <param name="item">An item from the data source bound to the series.</param>
            <param name="memberPathName">The property name of a valid member path for the series</param>
            <returns></returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.RangeCategorySeries.LowMemberPathProperty">
            <summary>
            Identifies the LowMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RangeCategorySeries.LowColumn">
            <summary>
            Gets the column representing the Low values for the data source.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RangeCategorySeries.HighMemberPath">
            <summary>
            Gets or sets the value mapping property for the current series object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RangeCategorySeries.HighMemberPathProperty">
            <summary>
            Identifies the HighMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RangeCategorySeries.HighColumn">
            <summary>
            Gets the column representing the High values of the data source.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeCategorySeries.GetDefaultTransitionInMode">
            <summary>
            Gets default transition-in mode 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeCategorySeries.RasterizePolygon(Infragistics.Portable.Graphics.Shapes.Polyline,Infragistics.Portable.Graphics.Shapes.Polygon,Infragistics.Portable.Graphics.Shapes.Polyline,System.Int32,System.Collections.Generic.List{System.Double[]},System.Boolean)">
            <summary>
            Populates the points in the given shapes based on the data in the given collection.
            </summary>
            <param name="polyline0">The polyline element which represents the lower limit of data values.</param>
            <param name="polygon01">The polygon element which represents the range of data values.</param>
            <param name="polyline1">The polyline element which represents the upper limit of data values.</param>
            <param name="count">The number of data items.</param>
            <param name="buckets">An array with the x, y minimum, and y maximum values.</param>
            <param name="useX0AsX1">Boolean which toggles which indexes to find values from the buckets parameter.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeCategorySeries.ScrollIntoView(System.Object)">
            <summary>
            Scrolls the series to display the item for the specified data item.
            </summary>
            <remarks>
            The series is scrolled by the minimum amount required to place the specified data item within
            the central 80% of the visible axis.
            </remarks>
            <param name="item">The data item (item) to scroll to.</param>
            <returns>True if the specified item could be displayed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeCategorySeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeCategorySeries.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeCategorySeries.DataUpdatedOverride(Infragistics.Portable.FastItemsSourceEventAction,System.Int32,System.Int32,System.String)">
            <summary>
            When overridden in a derived class, DataChangedOverride is called whenever a change is made to
            the series data.
            </summary>
            <param name="action">The action performed on the data</param>
            <param name="position">The index of the first item involved in the update.</param>
            <param name="count">The number of items in the update.</param>
            <param name="propertyName">The name of the updated property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeCategorySeries.ValidateSeries(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeCategorySeries.RenderThumbnail(Infragistics.Portable.Rect,Infragistics.Controls.Charts.RenderSurface)">
            <summary>
            Renders the thumbnail for the OPD pane.
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="surface">The render target.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeCategorySeries.RenderAlternateView(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.RenderSurface,System.String,System.Double)">
            <summary>
            Renders an alternate view for of this series
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="surface">The render target.</param>
            <param name="viewIdentifier">String key to use for this view target</param>
            <param name="effectiveScalingRatio">The effective scaling ratio.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeCategorySeries.GetReferenceValue">
            <summary>
            Gets a numeric value representing the initial value of this series.
            </summary>
            <returns>A numeric value representing the initial value of this series.</returns>
            <remarks>The reference value is used by the PercentChangeYAxis, where all values in the series are scaled relative to the initial value.</remarks>
        </member>
        <member name="T:Infragistics.Controls.Charts.RangeColumnSeries">
            <summary>
            Represents a XamDataChart range column series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeColumnSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeColumnSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeColumnSeries.#ctor">
            <summary>
            Initializes a new instance of the AreaSeries class. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RangeColumnSeries.RadiusX">
            <summary>
            Gets or sets the x-radius of the ellipse that is used to round the corners of the column.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RangeColumnSeries.RadiusXProperty">
            <summary>
            Identifies the RadiusX dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RangeColumnSeries.RadiusY">
            <summary>
            Gets or sets the y-radius of the ellipse that is used to round the corners of the column.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RangeColumnSeries.RadiusYProperty">
            <summary>
            Identifies the RadiusY dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RangeColumnSeries.HasIndividualElements">
            <summary>
            Checks if the series has individual elements
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeColumnSeries.GetSeriesValueBoundingBox(Infragistics.Portable.Point)">
            <summary>
            If possible, will return the best available value bounding box within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value bounding box for</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeColumnSeries.TestHit(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks for a matching data item at the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if a matching data item was found; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeColumnSeries.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeColumnSeries.GetItemSpan">
            <summary>
            For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.
            </summary> 
        </member>
        <member name="T:Infragistics.Controls.Charts.RateOfChangeAndMomentumIndicator">
            <summary>
            Represents a XamDataChart Rate of Change and Momentum indicator series.
            </summary>
            <remarks>
            Default required members: Close
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.RateOfChangeAndMomentumIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RateOfChangeAndMomentumIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RateOfChangeAndMomentumIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current AverageTrueRangeSeries object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for AverageTrueRange periods is 14.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RateOfChangeAndMomentumIndicator.PeriodProperty">
            <summary>
            Identifies the Period dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RateOfChangeAndMomentumIndicator.PeriodOverride">
            <summary>
            Specifies the period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RateOfChangeAndMomentumIndicator.SetPeriodOverride(System.Int32)">
            <summary>
            Sets the Period property.
            </summary>
            <param name="period">The value for the Period property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.RelativeStrengthIndexIndicator">
            <summary>
            Represents a XamDataChart Relative Strength Index indicator series.
            </summary>
            <remarks>
            Default required members: Close
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.RelativeStrengthIndexIndicator.#ctor">
            <summary>
            Creates an instance of the RelativeStrengthIndexIndicator
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RelativeStrengthIndexIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RelativeStrengthIndexIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RelativeStrengthIndexIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current RelativeStrengthIndexIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for RSI periods is 14.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RelativeStrengthIndexIndicator.PeriodProperty">
            <summary>
            Identifies the Period dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RelativeStrengthIndexIndicator.PeriodOverride">
            <summary>
            Specifies the period to use for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RelativeStrengthIndexIndicator.SetPeriodOverride(System.Int32)">
            <summary>
            Sets the Period property.
            </summary>
            <param name="period">The value for the Period property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.RenderRequestedEventArgs">
            <summary>
            EventArgs class for RenderRequested events.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RenderRequestedEventArgs.Animate">
            <summary>
            True if animation is requested.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.RingSeries">
            <summary>
            Represents one ring in <see cref="T:Infragistics.Controls.Charts.XamDoughnutChart"/> series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.RingSeries"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeries.Ring">
            <summary>
            Gets reference to the ring data.
            </summary>
            <value>The ring.</value>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overriden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property udpates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingSeries.AnalyzeRings">
            <summary>
            Called when the series should analyze data and return the rings which should be displayed.
            </summary>
            <returns>
            	<see cref="T:Infragistics.Controls.Charts.RingCollection"/> with object which should be displayed.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingSeries.PrepareData">
            <summary>
            Called when <see cref="P:Infragistics.Controls.Charts.RingSeriesBase.ItemsSource"/> is changed and data should be updated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingSeries.PrepareBrushes">
            <summary>
            Called when <see cref="P:Infragistics.Controls.Charts.RingSeriesBase.Brushes"/> is changed and data should be updated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingSeries.RenderSeries">
            <summary>
            Renders the series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingSeries.RenderLegendItems">
            <summary>
            Renders the legend items.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.RingSeriesBase">
            <summary>
            Represents a <see cref="T:Infragistics.Controls.Charts.XamDoughnutChart"/> base series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingSeriesBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.RingSeriesBase"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.Chart">
            <summary>
            Gets reference to the owning chart.
            </summary>
            <value>The chart.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.ItemsSource">
            <summary>
            Gets or sets the data source for the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.ValueMemberPathProperty">
            <summary>
            Identifies the ValueMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.ValueMemberPath">
            <summary>
            Gets or Sets the property name that contains the values.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.LabelMemberPathProperty">
            <summary>
            Identifies the LabelMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.LabelMemberPath">
            <summary>
            Gets or sets the property name that contains the labels.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.LegendLabelMemberPathProperty">
            <summary>
            Identifies the LegendLabelMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.LegendLabelMemberPath">
            <summary>
            Gets or sets the property name that contains the legend labels.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.RingSeriesBase.PropertyChanged">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.RingSeriesBase.PropertyUpdated">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingSeriesBase.RaisePropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            Raises PropertyChanged and/or PropertyUpdated events if any listeners have been registered.
            </summary>
            <param name="propertyName">Name of property whos value changed.</param>
            <param name="oldValue">Property value before change.</param>
            <param name="newValue">Property value after change.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.LabelsPositionProperty">
            <summary>
            Identifies the LabelsPosition dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.LabelsPosition">
            <summary>
            Gets or sets the position of chart labels.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.LeaderLineVisibilityProperty">
            <summary>
            Identifies the LeaderLineVisibility dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.LeaderLineVisibility">
            <summary>
            Gets or sets whether the leader lines are visible.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.LeaderLineStyleProperty">
            <summary>
            Identifies the LeaderLineStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.LeaderLineStyle">
            <summary>
            Gets or sets the style for the leader lines.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.LeaderLineTypeProperty">
            <summary>
            Identifies the LeaderLineType dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.LeaderLineType">
            <summary>
            Gets or sets what type of leader lines will be used for the outside end labels.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.LeaderLineMarginProperty">
            <summary>
            Identifies the LeaderLineMargin dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.LeaderLineMargin">
            <summary>
            Gets or sets the margin between a label and its leader line. The default is 6 pixels.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.ToolTipProperty">
            <summary>
            Identifies the ToolTip dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.ToolTip">
            <summary>
            Gets or sets the ToolTip for the pie chart.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.OthersCategoryThresholdProperty">
            <summary>
            Identifies the OthersCategoryThreshold dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.OthersCategoryThreshold">
            <summary>
            Gets or sets the threshold value that determines if slices are grouped into the Others slice.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.OthersCategoryTypeProperty">
            <summary>
            Identifies the OthersCategoryType dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.OthersCategoryType">
            <summary>
            Gets or sets whether to use numeric or percent-based threshold value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.OthersCategoryTextProperty">
            <summary>
            Identifies the OthersCateogryText dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.OthersCategoryText">
            <summary>
            Gets or sets the label of the Others slice.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.LegendProperty">
            <summary>
            Identifies the Legend dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.Legend">
            <summary>
            Gets or sets the legend used for the current chart.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.RingSeriesBase.FormatLabel">
            <summary>
            Used to customize the labels for the slices in the chart based on the item in context.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.RingSeriesBase.FormatLegendLabel">
            <summary>
            Used to format the legend labels for the slices in the chart based on the item in context.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.LabelExtentProperty">
            <summary>
            Identifies the LabelExtent dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.LabelExtent">
            <summary>
            Gets or sets the pixel amount by which the labels are offset from the edge of the slices.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.StartAngleProperty">
            <summary>
            Identifies the StartAngle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.StartAngle">
            <summary>
            Gets or sets the starting angle of the chart.
            </summary>
            <remarks>
            The default zero value is equivalent to 3 o'clock.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.OthersCategoryStyleProperty">
            <summary>
            Identifies the OthersCategoryStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.OthersCategoryStyle">
            <summary>
            Gets or sets the style used for the Others slice.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.SelectedStyleProperty">
            <summary>
            Identifies the SelectedStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.SelectedStyle">
            <summary>
            Gets or sets the style used when a slice is selected.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.SelectedStyleResolved">
            <summary>
            Gets or sets the style used when a slice is selected.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.ToolTipStyleProperty">
            <summary>
            Identifies the ToolTipStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.ToolTipStyle">
            <summary>
            Gets or sets the style used for the tooltip.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.BrushesProperty">
            <summary>
            Identifies the Brushes dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.Brushes">
            <summary>
            Gets or sets the palette of brushes to use for coloring the slices.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.OutlinesProperty">
            <summary>
            Identifies the Outlines dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.Outlines">
            <summary>
            Gets or sets the palette of brushes to use for outlines on the slices.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.FontBrush">
            <summary>
            Gets or sets the font brush for the labels.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.LabelOuterColor">
            <summary>
            Gets or sets the color for labels rendered outside of the pie chart.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.LabelOuterColorProperty">
            <summary>
            Identifies the LabelOuterColor dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.LabelInnerColor">
            <summary>
            Gets or sets the color for labels rendered inside of the pie chart.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.LabelInnerColorProperty">
            <summary>
            Identifies the LabelInnerColor dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.TextStyle">
            <summary>
            Gets or sets the text style to use for labels.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.LegendItemTemplate">
            <summary>
            Gets or sets the LegendItemTemplate property.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            The legend item control content is created according to the LegendItemTemplate on-demand by
            the chart object itself.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.LegendItemTemplateProperty">
            <summary>
            Identifies the LegendItemTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.LegendItemBadgeTemplate">
            <summary>
            Gets or sets the LegendItemBadgeTemplate property.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            The legend item badge is created according to the LegendItemBadgeTemplate on-demand by
            the chart object itself.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.LegendItemBadgeTemplateProperty">
            <summary>
            Identifies the LegendItemBadgeTemplate dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.LabelTemplateProperty">
            <summary>
            Identifies the LabelTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.LabelTemplate">
            <summary>
            The DataTemplate to use when creating pie chart labels.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.IsSurfaceInteractionDisabled">
            <summary>
            Gets or sets whether all surface interactions with the plot area should be disabled.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.IsSurfaceInteractionDisabledProperty">
            <summary>
            Identifies the IsSurfaceInteractionDisabled dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.RadiusFactorProperty">
            <summary>
            Identifies the RadiusFactor dependency property.
            </summary>        
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.RadiusFactor">
            <summary>
            Gets or sets the scaling factor of the chart's radius. Value between 0 and 1.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase._fastItemsSourceAttached">
            <summary>
            True if the FastItemsSource has been attached.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.FastItemsSource_Event">
            <summary>
            Event handler for the FastItemsSource event.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RingSeriesBase.FastItemsSourceProperty">
            <summary>
            Identifies the FastItemsSource dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.FastItemsSource">
            <summary>
            Gets or sets the ItemsSource property for the pie chart.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <para>
            The FastItemsSource is a proxy which handles caching, conversion and
            weak event listeners.
            </para>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingSeriesBase.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBase.RootCanvas">
            <summary>
            Gets the root canvas for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingSeriesBase.DataUpdatedOverride(Infragistics.Portable.FastItemsSourceEventAction,System.Int32,System.Int32,System.String)">
            <summary>
            Called whenever a change is made to the data in the ItemsSource.
            </summary>
            <param name="action">The action performed on the data</param>
            <param name="position">The index of the first item involved in the update.</param>
            <param name="count">The number of items in the update.</param>
            <param name="propertyName">The name of the updated property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingSeriesBase.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingSeriesBase.OnViewCreated(Infragistics.Controls.Charts.RingSeriesBaseView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingSeriesBase.AnalyzeRings">
            <summary>
            Called when the series should analyze data and return the rings which should be displayed.
            </summary>
            <returns><see cref="T:Infragistics.Controls.Charts.RingCollection"/> with object which should be displayed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingSeriesBase.PrepareData">
            <summary>
            Called when <see cref="P:Infragistics.Controls.Charts.RingSeriesBase.ItemsSource"/> is changed and data should be updated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingSeriesBase.PrepareBrushes">
            <summary>
            Called when <see cref="P:Infragistics.Controls.Charts.RingSeriesBase.Brushes"/> is changed and data should be updated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingSeriesBase.ProvideContainer(System.Object)">
            <summary>
            Called by the UI framework to provide a UI container for rendering this control.
            </summary>
            <param name="container">The UI container element.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingSeriesBase.RenderSeries">
            <summary>
            Renders the series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingSeriesBase.RenderLegendItems">
            <summary>
            Renders the legend items.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ScaleLegend">
            <summary>
            Represents a legend that indicates the size and the color scale for a collection of series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScaleLegend.LegendScaleElement">
            <summary>
            Gets the shape that represents the legend scale.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScaleLegend.MinText">
            <summary>
            Gets the TextBlock that shows the minimum scale value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScaleLegend.MaxText">
            <summary>
            Gets the TextBlock that shows the maximum scale value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScaleLegend.#ctor">
            <summary>
            Creates a new instance of ScaleLegend.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScaleLegend.IsScale">
            <summary>
            Gets whether or not this legend supports a scale visual
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ScalerParams">
            <summary>
            Class containing several properties which are used as parameters passed to scaling operations in a SeriesViewer.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScalerParams.#ctor(Infragistics.Portable.Rect,Infragistics.Portable.Rect,System.Boolean,Infragistics.Portable.Rect)">
            <summary>
            ScalerParams constructor.
            </summary>
            <param name="window">The WindowRect in context.</param>
            <param name="viewport">The Viewport in context.</param>
            <param name="inverted">True if the axis is inverted, otherwise False.</param>
            <param name="effectiveViewport">Inner viewport with margins</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScalerParams.#ctor(Infragistics.Portable.Rect,Infragistics.Portable.Rect,System.Boolean)">
            <summary>
            ScalerParams constructor.
            </summary>
            <param name="window">The WindowRect in context.</param>
            <param name="viewport">The Viewport in context.</param>
            <param name="inverted">True if the axis is inverted, otherwise False.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScalerParams.WindowRect">
            <summary>
            Rect representing the current zoom and pan.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScalerParams.ViewportRect">
            <summary>
            Rect corresponding roughly to the layout area. The reference frame for scaled coordinates.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScalerParams.EffectiveViewportRect">
            <summary>
            The Rect to which ViewportRect has been coerced for scaling purposes, if such behavior has been defined. Generally a subarea of ViewportRect.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScalerParams.IsInverted">
            <summary>
            Bool that determines whether or not to invert the scale.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScalerParams.ReferenceValue">
            <summary>
            The series reference value.
            </summary>
            <remarks>Typically, the reference value is the initial value of the series.  The reference value is used by the PercentChangeYAxis, where all values in the series are scaled relative to the initial value.</remarks>
        </member>
        <member name="T:Infragistics.Controls.Charts.ScatterAreaSeries">
            <summary>
            Series class which draws a colored 2D surface based on a triangulation of XY data with numeric values assigned to each point.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeries.#ctor">
            <summary>
            Creates an instance of ScatterAreaSeries.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterAreaSeries.ColorScale">
            <summary>
            Gets or sets ColorScale used to resolve the color values of points in the series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeries.GetItemValue(System.Object,System.String)">
            <summary>
            Gets a value based on one of the valid member paths for this series type.
            </summary>
            <param name="item">An item from the data source bound to the series.</param>
            <param name="memberPathName">The property name of a valid member path for the series</param>
            <returns></returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterAreaSeries.ColorMemberPathProperty">
            <summary>
            Identifies the ColorMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterAreaSeries.ColorMemberPath">
            <summary>
            Gets or sets the name of the property on each data item containing a numeric value which can be converted to a color by the ColorScale.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterAreaSeries.ColorColumn">
            <summary>
            The FastItemColumn containing numeric values which are converted to colors by the ColorScale.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterAreaSeries.UseDeferredMouseEnterAndLeave">
            <summary>
            Gets or sets a value indicating whether to use the deferred mouse enter and leave or not.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeries.RenderSeriesOverride(System.Boolean)">
            <summary>
            Renders the series.
            </summary>
            <param name="animate">Whether or not to transition smoothly from the previous state of the series.</param>
            <remarks>
            The animate parameter is relevant only for series which implement transitions.  Not all series in the DataChart support this behavior.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeries.RenderAlternateView(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.RenderSurface,System.String,System.Double)">
            <summary>
            Renders an alternate view for of this series
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="surface">The render target.</param>
            <param name="viewIdentifier">String key to use for this view target</param>
            <param name="effectiveScalingRatio">The effective scaling ratio.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeries.RenderWithView(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Renders this series with specified a view
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeries.GetItem(Infragistics.Portable.Point)">
            <summary>
            Gets the item that is the best match for the specified world coordinates.
            </summary>
            <param name="world">The world coordinates to use.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterAreaSeries.XSource">
            <summary>
            Gets or sets the array of X data values
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterAreaSeries.YSource">
            <summary>
            Gets or sets the array of Y data values
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterAreaSeries.DefaultSeriesColors">
            <summary>
            The default series colors used only when we don't have any Chart.Brushes
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeries.GetScalePaletteBasedOnSeriesBrush">
            <summary>
            Gets a unique palette of colors based on a brush of the series
            This ensures that multiple area series will render with different color palette
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeries.GetActualColorScale">
            <summary>
            Gets the effective color scale for the current series object.
            Note this color scale will generate Palette of colors based on a brush of the series
            if the color scale does not have any colors set on the Palette property
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeries.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeries.CreateView">
            <summary>
            Creates the view object for this series.
            </summary>
            <returns>A ScatterAreaSeriesView.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterAreaSeries.ScatterAreaSeriesView">
            <summary>
            Gets or sets the view of series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeries.AttachImage(System.Object)">
            <summary>
            Attaches an image to the view of this series
            </summary> 
        </member>
        <member name="T:Infragistics.Controls.Charts.ScatterBase">
            <summary>
            Represents the base class for all XamDataChart scatter series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.ClearAxes">
            <summary>
            Call to null out the axes of a series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterBase.IsScatter">
            <summary>
            Checks if this series is a scatter series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.GetAxes">
            <summary>
            Gets this series' axes as an array.
            </summary>
            <returns>An array containing all axes used by this series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.GetItemValue(System.Object,System.String)">
            <summary>
            Gets a value based on one of the valid member paths for this series type.
            </summary>
            <param name="item">An item from the data source bound to the series.</param>
            <param name="memberPathName">The property name of a valid member path for the series</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.GetVisiblePointsOfInterest(System.Collections.Generic.List{Infragistics.Controls.Charts.SeriesPointOfInterest},System.Boolean,System.Int32)">
            <summary>
            Returns a number of points of interest for the series, if supported.
            </summary>
            <param name="points">a collection to fill with the ponts of interest.</param> 
            <param name="useValueAsLabel">Indicates if the primary value should be used for the label, rather than the primary label, if applicable.</param>
            <param name="labelPrecision">Indicates the precision to use for labelling with a numeric value. -1 indicates no rounding should be performed.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.GetResolvedHitTestMode">
            <summary>
            Gets the resolved hit test mode of this series.
            </summary>
            <returns>The resolved hit test mode of this series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.GetSeriesValueMarkerBoundingBox(Infragistics.Portable.Point)">
            <summary>
            If possible, will return the best available value marker bounding box within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinates for which to get a value marker bounding box for</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.TestHit(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks for a matching data item at the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if a matching data item was found; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.#ctor">
            <summary>
            ScatterBase constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterBase.XAxis">
            <summary>
            Gets or sets the effective x-axis for the current object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterBase.XAxisProperty">
            <summary>
            Identifies the XAxis dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterBase.YAxis">
            <summary>
            Gets or sets the effective y-axis for the current object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterBase.YAxisProperty">
            <summary>
            Identifies the YAxis dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterBase.XMemberPath">
            <summary>
            Gets or sets the value mapping property for the current series object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterBase.XMemberPathProperty">
            <summary>
            Identifies the XMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterBase.XColumn">
            <summary>
            The IFastItemColumn containing X values.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterBase.YMemberPath">
            <summary>
            Gets or sets the value mapping property for the current series object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterBase.YMemberPathProperty">
            <summary>
            Identifies the YMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterBase.YColumn">
            <summary>
            The IFastItemColumn containing Y values.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterBase.TrendLineType">
            <summary>
            Gets or sets the trend type for the current scatter series.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterBase.TrendLineTypeProperty">
            <summary>
            Identifies the TrendLineType dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterBase.TrendLineBrush">
            <summary>
            Gets or sets the brush to use to draw the trend line.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterBase.TrendLineBrushProperty">
            <summary>
            Identifies the TrendLineBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterBase.ActualTrendLineBrush">
            <summary>
            Gets the effective TrendLineBrush for this series.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterBase.ActualTrendLineBrushProperty">
            <summary>
            Identifies the ActualTrendLineBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterBase.TrendLineThickness">
            <summary>
            Gets or sets the thickness of the current scatter series object's trend line.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterBase.TrendLineThicknessProperty">
            <summary>
            Identifies the TrendLineThickness dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterBase.TrendLineDashCap">
            <summary>
            Gets or sets the PenLineCap enumeration value that specifies how the current
            scatter series object's trend line dash ends are drawn. 
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterBase.TrendLineDashCapProperty">
            <summary>
            Identifies the TrendLineDashCap dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterBase.TrendLineDashArray">
            <summary>
            Gets or sets a collection of double values that indicate the pattern of dashes and gaps that
            is used to draw the trend line for the current scatter series object. 
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterBase.TrendLineDashArrayProperty">
            <summary>
            Identifies the TrendLineDashArray dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterBase.TrendLinePeriod">
            <summary>
            Gets or sets the moving average period for the current scatter series object.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            The typical, and initial, value for trend line period is 7.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterBase.TrendLinePeriodProperty">
            <summary>
            Identifies the TrendLinePeriod dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterBase.MarkerCollisionAvoidance">
            <summary>
            The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterBase.MarkerCollisionAvoidanceProperty">
            <summary>
            Identifies the MarkerCollisionAvoidance dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterBase.TrendLineZIndexProperty">
            <summary>
            Identifies the TrendLineZIndex dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterBase.TrendLineZIndex">
            <summary>
            Gets or sets the Z-Index of the trend line.  Values greater than 1000 will result in the trend line being rendered in front of the series data.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterBase.MaximumMarkers">
            <summary>
            Gets or sets the maximum number of markerItems displayed by the current series.
            <para>If more than the specified number of markerItems are visible, the series will automatically
            choose a representative set.</para>
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterBase.MaximumMarkersProperty">
            <summary>
            Identifies the MaximumMarkers dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.InvalidateAxes">
            <summary>
            Invalidates the axes associated with the series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterBase.ErrorBarSettings">
            <summary>
            The error bar settings for the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterBase.ErrorBarSettingsProperty">
            <summary>
            Identifies the ErrorBarSettings dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.CanUseAsYAxis(System.Object)">
            <summary>
            Determine if object can be used as YAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.CanUseAsXAxis(System.Object)">
            <summary>
            Determine if object can be used as XAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.MustReact(System.String,Infragistics.Portable.FastItemsSourceEventAction)">
            <summary>
            Returns true if the series should react to a data change.
            </summary>
            <param name="propertyName">The name of the property being changed.</param>
            <param name="action">The action on the items source.</param>
            <returns>True if the series should react.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.DataUpdatedOverride(Infragistics.Portable.FastItemsSourceEventAction,System.Int32,System.Int32,System.String)">
            <summary>
            When overridden in a derived class, DataChangedOverride is called whenever a change is made to
            the series data.
            </summary>
            <param name="action">The action performed on the data</param>
            <param name="position">The index of the first item involved in the update.</param>
            <param name="count">The number of items in the update.</param>
            <param name="propertyName">The name of the updated property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.GetItem(Infragistics.Portable.Point)">
            <summary>
            Gets the item that is the best match for the specified world coordinates.
            </summary>
            <param name="world">The world coordinates to use.</param>
            <returns>The item that is the best match.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.GetItemIndex(Infragistics.Portable.Point)">
            <summary>
            Gets the index of the item that resides at the provided world coordinates.
            </summary>
            <param name="world">The world coordinates of the requested item.</param>
            <returns>The requested item's index.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.ScrollIntoView(System.Object)">
            <summary>
            Scrolls the series to display the item for the specified data item.
            </summary>
            <remarks>
            The series is scrolled by the minimum amount required to place the specified data item within
            the central 80% of the visible axis.
            </remarks>
            <param name="item">The data item (item) to scroll to.</param>
            <returns>True if the specified item could be displayed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.ViewportRectChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Overridden in derived classes when they want to respond to the viewport changing.
            </summary>
            <param name="oldViewportRect">The old viewport rectangle.</param>
            <param name="newViewportRect">The new viewport rectangle.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.WindowRectChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Overridden in derived classes when they want to respond to the chart's window changing.
            </summary>
            <param name="oldWindowRect">The old window rectangle of the chart.</param>
            <param name="newWindowRect">The new window rectangle of the chart.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.ValidateSeries(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.GetViewInfo(Infragistics.Portable.Rect@,Infragistics.Portable.Rect@)">
            <summary>
            Gets the view info for the series.
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="windowRect">The window to use.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.RenderSeriesOverride(System.Boolean)">
            <summary>
            Renders the series.
            </summary>
            <param name="animate">True if the change should be animated.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.UpdateIndexedProperties">
            <summary>
            Updates properties that are based on the index of the series in the series collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.RenderThumbnail(Infragistics.Portable.Rect,Infragistics.Controls.Charts.RenderSurface)">
            <summary>
            Renders the thumbnail for the OPD.
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="surface">The render target.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.RenderAlternateView(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.RenderSurface,System.String,System.Double)">
            <summary>
            Renders an alternate view for of this series
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="surface">The render target.</param>
            <param name="viewIdentifier">String key to use for this view target</param>
            <param name="effectiveScalingRatio">The effective scaling ratio.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.ExportVisualDataOverride(System.Object)">
            <summary>
            Exports visual information about the series for use by external tools and functionality.
            </summary>
            <param name="svd">The data container.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBase.GetReferenceValue">
            <summary>
            Gets a numeric value representing the initial value of this series.
            </summary>
            <returns>A numeric value representing the initial value of this series.</returns>
            <remarks>The reference value is used by the PercentChangeYAxis, where all values in the series are scaled relative to the initial value.</remarks>
        </member>
        <member name="T:Infragistics.Controls.Charts.ScatterContourSeries">
            <summary>
            Series class for rendering isarithmic contours based on a triangulation of X+Y+Value points in the ItemsSource.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterContourSeries.#ctor">
            <summary>
            ScatterContourSeries constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterContourSeries.GetItemValue(System.Object,System.String)">
            <summary>
            Gets a value based on one of the valid member paths for this series type.
            </summary>
            <param name="item">An item from the data source bound to the series.</param>
            <param name="memberPathName">The property name of a valid member path for the series</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterContourSeries.CreateView">
            <summary>
            Creates the view object for this series.
            </summary>
            <returns>A ScatterContourSeriesView.</returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterContourSeries.ValueMemberPathProperty">
            <summary>
            Identifies the ValueMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterContourSeries.ValueMemberPath">
            <summary>
            Gets or set the name of the property from which to retrieve the numeric values from the ItemsSource items.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterContourSeries.ValueColumn">
            <summary>
            Gets the FastItemColumn containing the numeric values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterContourSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterContourSeries.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">the view of this series</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterContourSeries.RenderSeriesOverride(System.Boolean)">
            <summary>
            Renders the series.
            </summary>
            <param name="animate">Whether or not to transition smoothly from the previous state of the series.</param>
            <remarks>
            The animate parameter is relevant only for series which implement transitions.  Not all series in the DataChart support this behavior.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterContourSeries.RenderAlternateView(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.RenderSurface,System.String,System.Double)">
            <summary>
            Renders an alternate view for of this series
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="surface">The render target.</param>
            <param name="viewIdentifier">String key to use for this view target</param>
            <param name="effectiveScalingRatio">The effective scaling ratio.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterContourSeries.RenderWithView(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Renders this series with specified a view
            </summary> 
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterContourSeries.FillScaleProperty">
            <summary>
            Identifies the FillScale dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterContourSeries.FillScale">
            <summary>
            Gets or sets the ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterContourSeries.ValueResolver">
            <summary>
            Gets or set the ContourValueResolver used to determine the numeric values of contours.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterContourSeries.ValidateSeries(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterContourSeries.GetHitDataContext(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Gets the DataContext matching the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">Is hit test performed by a finger gesture.</param>
            <returns>The DataContext matching an item found at the given position.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.ScatterLineSeries">
            <summary>
            Represents a XamDataChart scatter line series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterLineSeries.#ctor">
            <summary>
            Initializes a new instance of the ScatterLineSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterLineSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterLineSeries.TestHit(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks for a matching data item at the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if a matching data item was found; otherwise, False.</returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterLineSeries.UnknownValuePlottingProperty">
            <summary>
            Identifies the UnknownValuePlotting dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterLineSeries.UnknownValuePlotting">
            <summary>
            Determines how unknown values will be plotted on the chart.
            </summary>
            <remarks>
            Null and Double.NaN are two examples of unknown values.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterLineSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ScatterPolygonSeries">
            <summary>
            Series class which renders polygons as Paths based on lists of points in the ItemsSource.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeries.#ctor">
            <summary>
            ScatterPolygonSeries constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeries.ShouldRecordMarkerPositions">
            <summary>
            Checks if this series should render markers
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeries.RenderWithView(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Renders this series with specified a view
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeries.CreateView">
            <summary>
            Creates the view object for this series.
            </summary>
            <returns>A ScatterPolygonSeriesView.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterPolygonSeries.HasMarkers">
            <summary>
            Returns whether the current series supports visual markers.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeries.GetActualMarkerBrush">
            <summary>
            Returns the actual marker brush used by the series if the series has markers.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeries.GetActualMarkerOutlineBrush">
            <summary>
            Returns the actual marker outline used by the series if the series has markers.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeries.GetActualMarkerTemplate">
            <summary>
            Returns the actual marker template used by the series if the series has markers.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterPolygonSeries.ShapeStyleSelectorProperty">
            <summary>
            Identifies the ShapeStyleSelector dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterPolygonSeries.ShapeStyleSelector">
            <summary>
            The StyleSelector which is used to select a style for each Shape.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterPolygonSeries.ShapeStyleProperty">
            <summary>
            Identifies the ShapeStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterPolygonSeries.ShapeStyle">
            <summary>
            The default style to apply to all Shapes in the series.
            </summary>        
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterPolygonSeries.MarkerType">
            <summary>
            Gets or sets the marker type for the current series object.
            </summary>
            <remarks>
            If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterPolygonSeries.MarkerTypeProperty">
            <summary>
            Identifies the MarkerType dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterPolygonSeries.MarkerTemplate">
            <summary>
            Gets or sets the MarkerTemplate for the current series object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterPolygonSeries.MarkerTemplateProperty">
            <summary>
            Identifies the MarkerTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterPolygonSeries.ActualMarkerTemplate">
            <summary>
            Gets the effective marker template for the current series object.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterPolygonSeries.ActualMarkerTemplateProperty">
            <summary>
            Identifies the ActualMarkerTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterPolygonSeries.MarkerBrush">
            <summary>
            Gets or sets the brush that specifies how the current series object's marker interiors are painted.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterPolygonSeries.MarkerBrushProperty">
            <summary>
            Identifies the MarkerBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterPolygonSeries.ActualMarkerBrush">
            <summary>
            Gets the effective marker brush for the current series object.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterPolygonSeries.ActualMarkerBrushProperty">
            <summary>
            Identifies the ActualMarkerBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterPolygonSeries.MarkerOutline">
            <summary>
            Gets or sets the brush that specifies how the current series object's marker outlines are painted.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterPolygonSeries.MarkerOutlineProperty">
            <summary>
            Identifies the MarkerOutline dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterPolygonSeries.ActualMarkerOutline">
            <summary>
            Gets the effective marker outline for the current series object.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterPolygonSeries.ActualMarkerOutlineProperty">
            <summary>
            Identifies the ActualMarkerOutline dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterPolygonSeries.MarkerStyle">
            <summary>
            Gets or sets the Style to be used for the markers.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterPolygonSeries.MarkerStyleProperty">
            <summary>
            Identifies the MarkerStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterPolygonSeries.MarkerCollisionAvoidance">
            <summary>
            The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterPolygonSeries.MarkerCollisionAvoidanceProperty">
            <summary>
            Identifies the MarkerCollisionAvoidance dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeries.UpdateIndexedProperties">
            <summary>
            Updates properties that are based on the index of the series in the series collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeries.GetHitDataContext(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Gets the DataContext matching the given position.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeries.GetVisiblePointsOfInterest(System.Collections.Generic.List{Infragistics.Controls.Charts.SeriesPointOfInterest},System.Boolean,System.Int32)">
            <summary>
            Returns a number of points of interest for the series, if supported.
            </summary>
            <param name="points">a collection to fill with the ponts of interest.</param> 
            <param name="useValueAsLabel">Indicates if the primary value should be used for the label, rather than the primary label, if applicable.</param>
            <param name="labelPrecision">Indicates the precision to use for labelling with a numeric value. -1 indicates no rounding should be performed.</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.ScatterPolylineSeries">
            <summary>
            Series class used for displaying multiple polylines for datasources which contain multiple lists of points.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolylineSeries.#ctor">
            <summary>
            ScatterPolylineSeries constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolylineSeries.CreateView">
            <summary>
            Creates the view object for this series.
            </summary>
            <returns>A ScatterPolylineSeriesView.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolylineSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterPolylineSeries.PolylineView">
            <summary>
            Gets or sets the view of series
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterPolylineSeries.IsClosed">
            <summary>
            Boolean indicating whether shapes in this series should be closed polygons.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterPolylineSeries.ShapeStyleSelectorProperty">
            <summary>
            Identifies the ShapeStyleSelector dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterPolylineSeries.ShapeStyleSelector">
            <summary>
            The StyleSelector which is used to select a style for each Shape.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterPolylineSeries.ShapeStyleProperty">
            <summary>
            Identifies the ShapeStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterPolylineSeries.ShapeStyle">
            <summary>
            The default style to apply to all Shapes in the series.
            </summary>        
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolylineSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolylineSeries.RenderWithView(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Renders this series with specified a view
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolylineSeries.GetHitDataContext(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Gets the DataContext matching the given position.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ScatterSeries">
            <summary>
            Represents a XamDataChart scatter series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The view that has been created.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterSeries.IsMarkerlessDisplayPreferred">
            <summary>
            Overridden by derived series classes to indicate when markerless display is preferred or not.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterSeries.#ctor">
            <summary>
            Initializes a new instance of the ScatterSeries class. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ScatterSplineSeries">
            <summary>
            Represents a XamDataChart scatter spline series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterSplineSeries.#ctor">
            <summary>
            Initializes a new instance of the ScatterSplineSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterSplineSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterSplineSeries.Stiffness">
            <summary>
            Gets or sets the Stiffness property.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterSplineSeries.StiffnessProperty">
            <summary>
            Identifies the Stiffness dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterSplineSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterSplineSeries.GetResolvedHitTestMode">
            <summary>
            Gets the resolved hit test mode of this series.
            </summary>
            <returns>The resolved hit test mode of this series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterSplineSeries.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ScatterTriangulationSeries">
            <summary>
            Base class for series which triangulate XY data prior to rendering.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterTriangulationSeries.ClearAxes">
            <summary>
            Call to null out the axes of a series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterTriangulationSeries.XMemberPathProperty">
            <summary>
            Identifies the XMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterTriangulationSeries.XMemberPath">
            <summary>
            The name of the property from which to extract the X-coordinate for each item in the ItemsSource.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterTriangulationSeries.GetItemValue(System.Object,System.String)">
            <summary>
            Gets a value based on one of the valid member paths for this series type.
            </summary>
            <param name="item">An item from the data source bound to the series.</param>
            <param name="memberPathName">The property name of a valid member path for the series</param>
            <returns></returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterTriangulationSeries.YMemberPathProperty">
            <summary>
            Identifies the YMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterTriangulationSeries.YMemberPath">
            <summary>
            The name of the property from which to extract the Y-coordinate for each item in the ItemsSource.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterTriangulationSeries.XColumn">
            <summary>
            The FastItemColumn used to access the X values corresponding to XMemberPath.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterTriangulationSeries.YColumn">
            <summary>
            The FastItemColumn used to access the Y values corresponding to YMemberPath.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterTriangulationSeries.XAxis">
            <summary>
            The X-Axis for this series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterTriangulationSeries.XAxisProperty">
            <summary>
            Identifies the XAxis dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterTriangulationSeries.YAxis">
            <summary>
            The Y-Axis for this series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterTriangulationSeries.YAxisProperty">
            <summary>
            Identifies the YAxis dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterTriangulationSeries.RenderSeriesOverride(System.Boolean)">
            <summary>
            Renders the series.
            </summary>
            <param name="animate">Whether or not to transition smoothly from the previous state of the series.</param>
            <remarks>
            The animate parameter is relevant only for series which implement transitions.  Not all series in the DataChart support this behavior.
            </remarks>
        </member>
        <member name="E:Infragistics.Controls.Charts.ScatterTriangulationSeries.TriangulationStatusChanged">
            <summary>
            Raised when the status of an ongoing Triangulation has changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterTriangulationSeries.RegisterTriangleIntColumn(Infragistics.Portable.IFastItemsSource,System.String)">
            <summary>
            Registers a column in the FastItemsSource containing triangle indices.
            </summary>
            <param name="itemsSource">The FastItemsSource containing the triangle column.</param>
            <param name="memberPath">The property name to get triangle indices from on each item in the FastItemsSource.</param>
            <returns>An IFastItemColumn containing all the integer values in the FastItemsSource items at the given memberPath.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterTriangulationSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overriden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property udpates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterTriangulationSeries.CanUseAsYAxis(System.Object)">
            <summary>
            Determine if object can be used as YAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterTriangulationSeries.CanUseAsXAxis(System.Object)">
            <summary>
            Determine if object can be used as XAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterTriangulationSeries.ValidateSeries(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterTriangulationSeries.InvalidateAxes">
            <summary>
            Method called when the series has changed in a way that will invalidate the range and rendering of its axes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterTriangulationSeries.DataUpdatedOverride(Infragistics.Portable.FastItemsSourceEventAction,System.Int32,System.Int32,System.String)">
            <summary>
            Method called whenever a change is made to the series data.
            </summary>
            <param name="action">The action performed on the data</param>
            <param name="position">The index of the first item involved in the update.</param>
            <param name="count">The number of items in the update.</param>
            <param name="propertyName">The name of the updated property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterTriangulationSeries.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterTriangulationSeries.WindowRectChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Overriden in derived classes when they want to respond to the chart's window changing.
            </summary>
            <param name="oldWindowRect">The old window rectangle of the chart.</param>
            <param name="newWindowRect">The new window rectangle of the chart.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterTriangulationSeries.ViewportRectChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Overriden in derived classes when they want to respond to the viewport changing.
            </summary>
            <param name="oldViewportRect">The old viewport rectangle.</param>
            <param name="newViewportRect">The new viewport rectangle.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterTriangulationSeries.TrianglesSourceProperty">
            <summary>
            Identifies the TrianglesSource dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterTriangulationSeries.TrianglesSource">
            <summary>
            The source of triangulation data.
            </summary>
            <remarks>This property is optional.  If it is left as null, the triangulation will be created based on the items in the ItemsSource.  Triangulation is a demanding operation, so the runtime performance will be better when specifying a TriangulationSource, especially when a large number of data items are present.</remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterTriangulationSeries.FastTrianglesSourceProperty">
            <summary>
            Identifies the FastTrianglesSource dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterTriangulationSeries.FastTrianglesSource">
            <summary>
            The FastItemsSource which is created from the TrianglesSource.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterTriangulationSeries.TriangleVertexMemberPath1Property">
            <summary>
            Identifies the TriangleVertexMemberPath1 dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterTriangulationSeries.TriangleVertexMemberPath1">
            <summary>
            The name of the property of the TrianglesSource items which, for each triangle, contains the index of the first vertex point in the ItemsSource.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterTriangulationSeries.TriangleVertexMemberPath2Property">
            <summary>
            Identifies the TriangleVertexMemberPath2 dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterTriangulationSeries.TriangleVertexMemberPath2">
            <summary>
            The name of the property of the TrianglesSource items which, for each triangle, contains the index of the second vertex point in the ItemsSource.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterTriangulationSeries.TriangleVertexMemberPath3Property">
            <summary>
            Identifies the TriangleVertexMemberPath3 dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterTriangulationSeries.TriangleVertexMemberPath3">
            <summary>
            The name of the property of the TrianglesSource items which, for each triangle, contains the index of the third vertex point in the ItemsSource.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterTriangulationSeries.TriangleVertexColumn1">
            <summary>
            The FastItemColumn containing the indices of first triangle vertices in the ItemsSource.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterTriangulationSeries.TriangleVertexColumn2">
            <summary>
            The FastItemColumn containing the indices of second triangle vertices in the ItemsSource.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterTriangulationSeries.TriangleVertexColumn3">
            <summary>
            The FastItemColumn containing the indices of third triangle vertices in the ItemsSource.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterTriangulationSeries.IsShape">
            <summary>
            Gets whether or not this series is a shape series
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.SelectedItemChangedEventArgs">
            <summary>
            Provides data for the SelectedItemChanged event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SelectedItemChangedEventArgs.OldItem">
            <summary>
            The previously selected item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SelectedItemChangedEventArgs.NewItem">
            <summary>
            The newly selected item.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SelectedItemChangedEventArgs.#ctor(System.Object,System.Object)">
            <summary>
            Creates an instance of the SelectedItemChangedEventArgs class.
            </summary>
            <param name="oldItem">Previously selected item</param>
            <param name="newItem">Newly selected item</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.SelectedItemChangingEventArgs">
            <summary>
            Provides data for the SelectedItemChanging event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SelectedItemChangingEventArgs.Cancel">
            <summary>
            Set this to true in order to stop the SelectedItem from changing.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SelectedItemChangingEventArgs.#ctor(System.Object,System.Object)">
            <summary>
            Creates an instance of the SelectedItemChangingEventArgs class.
            </summary>
            <param name="oldItem">Currently selected item</param>
            <param name="newItem">Item being selected</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.SelectedItemsChangedEventArgs">
            <summary>
            Provides data for the SelectedItemsChanged event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SelectedItemsChangedEventArgs.OldItems">
            <summary>
            A list of the previously selected items.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SelectedItemsChangedEventArgs.NewItems">
            <summary>
            A list of the items being selected.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SelectedItemsChangedEventArgs.#ctor(System.Collections.IList,System.Collections.IList)">
            <summary>
            SelectedItemsChangedEventArgs constructor.
            </summary>
            <param name="oldItems">A list of the previously selected items.</param>
            <param name="newItems">A list of the items being selected.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.SelectedItemsChangingEventArgs">
            <summary>
            Provides data for the SelectedItemsChanging event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SelectedItemsChangingEventArgs.Cancel">
            <summary>
            Set this to true in order to stop the SelectedItems collection from changing.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SelectedItemsChangingEventArgs.#ctor(System.Collections.IList,System.Collections.IList)">
            <summary>
            SelectedItemsChangingEventArgs constructor.
            </summary>
            <param name="oldItems">A list of the currently selected items.</param>
            <param name="newItems">A list of the items being selected.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.Series">
            <summary>
            Represents the base class for all XamDataChart series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.View">
            <summary>
            Gets or sets the view associated with the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.UniqueIndex">
            <summary>
            An integer uniquely identifying this series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.CustomClipRect">
            <summary>
            A clipping rectangle to apply to this series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.#ctor">
            <summary>
            Initializes a new instance of the Series class. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.VisibilityProxyPropertyName">
            <summary>
            Property name for the VisibilityProxy property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.VisibilityProxyProperty">
            <summary>
            Identifies the VisibilityProxy dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.Animator_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the PropertyChanged event of the animator.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The PropertyChangedEventArgs in context.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.Res">
            <summary>
            Gets string resource provider
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.AlternateViews">
            <summary>
            The alternate views in context for this series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.Animator">
            <summary>
            Animator responsible for series transitions.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.RootCanvas">
            <summary>
            Gets the root canvas for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.UseParentMarkerCanvas">
            <summary>
            Determines if the current series renders its markers to the MarkerCanvas of the parent series. 
            Ensures that StackedFragmentSeries don't reparent the MarkerCanvas.
            </summary>
            <returns>Whether or not to use parent series marker canvas.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetItemValue(System.Object,System.String)">
            <summary>
            Gets a value based on one of the valid member paths for this series type.
            </summary>
            <param name="item">An item from the data source bound to the series.</param>
            <param name="memberPathName">The property name of a valid member path for the series</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetExactItemIndex(Infragistics.Portable.Point)">
            <summary>
            Gets the precise item index, if possible, based on the closeness to the previous or next whole integer. If the series cannot provide this information, GetExactItemIndex will return the same integer value as GetItemIndex.
            </summary>
            <param name="world">The world position for which to return the index.</param>
            <returns>The double index indicating which whole number index the point is closest to.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetItemIndexSorted(Infragistics.Portable.Point)">
            <summary>
            Gets the sorted index of the item based on world coordinates, if the series supports a sorted axis
            </summary>
            <param name="world">The world coordinates to use.</param>
            <returns>The index of the item for the specified coordinates.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsPrimaryAxisSortingAxis">
            <summary>
            Returns true if the primary axis is a sorting axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetCategoryAxisIfPresent">
            <summary>
            Gets the category axis in context, if one is present.
            </summary>
            <returns>The category axis in context, if one is present.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetItemIndex(Infragistics.Portable.Point)">
            <summary>
            Gets the item item index associated with the specified world position
            </summary>
            <returns>Item index or -1 if no item is associated with the specified world position.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetItem(Infragistics.Portable.Point)">
            <summary>
            Gets the item that is the best match for the specified world coordinates.
            </summary>
            <param name="world">The world coordinates to use.</param>
            <returns>The item that is the best match.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetSeriesItem(Infragistics.Controls.Charts.Series,Infragistics.Portable.Point)">
            <summary>
            Gets the item based on the given point for another series.
            </summary>
            <param name="series">The series to get the item for.</param>
            <param name="world">The point in context.</param>
            <returns>The item matching the given point for the given series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetFragmentIndex">
            <summary>
            If this series is a stack fragment, returns the fragment index.
            </summary>
            <returns>The stack fragment, if appropriate.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetLogicalFragmentIndex">
            <summary>
            If this series is a stack fragment, returns the logical fragment index.
            </summary>
            <returns>The stack fragment, if appropriate.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetSubSeriesCount">
            <summary>
            If this series is a parent series, returns the number of logical sub series present.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.HasLegendSubItemsOverride">
            <summary>
            Checks if this series had legend sub-items
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.ForLegendSubItemsOverride(System.Action{System.Object})">
            <summary>
            Performs an action for each legend sub-item
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.ForSubVisualSeries(System.Func{Infragistics.Controls.Charts.Series,System.Boolean})">
            <summary>
            If this series is a parent series, returns the visual sub series present.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.ResolveNegativeBrush">
            <summary>
            If this series has a negative color, returns that brush.
            </summary>
            <returns>The negative color to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.ResolveLegendIndex">
            <summary>
            Resolves the index to use for ordering the legend.
            </summary>
            <returns>The ordering index to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.ResolveParentSeries">
            <summary>
            If this series is a stack fragment, returns the parent series.
            </summary>
            <returns>The parent series, if appropriate.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsAnnotationLayer">
            <summary>
            Gets whether the series is an annotation layer.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsVertical">
            <summary>
            Gets whether the current series is oriented vertically.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsFragment">
            <summary>
            Gets whether the current series is a stack fragment.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsAreaOrLine">
            <summary>
            Gets whether the current series shows an area or line shape.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsPolar">
            <summary>
            Gets whether the current series is a polar type series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsScatter">
            <summary>
            Gets whether the current series is a scatter type series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsRadial">
            <summary>
            Gets whether the current series is a radial type series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsStacked">
            <summary>
            Gets whether the current series is a stacked type series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsFinancial">
            <summary>
            Gets whether the current series is a financial type series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsRange">
            <summary>
            Gets whether the current series is a range type series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsCategory">
            <summary>
            Gets whether the current series is a category type series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsGeographic">
            <summary>
            Gets whether the current seires is a geogrpahic series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsShape">
            <summary>
            Gets whether the current series is a shape type series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsValueOverlay">
            <summary>
            Gets whether the series is a value overlay.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.ResolveHostedSeries">
            <summary>
            Resolves the hosted series for a geogrpahic series, if possible.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsDefaultCrosshairBehaviorDisabled">
            <summary>
            Gets whether the default crosshair behavior should be disabled if this series is present.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsDefaultTooltipBehaviorDisabled">
            <summary>
            Gets whether the default tooltip behavior should be disabled if this series is present.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetDistanceToIndex(Infragistics.Portable.Point,System.Int32,Infragistics.Controls.Charts.Axis,Infragistics.Controls.Charts.ScalerParams,System.Double)">
            <summary>
            Returns a distance value (not necessarily pixels), that indicates how 'close' a world position is to an indexed value in the series.
            Not every series can necessarily answer this question, it can't or the world position or index is invalid, NaN will be returned.
            </summary>
            <param name="world">The world position for which to get a distance.</param>
            <param name="index">The index to get a distance to.</param>
            <param name="axis">The axis in context.</param>
            <param name="p">The scaler parameters in context.</param>
            <param name="offset">The category offset, or distance between the edge of the axis and the first or last data item.</param>
            <returns>A distance value to the world position.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetDistanceToIndexHelper(Infragistics.Portable.Point,System.Int32,Infragistics.Controls.Charts.Axis,Infragistics.Controls.Charts.ScalerParams,System.Double,System.Int32,System.Func{Infragistics.Portable.Point,System.Double})">
            <summary>
            Helps determine the distance to an index from a world position. Distance is not necessarily in pixels.
            </summary>
            <param name="world">The world position to get a distance to.</param>
            <param name="index">The index to get a distance from.</param>
            <param name="axis">The axis the represents the indexes.</param>
            <param name="scalerParams">The scaler parameters of the axis.</param>
            <param name="offset">The category offset, if any.</param>
            <param name="count">The number of items in the data source.</param>
            <param name="getExactUnsortedIndex">Gets an exact unsorted index for a sorted axis.</param>
            <returns>The distance value.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.UsesPresortedValueColumn">
            <summary>
            Determines whether or not this series requires data values to be sorted.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetSeriesValueHelper(System.Collections.Generic.IList{System.Double},Infragistics.Portable.Point,Infragistics.Controls.Charts.Axis,Infragistics.Controls.Charts.ScalerParams,System.Double,System.Func{Infragistics.Portable.Point,System.Double},System.Boolean,System.Boolean)">
            <summary>
            Helps to obtain the a series value that is close to the provided world position, if possible. Otherwise returns NaN.
            </summary>
            <param name="column">The value column from which to take values.</param>
            <param name="world">The world position we want a value for.</param>
            <param name="axis">The value axis to use.</param>
            <param name="pars">The scaler parameters of the value axis.</param>
            <param name="offset">The category offset, if applicable.</param>
            <param name="getExactUnsortedIndex">Gets an unsorted index value from a sorting axis.</param>
            <param name="useInterpolation">Specifies whether to use interpolation when getting the value.</param>
            <param name="skipUnknowns">Specifies whether to skip uknown values when searching for the correct value.</param>
            <returns>The discovered value if possible, otherwise double.NaN</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetInterpolatedSeriesValue(System.Double,System.Collections.Generic.IList{System.Double},System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Gets a data value based on the surrounding data items.
            </summary>
            <param name="p">The distance from prevItem, expressed as a value between 0 and 1.</param>
            <param name="column">The series data values.</param>
            <param name="prevItem">The index of the previous data item.</param>
            <param name="nextItem">The index of the next data item.</param>
            <param name="unsortedPrevItem">The unsorted index of the previous data item.</param>
            <param name="unsortedNextItem">The unsorted index of the next data item.</param>
            <param name="offset">The distance between the edge of the axis and the first or last data item.</param>
            <param name="isSorting">True if the associated axis is one that sorts its items.</param>
            <returns>A value interpolated at a distance of p between prevItem and nextItem.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetPreviousOrExactIndexHelper(Infragistics.Portable.Point,System.Boolean,Infragistics.Controls.Charts.Axis,System.Func{Infragistics.Portable.Point,System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Helps in getting the previous index that is near a given world position.
            </summary>
            <param name="world">The world position to use in searching.</param>
            <param name="skipUnknowns">Should unknown values be skipped when searching.</param>
            <param name="indexAxis">The axis associated with the indexes.</param>
            <param name="getExactUnsortedIndex">Gets an unsorted exact index from a sorting axis.</param>
            <param name="valueColumn">The column of values to check for unknowns against.</param>
            <returns>The found index, otherwise, -1.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetHitTestAllowance(System.Boolean)">
            <summary>
            Returns the hit-test allowance
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetHighStrokeSegments(Infragistics.Portable.Point)">
            <summary>
            Returns postions of high stroke segements for a specified position over this series
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetLowStrokeSegments(Infragistics.Portable.Point)">
            <summary>
            Returns postions of low stroke segements for a specified position over this series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.TestHighLowStrokeOver(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Returns a boolean indicating whether or not the given point is considered over the high or low outlines of this series.
            </summary>
            <param name="position">The point under observation.</param>
            <param name="isFinger">Whether or not this is a touch interaction.</param>
            <returns>True if the given point is over the high or low outline of this series; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetMatchingBuckets(Infragistics.Controls.Charts.CategoryAxisBase,System.Collections.Generic.List{System.Double[]},System.Int32,System.Int32,Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Gets the data values present at a given point.
            </summary>
            <param name="categoryAxis">The axis in context.</param>
            <param name="buckets">The data values for the series.</param>
            <param name="bucketSize">The number of data items represented by each bucket of data values.</param>
            <param name="firstBucket">The index of the first visible bucket of data values on the axis.</param>
            <param name="world">The world coordinates to use.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped.</param>
            <returns>An array of buckets containing data values.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.TestNearStroke(Infragistics.Portable.Point,System.Boolean,Infragistics.Portable.Graphics.Media.PathGeometry)">
            <summary>
            Returns a boolean indicating whether or not the given point is near the given PathGeometry outline.
            </summary>
            <param name="position">The point under observation.</param>
            <param name="isFinger">Whether or not this is a touch interaction.</param>
            <param name="pathData1">The PathGeometry in context.</param>
            <returns>True if the given point is near the outline of the given PathGeometry; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.TestOverPoly(Infragistics.Portable.Point,Infragistics.Portable.Graphics.Media.PathGeometry)">
            <summary>
            Returns a boolean indicating whether or not the given point is over the given PathGeometry.
            </summary>
            <param name="position">The point under observation.</param>
            <param name="pathData1">The PathGeometry in context.</param>
            <returns>True if the given point is inside the given PathGeometry; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetNextOrExactIndexHelper(Infragistics.Portable.Point,System.Boolean,Infragistics.Controls.Charts.Axis,System.Func{Infragistics.Portable.Point,System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Helps in getting the next index that is near a given world position.
            </summary>
            <param name="world">The world position to use in searching.</param>
            <param name="skipUnknowns">Should unknown values be skipped when searching.</param>
            <param name="indexAxis">The axis associated with the indexes.</param>
            <param name="getExactUnsortedIndex">Gets an unsorted exact index from a sorting axis.</param>
            <param name="valueColumn">The column of values to check for unknowns against.</param>
            <returns>The found index, otherwise, -1.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetExactUnsortedItemIndexHelper(Infragistics.Portable.Point,Infragistics.Controls.Charts.Axis)">
            <summary>
            Helps in obtaining an unsorted index from a sorting axis.
            </summary>
            <param name="world">The world position we want an exact index for.</param>
            <param name="axis">The axis in question.</param>
            <returns>The exact index value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetPreviousOrExactIndex(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Getting the previous index that is near a given world position, if possible, otherwise NaN.
            </summary>
            <param name="world">The world position to use in searching.</param>
            <param name="skipUnknowns">Should unknown values be skipped when searching.</param>
            <returns>The found index, otherwise, -1.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetNextOrExactIndex(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Getting the next index that is near a given world position, if possible, otherwise NaN.
            </summary>
            <param name="world">The world position to use in searching.</param>
            <param name="skipUnknowns">Should unknown values be skipped when searching.</param>
            <returns>The found index, otherwise, -1.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetSeriesValue(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available main value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, when searching for the best available value any unknown values will be skipped.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetSeriesValuePosition(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetSeriesValueBoundingBox(Infragistics.Portable.Point)">
            <summary>
            If possible, will return the best available value bounding box within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value bounding box for</param>
            <returns>The bounding box in question, or empty if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetSeriesValueFineGrainedBoundingBoxes(Infragistics.Portable.Point)">
            <summary>
            If possible, will return the best available value fine grained bounding boxes within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get value fine grained bounding boxes for</param>
            <returns>The fine grained bounding boxes in question, or empty if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetSeriesValueBoundingBoxFromSeriesPixel(Infragistics.Portable.Point)">
            <summary>
            If possible, will return the best available value bounding box within the series that has the best value match for the pixel position provided. 
            </summary>
            <param name="pixelPosition">The pixel coordinates for which to get a value bounding box for</param>
            <returns>The bounding box in question, or empty if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetSeriesValueFineGrainedBoundingBoxesFromSeriesPixel(Infragistics.Portable.Point)">
            <summary>
            If possible, will return the best available value fine grained bounding boxes within the series that has the best value match for the pixel position provided. 
            </summary>
            <param name="pixelPosition">The pixel coordinates for which to get value fine grained bounding boxes for</param>
            <returns>The fine grained bounding boxes in question, or empty if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetSeriesValueMarkerBoundingBox(Infragistics.Portable.Point)">
            <summary>
            If possible, will return the best available value marker bounding box within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinates for which to get a value marker bounding box for</param>
            <returns>The bounding box in question, or empty if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetSeriesValueMarkerBoundingBoxFromSeriesPixel(Infragistics.Portable.Point)">
            <summary>
            If possible, will return the best available value marker bounding box within the series that has the best value match for the pixel position provided. 
            </summary>
            <param name="pixelPosition">The pixel coordinates for which to get a value marker bounding box for</param>
            <returns>The bounding box in question, or empty if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.TestShapesOver(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Test if the given point is over a shape in this series.
            </summary>
            <param name="position">The position to test.</param>
            <param name="isFinger">True if this is a touch interaction.</param>
            <returns>True if this point is over a shape in the series, otherwise False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetSeriesValuePositionHelper(Infragistics.Portable.Point,System.Boolean,System.Boolean,System.Double,Infragistics.Controls.Charts.Axis,Infragistics.Controls.Charts.Axis,System.Func{Infragistics.Portable.Point,System.Boolean,System.Boolean,System.Double},System.Func{Infragistics.Portable.Point,System.Boolean,System.Int32},System.Func{Infragistics.Portable.Point,System.Boolean,System.Int32})">
            <summary>
            Gets a point representing the data values of the given point expressed in world coordinates.
            </summary>
            <param name="world">The point to convert to data values.</param>
            <param name="useInterpolation">True if the series interpolates between items; otherwise, False.</param>
            <param name="skipUnknowns">True if the series skips unknown values; otherwise, False.</param>
            <param name="offset">Horizontal offset to apply.</param>
            <param name="valueAxis">The axis to use for getting the numeric value.</param>
            <param name="indexAxis">The axis to use for getting the index value.</param>
            <param name="getSeriesValue">A function to get a data value from the series.</param>
            <param name="getPrevious">A function to get the previous index in a series.</param>
            <param name="getNext">A function to get the next index in a series.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetSeriesHighValue(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available high value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetSeriesHighValuePosition(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best high value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetSeriesLowValue(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available low value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetSeriesLowValuePosition(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best low value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetSeriesValuePositionFromSeriesPixel(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best value match for the world position provided. 
            </summary>
            <param name="mouse">The series coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetSeriesValueFromSeriesPixel(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available main value of the series for a given pixel coordinate within the current series plot area. 
            </summary>
            <param name="mouse">The series coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetSeriesHighValuePositionFromSeriesPixel(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best high value match for the world position provided. 
            </summary>
            <param name="mouse">The series coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetSeriesHighValueFromSeriesPixel(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available high value of the series for a given pixel coordinate within the current series plot area. 
            </summary>
            <param name="mouse">The series coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetSeriesLowValuePositionFromSeriesPixel(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best low value match for the world position provided. 
            </summary>
            <param name="mouse">The series coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetSeriesLowValueFromSeriesPixel(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available low value of the series for a given pixel coordinate within the current series plot area. 
            </summary>
            <param name="mouse">The series coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetItemIndexFromSeriesPixel(Infragistics.Portable.Point)">
            <summary>
            Gets the item index that is the best match for the specified pixel position within the series plot area.
            </summary>
            <param name="mouse">The pixel position within the series plot area</param>
            <returns>The best matching item index.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetItemSpan">
            <summary>
            For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.
            </summary>
            <returns>The width of the items for this series within the categories.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetExactItemIndexFromSeriesPixel(Infragistics.Portable.Point)">
            <summary>
            Gets the precise item index, if possible, the closeness to the previous or next whole integer indicating which value is closer. If the series cannot provide this information this will return the same integer value as GetItemIndexFromSeriesPixel.
            </summary>
            <param name="mouse">The pixel position within the series plot area</param>
            <returns>The exact item index, as a double, indicating which whole number index the mouse is closest to, if possible.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetItemFromSeriesPixel(Infragistics.Portable.Point)">
            <summary>
            Gets the item index that is the best match for the specified pixel position within the series plot area.
            </summary>
            <param name="mouse">The pixel position within the series plot area</param>
            <returns>The best matching item index.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetVisiblePointsOfInterest(System.Collections.Generic.List{Infragistics.Controls.Charts.SeriesPointOfInterest},System.Boolean,System.Int32)">
            <summary>
            Returns a number of points of interest for the series, if supported.
            </summary>
            <param name="points">a collection to fill with the ponts of interest.</param> 
            <param name="useValueAsLabel">Indicates if the primary value should be used for the label, rather than the primary label, if applicable.</param>
            <param name="labelPrecision">Indicates the precision to use for labelling with a numeric value. -1 indicates no rounding should be performed.</param>
            <returns></returns>
        </member>
        <member name="E:Infragistics.Controls.Charts.Series.PropertyChanged">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.Series.PropertyUpdated">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.RaisePropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            Raises PropertyChanged and/or PropertyUpdated events if any listeners have been registered.
            </summary>
            <param name="propertyName">Name of property whos value changed.</param>
            <param name="oldValue">Property value before change.</param>
            <param name="newValue">Property value after change.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.HasMarkers">
            <summary>
            Returns whether the current series supports visual markers.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.HideToolTips">
            <summary>
            Hides any internal tooltips presented by the series, if any.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetActualMarkerBrush">
            <summary>
            Returns the actual marker brush used by the series if the series has markers.
            </summary>
            <returns>The actual marker brush used by the series, if the series has markers</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetActualMarkerOutlineBrush">
            <summary>
            Returns the actual marker outline brush used by the series if the series has markers.
            </summary>
            <returns>The actual marker outline brush used by the series, if the series has markers</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetActualMarkerTemplate">
            <summary>
            Returns the actual marker template used by the series if the series has markers.
            </summary>
            <returns>The actual marker template used by the series, if the series has markers</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.ToWorldPosition(Infragistics.Portable.Point)">
            <summary>
            Converts a point from coordinates within the series plot area to a world position within axis space.
            </summary>
            <param name="seriesPoint">The pixel location within the plot area of the series.</param>
            <returns>The world position of the series point.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.FromWorldPosition(Infragistics.Portable.Point)">
            <summary>
            Converts a point from world coordinates to coordinates within the viewport of the series.
            </summary>
            <param name="world">The world position from which to convert.</param>
            <returns>The relative position within the current viewport of the series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.Item(System.Object,Infragistics.Portable.Point)">
            <summary>
            When overriden in a derived class gives the opportunity to define how the data source item
            for a given set of mouse coordinates is fetched.
            </summary>
            <param name="sender">The element the mouse is over.</param>
            <param name="point">The mouse coordinates for which to fetch the item.</param>
            <returns>The retrieved item.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.ScrollIntoView(System.Object)">
            <summary>
            Requests that the provided item should be brought into view if possible.
            </summary>
            <param name="item">The item to attempt to bring into view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetVisibleRange">
            <summary>
            Gets the range of values contained within the current horizontal window.
            </summary>
            <returns>The minimum and maximum data values within the current horizontal window.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.RenderSeries(System.Boolean)">
            <summary>
            Renders the series.
            </summary>
            <param name="animate">True if the change should be animated.</param>
        </member>
        <member name="E:Infragistics.Controls.Charts.Series.RenderRequested">
            <summary>
            This event is raised every time a render has been requested from a series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.RenderSeriesOverride(System.Boolean)">
            <summary>
            Renders the series.
            </summary>
            <param name="animate">Whether or not to transition smoothly from the previous state of the series.</param>
            <remarks>
            The animate parameter is relevant only for series which implement transitions.  Not all series in the DataChart support this behavior.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.TransitionInIsInProgress">
            <summary>
            Gets or sets if the series is currently animating into view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.CheckTransitionInterrupted">
            <summary>
            Checks if the transition has been interrupted.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.ClearSpeedModifiers">
            <summary>
            Clears the speed modifiers for this series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.ThumbnailView">
            <summary>
            The view of this series in the chart's thumbnail.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.RenderThumbnail(Infragistics.Portable.Rect,Infragistics.Controls.Charts.RenderSurface)">
            <summary>
            Renders the thumbnail for the OPD pane.
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="surface">The render target.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.RenderAlternateView(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.RenderSurface,System.String,System.Double)">
            <summary>
            Renders an alternate view for use with tiling, etc.
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="surface">The render target.</param>
            <param name="viewIdentifier">String key to use for this view target</param>
            <param name="effectiveScalingRatio">The effective scaling ratio.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetEffectiveViewport(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Gets the effective viewport, adjusted to account for margins and other factors.
            </summary>
            <param name="view">The view.</param>
            <returns>The effective viewport.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetEffectiveViewportForViewport(Infragistics.Portable.Rect)">
            <summary>
            Gets the effective viewport, adjusted to account for margins and other factors.
            </summary>
            <param name="viewport">The viewport.</param>
            <returns>The effective viewport.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetEffectiveViewportForUnitViewport(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Gets the effective viewport within the series viewport.
            </summary>
            <returns>The effective viewport.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetEffectiveViewport">
            <summary>
            Gets the effective viewport, adjusted to account for margins and other factors.
            </summary>
            <returns>The effective viewport.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.RemoveAllAlternateViews">
            <summary>
            Removes all alternate views of this series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.RemoveAlternateView(System.String)">
            <summary>
            Removes an alternate view of this series.
            </summary>
            <param name="viewIdentifier">The string identifier for the view to remove.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetViewInfo(Infragistics.Portable.Rect@,Infragistics.Portable.Rect@)">
            <summary>
            Gets the view info for the series.
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="windowRect">The window to use.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.ValidateSeries(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.ClearAndAbortIfInvalid">
            <summary>
            Clears the series and aborts rendering if the series is not valid.
            </summary>
            <returns>True if rendering should be aborted.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.ClearAndAbortIfInvalid(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the series and aborts rendering if the series is not valid.
            </summary>
            <returns>True if rendering should be aborted.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.WindowRectChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            When overridden in a derived class, is invoked whenever the series window rectangle 
            is changed.
            </summary>
            <param name="oldWindowRect">Old window rectangle in normalised world coordinates.</param>
            <param name="newWindowRect">New window rectangle in normalised world coordinates.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.ViewportRectChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            When overridden in a derived class, is invoked whenever the series viewport rectangle 
            is changed.
            </summary>
            <param name="oldViewportRect">Old viewport rectangle in device coordinates.</param>
            <param name="newViewportRect">New viewport rectangle in device coordinates.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.ThumbnailDirty">
            <summary>
            Boolean indicating whether or not the thumbnail view needs to be re-rendered.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.ForceIndexUpdate(Infragistics.Controls.Charts.Series)">
            <summary>
            Force the given series to update its indexed properties.
            </summary>
            <param name="other">The series on which to update indexed properties.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.NotifyThumbnailDataChanged">
            <summary>
            Called to notify that the data has changed and the thumbnail may need to refresh.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.NotifyThumbnailAppearanceChanged">
            <summary>
            Called to notify that the appearance has changed and the thumbnail may need to refresh
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsIndexed">
            <summary>
            Gets if the series uses an index, which can be used to auto-assign it a color.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsUsableInLegend">
            <summary>
            Gets if the series should appear in any legends.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.OnIsDropShadowEnabledChanged">
            <summary>
            Called when <see cref="P:Infragistics.Controls.Charts.Series.IsDropShadowEnabled"/> is changed.
            Updates the values of the unset drop shadow related properties according to the series type.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.NotifyVisualPropertiesChanged">
            <summary>
            Notifies the series that a visual property has changed, requiring a visual update.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.OnVisualPropertiesChanged">
            <summary>
            Method invoked when a visual property has changed, requiring a visual update.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.OnVisualPropertiesChangedImmediate">
            <summary>
            Method invoked when a visual property has changed, requiring an immediate visual update.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.SkipPrepare">
            <summary>
            Boolean indicating whether or not to skip rendering preparation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.SkipThumbnailPrepare">
            <summary>
            Boolean indicating whether or not to skip rendering preparation for the thumbnail view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.RequiresPrepare">
            <summary>
            Informs whether this series requires PrepareFrame to be called before RenderFrame.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.OnVisualPropertiesChangedOverride(System.Boolean)">
            <summary>
            Method invoked when a visual property has changed, requiring a visual update.
            </summary>
            <param name="immediate">Whether the visual update should be immediate.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.TransitionInViable">
            <summary>
            Indicates that a transition in can occur when the series is ready to render.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.TransitionInViableResolved">
            <summary>
            Gets a boolean indicating whether or not the in-transition is viable.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overriden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property udpates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetIsHighlightingEnabled">
            <summary>
            Returns a boolean indicating whether or not highlighting is enabled and supported.
            </summary>
            <returns>True if highlighting is enabled and supported; otherwise, False.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsHighlightingSupported">
            <summary>
            Checks if the series supports highlithing of its elements
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.DisableCursorEventsForSeries(Infragistics.Controls.Charts.Series)">
            <summary>
            Disables cursor-related events for the given series.
            </summary>
            <param name="series">The series to disable cursor events for.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.SyncLinkPropertyName">
            <summary>
            The name of the SyncLink property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.SyncLink">
            <summary>
            Sets or sets the synchroniation link associated with the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.SeriesViewerPropertyName">
            <summary>
            The name of the SeriesViewer property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.SeriesViewer">
            <summary>
            Gets the Chart for the current chart series object.
            </summary>
            <remarks>
            The chart property is maintained internally by the series and may 
            lag behind the visual hierarchy defined in xaml or code.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.Chart">
            <summary>
            Gets the chart associated with the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.SeriesViewer_SeriesCollectionChanged">
            <summary>
            Listener for the owner chart's series collection.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.SeriesViewer_PropertyUpdated">
            <summary>
            Listener for the owner chart's property updated.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.SeriesViewer_WindowRectChanged">
            <summary>
            Listener for the onwer chart's window rect changed
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.ItemsSource">
            <summary>
            Gets or sets the ItemsSource property for the current series object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.ItemsSourcePropertyName">
            <summary>
            The name of the ItemsSource property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.FastItemsSource">
            <summary>
            Gets or sets the ItemsSource property for the current series object.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <para>
            The FastItemsSource is a proxy which handles caching, conversion and
            weak event listeners.
            </para>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.FastItemsSourcePropertyName">
            <summary>
            The name of the FastItemsSource property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.FastItemsSourceProperty">
            <summary>
            Identifies the FastItemsSource dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.DataUpdatedOverride(Infragistics.Portable.FastItemsSourceEventAction,System.Int32,System.Int32,System.String)">
            <summary>
            Method called whenever a change is made to the series data.
            </summary>
            <param name="action">The action performed on the data</param>
            <param name="position">The index of the first item involved in the update.</param>
            <param name="count">The number of items in the update.</param>
            <param name="propertyName">The name of the updated property.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.Legend">
            <summary>
            Gets or sets a legend for the current series object.
            </summary>
            <remarks>
            If the Legend property is not set, the series will use the setting according to the parent XamDataChart's Legend property.
            <para>
            This is generally expressed as an element name binding, as the Legend must exist at some other position in the layout. 
            This property only indicates which Legend to use and will not alone cause the legend to be visible.
            </para>
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.LegendProperty">
            <summary>
            Identifies the Legend dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.LegendItem">
            <summary>
            Gets the legend item associated with the current series object.
            </summary>
            <remarks>
            The legend item control is created according to the LegendItemTemplate on-demand by 
            the series object itself.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetLegendItem">
            <summary>
            Gets the legend item control to use.
            </summary>
            <returns>The legend item control to use.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.ActualLegend">
            <summary>
            Gets the effective legend associated with the current series object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.LegendItemVisibility">
            <summary>
            Gets or sets the legend item visibility for the current series object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.LegendItemVisibilityProperty">
            <summary>
            Identifies the LegendItemVisibility Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.LegendItemBadgeTemplate">
            <summary>
            Gets or sets the LegendItemBadgeTemplate property.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            The legend item badge is created according to the LegendItemBadgeTemplate on-demand by 
            the series object itself.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.LegendItemBadgeTemplateProperty">
            <summary>
            Identifies the LegendItemBadgeTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.LegendItemTemplate">
            <summary>
            Gets or sets the LegendItemTemplate property.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            The legend item control content is created according to the LegendItemTemplate on-demand by 
            the series object itself.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.LegendItemTemplateProperty">
            <summary>
            Identifies the LegendItemTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.DiscreteLegendItemTemplate">
            <summary>
            Gets or sets the DiscreteLegendItemTemplate property.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            The legend item control content is created according to the DiscreteLegendItemTemplate on-demand by 
            the series object itself.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.DiscreteLegendItemTemplateProperty">
            <summary>
            Identifies the DiscreteLegendItemTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.Index">
            <summary>
            Gets the Index property.
            </summary>
            <remarks>
            This property is used to support the XamDataChart infrastructure, and is not intended to be set by application code.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.IndexPropertyName">
            <summary>
            The name of the Index property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.IndexProperty">
            <summary>
            Identifies the Index dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.DoUpdateIndexedProperties">
            <summary>
            Makes sure the indexed properties are updated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.UpdateIndexedProperties">
            <summary>
            Updates properties that are based on the index of the series in the series collection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.TransitionEasingFunction">
            <summary>
            Gets or sets the easing function used to morph the current series.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.TransitionEasingFunctionProperty">
            <summary>
            Identifies the TransitionEasingFunction dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.TransitionInEasingFunction">
            <summary>
            Gets or sets the EasingFunction used to morph the current series during the initial transition.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.TransitionInEasingFunctionProperty">
            <summary>
            Identifies the TransitionInEasingFunction dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.TransitionDuration">
            <summary>
            Gets or sets the duration of the current series's morph.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.TransitionDurationPropertyName">
            <summary>
            Property name for the TransitionDuration property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.TransitionDurationProperty">
            <summary>
            Identifies the TransitionDuration dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.Resolution">
            <summary>
            Gets or sets the current series object's rendering resolution.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.ResolutionPropertyName">
            <summary>
            Property name for the Resolution property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.ResolutionProperty">
            <summary>
            Identifies the Resolution dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.Title">
            <summary>
            Gets or sets the Title property.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            The legend item control is created according to the Title on-demand by 
            the series object itself.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.Brush">
            <summary>
            Gets or sets the brush to use for the series.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.BrushProperty">
            <summary>
            Identifies the Brush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.ActualBrush">
            <summary>
            Gets the effective brush for the current series object.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.ActualBrushPropertyName">
            <summary>
            Property name for the ActualBrush property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.ActualBrushProperty">
            <summary>
            Identifies the ActualBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.Outline">
            <summary>
            Gets or sets the brush to use for the outline of the series.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>Some series types, such as LineSeries, do not display outlines.  Therefore, this property does not affect some charts.</remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.OutlineProperty">
            <summary>
            Identifies the Outline dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.ActualOutline">
            <summary>
            Gets the effective outline for the current series object.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.ActualOutlineProperty">
            <summary>
            Identifies the ActualOutline dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.LineJoinPropertyName">
            <summary>
            Property name for the LineJoin property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.MiterLimit">
            <summary>
            Gets or sets the current series object's outline miter limit.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.MiterLimitPropertyName">
            <summary>
            Property name for the MiterLimit property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.MiterLimitProperty">
            <summary>
            Identifies the Stroke dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.Thickness">
            <summary>
            Gets or sets the width of the current series object's line thickness.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.ThicknessPropertyName">
            <summary>
            Property name for the Thickness property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.ThicknessProperty">
            <summary>
            Identifies the Thickness dependency property.
            </summary>
            <remarks>
            There is a problematic behavior in Silverlight 3 where changing the StrokeThickness property of many shapes is not reflected at runtime.  If changing this property seems to have no effect, please use the workaround of making another change to the UI to force a refresh.
            <code>
            theChart.RenderTransform = new RotateTransform() { Angle = 0.01 };
            Dispatcher.BeginInvoke( () => theChart.RenderTransform = null);
            </code>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.DashCap">
            <summary>
            Gets or sets the PenLineCap enumeration value that specifies how the current series object's dash ends are drawn. 
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.DashCapPropertyName">
            <summary>
            Identifies the DashCap dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.DashCapProperty">
            <summary>
            Identifies the DashCap dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.DashArray">
            <summary>
            Gets or sets a collection of Double values that indicate the pattern of dashes and gaps that
            is used to outline the current series object. 
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.DashArrayPropertyName">
            <summary>
            Identifies the DashArray dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.DashArrayProperty">
            <summary>
            Identifies the StrokeDashArray dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.ToolTip">
            <summary>
            Gets or sets the ToolTip for the current series object.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.ToolTipProperty">
            <summary>
            Identifies the ToolTip dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsHighlightingEnabled">
            <summary>
            Gets or sets whether highlighting should be enabled for this series, if this type of series supports highlighting.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.IsHighlightingEnabledProperty">
            <summary>
            Identifies the IsHighlightingEnabled dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsDropShadowEnabled">
            <summary>
            Gets or sets whether drop shadow should be enabled for this series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.IsDropShadowEnabledProperty">
            <summary>
            Identifies the IsDropShadowEnabled dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsDropShadowSupported">
            <summary>
            Gets if the current series supports drop shadows.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.ShadowBlur">
            <summary>
            Gets or sets the shadow blur.
            </summary>
            <remarks>
            This property is ignored when <see cref="P:Infragistics.Controls.Charts.Series.UseSingleShadow"/> is set to true.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.ShadowBlurProperty">
            <summary>
            Identifies the ShadowBlur dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.ShadowColor">
            <summary>
            Gets or sets the drop shadow color.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.ShadowColorProperty">
            <summary>
            Identifies the ShadowColor dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.UseSingleShadow">
            <summary>
            Gets or sets whether drop shadow is applied to the whole series visual or to each of the individual shapes forming the series.
            </summary>
            <remarks>
            When this property is set to true, no <see cref="P:Infragistics.Controls.Charts.Series.ShadowBlur"/> is applied.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.UseSingleShadowProperty">
            <summary>
            Identifies the UseSingleShadow dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.ShadowOffsetX">
            <summary>
            Gets or sets the drop shadow x-offset.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.ShadowOffsetXProperty">
            <summary>
            Identifies the ShadowOffsetX dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.ShadowOffsetY">
            <summary>
            Gets or sets the drop shadow y-offset.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.ShadowOffsetYProperty">
            <summary>
            Identifies the ShadowOffsetY dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.ActualIsHighlightingEnabled">
            <summary>
            Gets or sets if highlighting is actually enabled and supported.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.AreaFillOpacityProperty">
            <summary>
            Identifies the AreaFillOpacity dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.AreaFillOpacity">
            <summary>
            Gets or sets the opacity applied to the area fill visual.
            </summary>
            <value>
            A double in the range 0, 1. The default is NaN.
            </value>
            <remarks>
            This property only applies to series that have area visual.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.ActualAreaFillOpacityProperty">
            <summary>
            Identifies the ActualAreaFillOpacityPropertyName dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.ActualAreaFillOpacity">
            <summary>
            Gets the actual opacity applied to the area fill visual.
            </summary>
            <value>
            A double in the range 0, 1.
            </value>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.UpdateActualAreaFillOpacity">
            <summary>
            Updates the ActualAreaFillOpacity property based on the state of this series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsDefaultToolTipSelected">
            <summary>
            Gets if the default tooltip has been selected for display.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.ShowDefaultTooltip">
            <summary>
            Gets or sets whether default tooltip will be shown.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.ShowDefaultTooltipProperty">
            <summary>
            Identifies the ShowDefaultTooltip dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetTooltipContext(System.Object)">
            <summary>
            Gets a DataContext specific to the series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.TransitionInDuration">
            <summary>
            Gets or sets the duration of the current series's transition in morph.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.TransitionInDurationPropertyName">
            <summary>
            Property name for the TransitionInDuration property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.TransitionInDurationProperty">
            <summary>
            Identifies the TransitionInDuration dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.TransitionInSpeedType">
            <summary>
            Gets or sets the duration of the current series's transition in morph.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.TransitionInSpeedTypePropertyName">
            <summary>
            Property name for the TransitionInSpeedType property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.TransitionInSpeedTypeProperty">
            <summary>
            Identifies the TransitionInSpeedType dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetDefaultTransitionInSpeedType">
            <summary>
            Returns the default TransitionInSpeedType for this series.
            </summary>
            <returns>The default TransitionInSpeedType for this series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.ReplayTransitionIn">
            <summary>
            Replays the assigned transition in animation, if any.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.RemoveAxes">
            <summary>
            Call to null out the axes of the series;
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.ClearAxes">
            <summary>
            Call to null out the axes of a series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.InvalidateAxes">
            <summary>
            Method called when the series has changed in a way that will invalidate the range and rendering of its axes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.WMA(System.Collections.Generic.IEnumerable{System.Double},System.Int32)">
            <summary>
            Calculates the weighted moving average.
            </summary>
            <remarks>
            The first period values are calculated by accumulation and may be considered invalid.
            </remarks>
            <param name="sequence">Sequence to average.</param>
            <param name="period">Average period.</param>
            <returns>The weighted moving average.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.EMA(System.Collections.Generic.IEnumerable{System.Double},System.Int32)">
            <summary>
            Calculates the exponential moving average.
            </summary>
            <remarks>
            The first period values are calculated by accumulation and may be considered invalid.
            </remarks>
            <param name="sequence">Sequence to average.</param>
            <param name="period">Average period.</param>
            <returns>The exponential moving average.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.MMA(System.Collections.Generic.IEnumerable{System.Double},System.Int32)">
            <summary>
            Calculates the modified moving average.
            </summary>
            <remarks>
            The first period values are calculated by accumulation and may be considered invalid.
            </remarks>
            <param name="sequence">Sequence to average.</param>
            <param name="period">Average period.</param>
            <returns>The modified moving average.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.CMA(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Calculates the cumulative moving average.
            </summary>
            <param name="sequence">Sequence to average.</param>
            <returns>The cumulative moving average.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.SMA(System.Collections.Generic.IEnumerable{System.Double},System.Int32)">
            <summary>
            Calculates the simple moving average.
            </summary>
            <remarks>
            The first period values are calculated by accumulation and may be considered invalid.
            </remarks>
            <param name="sequence">Sequence to average.</param>
            <param name="period">Average period.</param>
            <returns>The simple moving average.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.MovingSum(System.Collections.Generic.IEnumerable{System.Double},System.Int32)">
            <summary>
            Calculates a moving sum over a sequence with a given period.
            </summary>
            <param name="sequence">The sequence for which to calculate the moving sum.</param>
            <param name="period">The period to use for the calculation.</param>
            <returns>The moving sum values.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.STDEV(System.Collections.Generic.IEnumerable{System.Double},System.Int32)">
            <summary>
            Calculates the standard deviation of a sequence with a given period.
            </summary>
            <param name="sequence">The sequence for which to calculate the standard deviation values.</param>
            <param name="period">The period to use for the calculation.</param>
            <returns>The sequence of calculated standard deviaton values.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.ToEnumerableRange(System.Func{System.Int32,System.Double},System.Int32,System.Int32)">
            <summary>
            Evaluates the given epression over a range of indexes.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="start">The starting index.</param>
            <param name="length">The ending index.</param>
            <returns>The stream of values.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.ToEnumerable(System.Func{System.Int32,System.Double},System.Int32)">
            <summary>
            Evaluates the given expression over a range of indexes starting at 0.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="length">The number of items to evaluate.</param>
            <returns>The stream of values.</returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.StartCapProperty">
            <summary>
            Identifies the StartCap dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.StartCap">
            <summary>
            Gets or sets the style of the starting point of any lines or polylines representing this series.
            </summary>
            <remarks>
            Not every series type has a line at which it would be appropriate to display a start cap, so this property does not affect every series type.  LineSeries, for example, is affected by StartCap, but ColumnSeries is not.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.EndCapProperty">
            <summary>
            Identifies the EndCap dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.EndCap">
            <summary>
            Gets or sets the style of the end point of any lines or polylines representing this series.
            </summary>
            <remarks>
            Not every series type has a line at which it would be appropriate to display an end cap, so this property does not affect every series type.  LineSeries, for example, is affected by EndCap, but ColumnSeries is not.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.UseDeferredMouseEnterAndLeave">
            <summary>
            Gets or sets a value indicating whether to use the deferred mouse enter and leave or not.
            </summary>
            <value>
            <c>true</c> if should use deferred mouse enter and leave; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.ShouldDeferEnterAndLeave">
            <summary>
            Gets or sets a value indicating whether to use the deferred mouse enter and leave or not.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.MouseOverEnabled">
            <summary>
            Gets or sets the whether the chart reacts to mouse move events.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.MouseOverEnabledProperty">
            <summary>
            Identifies the MouseOverEnabled dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetHighlightingInfo(System.Object,Infragistics.Portable.Point)">
            <summary>
            Gets the highlighting info of the series
            </summary>
            <param name="item">The data item</param>
            <param name="world">The world coordinates to use</param> 
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetMarkerHighlightingInfo(System.Object,Infragistics.Portable.Point)">
            <summary>
            Gets the highlighting info of a marker if the series supports markers
            </summary>
            <param name="item">The data item</param>
            <param name="world">The world coordinates to use</param> 
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.SimulateHover(Infragistics.Portable.Point)">
            <summary>
            Simulates a pointer hover over the series surface.
            </summary>
            <param name="point">The pointer position relative to the series viewport over which to hover.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.FindActualLegend">
            <summary>
            Finds the legend to use for this series.
            </summary>
            <returns>The legend that should be used.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.ShouldTransitionIn">
            <summary>
            Allows derived series to return true if it supports the current transition-in mode.
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.DeregisterForAxis(Infragistics.Controls.Charts.Axis)">
            <summary>
            Deregisters this series with an axis.
            </summary>
            <param name="axis">The axis to deregister from.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.RegisterForAxis(Infragistics.Controls.Charts.Axis)">
            <summary>
            Registers this series with an axis.
            </summary>
            <param name="axis">The axis to register with.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.UseOverlayScheduler">
            <summary>
            Boolean indicating whether or not this series should use the overlay scheduler.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.ProvideContext(Infragistics.RenderingContext,Infragistics.RenderingContext)">
            <summary>
            Called by the UI framework to provide the rendering context to this series.
            </summary>
            <param name="context">The rendering context.</param>
            <param name="hitContext">The rendering interaction context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.ProvideViewport(Infragistics.Portable.Rect)">
            <summary>
            Called by the UI framework to provide the viewport to this series.
            </summary>
            <param name="newViewport">The new viewport.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.StyleUpdated">
            <summary>
            Called when this series' Style is updated.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.TooltipTemplate">
            <summary>
            The template to use for displaying tooltip content.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.FlattenEventArgs">
            <summary>
            Function to return a modified EventArgs with functions flattened into properties.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.TestHit(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks for a matching data item at the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if a matching data item was found; otherwise, False.</returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series._coercionMethods">
            <summary>
            Gets or gets the coercion methods to use when loading data from data sources.
            Should be specified before setting any member paths, if being used. Setting it later 
            will not cause data to be reimported into the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.CoercionMethods">
            <summary>
            Gets or sets the coercion methods to use when loading data from data sources.
            Should be specified before setting any member paths, if being used. Setting it later 
            will not cause data to be reimported into the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.ExpectFunctions">
            <summary>
            Gets or sets whether the series should expect that properties in its items source may be functions that need to be
            evaluated to yield their value. This defaults to false, as there will be a subtle performance impact to using this feature.
            This value must be set before assigning an item's source to take effect.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetHitDataContext(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Gets the DataContext matching the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>The DataContext matching an item found at the given position.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.HitTestMode">
            <summary>
            Method of hit testing to use when pointing to items in this series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetResolvedHitTestMode">
            <summary>
            Gets the resolved hit test mode of this series.
            </summary>
            <returns>The resolved hit test mode of this series.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.ActualHitTestMode">
            <summary>
            Resolved method of hit testing to use when pointing to items in the chart.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.RegisterDoubleColumn(System.String)">
            <summary>
            Registers a double column for the assigned ItemsSource.
            </summary>
            <param name="memberPath">The property path from which to retrieve the column values.</param>
            <returns>The column reference.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.RegisterIntColumn(System.String)">
            <summary>
            Registers an int column for the assigned ItemsSource.
            </summary>
            <param name="memberPath">The property path from which to retrieve the column values.</param>
            <returns>The column reference.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.RegisterObjectColumn(System.String)">
            <summary>
            Registers an object column for the assigned ItemsSource.
            </summary>
            <param name="memberPath">The property path from which to retrieve the column values.</param>
            <returns>The column reference.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.Viewport">
            <summary>
            Gets the viewport associated with the series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsNegativeColorSupported">
            <summary>
            Overridden by derived series classes to indicate when negative colors are supported or not.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.IsMarkerlessDisplayPreferred">
            <summary>
            Overridden by derived series classes to indicate when markerless display is preferred or not.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.SetNegativeColors(Infragistics.Portable.Graphics.Media.Brush,Infragistics.Portable.Graphics.Media.Brush)">
            <summary>
            Sets the negative brush and outline properties for this series to the given arguments.
            </summary>
            <param name="negativeBrush">The negative fill brush.</param>
            <param name="negativeOutline">The negative outline brush.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.CopyVisualData(System.Object,System.Object)">
            <summary>
            Copies the source visual data to the target visual data.
            </summary>
            <param name="target">The source visual data.</param>
            <param name="source">The target visual data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.ExportVisualData">
            <summary>
            Exports visual information about the series for use by external tools and functionality.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.ExportVisualDataOverride(System.Object)">
            <summary>
            Called when the series should provide visual data for export.
            </summary>
            <param name="svd">The container for the visual data to export.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.TrendLineDashArrayPropertyName">
            <summary>
            Property name for the TrendLineDashArray property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.TrendLineTypePropertyName">
            <summary>
            Property name for the TrendLineType property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.TrendLinePeriodPropertyName">
            <summary>
            Property name for the TrendLinePeriod property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.TrendLineBrushPropertyName">
            <summary>
            Property name for the TrendLineBrush property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.TrendLineActualBrushPropertyName">
            <summary>
            Property name for the TrendLineActualBrush property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.TrendLineThicknessPropertyName">
            <summary>
            Property name for the TrendLineThickness property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.TrendLineDashCapPropertyName">
            <summary>
            Property name for the TrendLineDashCap property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Series.TrendLineZIndexPropertyName">
            <summary>
            Property name for the TrendLineZIndex property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.MoveCursorPoint(Infragistics.Portable.Point)">
            <summary>
            Moves the cursor point to the provided world position. Some series may react to the current cursor position.
            </summary>
            <param name="point">The cursor point, in world coordinates.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.OnCursorPointMoved(Infragistics.Portable.Point)">
            <summary>
            Called when the cursor point has been moved by the user or mouse/touch events.
            </summary>
            <param name="point">The current cursor point in world coordinates.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.NotifyBrushScalesDirty">
            <summary>
            This gets called when the brush scales associated with a series become dirty.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.NotifySizeScalesDirty">
            <summary>
            This gets called when the size scales associated with a series become dirty.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetMatchingAxis(Infragistics.Controls.Charts.Axis)">
            <summary>
            Gets the axis which should be paired with the given axis.
            </summary>
            <param name="axis">The axis to find a match for.</param>
            <returns>The axis which should be paired with the given axis.  For a typical series, passing the x-axis will return the y-axis, and vice versa.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetAxes">
            <summary>
            Gets this series' axes as an array.
            </summary>
            <returns>An array containing all axes used by this series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetReferenceValue">
            <summary>
            Gets a numeric value representing the initial value of this series.
            </summary>
            <returns>A numeric value representing the initial value of this series.</returns>
            <remarks>The reference value is used by the PercentChangeYAxis, where all values in the series are scaled relative to the initial value.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.OnBeforeContentRefresh">
            <summary>
            Method invoked before the series refreshes its visual content.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.FinalValue">
            <summary>
            The final value of this series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Series.PercentChange">
            <summary>
            The percent change from the beginning to the end of this series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.UpdatePercentChange">
            <summary>
            Updates precent change based on final value and reference value
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Series.GetItemLabel(System.Object)">
            <summary>
            Gets an item label, if available, for the given data item.
            </summary>
            <param name="dataItem">The data item in context.</param>
            <returns>An item label for the given data item.</returns>
            <remarks>This item label is used by some tooltip templates.</remarks>
        </member>
        <member name="T:Infragistics.Controls.Charts.SeriesCollection">
            <summary>
            Represents an observable collection of XamDataChart series objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesCollection.#ctor">
            <summary>
            Initializes a default, empty SeriesCollection.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.SeriesCollection.CollectionResetting">
            <summary>
            CollectionResetting is raised before the collection reset occurs.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesCollection.ClearItems">
            <summary>
            Clears the contained items of the collection, but provides a preview of the occurrance 
            in the form of the CollectionResetting event.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ShapeSeriesBase">
            <summary>
            Series class for rendering polygons.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.#ctor">
            <summary>
            ShapeSeriesBase constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.ClearAxes">
            <summary>
            Call to null out the axes of a series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.GetAxes">
            <summary>
            Gets this series' axes as an array.
            </summary>
            <returns>An array containing all axes used by this series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.GetItemValue(System.Object,System.String)">
            <summary>
            Gets a value based on one of the valid member paths for this series type.
            </summary>
            <param name="item">An item from the data source bound to the series.</param>
            <param name="memberPathName">The property name of a valid member path for the series</param>
            <returns></returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeriesBase.ShapeMemberPathPropertyName">
            <summary>
            Gets the name of ShapeMemberPathProperty
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeriesBase.ShapeMemberPathProperty">
            <summary>
            Identifies the ShapeMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesBase.ShapeMemberPath">
            <summary>
            The name of the property on ItemsSource items which, for each shape, contains a list of points to be converted to a polygon.
            </summary>
            <remarks>
            To be consistent with the Shapefile technical description, it is expected that each list of points is defined as an IEnumerable of IEnumerable of Point, or in other words, a list of lists of points.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesBase.ShapeColumn">
            <summary>
            The FastItemColumn containing Shape points.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesBase.XAxis">
            <summary>
            Gets or sets the effective x-axis for the current ScatterBase object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeriesBase.XAxisProperty">
            <summary>
            Identifies the ActualXAxis dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesBase.YAxis">
            <summary>
            Gets or sets the effective y-axis for the current ScatterBase object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeriesBase.YAxisProperty">
            <summary>
            Identifies the ActualYAxis dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.RegisterObjectColumn(System.String)">
            <summary>
            Registers a column in the FastItemsSource at the given memberPath.
            </summary>
            <param name="memberPath">The property name to get values from on each item in the FastItemsSource.</param>
            <returns>An IFastItemColumn containing all the values in the FastItemsSource items at the given memberPath.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.CanUseAsYAxis(System.Object)">
            <summary>
            Determine if object can be used as YAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.CanUseAsXAxis(System.Object)">
            <summary>
            Determine if object can be used as XAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesBase.BoundsColumn">
            <summary>
            The stored list of bounds for shapes in this series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesBase.IsClosed">
            <summary>
            Boolean indicating whether shapes in this series should be closed polygons.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.ShouldRecordMarkerPositions">
            <summary>
            Checks if this series should render markers
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.RenderSeriesOverride(System.Boolean)">
            <summary>
            Renders the series.
            </summary>
            <param name="animate">Whether or not to transition smoothly from the previous state of the series.</param>
            <remarks>
            The animate parameter is relevant only for series which implement transitions.  Not all series in the DataChart support this behavior.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.RenderAlternateView(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.RenderSurface,System.String,System.Double)">
            <summary>
            Renders an alternate view for of this series
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="surface">The render target.</param>
            <param name="viewIdentifier">String key to use for this view target</param>
            <param name="effectiveScalingRatio">The effective scaling ratio.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.RenderWithView(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Renders this series with specified a view
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.InvalidateAxes">
            <summary>
            Invalidates the X and Y axes of this series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.WindowRectChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Overridden in derived classes when they want to respond to the chart's window changing.
            </summary>
            <param name="oldWindowRect">The old window rectangle of the chart.</param>
            <param name="newWindowRect">The new window rectangle of the chart.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.ViewportRectChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Overridden in derived classes when they want to respond to the viewport changing.
            </summary>
            <param name="oldViewportRect">The old viewport rectangle.</param>
            <param name="newViewportRect">The new viewport rectangle.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.DataUpdatedOverride(Infragistics.Portable.FastItemsSourceEventAction,System.Int32,System.Int32,System.String)">
            <summary>
            Overridden in derived classes to respond to data updates.
            </summary>
            <param name="action">The action performed on the bound data.</param>
            <param name="position">The position at which the action was performed.</param>
            <param name="count">The count of affected positions.</param>
            <param name="propertyName">The property name changed.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.ValidateSeries(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesBase.RequiresShapes">
            /// <summary>
            Gets whether or not the series requires rendering of shapes that clip its main visuals
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesBase.ShapeSeriesView">
            <summary>
            Gets or sets the view of series
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeriesBase.ClipRect">
            <summary>
            The clipping area parameter for the clipper. Based on Viewport, but inflated to compensate for the StrokeThickness of the shapes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.GetHitDataContext(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Gets the DataContext matching the given position.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.GetItemAt(System.Int32)">
            <summary>
            Gets the data item at the given index.
            </summary>
            <param name="index">The index of the data item in the data source.</param>
            <returns>The data item from the data source at the given index.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesBase.UseDeferredMouseEnterAndLeave">
            <summary>
            Gets or sets a value indicating whether to use the deferred mouse enter and leave or not.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeriesBase.ShapeFilterResolutionPropertyName">
            <summary>
            Gets the name of ShapeFilterResolution
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ShapeSeriesBase.ShapeFilterResolutionProperty">
            <summary>
            Identifies the ShapeFilterResolution dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesBase.ShapeFilterResolution">
            <summary>
            The resolution at which to filter out shapes in the series.  For example, if the ShapeFilterResolution is set to 3, then elements with a bounding rectangle smaller than 3 X 3 pixels will be filtered out.
            </summary>
            <remarks>
            In the case of ScatterPolylineSeries, the resolution is compared to either dimension, rather than both.  In other words, a polyline will not be filtered if its height or its width exceeds the value of this property.  Whereas with a ShapeSeries, both the height and the width must exceed the value of this property.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesBase.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesBase.IsShape">
            <summary>
            Gets whether or not this series is a shape series
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.SizeScale">
            <summary>
            Represents a scale that is used determine an object's size.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SizeScale.#ctor">
            <summary>
            Creates a new instance of SizeScale.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SizeScale.Series">
            <summary>
            Gets or sets the collection of series objects.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SizeScale.MinimumValueProperty">
            <summary>
            Identifies the MinimumValue dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SizeScale.MinimumValue">
            <summary>
            Gets or sets the minimum value for this scale.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SizeScale.MaximumValueProperty">
            <summary>
            Identifies the MaximumValue dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SizeScale.MaximumValue">
            <summary>
            Gets or sets the maximum value for this scale.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SizeScale.IsLogarithmicProperty">
            <summary>
            Identifies the IsLogarithmic dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SizeScale.IsLogarithmic">
            <summary>
            Gets or sets whether the scale is logarithmic.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SizeScale.LogarithmBaseProperty">
            <summary>
            Identifies the LogarithmBase dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SizeScale.LogarithmBase">
            <summary>
            Gets or sets the logarithm base for this scale.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.SizeScale.PropertyChanged">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.SizeScale.PropertyUpdated">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SizeScale.RaisePropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            Raises the property changed and updated events.
            </summary>
            <param name="name">The name of the property being changed.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SizeScale.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            Handles property updates.
            </summary>
            <param name="sender">source object</param>
            <param name="propertyName">property name</param>
            <param name="oldValue">old property value</param>
            <param name="newValue">new property value</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.SliceClickEventArgs">
            <summary>
            Contains PieChart click event data.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceClickEventArgs.Slice">
            <summary>
            Gets the current slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceClickEventArgs.IsSelected">
            <summary>
            Gets or sets whether the slice is selected.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceClickEventArgs.IsExploded">
            <summary>
            Gets or sets whether the slice is exploded.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceClickEventArgs.IsOthersSlice">
            <summary>
            Gets whether the current slice is part of the others slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceClickEventArgs.DataContext">
            <summary>
            Gets the slice data context.
            </summary>
            <value>The data context.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceClickEventArgs.OriginalEvent">
            <summary>
            Holds a reference to the original event that triggered slice click.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.SlowStochasticOscillatorIndicator">
            <summary>
            Represents a XamDataChart Slow Stochastic Oscillator indicator series.
            </summary>
            <remarks>
            Default required members: High, Low, Close
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.SlowStochasticOscillatorIndicator.#ctor">
            <summary>
            Creates an instance of the MarketFacilitationIndexIndicator
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SlowStochasticOscillatorIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SlowStochasticOscillatorIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SlowStochasticOscillatorIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current SlowStochasticOscillatorIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for SlowStochasticOscillatorIndicator periods is 14.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SlowStochasticOscillatorIndicator.PeriodProperty">
            <summary>
            Identifies the Period dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SlowStochasticOscillatorIndicator.PeriodOverride">
            <summary>
            Specifies the period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SlowStochasticOscillatorIndicator.SetPeriodOverride(System.Int32)">
            <summary>
            Sets the Period property.
            </summary>
            <param name="period">The value for the Period property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.SplineAreaFragment">
            <summary>
            Represents one part of a StackedSplineAreaSeries.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineAreaFragment.#ctor">
            <summary>
            Initializes a new instance of the SplineAreaFragment class. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineAreaFragment.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineAreaFragment.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineAreaFragment.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes
            call ApplyTemplate.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SplineAreaFragment.IsAreaOrLine">
            <summary>
            Gets whether the current series shows an area or line shape.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineAreaFragment.TestRangeAreaOver(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Tests if the given position should trigger an interaction.
            </summary>
            <param name="position">The point being evaluated.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if the given position should trigger an interaction, otherwise False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineAreaFragment.TestHit(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks for a matching data item at the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if a matching data item was found; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineAreaFragment.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineAreaFragment.RenderThumbnail(Infragistics.Portable.Rect,Infragistics.Controls.Charts.RenderSurface)">
            <summary>
            Renders the thumbnail for the OPD pane.
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="surface">The render target.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineAreaFragment.UpdateActualAreaFillOpacity">
            <summary>
            Updates the ActualAreaFillOpacity property based on the state of this series.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.SplineAreaSeries">
            <summary>
            Represents a XamDataChart spline area series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineAreaSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineAreaSeries.GetDefaultTransitionInMode">
            <summary>
            Gets default transition-in mode 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineAreaSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineAreaSeries.#ctor">
            <summary>
            Initializes a new instance of the SplineAreaSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineAreaSeries.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineAreaSeries.TestHit(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks for a matching data item at the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if a matching data item was found; otherwise, False.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.SplineFragment">
            <summary>
            Represents one part of a StackedSplineSeries.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineFragment.#ctor">
            <summary>
            Initializes a new instance of the SplineSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineFragment.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineFragment.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineFragment.TestRangeAreaOver(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Tests if the given position should trigger an interaction.
            </summary>
            <param name="position">The point being evaluated.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if the given position should trigger an interaction, otherwise False.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.SplineFragment.IsAreaOrLine">
            <summary>
            Gets whether the current series shows an area or line shape.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineFragment.TestHit(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks for a matching data item at the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if a matching data item was found; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineFragment.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.SplineFragmentBase">
            <summary>
            Represents one part in a StackedSplineSeries or StackedSplineAreaSeries.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineFragmentBase.#ctor">
            <summary>
            SplineFragmentBase constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SplineFragmentBase.IsDropShadowSupported">
            <summary>
            Gets if the current series supports drop shadows.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SplineFragmentBase.IsFragment">
            <summary>
            Gets whether the current series is a stack fragment.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineFragmentBase.GetFragmentIndex">
            <summary>
            Gets the index of this fragment in its parent series.
            </summary>
            <returns>The index of this fragment in its parent series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineFragmentBase.ResolveLegendIndex">
            <summary>
            Resolves the index to use for ordering the legend.
            </summary>
            <returns>The ordering index to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineFragmentBase.GetLogicalFragmentIndex">
            <summary>
            Gets the index of this fragment's series in its parent series.
            </summary>
            <returns>The index of this fragment's series in its parent series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineFragmentBase.ResolveParentSeries">
            <summary>
            Returns the parent series.
            </summary>
            <returns>The parent series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineFragmentBase.ValidateSeries(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineFragmentBase.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineFragmentBase.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.SplineSeries">
            <summary>
            Represents a XamDataChart spline series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineSeries.#ctor">
            <summary>
            Initializes a new instance of the SplineSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineSeries.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.SplineSeriesBase">
            <summary>
             Represents the base class for all XamDataChart spline series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineSeriesBase.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineSeriesBase.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.SplineSeriesBase.IsAreaOrLine">
            <summary>
            Gets whether the current series shows an area or line shape.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SplineSeriesBase.UColumn">
            <summary>
            Represents the spline fit data.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineSeriesBase.GetMatchingBuckets(Infragistics.Controls.Charts.CategoryAxisBase,System.Collections.Generic.List{System.Double[]},System.Int32,System.Int32,Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Gets the data values present at a given point.
            </summary>
            <param name="categoryAxis">The axis in context.</param>
            <param name="buckets">The data values for the series.</param>
            <param name="bucketSize">The number of data items represented by each bucket of data values.</param>
            <param name="firstBucket">The index of the first visible bucket of data values on the axis.</param>
            <param name="world">The world coordinates to use.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped.</param>
            <returns>An array of buckets containing data values.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineSeriesBase.GetInterpolatedSeriesValue(System.Double,System.Collections.Generic.IList{System.Double},System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Gets a data value based on the surrounding data items.
            </summary>
            <param name="p">The distance from prevItem, expressed as a value between 0 and 1.</param>
            <param name="column">The series data values.</param>
            <param name="prevItem">The index of the previous data item.</param>
            <param name="nextItem">The index of the next data item.</param>
            <param name="unsortedPrevItem">The unsorted index of the previous data item.</param>
            <param name="unsortedNextItem">The unsorted index of the next data item.</param>
            <param name="offset">The distance between the edge of the axis and the first or last data item.</param>
            <param name="isSorting">True if the associated axis is one that sorts its items.</param>
            <returns>A value interpolated at a distance of p between prevItem and nextItem.</returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.SplineSeriesBase.SplineTypeProperty">
            <summary>
            Identifies the SplineType dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SplineSeriesBase.SplineType">
            <summary>
            Gets or sets the type of spline to be rendered.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineSeriesBase.SplineFitMustBeRecalculated">
            <summary>
            Indicate that the spline fit must be recalculated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineSeriesBase.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineSeriesBase.DataUpdatedOverride(Infragistics.Portable.FastItemsSourceEventAction,System.Int32,System.Int32,System.String)">
            <summary>
            Overridden in derived classes when they want to respond to the bound data being updated.
            </summary>
            <param name="action">The type of action performed on the data source.</param>
            <param name="position">The position the change began at.</param>
            <param name="count">The number of items affected by the change.</param>
            <param name="propertyName">The name of the property changed, if applicable.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.Stacked100AreaSeries">
            <summary>
            Represents a stacked area series, where values are presented as percentages of the total.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stacked100AreaSeries.#ctor">
            <summary>
            Initializes a new instance of a Stacked100AreaSeries class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stacked100AreaSeries.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes
            call ApplyTemplate.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stacked100AreaSeries.PrepareData">
            <summary>
            Calculates the value column and min and max values.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Stacked100BarSeries">
            <summary>
            Represents a XamDataChart stacked100 bar series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stacked100BarSeries.#ctor">
            <summary>
            Initializes a new instance of a Stacked100BarSeries class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stacked100BarSeries.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes
            call ApplyTemplate.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stacked100BarSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stacked100BarSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view has been created.
            </summary>
            <param name="view">The view class for the current series</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stacked100BarSeries.PrepareData">
            <summary>
            Calculates the value column and min and max values.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Stacked100ColumnSeries">
            <summary>
            Represents a XamDataChart stacked100 column series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stacked100ColumnSeries.#ctor">
            <summary>
            Initializes a new instance of a Stacked100ColumnSeries class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stacked100ColumnSeries.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes
            call ApplyTemplate.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stacked100ColumnSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stacked100ColumnSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view has been created.
            </summary>
            <param name="view">The view class for the current series</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stacked100ColumnSeries.PrepareData">
            <summary>
            Calculates the value column and min and max values.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Stacked100LineSeries">
            <summary>
            Represents a XamDataChart stacked100 line series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stacked100LineSeries.#ctor">
            <summary>
            Initializes a new instance of a Stacked100LineSeries class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stacked100LineSeries.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes
            call ApplyTemplate.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stacked100LineSeries.PrepareData">
            <summary>
            Calculates the value column and min and max values.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Stacked100SplineAreaSeries">
            <summary>
            Represents a XamDataChart stacked100 spline area series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stacked100SplineAreaSeries.#ctor">
            <summary>
            Initializes a new instance of a Stacked100SplineAreaSeries class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stacked100SplineAreaSeries.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes
            call ApplyTemplate.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stacked100SplineAreaSeries.PrepareData">
            <summary>
            Calculates the value column and min and max values.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Stacked100SplineSeries">
            <summary>
            Represents a XamDataChart stacked100 spline series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stacked100SplineSeries.#ctor">
            <summary>
            Creates a new instance of a stacked100 spline series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stacked100SplineSeries.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes
            call ApplyTemplate.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stacked100SplineSeries.PrepareData">
            <summary>
            Calculates the value column and min and max values.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.StackedAreaSeries">
            <summary>
            Represents a XamDataChart stacked area series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedAreaSeries.#ctor">
            <summary>
            Initializes a new instance of a StackedAreaSeries class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedAreaSeries.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes
            call ApplyTemplate.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedAreaSeries.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.StackedBarSeries">
            <summary>
            Represents a XamDataChart stacked bar series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedBarSeries.#ctor">
            <summary>
            Initializes a new instance of a StackedBarSeries class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedBarSeries.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes
            call ApplyTemplate.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedBarSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedBarSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view has been created.
            </summary>
            <param name="view">The view class for the current series</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedBarSeries.RadiusX">
            <summary>
            Gets or sets the x-radius of the ellipse that is used to round the corners of the bar.
            <para>
            This is a dependency property.
            </para>
            </summary>  
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedBarSeries.RadiusXProperty">
            <summary>
            Identifies the RadiusX dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedBarSeries.RadiusY">
            <summary>
            Gets or sets the y-radius of the ellipse that is used to round the corners of the bar.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedBarSeries.RadiusYProperty">
            <summary>
            Identifies the RadiusY dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedBarSeries.GetMode2Index">
            <summary>
            Returns CategoryMode2 index of the current series.
            </summary>
            <returns>CategoryMode2 index</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedBarSeries.GetScaledWorldZeroValue">
            <summary>
            Returns the scaled zero value based on the axis reference value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedBarSeries.GetUnscaledWorldZeroValue">
            <summary>
            Returns the unscaled zero value based on the axis reference value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedBarSeries.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedBarSeries.ScrollIntoView(System.Object)">
            <summary>
            Scrolls the series to display the item for the specified data item.
            </summary>
            <remarks>
            The series is scrolled by the minimum amount required to place the specified data item within
            the central 80% of the visible axis.
            </remarks>
            <param name="item">The data item (item) to scroll to.</param>
            <returns>True if the specified item could be displayed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedBarSeries.ValidateSeries(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Checks if the series is valid to be rendered.
            </summary>
            <param name="viewportRect">The current viewport, a rectangle with bounds equivalent to the screen size of the series.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="view">The SeriesView in context.</param>
            <returns>True if the series is valid to be rendered, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedBarSeries.DataUpdatedOverride(Infragistics.Portable.FastItemsSourceEventAction,System.Int32,System.Int32,System.String)">
            <summary>
            When overridden in a derived class, DataChangedOverride is called whenever a change is made to
            the series data.
            </summary>
            <param name="action">The action performed on the data</param>
            <param name="position">The index of the first item involved in the update.</param>
            <param name="count">The number of items in the update.</param>
            <param name="propertyName">The name of the updated property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedBarSeries.GetItemIndex(Infragistics.Portable.Point)">
            <summary>
            Gets the index of the item that resides at the provided world coordinates.
            </summary>
            <param name="world">The world coordinates of the requested item.</param>
            <returns>The requested item's index.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedBarSeries.GetItem(Infragistics.Portable.Point)">
            <summary>
            Gets the item that is the best match for the specified world coordinates.
            </summary>
            <param name="world">The world coordinates to use.</param>
            <returns>The item that is the best match.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedBarSeries.GetItemSpan">
            <summary>
            For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedBarSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.StackedColumnSeries">
            <summary>
            Represents a XamDataChart stacked column series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedColumnSeries.#ctor">
            <summary>
            Initializes a new instance of a StackedColumnSeries class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedColumnSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedColumnSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view has been created.
            </summary>
            <param name="view">The view class for the current series</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedColumnSeries.RadiusX">
            <summary>
            Gets or sets the x-radius of the ellipse that is used to round the corners of the column.
            <para>
            This is a dependency property.
            </para>
            </summary>  
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedColumnSeries.RadiusXProperty">
            <summary>
            Identifies the RadiusX dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedColumnSeries.RadiusY">
            <summary>
            Gets or sets the y-radius of the ellipse that is used to round the corners of the column.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedColumnSeries.RadiusYProperty">
            <summary>
            Identifies the RadiusY dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedColumnSeries.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedColumnSeries.GetItemSpan">
            <summary>
            For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedColumnSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.StackedFragmentSeries">
            <summary>
            Represents a non-visual child of StackedSeriesBase.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedFragmentSeries.#ctor">
            <summary>
            Creates a new instance of StackedFragmentSeries.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.BrushProperty">
            <summary>
            Identifies the Brush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.Brush">
            <summary>
            Gets or sets the brush of the stacked fragment.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualBrushProperty">
            <summary>
            Identifies the ActualBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualBrush">
            <summary>
            Gets the actual brush used by the series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.DashArray">
            <summary>
            Gets or sets a collection of Double values that indicate the pattern of dashes and gaps that
            is used to outline the current series object. 
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.DashArrayProperty">
            <summary>
            Identifies the StrokeDashArray dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualDashArrayProperty">
            <summary>
            Identifies the ActualDashArray dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualDashArray">
            <summary>
            Gets the actual dash array used by the series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.DashCap">
            <summary>
            Gets or sets the PenLineCap enumeration value that specifies how the current series object's dash ends are drawn. 
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.DashCapProperty">
            <summary>
            Identifies the DashCap dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualDashCapProperty">
            <summary>
            Identifies the ActualDashCap dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualDashCap">
            <summary>
            Gets the actual dash cap used by the series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.IsDropShadowEnabled">
            <summary>
            Gets or sets whether drop shadow should be enabled for this series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.IsDropShadowEnabledProperty">
            <summary>
            Identifies the ActualIsDropShadowEnabled dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualIsDropShadowEnabled">
            <summary>
            Gets whether drop shadow is actually enabled for this series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualIsDropShadowEnabledProperty">
            <summary>
            Identifies the ActualIsDropShadowEnabled dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ShadowBlur">
            <summary>
            Gets or sets the shadow blur.
            </summary>
            <remarks>
            This property is ignored when <see cref="P:Infragistics.Controls.Charts.StackedFragmentSeries.UseSingleShadow"/> is set to true.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ShadowBlurProperty">
            <summary>
            Identifies the ShadowBlur dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualShadowBlur">
            <summary>
            Gets the actual shadow blur used by the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualShadowBlurProperty">
            <summary>
            Identifies the ActualShadowBlur dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ShadowColor">
            <summary>
            Gets or sets the drop shadow color.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ShadowColorProperty">
            <summary>
            Identifies the ShadowColor dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualShadowColor">
            <summary>
            Gets actual the drop shadow color used by the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualShadowColorProperty">
            <summary>
            Identifies the ActualShadowColor dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.UseSingleShadow">
            <summary>
            Gets or sets whether drop shadow is applied to the whole StackedFragmentSeries visual or to each of the individual shapes forming the StackedFragmentSeries.
            </summary>
            <remarks>
            When this property is set to true, no <see cref="P:Infragistics.Controls.Charts.StackedFragmentSeries.ShadowBlur"/> is applied.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.UseSingleShadowProperty">
            <summary>
            Identifies the UseSingleShadow dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualUseSingleShadow">
            <summary>
            Gets whether drop shadow is actually applied to the whole StackedFragmentSeries visual or to each of the individual shapes forming the StackedFragmentSeries.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualUseSingleShadowProperty">
            <summary>
            Identifies the ActualUseSingleShadow dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ShadowOffsetX">
            <summary>
            Gets or sets the drop shadow x-offset.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ShadowOffsetXProperty">
            <summary>
            Identifies the ShadowOffsetX dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualShadowOffsetX">
            <summary>
            Gets the actual drop shadow x-offset applied to the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualShadowOffsetXProperty">
            <summary>
            Identifies the ActualShadowOffsetX dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ShadowOffsetY">
            <summary>
            Gets or sets the drop shadow y-offset.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ShadowOffsetYProperty">
            <summary>
            Identifies the ShadowOffsetY dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualShadowOffsetY">
            <summary>
            Gets the actual drop shadow y-offset applied to the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualShadowOffsetYProperty">
            <summary>
            Identifies the ActualShadowOffsetY dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.EndCapProperty">
            <summary>
            Identifies the EndCap dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.EndCap">
            <summary>
            The style of the end point of any lines or polylines representing this series.
            </summary>
            <remarks>
            Not every series type has a line at which it would be appropriate to display an end cap, so this property does not affect every series type.  LineSeries, for example, is affected by EndCap, but ColumnSeries is not.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualEndCapProperty">
            <summary>
            Identifies the ActualEndCap dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualEndCap">
            <summary>
            Gets the actual end cap used by the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.IsHitTestVisibleProperty">
            <summary>
            Identifies the IsHitTestVisible dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.IsHitTestVisible">
            <summary>
            Gets or sets whether the series receives mouse events.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualIsHitTestVisibleProperty">
            <summary>
            Identifies the ActualIsHitTestVisible dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualIsHitTestVisible">
            <summary>
            Gets the actual value of whether or not the series receives mouse events.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.LegendItemBadgeTemplate">
            <summary>
            Gets or sets the LegendItemBadgeTemplate property.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            The legend item badge is created according to the LegendItemBadgeTemplate on-demand by 
            the series object itself.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.LegendItemBadgeTemplateProperty">
            <summary>
            Identifies the LegendItemBadgeTemplate dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualLegendItemBadgeTemplateProperty">
            <summary>
            Identifies the ActualLegendItemBadgeTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualLegendItemBadgeTemplate">
            <summary>
            Gets the actual legend item badge template used by the series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.LegendItemTemplate">
            <summary>
            Gets or sets the LegendItemTemplate property.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            The legend item control content is created according to the LegendItemTemplate on-demand by 
            the series object itself.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.LegendItemTemplateProperty">
            <summary>
            Identifies the LegendItemTemplate dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualLegendItemTemplateProperty">
            <summary>
            Identifies the ActualLegendItemTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualLegendItemTemplate">
            <summary>
            Gets the actual legend item template used by the series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.LegendItemVisibility">
            <summary>
            Gets or sets the legend item visibility for the current series object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.LegendItemVisibilityProperty">
            <summary>
            Identifies the LegendItemVisibility Dependency Property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualLegendItemVisibilityProperty">
            <summary>
            Identifies the ActualLegendItemVisibility dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualLegendItemVisibility">
            <summary>
            Gets the actual visibility of the legend items in the series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.MarkerBrush">
            <summary>
            Gets or sets the brush that specifies how the current series object's marker interiors are painted.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.MarkerBrushProperty">
            <summary>
            Identifies the MarkerBrush dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualMarkerBrushProperty">
            <summary>
            Identifies the ActualMarkerBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualMarkerBrush">
            <summary>
            Gets the actual marker brush of the series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.MarkerOutline">
            <summary>
            Gets or sets the brush that specifies how the current series object's marker outlines are painted.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.MarkerOutlineProperty">
            <summary>
            Identifies the MarkerOutline dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualMarkerOutlineProperty">
            <summary>
            Identifies the ActualMarkerOutline dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualMarkerOutline">
            <summary>
            Gets the actual marker outline of the series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.MarkerStyle">
            <summary>
            Gets or sets the Style to be used for the markers.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.MarkerStyleProperty">
            <summary>
            Identifies the MarkerStyle dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualMarkerStyleProperty">
            <summary>
            Identifies the ActualMarkerStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualMarkerStyle">
            <summary>
            Gets the actual marker style used by the series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.MarkerTemplate">
            <summary>
            Gets or sets the MarkerTemplate for the current series object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.MarkerTemplateProperty">
            <summary>
            Identifies the MarkerTemplate dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualMarkerTemplateProperty">
            <summary>
            Identifies the ActualMarkerTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualMarkerTemplate">
            <summary>
            Gets the actual marker template used by the series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.MarkerType">
            <summary>
            Gets or sets the marker type for the current series object.
            </summary>
            <remarks>
            If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.MarkerTypeProperty">
            <summary>
            Identifies the MarkerType dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualMarkerTypeProperty">
            <summary>
            Identifies the ActualMarkerType dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualMarkerType">
            <summary>
            Gets the actual marker type set used in the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.NameProperty">
            <summary>
            Identifies the Name dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.Name">
            <summary>
            Gets or sets the Name of the stacked fragment.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.OpacityProperty">
            <summary>
            Identifies the Opacity dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.Opacity">
            <summary>
            Gets or sets the Opacity of the stacked fragment.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualOpacityProperty">
            <summary>
            Identifies the ActualOpacity depenedency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualOpacity">
            <summary>
            Gets the series opacity.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.OpacityMaskProperty">
            <summary>
            Identifies the OpacityMask dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.OpacityMask">
            <summary>
            Gets or sets the OpacityMask of the stacked fragment.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualOpacityMaskProperty">
            <summary>
            Identifies the ActualOpacityMask dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualOpacityMask">
            <summary>
            Gets the series opacity mask.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.Outline">
            <summary>
            Gets or sets the brush to use for the outline of the series.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>Some series types, such as LineSeries, do not display outlines.  Therefore, this property does not affect some charts.</remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.OutlineProperty">
            <summary>
            Identifies the Outline dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualOutlineProperty">
            <summary>
            Identifies the ActualOutline dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualOutline">
            <summary>
            Gets the series outline.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.AreaFillOpacityProperty">
            <summary>
            Identifies the AreaFillOpacity dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.AreaFillOpacity">
            <summary>
            Gets or sets the AreaFillOpacity of the stacked fragment. This property only applies for area-like series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualAreaFillOpacityProperty">
            <summary>
            Identifies the ActualAreaFillOpacity depenedency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualAreaFillOpacity">
            <summary>
            Gets the series ActualAreaFillOpacity.  This property only applies for area-like series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.RadiusX">
            <summary>
            Gets or sets the x-radius of the ellipse that is used to round the corners of the column. This only applies to Bar and Column series.
            <para>
            This is a dependency property.
            </para>
            </summary>  
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.RadiusXProperty">
            <summary>
            Identifies the RadiusX dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualRadiusXProperty">
            <summary>
            Identifies the ActualRadiusX dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualRadiusX">
            <summary>
            Gets the actual corner radius of the series
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.RadiusY">
            <summary>
            Gets or sets the y-radius of the ellipse that is used to round the corners of the column. This only applies to Bar and Column series.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.RadiusYProperty">
            <summary>
            Identifies the RadiusY dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualRadiusYProperty">
            <summary>
            Identifies the ActualRadiusY dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualRadiusY">
            <summary>
            Gets the actual corner radius of the series
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.StartCapProperty">
            <summary>
            Identifies the StartCap dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.StartCap">
            <summary>
            The style of the starting point of any lines or polylines representing this series.
            </summary>
            <remarks>
            Not every series type has a line at which it would be appropriate to display a start cap, so this property does not affect every series type.  LineSeries, for example, is affected by StartCap, but ColumnSeries is not.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualStartCapProperty">
            <summary>
            Identifies the ActualStartCap dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualStartCap">
            <summary>
            Gets the series start cap.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.Thickness">
            <summary>
            Gets or sets the width of the current series object's line thickness.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ThicknessProperty">
            <summary>
            Identifies the Thickness dependency property.
            </summary>
            <remarks>
            There is a problematic behavior in Silverlight 3 where changing the StrokeThickness property of many shapes is not reflected at runtime.  If changing this property seems to have no effect, please use the workaround of making another change to the UI to force a refresh.
            <code>
            theChart.RenderTransform = new RotateTransform() { Angle = 0.01 };
            Dispatcher.BeginInvoke( () => theChart.RenderTransform = null);
            </code>
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualThicknessProperty">
            <summary>
            Identifies the ActualThickness dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualThickness">
            <summary>
            Gets or sets the thickness of this stacked fragment.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.Title">
            <summary>
            Gets or sets the Title property.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            The legend item control is created according to the Title on-demand by 
            the series object itself.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ToolTip">
            <summary>
            Gets or sets the ToolTip for the current series object.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ToolTipProperty">
            <summary>
            Identifies the ToolTip dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualToolTipProperty">
            <summary>
            Identifies the ActualToolTip dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualToolTip">
            <summary>
            Gets the series tooltip.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.UseLightweightMarkers">
            <summary>
            Determines if high performance mode should be enabled for the markers.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.UseLightweightMarkersProperty">
            <summary>
            Identifies the UseLightweightMarkers dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualUseLightweightMarkersProperty">
            <summary>
            Identifies the ActualUseLightweightMarkers dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualUseLightweightMarkers">
            <summary>
            Gets whether lightweight markers are used by the series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ValueMemberPath">
            <summary>
            Gets or sets the value mapping property for the current series object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ValueMemberPathProperty">
            <summary>
            Identifies the ValueMemberPath dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.VisibilityProperty">
            <summary>
            Identifies the Visibility dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.Visibility">
            <summary>
            Gets or sets the Visibility of the stacked fragment.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualVisibilityProperty">
            <summary>
            Identifies the ActualVisibility dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualVisibility">
            <summary>
            Gets the actual visibility of the stacked fragment.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ActualShowDefaultTooltip">
            <summary>
            Gets a value indicating whether the default tooltip will be shown.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ActualShowDefaultTooltipProperty">
            <summary>
            Identifies the ActualShowDefaultTooltip dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ShowDefaultTooltip">
            <summary>
            Gets or sets a value indicating whether default tooltip will be shown.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ShowDefaultTooltipProperty">
            <summary>
            Identifies the ShowDefaultTooltip dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedFragmentSeries.ParentOrLocalBrushProperty">
            <summary>
            Identifies the ParentOrLocalBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedFragmentSeries.ParentOrLocalBrush">
            <summary>
            Gets the resolved brush used between the local series and the parent series.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.StackedFragmentSeries.PropertyChanged">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.StackedFragmentSeries.PropertyUpdated">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedFragmentSeries.RaisePropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            Raises PropertyChanged and/or PropertyUpdated events if any listeners have been registered.
            </summary>
            <param name="propertyName">Name of property whos value changed.</param>
            <param name="oldValue">Property value before change.</param>
            <param name="newValue">Property value after change.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedFragmentSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.StackedLineSeries">
            <summary>
            Represents a stacked series, where the points in each series are connected with a line.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedLineSeries.#ctor">
            <summary>
            Initializes a new instance of a StackedLineSeries class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedLineSeries.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes
            call ApplyTemplate.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedLineSeries.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.StackedSeriesBase">
            <summary>
            Represents a base class for stacked series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.#ctor">
            <summary>
            Creates a new instance of a stacked series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesBase.IsHighlightingSupported">
            <summary>
            Checks if the series supports highlithing of its elements
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view has been created.
            </summary>
            <param name="view">View class for the current model</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesBase.Series">
            <summary>
            Contains one or more stacked fragments.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.GetSubSeriesCount">
            <summary>
            Returns the number of logical sub series present.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.ForSubVisualSeries(System.Func{Infragistics.Controls.Charts.Series,System.Boolean})">
            <summary>
            Returns the visual sub series present.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedSeriesBase.AutoGenerateSeriesProperty">
            <summary>
            Identifies the AutoGenerateSeries dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesBase.AutoGenerateSeries">
            <summary>
            Gets or sets whether series should be automatically generated. Reqiures the use of GroupBy as the ItemsSource.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StackedSeriesBase.ReverseLegendOrderProperty">
            <summary>
            Identifies the ReverseLegendOrder dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesBase.ReverseLegendOrder">
            <summary>
            Gets or sets whether the order of the fragment series should be reversed in the legend.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesBase.IsStacked">
            <summary>
            Checks if this series is a stacked series
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.StackedSeriesBase.SeriesCreated">
            <summary>
            Event raised when a new fragment series is automatically generated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.AutoGeneratedSeries_CollectionResetting(System.Object,System.EventArgs)">
            <summary>
            Handles collection resetting for the AutoGeneratedSeries collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.Series_CollectionResetting(System.Object,System.EventArgs)">
            <summary>
            Handles collection resetting for the public Series collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.Series_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles collection changed for the public Series collection.
            </summary>
            <remarks>
            Does nothing if AutoGenerateSeries is true. 
            Otherwise, just adds the series to the series manager.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.SimulateHover(Infragistics.Portable.Point)">
            <summary>
            Simulates a pointer hover over the series surface.
            </summary>
            <param name="point">The pointer position relative to the series viewport over which to hover.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears all visuals that belong to this series.
            </summary>
            <param name="wipeClean">WipeClean</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.ScrollIntoView(System.Object)">
            <summary>
            Scrolls the series to display the item for the specified data item.
            </summary>
            <remarks>
            The series is scrolled by the minimum amount required to place the specified data item within
            the central 80% of the visible axis.
            </remarks>
            <param name="item">The data item (item) to scroll to.</param>
            <returns>True if the specified item could be displayed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.ShouldDisplayMarkers">
            <summary>
            Determines if the series should display markers.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.DataUpdatedOverride(Infragistics.Portable.FastItemsSourceEventAction,System.Int32,System.Int32,System.String)">
            <summary>
            When overridden in a derived class, DataChangedOverride is called whenever a change is made to
            the series data.
            </summary>
            <param name="action">The action performed on the data</param>
            <param name="position">The index of the first item involved in the update.</param>
            <param name="count">The number of items in the update.</param>
            <param name="propertyName">The name of the updated property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.GetSeriesView">
            <summary>
            Returns the series view associated with the current series model.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.GetScaledWorldZeroValue">
            <summary>
            Returns the scaled zero value based on the axis reference value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.GetUnscaledWorldZeroValue">
            <summary>
            Returns the unscaled zero value based on the axis reference value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.GetFragmentSeriesIndex(Infragistics.Controls.Charts.StackedFragmentSeries)">
            <summary>
            Returns the index of the current fragment series based on the index of the parent series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.GetFragmentItemIndex(Infragistics.Portable.Point)">
            <summary>
            Returns the positoin of the item in the data source.
            </summary>
            <param name="world">The point used to find the item.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.ValidateFragmentSeries(Infragistics.Controls.Charts.AnchoredCategorySeries,Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Validates the Fragment visual.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.GenerateSeries">
            <summary>
            Creates a list of series if the data source is a GroupBy.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.PrepareData">
            <summary>
            Calculates the value column and min and max values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.ShouldTransitionIn">
            <summary>
            Checks if this series should perform transion-in animation
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesBase.IsDropShadowSupported">
            <summary>
            Gets if the current series supports drop shadows.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.RenderThumbnail(Infragistics.Portable.Rect,Infragistics.Controls.Charts.RenderSurface)">
            <summary>
            Renders the thumbnail image for the OPD pane.
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="surface">The render target.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.RenderAlternateView(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Controls.Charts.RenderSurface,System.String,System.Double)">
            <summary>
            Renders an alternate view for of this series
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="windowRect">The current window, a rectangle bounded between 0 and 1 representing the pan and zoom position.</param>
            <param name="surface">The render target.</param>
            <param name="viewIdentifier">String key to use for this view target</param>
            <param name="effectiveScalingRatio">The effective scaling ratio.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesBase.ExportVisualData">
            <summary>
            Exports visual information about the series for use by external tools and functionality.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.StackedSeriesCreatedEventArgs">
            <summary>
            Provides data for XamDataChart stacked series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesCreatedEventArgs.Brush">
            <summary>
            Gets or sets the series brush.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesCreatedEventArgs.LegendItemTemplate">
            <summary>
            Gets or sets the series legend item template.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesCreatedEventArgs.LegendItemBadgeTemplate">
            <summary>
            Gets or sets the series legend item badge templae.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesCreatedEventArgs.LegendItemVisibility">
            <summary>
            Gets or sets the visibility of the series legend.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesCreatedEventArgs.Outline">
            <summary>
            Gets or sets the series outline brush.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesCreatedEventArgs.DashArray">
            <summary>
            Gets or sets the series stroke dash array.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesCreatedEventArgs.DashCap">
            <summary>
            Gets or sets the series dash cap.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesCreatedEventArgs.Index">
            <summary>
            Gets the index of the series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesCreatedEventArgs.Thickness">
            <summary>
            Gets or sets the series outline thickness.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesCreatedEventArgs.Title">
            <summary>
            Gets or sets the series title.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesCreatedEventArgs.MarkerBrush">
            <summary>
            Gets or sets the series marker brush.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesCreatedEventArgs.MarkerOutline">
            <summary>
            Gets or sets the series marker outline.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesCreatedEventArgs.MarkerStyle">
            <summary>
            Gets or sets the series marker style.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesCreatedEventArgs.MarkerTemplate">
            <summary>
            Gets or sets the series marker template.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesCreatedEventArgs.MarkerType">
            <summary>
            Gets or sets the series marker type.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesCreatedEventArgs.StartCap">
            <summary>
            Gets or sets the start cap.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesCreatedEventArgs.EndCap">
            <summary>
            Gets or sets the end cap.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.StackedSplineAreaSeries">
            <summary>
            Represents a XamDataChart stacked spline area series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSplineAreaSeries.#ctor">
            <summary>
            Initializes a new instance of a StackedSplineAreaSeries class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSplineAreaSeries.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes
            call ApplyTemplate.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSplineAreaSeries.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.StackedSplineSeries">
            <summary>
            Represents a XamDataChart stacked spline series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSplineSeries.#ctor">
            <summary>
            Initializes a new instance of a StackedSplineSeries class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSplineSeries.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes
            call ApplyTemplate.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSplineSeries.GetRange(Infragistics.Controls.Charts.Axis)">
            <summary>
            Returns the range requirement of this series on the given axis.
            </summary>
            <param name="axis">The axis for which to provide the range requirement.</param>
            <returns>The axis range needed for this series to fully display, or null, if there is no range requirement.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.StandardDeviationIndicator">
            <summary>
            Represents a XamDataChart Standard Deviation indicator series.
            </summary>
            <remarks>
            Default required members: High, Low, Close
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.StandardDeviationIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StandardDeviationIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StandardDeviationIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current StandardDeviationIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for STDEV periods is 20.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StandardDeviationIndicator.PeriodProperty">
            <summary>
            Identifies the Period dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StandardDeviationIndicator.PeriodOverride">
            <summary>
            Specifies the period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StandardDeviationIndicator.SetPeriodOverride(System.Int32)">
            <summary>
            Sets the Period property.
            </summary>
            <param name="period">The value for the Period property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.StepAreaSeries">
            <summary>
            Represents a XamDataChart step area series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StepAreaSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StepAreaSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.StepAreaSeries.IsAreaOrLine">
            <summary>
            Gets whether the current series shows an area or line shape.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StepAreaSeries.#ctor">
            <summary>
            Initializes a new instance of the StepAreaSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StepAreaSeries.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.StepAreaSeries.GetDefaultTransitionInMode">
            <summary>
            Gets default transition-in mode 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StepAreaSeries.GetInterpolatedSeriesValue(System.Double,System.Collections.Generic.IList{System.Double},System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Gets a data value based on the surrounding data items.
            </summary>
            <param name="p">The distance from prevItem, expressed as a value between 0 and 1.</param>
            <param name="column">The series data values.</param>
            <param name="prevItem">The index of the previous data item.</param>
            <param name="nextItem">The index of the next data item.</param>
            <param name="unsortedPrevItem">The unsorted index of the previous data item.</param>
            <param name="unsortedNextItem">The unsorted index of the next data item.</param>
            <param name="offset">The distance between the edge of the axis and the first or last data item.</param>
            <param name="isSorting">True if the associated axis is one that sorts its items.</param>
            <returns>A value interpolated at a distance of p between prevItem and nextItem.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StepAreaSeries.GetResolvedHitTestMode">
            <summary>
            Gets the resolved hit test mode of this series.
            </summary>
            <returns>The resolved hit test mode of this series.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.StepLineSeries">
            <summary>
            Represents a XamDataChart step line series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StepLineSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StepLineSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.StepLineSeries.#ctor">
            <summary>
            Initializes a new instance of the StepLineSeries class. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StepLineSeries.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call ApplyTemplate.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StepLineSeries.IsAreaOrLine">
            <summary>
            Gets whether the current series shows an area or line shape.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StepLineSeries.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.StepLineSeries.GetResolvedHitTestMode">
            <summary>
            Gets the resolved hit test mode of this series.
            </summary>
            <returns>The resolved hit test mode of this series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StepLineSeries.GetInterpolatedSeriesValue(System.Double,System.Collections.Generic.IList{System.Double},System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Gets a data value based on the surrounding data items.
            </summary>
            <param name="p">The distance from prevItem, expressed as a value between 0 and 1.</param>
            <param name="column">The series data values.</param>
            <param name="prevItem">The index of the previous data item.</param>
            <param name="nextItem">The index of the next data item.</param>
            <param name="unsortedPrevItem">The unsorted index of the previous data item.</param>
            <param name="unsortedNextItem">The unsorted index of the next data item.</param>
            <param name="offset">The distance between the edge of the axis and the first or last data item.</param>
            <param name="isSorting">True if the associated axis is one that sorts its items.</param>
            <returns>A value interpolated at a distance of p between prevItem and nextItem.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.StochRSIIndicator">
            <summary>
            Represents a XamDataChart StochRSI indicator series.
            </summary>
            <remarks>
            Default required members: Close
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.StochRSIIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StochRSIIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StochRSIIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current StochRSIIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for StochRSI periods is 14.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StochRSIIndicator.PeriodProperty">
            <summary>
            Identifies the Period dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StochRSIIndicator.PeriodOverride">
            <summary>
            Specifies the period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StochRSIIndicator.SetPeriodOverride(System.Int32)">
            <summary>
            Sets the Period property.
            </summary>
            <param name="period">The value for the Period property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.StraightNumericAxisBase">
            <summary>
            Defines a set of basic methods and properties used to create a StraightNumeric axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StraightNumericAxisBase.#ctor">
            <summary>
            Creates new instance of StraightNumeric axis.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StraightNumericAxisBase.ScaleModeProperty">
            <summary>
            Identifies the ScaleMode dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StraightNumericAxisBase.ScaleMode">
            <summary>
            Gets or sets the axis scale mode.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.StraightNumericAxisBase.ScalerProperty">
            <summary>
            Identifies the Scaler dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StraightNumericAxisBase.Scaler">
            <summary>
            Gets or sets the axis scaler.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StraightNumericAxisBase.OnScalerPropertyChanged(Infragistics.Portable.Components.DependencyObject,Infragistics.Portable.Components.DependencyPropertyChangedEventArgs)">
            <summary>
            Event Callback for when the Scaler Property Changes
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StraightNumericAxisBase.CreateLinearScaler">
            <summary>
            Creates a new linear scaler.
            </summary>
            <returns>New linear scaler</returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.StraightNumericAxisBase.CachedActualScaler">
            <summary>
            The ActualScaler, cached as a field.
            </summary>
            <remarks>This field exists as a performance optimization.</remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.StraightNumericAxisBase.ActualScaler">
            <summary>
            Gets or sets the actual axis scaler.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StraightNumericAxisBase.CalculateRange(Infragistics.Controls.Charts.NumericAxisBase,System.Double,System.Double,System.Boolean,System.Int32,System.Double@,System.Double@)">
            <summary>
            Calculates the axis range.
            </summary>
            <param name="target">target axis</param>
            <param name="minimumValue">minimum value</param>
            <param name="maximumValue">maximum value</param>
            <param name="isLogarithmic">whether the axis is logarithmic</param>
            <param name="logarithmBase">log base</param>
            <param name="actualMinimumValue">actual minimum value</param>
            <param name="actualMaximumValue">actual maximum value</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.StraightNumericAxisBase.UpdateActualScaler">
            <summary>
            Updates the actual axis scaler.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StraightNumericAxisBase.BindScalerProperties">
            <summary>
            Updates axis scaler's properties.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StraightNumericAxisBase.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            Handles property updates.
            </summary>
            <param name="sender">source object</param>
            <param name="propertyName">property name</param>
            <param name="oldValue">old property value</param>
            <param name="newValue">new property value</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.StraightNumericAxisBase.GetProportionalAxisValue(System.Double,Infragistics.Controls.Charts.StraightNumericAxisBase)">
            <summary>
            Gets the proportial value (0.0 - 1.0) between ActualMinimumValue and ActualMaximumValue.
            </summary>
            <param name="axisValue">The value to calculate the proportion of.</param>
            <param name="axis">The numeric axis to calculate the proportion for.</param>
            <returns>The calculated proportion.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.StrategyBasedIndicator">
            <summary>
            A base class for indicator series with simple calculations that separates the calculation
            responsibility from the other responsibilities of the financial series, this enables
            easier unit testing and decoupling of individual calculation strategies. 
            </summary>
            <remarks>
            A contract is defined between the financial series and these simple indicator calculations 
            detailing the data which the series agrees to provide the simple indicator calculations, 
            this contract is defined by <see cref="T:Infragistics.Portable.Charts.FinancialCalculationDataSource"/>. If more 
            complex interactions are needed between the indicator calculation and the series, the 
            indicators should instead derive from <see cref="T:Infragistics.Controls.Charts.FinancialIndicator"/> directly, or some 
            derivative other than <see cref="T:Infragistics.Controls.Charts.StrategyBasedIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.StrategyBasedIndicator.#ctor">
            <summary>
            Constructs the SimpleFinancial indicator, registering the appropriate 
            default style key, and creating the appropriate calculation strategy.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StrategyBasedIndicator.InitializeIndicator">
            <summary>
            Initializes the indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StrategyBasedIndicator.ActualCalculationStrategy">
            <summary>
            The effective calculation strategy to use for the calculation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StrategyBasedIndicator.CalculationStrategy">
            <summary>
            Must be overridden in derived classes to specify which calculation strategy
            should be used for the calculation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StrategyBasedIndicator.StyleKeyType">
            <summary>
            Must be overridden in derived classes to specify which type to use as a key
            to find the default style for the indicator.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StrategyBasedIndicator.PeriodOverride">
            <summary>
            Should be overridden in derived classes that are providing a period
            to the calculation strategy.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StrategyBasedIndicator.SetPeriodOverride(System.Int32)">
            <summary>
            Sets the Period property.
            </summary>
            <param name="period">The value for the Period property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.StrategyBasedIndicator.ShortPeriodOverride">
            <summary>
            Should be overridden in derived classes that are providing a short period
            to the calculation strategy.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StrategyBasedIndicator.LongPeriodOverride">
            <summary>
            Should be overridden in derived classes that are providing a long period
            to the calculation strategy.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StrategyBasedIndicator.CreatePeriodProperty(System.Int32,System.Type)">
            <summary>
            Helper method for defining the various period dependency properties that
            derivatives of this class need.
            </summary>
            <param name="defaultValue">The default value for the period property to create.</param>
            <param name="ownerType">The type that will own the period property.</param>
            <returns>The dependency property identifier.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StrategyBasedIndicator.CreateLongPeriodProperty(System.Int32,System.Type)">
            <summary>
            Helper method for defining the various long period dependency properties that
            derivatives of this class need.
            </summary>
            <param name="defaultValue">The default value for the period property to create.</param>
            <param name="ownerType">The type that will own the period property.</param>
            <returns>The dependency property identifier.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StrategyBasedIndicator.CreateShortPeriodProperty(System.Int32,System.Type)">
            <summary>
            Helper method for defining the various short period dependency properties that
            derivatives of this class need.
            </summary>
            <param name="defaultValue">The default value for the period property to create.</param>
            <param name="ownerType">The type that will own the period property.</param>
            <returns>The dependency property identifier.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StrategyBasedIndicator.BasedOn(System.Int32,System.Int32)">
            <summary>
            Returns the list of property names whose changing should result in the 
            indicator being recalculated.
            </summary>
            <param name="position">The position that will be recalculated from.</param>
            <param name="count">The number of positions that will be recalculated.</param>
            <returns>The list of property names.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StrategyBasedIndicator.IndicatorOverride(System.Int32,System.Int32)">
            <summary>
            Provides the indicator calculation logic for the Simple financial indicators
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StrategyBasedIndicator.UpdateRange(Infragistics.Portable.Charts.FinancialCalculationDataSource)">
            <summary>
            Updates the range for the Axes based on the calculated indicator values.
            </summary>
            <param name="dataSource">The data used for calculation and the calculated values.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.StrategyBasedIndicator.SanitizePeriod(System.Int32)">
            <summary>
            Makes sure the period has a valid value.
            </summary>
            <param name="periodValue">Input period value.</param>
            <returns>Sanitized period value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StrategyBasedIndicator.ProvideDataSource(System.Int32,System.Int32)">
            <summary>
            Overridden in derived classed to provide the FinancialCalculationDataSource to perform
            financial calculations on behalf of the series.
            </summary>
            <param name="position">The position the calculation must begin at.</param>
            <param name="count">The number of items to be calculated.</param>
            <returns>The data source for the calculation.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StrategyBasedIndicator.MultiplierOverride">
            <summary>
            Should be overridden in derived classes if the indicator supports some sort
            of scaling factor to be passed to the calculation strategy.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StrategyBasedIndicator.CreateMultiplierProperty(System.Double,System.Type)">
            <summary>
            Creates a dependency property for storing the scaling factor.
            </summary>
            <param name="defaultValue">The default value for the scaling factor.</param>
            <param name="ownerType">The owner of the dependency property</param>
            <returns>The created dependency property identifier.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.StrategyBasedIndicator.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.StyleSelector">
            <summary>
            Base class for selecting styles for DependencyObjects based on their associated data items.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StyleSelector.SelectStyle(System.Object,Infragistics.Portable.Components.DependencyObject)">
            <summary>
            Returns the Style to use on the given container in the context of the given item.
            </summary>
            <param name="item">The data item in context.</param>
            <param name="container">The element to which the style will be applied.</param>
            <returns>The style to use for the given item and container.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.TimeAxisBase">
            <summary>
            Represents an category-based horizontal X axis that uses a DateTime scale.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.#ctor">
            <summary>
            TimeAxisBase constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.GetScaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets a scaled value inside the viewport.
            </summary>
            <param name="unscaledValue">Value to scale.</param>
            <param name="p">Scaler parameters</param>
            <returns>Scaled value inside the viewport.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.GetItemValue(System.Object,System.String)">
            <summary>
            Gets a value based on one of the valid member paths for this axis type.
            </summary>
            <param name="item">An item from the data source bound to the axis.</param>
            <param name="memberPathName">The property name of a valid member path for the axis</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.GetUnscaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Returns an unscaled value from a scaled value based on the amount of data.
            </summary>
            <param name="scaledValue">Scaled value.</param>
            <param name="p">Scaler parameters</param>
            <returns>Unscaled value from a scaled value based on the amount of data.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.InitializeActualMinimumAndMaximum">
            <summary>
            Initializes the ActualMinimum and ActualMaximum properties based on the data values in the DateTime column.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.UpdateVisibleRange">
            <summary>
            Updates the VisibleRange property based on the current view.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TimeAxisBase.DateTimeMemberPathProperty">
            <summary>
            Identifies the DateTimeMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeAxisBase.DateTimeMemberPath">
            <summary>
            Gets or sets the DateTime mapping property for the axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeAxisBase.DateTimeColumn">
            <summary>
            Gets column of date time values for the axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeAxisBase.SortedDateTimeIndices">
            <summary>
            The indices of the DateTime values in the DateTime column when sorted.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.PopulateSortedIndices">
            <summary>
            Populates the SortedDateTimeIndicates list from data in the ItemsSource.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.FirstVisibleIndex(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Gets the index of the first visible item on this axis.
            </summary>
            <param name="windowRect">The zoom window.</param>
            <param name="viewportRect">The viewport.</param>
            <param name="effectiveViewportRect">The effective viewport.</param>
            <param name="contentViewport">The content viewport.</param>
            <returns>The index of the first visible item on this axis.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.FirstVisibleIndex(System.DateTime)">
            <summary>
            Gets the index of the first item after the given date.
            </summary>
            <param name="fromDate">The date to get an item after.</param>
            <returns>The index of the first item after the given date.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.LastVisibleIndex(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Gets the index of the last visible item on this axis.
            </summary>
            <param name="windowRect">The zoom window.</param>
            <param name="viewportRect">The viewport.</param>
            <param name="effectiveViewportRect">The effective viewport.</param>
            <param name="contentViewport">The content viewport.</param>
            <returns>The index of the last visible item on this axis.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.LastVisibleIndex(System.DateTime)">
            <summary>
            Gets the index of the first item before the given date.
            </summary>
            <param name="toDate">The date to get an item before.</param>
            <returns>The index of the first item before the given date.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.GetSearchResult(System.DateTime,Infragistics.Controls.Charts.Util.SortedListView{System.DateTime})">
            <summary>
            Searches the given SortedListView for a DateTime close to target.
            </summary>
            <param name="target">The DateTime to search for.</param>
            <param name="view">The SortedListView to search in.</param>
            <returns>The index of the found DateTime in the SortedListView.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.GetIndexClosestToUnscaledValue(System.Double)">
            <summary>
            Gets the index of the data item with the value nearest the given value.
            </summary>
            <param name="unscaledValue">The value to find a value close to.</param>
            <returns>The index of the data item with the value nearest the given value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.NotifyDataChanged">
            <summary>
            Updates the axis when the data has been changed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TimeAxisBase.IsDataPreSortedProperty">
            <summary>
            Identifies the IsDataPreSorted dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeAxisBase.IsDataPreSorted">
            <summary>
            Gets or sets whether the data assigned to the date time axis should be considered pre-sorted by date/time.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeAxisBase.HasUserInterval">
            <summary>
            Specifies if the user has set a custom interval.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.MinimumValueIsSet">
            <summary>
            Returns true if the minimum value of this axis is user-defined.
            </summary>
            <returns>True if the minimum value of this axis is user-defined, otherwise False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.MaximumValueIsSet">
            <summary>
            Returns true if the maximum value of this axis is user-defined.
            </summary>
            <returns>True if the maximum value of this axis is user-defined, otherwise False.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeAxisBase.ActualMinimumValue">
            <summary>
            Gets the coerced minimum value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.ResolveActualMinimumValue">
            <summary>
            Returns the value of the ActualMinimumValue property.
            </summary>
            <returns>The value of the ActualMinimumValue property.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeAxisBase.ActualMaximumValue">
            <summary>
            Gets the coerced maximum value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.ResolveActualMaximumValue">
            <summary>
            Returns the value of the MaximumValue property.
            </summary>
            <returns>The value of the MaximumValue property.</returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.TimeAxisBase.MinimumValueProperty">
            <summary>
            Identifies the MinimumValue dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeAxisBase.MinimumValue">
            <summary>
            Gets or sets the axis MinimumValue.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TimeAxisBase.MaximumValueProperty">
            <summary>
            Identifies the MaximumValue dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeAxisBase.MaximumValue">
            <summary>
            Gets or sets the axis MaximumValue.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.RenderAxisAndSeries(System.Boolean)">
            <summary>
            Renders the this date time axis and all series that belong to this axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the axis. Gives the axis a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.RegisterDateTimeColumn(System.String)">
            <summary>
            Registers a date time column for the series from the assigned fast items source.
            </summary>
            <param name="memberPath">The path to use to obtain values for the column.</param>
            <returns>The fast items column reference.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeAxisBase.Orientation">
            <summary>
            Gets the axis orientation.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.RenderAxisOverride(System.Boolean)">
            <summary>
            Renders or updates the axis visuals.
            </summary>
            <param name="animate">Whether of not the visual changes should be animated.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeAxisBase.IsDateTime">
            <summary>
            Checks if the axis is of date time axis type
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.StartCursor">
            <summary>
            Call to start optimizing sequential calls to GetScaledValue.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.ResetCursor">
            <summary>
            Call to stop optimizing sequential calls to GetScaledValue.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeAxisBase.IsSorting">
            <summary>
            Checks if axis requires sorting of items
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeAxisBase.Mode2TimeOffset(System.DateTime,System.DateTime)">
            <summary>
            Gets the horizontal offset for series which require horizontal offsetting in order to center data points over axis labels.
            </summary>
            <param name="min">The visible minimum date on this axis.</param>
            <param name="max">The visible maximum date on this axis.</param>
            <returns>The horizontal offset to apply to series that require it.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.TimeAxisBreak">
            <summary>
            Settings for breaks on a time axis.
            </summary>
            <remarks>
            Axis breaks can be added to a time axis in order to omit portions of time on that axis.  For example, weekends can be skipped, if they are not relevant to your data.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeAxisBreak.Start">
            <summary>
            The start time of the axis break.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeAxisBreak.End">
            <summary>
            The end time of the axis break.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeAxisBreak.Interval">
            <summary>
            The interval at which to repeat this break, expressed as a TimeSpan.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.TimeAxisBreakCollection">
            <summary>
            Collection class for TimeAxisBreak objects.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.TimeAxisInterval">
            <summary>
            Settings for an interval on a time axis.
            </summary>
            <remarks>
            Label intervals can be applied to a time axis, which are dynamic, according to the visible range.  During zooming, the visible range of the axis can change, and so a different interval is selected.  The interval selected will be the one with the largest range smaller than the visible range of the axis.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeAxisInterval.Range">
            <summary>
            The visible axis range at which to apply this interval.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeAxisInterval.Interval">
            <summary>
            The interval, expressed as a multiple of IntervalType.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeAxisInterval.IntervalType">
            <summary>
            The unit of time for this interval.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.TimeAxisIntervalCollection">
            <summary>
            Collection class for TimeAxisInterval objects.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.TimeAxisLabelFormat">
            <summary>
            Settings for a label format on a time axis.
            </summary>
            <remarks>
            Label formats can be applied to a time axis, which are dynamic, according to the visible range.  During zooming, the visible range of the axis can change, and so a different label format is selected.  The label format selected will be the one with the largest range smaller than the visible range of the axis.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeAxisLabelFormat.Range">
            <summary>
            The visible axis range at which to apply this label format.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeAxisLabelFormat.Format">
            <summary>
            The DateTime format string to apply.
            </summary>
            <remarks>
            Some common DateTime format strings are: yyyy, MM/dd/yy, and hh:mm:ss.
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Charts.TimeAxisLabelFormatCollection">
            <summary>
            Collection class for TimeAxisLabelFormat objects.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.TimeXAxis">
            <summary>
            A horizontal axis that uses a DateTime scale.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeXAxis.#ctor">
            <summary>
            TimeXAxis constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeXAxis.GetScaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets a scaled value inside the viewport.
            </summary>
            <param name="unscaledValue">Value to scale.</param>
            <param name="p">Scaler parameters</param>
            <returns>Scaled value inside the viewport.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeXAxis.GetScaledValueList(System.Collections.Generic.IList{System.Double},System.Int32,System.Int32,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Get a list of scaled viewport values from a list of unscaled axis values.
            </summary>
            <param name="unscaledValues">The list of unscaled axis values.</param>
            <param name="startIndex">Index at which to begin in the list.</param>
            <param name="count">Number of items to scale in the list.</param>
            <param name="p">The scaler parameters in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeXAxis.StartCursor">
            <summary>
            Call to start optimizing sequential calls to GetScaledValue.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeXAxis.ResetCursor">
            <summary>
            Call to stop optimizing sequential calls to GetScaledValue.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeXAxis.GetUnscaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Returns an unscaled value from a scaled value based on the amount of data.
            </summary>
            <param name="scaledValue">Scaled value.</param>
            <param name="p">Scaler parameters</param>
            <returns>Unscaled value from a scaled value based on the amount of data.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeXAxis.Breaks">
            <summary>
            TimeAxisBreaks to apply to this axis, representing spans of time to omit, such as weekends.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeXAxis.LabelFormats">
            <summary>
            A list of axis label formats to apply, which are selected according to the visible axis range.
            </summary>
            <remarks>
            The label format selected will be the one with the largest range smaller than the visible range of the axis.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeXAxis.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the axis. Gives the axis a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeXAxis.WindowRectChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Responds to the chart's window changing, as it does during zooming.
            </summary>
            <param name="oldRect">The previous window rectangle, expressed as a Rectangle within the bounds of 0 to 1.</param>
            <param name="newRect">The new window rectangle, expressed as a Rectangle within the bounds of 0 to 1.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeXAxis.ViewportChangedOverride(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Responds to the chart's viewport changing, as it does during zooming.
            </summary>
            <param name="oldRect">The previous viewport rectangle.</param>
            <param name="newRect">The new viewport rectangle.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeXAxis.GetLabel(System.Object)">
            <summary>
            Gets the label for a data item.
            </summary>
            <param name="dataItem">The data item to get the label for.</param>
            <returns>The requested label.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeXAxis.HasUserInterval">
            <summary>
            Specifies if the user has set a custom interval.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeXAxis.Intervals">
            <summary>
            A list of axis label intervals to apply, which are selected according to the visible axis range.
            </summary>
            <remarks>
            The interval selected will be the one with the largest range smaller than the visible range of the axis.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeXAxis.RenderAxisOverride(System.Boolean)">
            <summary>
            Renders or updates the axis visuals.
            </summary>
            <param name="animate">Whether of not the visual changes should be animated.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeXAxis.UpdateVisibleRange">
            <summary>
            Updates the VisibleRange property based on the current view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeXAxis.GetOffset(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Rect,System.Int32,System.Int32)">
            <summary>
            Gets the horizontal offset to apply to series on this axis.
            </summary>
            <param name="windowRect">The window rectangle.</param>
            <param name="viewportRect">The viewport rectangle.</param>
            <param name="effectiveViewportRect">The effective viewport rectangle.</param>
            <param name="seriesIndex">The index of the series being horizontally offset.</param>
            <param name="categoryMode">The Category Mode in context.  0 for overlaid series, 1 for non-grouped offset series, or 2 for grouped and offset series.</param>
            <returns>Zero.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeXAxis.GetIndexClosestToUnscaledValue(System.Double)">
            <summary>
            Gets the index of the data item with the value nearest the given value.
            </summary>
            <param name="unscaledValue">The value to find a value close to.</param>
            <returns>The index of the data item with the value nearest the given value.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.TimeXAxis.IsCategoryDateTime">
            <summary>
            Gets if the current axis is of category date time axis type
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeXAxis.PopulateSortedIndices">
            <summary>
            Populates the SortedDateTimeIndicates list from data in the ItemsSource.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.TimeXAxis.VisibleRangeChanged">
            <summary>
            Event raised when the visible range of this axis has changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeXAxis.FirstVisibleIndex(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Gets the index of the first visible item on this axis.
            </summary>
            <param name="windowRect">The zoom window.</param>
            <param name="viewportRect">The viewport.</param>
            <param name="effectiveViewportRect">The effective viewport.</param>
            <param name="contentViewport">The content viewport.</param>
            <returns>The index of the first visible item on this axis.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.TimeXAxis.LastVisibleIndex(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Gets the index of the last visible item on this axis.
            </summary>
            <param name="windowRect">The zoom window.</param>
            <param name="viewportRect">The viewport.</param>
            <param name="effectiveViewportRect">The effective viewport.</param>
            <param name="contentViewport">The content viewport.</param>
            <returns>The index of the last visible item on this axis.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.TRIXIndicator">
            <summary>
            Represents a XamDataChart TRIX indicator series.
            </summary>
            <remarks>
            Default required members: Close
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.TRIXIndicator.#ctor">
            <summary>
            Constructs a TRIXIndicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TRIXIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TRIXIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TRIXIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current TRIXIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for TRIX periods is 15.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TRIXIndicator.PeriodProperty">
            <summary>
            Identifies the Period dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TRIXIndicator.PeriodOverride">
            <summary>
            Specifies the period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.TRIXIndicator.SetPeriodOverride(System.Int32)">
            <summary>
            Sets the Period property.
            </summary>
            <param name="period">The value for the Period property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.TypicalPriceIndicator">
            <summary>
            Represents a XamDataChart Typical Price indicator series.
            </summary>
            <remarks>
            The typical price indicator is represented as a arithmetic average 
            of the High, Low, and Close for a day.
            <para>
            Default required members: High, Low, Close
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.TypicalPriceIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TypicalPriceIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.UltimateOscillatorIndicator">
            <summary>
            Represents a XamDataChart Ultimate Oscillator indicator series.
            </summary>
            <remarks>
            Default required members: High, Low, Close
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.UltimateOscillatorIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.UltimateOscillatorIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ValueBrushScale">
            <summary>
            Represents a brush scale that uses value-based brush selection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueBrushScale.#ctor">
            <summary>
            Creates a new instance of the ValueBrushScale.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ValueBrushScale.MinimumValueProperty">
            <summary>
            Identifies the MinimumValue dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueBrushScale.MinimumValue">
            <summary>
            Gets or sets the minimum value for this scale.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ValueBrushScale.MaximumValueProperty">
            <summary>
            Identifies the MaximumValue dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueBrushScale.MaximumValue">
            <summary>
            Gets or sets the maximum value for this scale.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ValueBrushScale.IsLogarithmicProperty">
            <summary>
            Identifies the IsLogarithmic dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueBrushScale.IsLogarithmic">
            <summary>
            Gets or sets whether the scale is logarithmic.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ValueBrushScale.LogarithmBaseProperty">
            <summary>
            Identifies the LogarithmBase dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueBrushScale.LogarithmBase">
            <summary>
            Gets or sets the logarithm base for this scale.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueBrushScale.GetBrushByIndex(System.Int32,Infragistics.Portable.IFastItemColumn{System.Double})">
            <summary>
            Selects a brush from the brush collection by index.
            </summary>
            <param name="index">Index of the brush.</param>
            <param name="FillColumn">Data source column used to calculate the brush scale.</param>
            <returns>Brush for a specified index.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueBrushScale.GetBrushByValue(System.Double,Infragistics.Portable.IFastItemColumn{System.Double})">
            <summary>
            Selects a brush from the brush collection by value.
            </summary>
            <param name="value">Value used to get an interpolated brush.</param>
            <param name="FillColumn">Data source column used to calculate the brush scale.</param>
            <returns>Brush for a specified value.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueBrushScale.IsReady">
            <summary>
             Checks if the value brush scale is ready for usage in the chart
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueBrushScale.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the scale or owning series. Gives the scale a chance to respond to the various property updates.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries">
            <summary>
            Represents a vertically laid out category based series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.XAxis">
            <summary>
            Gets or sets the effective x-axis for the current CategorySeries object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.XAxisProperty">
            <summary>
            Identifies the ActualXAxis dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.YAxis">
            <summary>
            Gets or sets the effective y-axis for the current CategorySeries object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.YAxisProperty">
            <summary>
            Identifies the ActualYAxis dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.ClearAxes">
            <summary>
            Call to null out the axes of a series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.IsVertical">
            <summary>
            Gets whether or not the current series is vertical series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.GetCategoryAxis">
            <summary>
            Returns the Category Axis assigned to this series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.GetValueAxis">
            <summary>
            Returns the Numeric Axis assigned to this series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.GetOffsetValue">
            <summary>
            Returns the offset value for this series if grouped on a category axis.
            </summary>
            <returns>The offset value</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.GetCategoryWidth">
            <summary>
            Returns the width of the category grouping this series is in.
            </summary>
            <returns>The width of the category group.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.GetNextOrExactIndex(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Getting the next index that is near a given world position, if possible, otherwise NaN.
            </summary>
            <param name="world">The world position to use in searching.</param>
            <param name="skipUnknowns">Should unknown values be skipped when searching.</param>
            <returns>The found index, otherwise, -1.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.GetPreviousOrExactIndex(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Getting the previous index that is near a given world position, if possible, otherwise NaN.
            </summary>
            <param name="world">The world position to use in searching.</param>
            <param name="skipUnknowns">Should unknown values be skipped when searching.</param>
            <returns>The found index, otherwise, -1.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.GetDistanceToIndex(Infragistics.Portable.Point,System.Int32,Infragistics.Controls.Charts.Axis,Infragistics.Controls.Charts.ScalerParams,System.Double)">
            <summary>
            Returns a distance value (not necessarily pixels), that indicates how 'close' a world position is to an indexed value in the series.
            Not every series can necessarily answer this question, it can't or the world position or index is invalid, NaN will be returned.
            </summary>
            <param name="world">The world position for which to get a distance.</param>
            <param name="index">The index to get a distance to.</param>
            <param name="axis">The axis in context.</param>
            <param name="p">The scaler parameters in context.</param>
            <param name="offset">The category offset, or distance between the edge of the axis and the first or last data item.</param>
            <returns>A distance value to the world position.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.GetResolvedHitTestMode">
            <summary>
            Gets the resolved hit test mode of this series.
            </summary>
            <returns>The resolved hit test mode of this series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.GetSeriesValueMarkerBoundingBox(Infragistics.Portable.Point)">
            <summary>
            If possible, will return the best available value marker bounding box within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinates for which to get a value marker bounding box for</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.TestHit(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks for a matching data item at the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if a matching data item was found; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.GetSeriesValue(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available main value of the series for a given world coordinate. 
            </summary>
            <param name="world">The world coordinate for which to get the value for.</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, when searching for the best avaialble value any unknown values will be skipped.</param>
            <returns>The value in question, or double.NaN if no valid value is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.GetSeriesValuePosition(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            If possible, will return the best available position within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value position for</param>
            <param name="useInterpolation">If true, interpolation should be used to get in-between values, rather than only the actual values in the data set.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped when searching for a series value.</param>
            <returns>The position in question, or NaN,NaN if no valid position is available.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.GetCategoryItems(System.Int32,System.Int32)">
            <summary>
            Gets an array of category items for specified range of indices. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.GetExactItemIndex(Infragistics.Portable.Point)">
            <summary>
            Gets the precise item index, if possible, based on the closeness to the previous or next whole integer. If the series cannot provide this information, GetExactItemIndex will return the same integer value as GetItemIndex.
            </summary>
            <param name="world">The world position for which to return the index.</param>
            <returns>The double index indicating which whole number index the point is closest to.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.GetExactUnsortedItemIndex(Infragistics.Portable.Point)">
            <summary>
            Gets the exact unsorted index of the item based on world coordinates from the current sorting axis.
            </summary>
            <param name="world">The world coordinates to use.</param>
            <returns>The exact index of the item for the specified coordinates as a double, indicating which value is closer to the world point.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.GetItemIndex(Infragistics.Portable.Point)">
            <summary>
            Gets the index of the item that resides at the provided world coordinates.
            </summary>
            <param name="world">The world coordinates of the requested item.</param>
            <returns>The requested item's index.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.GetItem(Infragistics.Portable.Point)">
            <summary>
            Gets the item that is the best match for the specified world coordinates.
            </summary>
            <param name="world">The world coordinates to use.</param>
            <returns>The item that is the best match.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.CanUseAsYAxis(System.Object)">
            <summary>
            Determine if object can be used as YAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAnchoredCategorySeries.CanUseAsXAxis(System.Object)">
            <summary>
            Determine if object can be used as XAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.VerticalStackedSeriesBase">
            <summary>
            Base class for stacked series with a numeric x-axis and a category y-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VerticalStackedSeriesBase.XAxis">
            <summary>
            Gets or sets the effective x-axis for the current CategorySeries object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.VerticalStackedSeriesBase.XAxisProperty">
            <summary>
            Identifies the ActualXAxis dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VerticalStackedSeriesBase.YAxis">
            <summary>
            Gets or sets the effective y-axis for the current CategorySeries object.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalStackedSeriesBase.GetCategoryAxis">
            <summary>
            Returns the Category Axis assigned to this series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalStackedSeriesBase.GetValueAxis">
            <summary>
            Returns the Numeric Axis assigned to this series
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.VerticalStackedSeriesBase.YAxisProperty">
            <summary>
            Identifies the ActualYAxis dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalStackedSeriesBase.GetOffsetValue">
            <summary>
            Returns the offset value for this series if grouped on a category axis.
            </summary>
            <returns>The offset value</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalStackedSeriesBase.GetCategoryWidth">
            <summary>
            Returns the width of the category grouping this series is in.
            </summary>
            <returns>The width of the category group.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.VerticalStackedSeriesBase.IsVertical">
            <summary>
            Gets whether or not the current series is vertical series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalStackedSeriesBase.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalStackedSeriesBase.CanUseAsYAxis(System.Object)">
            <summary>
            Determine if object can be used as YAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalStackedSeriesBase.CanUseAsXAxis(System.Object)">
            <summary>
            Determine if object can be used as XAxis
            </summary>
            <param name="axis">The object to check</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.WaterfallSeries">
            <summary>
            Represents a XamDataChart waterfall column series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.WaterfallSeries.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.WaterfallSeries.OnViewCreated(Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.WaterfallSeries.#ctor">
            <summary>
            Initializes a new instance of the WaterfallSeries class. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.WaterfallSeries.IsNegativeColorSupported">
            <summary>
            Overridden by derived series classes to indicate when negative colors are supported or not.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.WaterfallSeries.SetNegativeColors(Infragistics.Portable.Graphics.Media.Brush,Infragistics.Portable.Graphics.Media.Brush)">
            <summary>
            Sets the negative brush and outline properties for this series to the given arguments.
            </summary>
            <param name="negativeBrush">The negative fill brush.</param>
            <param name="negativeOutline">The negative outline brush.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.WaterfallSeries.NegativeBrush">
            <summary>
            Gets or sets the brush to use for negative portions of the series.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.WaterfallSeries.ResolveNegativeBrush">
            <summary>
            If this series has a negative color, returns that brush.
            </summary>
            <returns>The negative color to use.</returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.WaterfallSeries.NegativeBrushProperty">
            <summary>
            Identifies the Fill dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.WaterfallSeries.RadiusX">
            <summary>
            Gets or sets the x-radius of the ellipse that is used to round the corners of the column.
            </summary> 
        </member>
        <member name="F:Infragistics.Controls.Charts.WaterfallSeries.RadiusXProperty">
            <summary>
            Identifies the RadiusX dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.WaterfallSeries.RadiusY">
            <summary>
            Gets or sets the y-radius of the ellipse that is used to round the corners of the column.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.WaterfallSeries.RadiusYProperty">
            <summary>
            Identifies the RadiusY dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.WaterfallSeries.HasIndividualElements">
            <summary>
            Checks if the series has individual elements
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.WaterfallSeries.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.WaterfallSeries.TestHit(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Checks for a matching data item at the given position.
            </summary>
            <param name="position">The position to hit test.</param>
            <param name="isFinger">True if the hit test should be performed as a touch interaction; otherwise, it should be performed as a mouse interaction.</param>
            <returns>True if a matching data item was found; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.WaterfallSeries.GetSeriesValueBoundingBox(Infragistics.Portable.Point)">
            <summary>
            If possible, will return the best available value bounding box within the series that has the best value match for the world position provided. 
            </summary>
            <param name="world">The world coordinate for which to get a value bounding box for</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.WaterfallSeries.GetDefaultTransitionInMode">
            <summary>
            Gets default transition-in mode 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.WaterfallSeries.ClearRendering(System.Boolean,Infragistics.Controls.Charts.SeriesView)">
            <summary>
            Clears the rendering for the series.
            </summary>
            <param name="wipeClean">True if the cached visuals should also be cleared.</param>
            <param name="view">The SeriesView in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.WaterfallSeries.GetItemSpan">
            <summary>
            For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.
            </summary> 
        </member>
        <member name="F:Infragistics.Controls.Charts.WaterfallSeries.NegativeOutlineProperty">
            <summary>
            Identifies the NegativeOutline dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.WaterfallSeries.NegativeOutline">
            <summary>
            Brush to use for outlining negative elements in the waterfall series.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.WeightedCloseIndicator">
            <summary>
            Represents a XamDataChart Weigted Close indicator series.
            </summary>
            <remarks>
            The weighted close indicator shows an average of the high low and close
            for a day but with the closing price counted twice in the average.
            <para>
            Default required members: High, Low, Close
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.WeightedCloseIndicator.ItemwiseStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.WeightedCloseIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.WilliamsPercentRIndicator">
            <summary>
            Represents a XamDataChart Williams %R indicator series.
            </summary>
            <remarks>
            Default required members: High, Low, Close
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.WilliamsPercentRIndicator.CalculationStrategy">
            <summary>
            Returns the calculation strategy to use for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.WilliamsPercentRIndicator.StyleKeyType">
            <summary>
            Returns the default style key that should be used for this indicator.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.WilliamsPercentRIndicator.Period">
            <summary>
            Gets or sets the moving average period for the current StandardDeviationIndicator object.
            <para>
            This is a dependency property.
            </para>
            <remarks>
            The typical, and initial, value for Williams %R periods is 14.
            </remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.WilliamsPercentRIndicator.PeriodProperty">
            <summary>
            Identifies the Period dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.WilliamsPercentRIndicator.PeriodOverride">
            <summary>
            Specifies the period value to be used for the calculation.
            </summary>
            <returns>The period to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.WilliamsPercentRIndicator.SetPeriodOverride(System.Int32)">
            <summary>
            Sets the Period property.
            </summary>
            <param name="period">The value for the Period property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.XamDataChart">
            <summary>
            Represents a chart area containing axes, series, an optional legend and other hosted content.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Charts.XamDataChart"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            Called when a property value has been updated.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="propertyName">The name of the updated property.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDataChart.IsSquare">
            <summary>
            Gets or sets whether to use a square aspect ratio for the chart. This is locked to true for polar and radial charts.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDataChart.IsSquareProperty">
            <summary>
            Identifies the IsSquare dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.GetActualWindowScaleHorizontal">
            <summary>
            Gets actual window scale for horizontal dimension of the control 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.GetActualWindowScaleVertical">
            <summary>
            Gets actual window scale for vertical dimension of the control 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.UpdateAcutalWindowProperties">
            <summary>
            Updates properties such as ActualWindowPositionHorizontal based on the value of the ActualWindowRect property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDataChart.WindowScaleHorizontalProperty">
            <summary>
            Identifies the WindowScaleHorizontal dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDataChart.WindowScaleHorizontal">
            <summary>
            A number between 0 and 1 determining the scale of the horizontal zoom.
            </summary>
            <remarks>
            This property is effectively a shortcut to the Width of the WindowRect property.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDataChart.WindowScaleVerticalProperty">
            <summary>
            Identifies the WindowScaleVertical dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDataChart.WindowScaleVertical">
            <summary>
            A number between 0 and 1 determining the scale of the vertical zoom.
            </summary>
            <remarks>
            This property is effectively a shortcut to the Height of the WindowRect property.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDataChart.ActualWindowScaleHorizontal">
            <summary>
            A number between 0 and 1 determining the scale of the horizontal zoom.
            </summary>
            <remarks>
            This property is effectively a shortcut to the Width of the ActualWindowRect property.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDataChart.ActualWindowScaleVertical">
            <summary>
            A number between 0 and 1 determining the scale of the vertical zoom.
            </summary>
            <remarks>
            This property is effectively a shortcut to the Height of the ActualWindowRect property.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.IsZoomingHorizontallyEnabled">
            <summary>
            Checks if horizontal zoomability is enabled.
            </summary>
            <returns>The value of the IsHorizontalZoomEnabled property.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.IsZoomingVerticallyEnabled">
            <summary>
            Checks if vertical zoomability is enabled.
            </summary>
            <returns>The value of the IsVerticalZoomEnabled property.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDataChart.HorizontalZoomable">
            <summary>
            Gets or sets horizontal zoomability of the current control
            <para> This is a dependency property. </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDataChart.HorizontalZoomableProperty">
            <summary>
            Identifies the HorizontalZoomable dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDataChart.VerticalZoomable">
            <summary>
            Gets or sets vertical zoomability of the current control
            <para> This is a dependency property. </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDataChart.VerticalZoomableProperty">
            <summary>
            Identifies the VerticalWindowMode dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDataChart.IsHorizontalZoomEnabled">
            <summary>
            Gets or sets horizontal zoomability of the current control
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDataChart.IsHorizontalZoomEnabledProperty">
            <summary>
            Identifies the IsHorizontalZoomEnabled dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDataChart.IsVerticalZoomEnabled">
            <summary>
            Gets or sets vertical zoomability of the current control
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDataChart.IsVerticalZoomEnabledProperty">
            <summary>
            Identifies the IsVerticalZoomEnabled dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDataChart.GridMode">
            <summary>
            Gets or sets how grid lines are rendered in relation to series.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDataChart.GridModeProperty">
            <summary>
            Identifies the GridMode dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDataChart.AlignsGridLinesToPixels">
            <summary>
            Gets or sets a value indicating whether grid and tick lines are aligned to device pixels.
            </summary>
            <value>
            <c>true</c> if grid and tick lines are aligned to device pixels; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDataChart.AlignsGridLinesToPixelsProperty">
            <summary>
            Identifies the AlignsGridLinesToPixels dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDataChart.ShouldClipGridlines">
            <summary>
            Gets or sets whether axis grid lines should be clipped by the axis main lines.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDataChart.ShouldClipGridlinesProperty">
            <summary>
            Identifies the ShouldClipGridlines dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDataChart.Brushes">
            <summary>
            Gets or sets the palette of brushes to use for coloring the chart series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDataChart.BrushesProperty">
            <summary>
            Identifies the Brushes dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDataChart.MarkerBrushes">
            <summary>
            Gets or sets the MarkerBrushes property.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            The brushes property defines the palette from which automatically assigned series brushes are selected.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDataChart.MarkerBrushesProperty">
            <summary>
            Identifies the MarkerBrushes dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDataChart.Outlines">
            <summary>
            Gets or sets the palette of brushes to use for outlines on the chart series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDataChart.OutlinesProperty">
            <summary>
            Identifies the Outlines dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDataChart.MarkerOutlines">
            <summary>
            Gets or sets the MarkerOutlines property.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            The brushes property defines the palette from which automatically assigned series brushes are selected.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDataChart.MarkerOutlinesProperty">
            <summary>
            Identifies the MarkerOutlines dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDataChart.DefaultAxisStroke">
            <summary>
            Gets or sets the DefaultAxisStroke property.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            The DefaultAxisStroke property defines the brush which is used by the axes when no <see cref="P:Infragistics.Controls.Charts.Axis.Stroke"/> is set.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDataChart.DefaultAxisStrokeProperty">
            <summary>
            Identifies the DefaultAxisStroke dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDataChart.DefaultAxisMajorStroke">
            <summary>
            Gets or sets the DefaultAxisMajorStroke property.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            The DefaultAxisMajorStroke property defines the brush which is used by the axes when no <see cref="P:Infragistics.Controls.Charts.Axis.MajorStroke"/> is set.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDataChart.DefaultAxisMajorStrokeProperty">
            <summary>
            Identifies the DefaultAxisMajorStroke dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDataChart.DefaultAxisMinorStroke">
            <summary>
            Gets or sets the DefaultAxisMinorStroke property.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            The DefaultAxisMinorStroke property defines the brush which is used by the axes when no <see cref="P:Infragistics.Controls.Charts.Axis.MinorStroke"/> is set.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDataChart.DefaultAxisMinorStrokeProperty">
            <summary>
            Identifies the DefaultAxisMinorStroke dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDataChart.Axes">
            <summary>
            Gets the current Chart object's child DataChartAxes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.GetFontInfo">
            <summary>
            Gets the FontInfo object associated with this chart.
            </summary>
            <returns>The FontInfo object associated with this chart.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.StyleUpdated">
            <summary>
            Notifies the chart that the CSS styles in effect have been updated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.GetFontBrush">
            <summary>
            Gets the brush used for text.
            </summary>
            <returns>The brush used for text.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.DestroyOverride">
            <summary>
            Release any resources held by the control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.GetAxisLineBrush">
            <summary>
            Gets the brush used to draw axis lines.
            </summary>
            <returns>The brush used to draw axis lines.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.ShouldAddAutoMargins">
            <summary>
            Determines whether this SeriesViewer should automatically add margins.
            </summary>
            <returns>True if the SeriesViewer should automatically add margins; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.GetBrushByIndex(System.Int32)">
            <summary>
            Gets a brush based on a series index.
            </summary>
            <param name="index">The series index.</param>
            <returns>The brush based on the provided index.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.GetMarkerBrushByIndex(System.Int32)">
            <summary>
            Gets the appropriate marker color to use based on the series index.
            </summary>
            <param name="index">The index to use.</param>
            <returns>The color to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.GetMarkerOutlineByIndex(System.Int32)">
            <summary>
            Gets the appropriate marker outline color to use based on the series index.
            </summary>
            <param name="index">The index to use.</param>
            <returns>The color to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.GetOutlineByIndex(System.Int32)">
            <summary>
            Gets the appropriate outline color based on the series index.
            </summary>
            <param name="index">The index to use.</param>
            <returns>The color to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.OnViewCreated(Infragistics.Controls.SeriesViewerView)">
            <summary>
            Called when the view for the chart is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.RefreshAllContentAfterTiledZoom">
            <summary>
            Re-renders the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDataChart.PlotAreaMarginLeft">
            <summary>
            Margin applied to the left of the plot area.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDataChart.PlotAreaMarginTop">
            <summary>
            Margin applied above the plot area.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDataChart.PlotAreaMarginRight">
            <summary>
            Margin applied to the right of the plot area.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDataChart.PlotAreaMarginBottom">
            <summary>
            Margin applied below the plot area.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.ComputeEffectiveViewport(Infragistics.Portable.Rect)">
            <summary>
            Method used to calculate the effective viewport bounds.
            </summary>
            <param name="viewportRect">The actual viewport bounds.</param>
            <returns>The effective viewport bounds.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.GetSafeViewportForInitialZoom">
            <summary>
            Returns resolved viewport bounds when effective viewport is set. Resolves the bounds to the smaller set of bounds between the viewport and effective viewport.
            </summary>
            <returns>Resolved viewport bounds</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.ExportVisualData">
            <summary>
            Returns the chart visuals expressed as a ChartVisualData object.
            </summary>
            <returns>A ChartVisualData object representing the current chart visuals.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.PrepareAxesForTiledZoom">
            <summary>
            Prepares the axes for a zoom operation in the tile source.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChart.ReleaseAxesFromTiledZoom">
            <summary>
            Notifies the axes that a tile source zoom operation has ended.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.XamDoughnutChart">
            <summary>
             Represents concentric circles divided on arcs  depending on data.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDoughnutChart.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Charts.XamDoughnutChart"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDoughnutChart.Rings">
            <summary>
            Gets the list of rings displayed in this <see cref="T:Infragistics.Controls.Charts.XamDoughnutChart"/>.
            </summary>
            <value>The rings.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDoughnutChart.AllowSliceSelectionProperty">
            <summary>
            Identifies the AllowSliceSelection dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDoughnutChart.AllowSliceSelection">
            <summary>
            Gets or sets whether the slices can be selected.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDoughnutChart.IsSurfaceInteractionDisabled">
            <summary>
            Gets or sets whether all surface interactions with the plot area should be disabled.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDoughnutChart.IsSurfaceInteractionDisabledProperty">
            <summary>
            Identifies the IsSurfaceInteractionDisabled dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDoughnutChart.AllowSliceExplosionProperty">
            <summary>
            Identifies the AllowSliceExplosion dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDoughnutChart.AllowSliceExplosion">
            <summary>
            Gets or sets whether the slices can be exploded.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDoughnutChart.Series">
            <summary>
            Gets the current SeriesViewer object's child Series. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDoughnutChart.InnerExtentProperty">
            <summary>
             Identifies the InnerExtent dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDoughnutChart.InnerExtent">
            <summary>
            Gets or sets the inner extent of the doughnut chart. It is percent from the outer ring's radius.
            </summary>
            <value>The default value is 40.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDoughnutChart.SelectedSlices">
            <summary>
            Gets or sets the collection of selected slices.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDoughnutChart.ExplodedSlices">
            <summary>
            Gets or sets the collection of exploded slices.
            </summary>       
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDoughnutChart.SelectedStyleProperty">
            <summary>
            Identifies the SelectedStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDoughnutChart.SelectedStyle">
            <summary>
            Gets or sets the style used when a slice is selected.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDoughnutChart.CenterDataProperty">
            <summary>
            Identifies the CenterData dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDoughnutChart.CenterData">
            <summary>
            Gets or sets data of center presenter.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDoughnutChart.CenterDataTemplateProperty">
            <summary>
            Identifies the CenterDataTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDoughnutChart.CenterDataTemplate">
            <summary>
            Gets or sets whether the slices can be selected.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDoughnutChart.PixelScalingRatio">
            <summary>
            Gets or sets the scaling value used to affect the pixel density of the control.
            </summary>
            <remarks>
            A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control
            to appear blurry.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDoughnutChart.ActualPixelScalingRatio">
            <summary>
            Resolved pixel scaling ratio. Unless explicitly overridden by the <see cref="P:Infragistics.Controls.Charts.XamDoughnutChart.PixelScalingRatio"/> property,
            this one returns the default ratio enforced by device. High resolution devices will initialize this property
            to a higher value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDoughnutChart.Destroy">
            <summary>
            Used to notify the control that the control is no longer needed and can release any resources.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDoughnutChart.SelectSlice(Infragistics.Controls.Charts.SliceItem,System.Boolean)">
            <summary>
            Selects the slice.
            </summary>
            <param name="slice">The slice.</param>
            <param name="shouldSelect">if set to <c>true</c> the slice should be selected.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDoughnutChart.ExplodeSlice(Infragistics.Controls.Charts.SliceItem,System.Boolean)">
            <summary>
            Explodes the slice.
            </summary>
            <param name="slice">The slice.</param>
            <param name="explode">if set to <c>true</c> the slice should be exploded.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDoughnutChart.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDoughnutChart.OnSizeUpdated">
            <summary>
            Called when the control's size has been updated.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDoughnutChart.SliceClick">
            <summary>
            Raised when the slice is clicked.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDoughnutChart.PropertyChanged">
            <summary>
            Notifies clients that a property value has changed.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDoughnutChart.PropertyUpdated">
            <summary>
            Event raised when the value of a property is updated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDoughnutChart.RaisePropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            Raises the property changed.
            </summary>
            <param name="name">The name.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDoughnutChart.ProvideContainer(System.Object)">
            <summary>
            Called by the UI framework to provide a UI container for rendering this control.
            </summary>
            <param name="container">The UI container element.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDoughnutChart.NotifyResized">
            <summary>
            Called when the control has been resized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDoughnutChart.GetCenterCoordinates">
            <summary>
            Gets the center coordinates of the doughnut chart's center presenter.
            </summary>
            <returns>A point indicating the the center of the doughnut chart's center presenter</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDoughnutChart.GetHoleRadius">
            <summary>
            Gets the hole radius of the doughnut chart's center presenter.
            </summary>
            <returns>A double indicating the hole radius of the doughnut chart's center presenter.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDoughnutChart.Flush">
            <summary>
            Use to force the doughnut chart to finish any deferred work before printing or evaluating its visual.
            </summary>
            <remarks>
            This should only be called if the visual of the doughnut chart needs to be synchronously saved or evaluated. 
            Calling this method too often will hinder the performance of the doughnut chart.
            </remarks>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDoughnutChart.HoleDimensionsChanged">
            <summary>
            Raised when the dimensions (center point or radius) of the doughnut hole change.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDoughnutChart.ExportVisualData">
            <summary>
            Returns a representation of the chart visuals.
            </summary>
            <returns>An object representing the current chart visuals.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDoughnutChart.NotifyInsertItem(System.Object,System.Int32,System.Object)">
            <summary>
            Called to notify the chart that the data source has had an item inserted. 
            </summary>
            <param name="source_">The data source changed.</param>
            <param name="index">The index of the new item</param>
            <param name="newItem">The new item.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDoughnutChart.NotifySetItem(System.Object,System.Int32,System.Object,System.Object)">
            <summary>
            Called to notify the chart that the data source has had an item set. 
            </summary>
            <param name="source_">The data source changed.</param>
            <param name="index">The index of the change</param>
            <param name="oldItem">The old item.</param>
            <param name="newItem">The new item.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDoughnutChart.NotifyClearItems(System.Object)">
            <summary>
            Used to manually notify the chart that the data source has reset or cleared its items.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDoughnutChart.NotifyRemoveItem(System.Object,System.Int32,System.Object)">
            <summary>
            Used to manually notify the chart that the data source has had an item removed.
            </summary>
            <param name="source_">The data source changed.</param>
            <param name="index">The index of the old item.</param>
            <param name="oldItem">The old item.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.XamFunnelChart">
            <summary>
            Represents a funnel chart.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.#ctor">
            <summary>
            Creates a funnel chart instance.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.Destroy">
            <summary>
            Releases any resources held by the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.MessageHandler">
            <summary>
            Handles communication message distribution.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.SendDefaults">
            <summary>
            Send the default values of some properties that have non default() values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.SendItemProvider">
            <summary>
            Send our item provider implementation to the controller.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.ServiceProvider">
            <summary>
            Provides the necessary services for the funnel chart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.ConfigurationMessages">
            <summary>
            Communication channel to the controller.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.Connector">
            <summary>
            Connects this up do the controller and the view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.OnServiceProviderChanged(Infragistics.Controls.Charts.Messaging.ServiceProvider,Infragistics.Controls.Charts.Messaging.ServiceProvider)">
            <summary>
            Called when the service provider changes.
            </summary>
            <param name="oldValue">The old service provider.</param>
            <param name="newValue">The new service provider.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.MessageReceived(Infragistics.Controls.Charts.Messaging.Message)">
            <summary>
            Called when a message is received from the controller.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.ItemsSource">
            <summary>
            Gets or sets the ItemsSource for the funnel chart.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.FastItemsSource">
            <summary>
            Gets or sets the FastItemsSource for the funnel chart.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <para>
            The FastItemsSource is a proxy which handles caching, conversion and
            weak event listeners.
            </para>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.FastItemsSourceProperty">
            <summary>
            Identifies the FastItemsSource dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.DataUpdated(Infragistics.Portable.FastItemsSourceEventAction,System.Int32,System.Int32,System.String)">
            <summary>
            When overridden in a derived class, DataChangedOverride is called whenever a change is made to
            the series data.
            </summary>
            <param name="action">The action performed on the data</param>
            <param name="position">The index of the first item involved in the update.</param>
            <param name="count">The number of items in the update.</param>
            <param name="propertyName">The name of the updated property.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.ValueMemberPath">
            <summary>
            Gets or sets the value member path for the funnel chart.
            <para>
            This is a dependency property.
            </para>
            </summary>  
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.ValueMemberPathProperty">
            <summary>
            Identifies the ValueMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.ValueColumn">
            <summary>
            Gets the FastItemColumn representing the mapped values in the items source.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.BrushesProperty">
            <summary>
            Identifies the Brushes dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.Brushes">
            <summary>
            Gets or sets the palette of brushes to use for coloring the slices.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.OutlinesProperty">
            <summary>
            Identifies the Outlines dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.Outlines">
            <summary>
            Gets or sets the palette of brushes to use for outlines on the slices.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.BottomEdgeWidth">
            <summary>
            Gets or sets the percentage (from near 0 to 1) of space the bottom edge of the funnel should take.
            <para>
            This is a dependency property.
            </para>
            </summary>  
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.BottomEdgeWidthProperty">
            <summary>
            Identifies the BottomEdgeWidth dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.InnerLabelMemberPath">
            <summary>
            Gets or sets the InnerLabel mapping property for the current series object.
            <para>
            This is a dependency property.
            </para>
            </summary>  
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.InnerLabelMemberPathProperty">
            <summary>
            Identifies the InnerLabelMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.InnerLabelColumn">
            <summary>
            Gets the FastItemColumn representing the mapped InnerLabels in the items source.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.OuterLabelMemberPath">
            <summary>
            Gets or sets the OuterLabel mapping property for the current series object.
            <para>
            This is a dependency property.
            </para>
            </summary>  
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.OuterLabelMemberPathProperty">
            <summary>
            Identifies the OuterLabelMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.OuterLabelColumn">
            <summary>
            Gets the FastItemColumn representing the mapped OuterLabels in the items source.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.InnerLabelVisibility">
            <summary>
            Gets or sets whether the inner labels are visible.
            <para>
            This is a dependency property.
            </para>
            </summary>  
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.InnerLabelVisibilityProperty">
            <summary>
            Identifies the InnerLabelVisibility dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.OuterLabelVisibility">
            <summary>
            Gets or sets whether the outer labels are visible.
            <para>
            This is a dependency property.
            </para>
            </summary>  
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.OuterLabelVisibilityProperty">
            <summary>
            Identifies the OuterLabelVisibility dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.OuterLabelAlignment">
            <summary>
            Gets or sets which side of the chart the outer labels should appear.
            <para>
            This is a dependency property.
            </para>
            </summary> 
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.OuterLabelAlignmentProperty">
            <summary>
            Identifies the OuterLabelAlignment dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.FunnelSliceDisplay">
            <summary>
            Gets or sets how the heights of the funnel slices should be configured.
            <para>
            This is a dependency property.
            </para>
            </summary>  
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.FunnelSliceDisplayProperty">
            <summary>
            Identifies the FunnelSliceDisplay dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.FormatInnerLabel">
            <summary>
            Gets or sets the formatter function for inner labels. Function should return string and it takes 3 parameters: 1st-value of item to format, 2nd-index of item within data, 3rd-reference to the funnel chart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.FormatOuterLabel">
            <summary>
            Gets or sets the formatter function for outer labels. Function should return string and it takes 3 parameters: 1st-value of item to format, 2nd-index of item within data, 3rd-reference to the funnel chart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.TransitionDuration">
            <summary>
            Gets or sets how long the animations should take to run.
            <para>
            This is a dependency property.
            </para>
            </summary>  
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.TransitionDurationProperty">
            <summary>
            Identifies the TransitionDuration dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.IsInverted">
            <summary>
            Gets or sets if the funnel should be rendered inverted.
            <para>
            This is a dependency property.
            </para>
            </summary>  
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.IsInvertedProperty">
            <summary>
            Identifies the IsInverted dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.UpperBezierControlPoint">
            <summary>
            Gets or sets the upper control point if a Bezier curve is used to define the funnel.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.UpperBezierControlPointProperty">
            <summary>
            Identifies the UpperBezierControlPoint dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.LowerBezierControlPoint">
            <summary>
            Gets or sets the lower control point if a Bezier curve is used to define the funnel.
            <para>
            This is a dependency property.
            </para>
            </summary> 
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.LowerBezierControlPointProperty">
            <summary>
            Identifies the LowerBezierControlPoint dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.UseBezierCurve">
            <summary>
            Gets or sets whether to use a Bezier curve to define the funnel.
            <para>
            This is a dependency property.
            </para>
            </summary>  
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.UseBezierCurveProperty">
            <summary>
            Identifies the UseBezierCurve dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.AllowSliceSelection">
            <summary>
            Gets or sets whether to allow slices to be selected.
            <para>
            This is a dependency property.
            </para>
            </summary> 
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.AllowSliceSelectionProperty">
            <summary>
            Identifies the AllowSliceSelection dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.UseUnselectedStyle">
            <summary>
            Gets or sets whether to use the unselected style on unselected slices.
            <para>
            This is a dependency property.
            </para>
            </summary>  
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.UseUnselectedStyleProperty">
            <summary>
            Identifies the UseUnselectedStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.SelectedSliceStyle">
            <summary>
            Gets or sets the style to use for selected slices.
            That can be used to set stroke (outline color), fill (background color) and opacity.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.SelectedSliceStyleProperty">
            <summary>
            Identifies the SelectedSliceStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.UnselectedSliceStyle">
            <summary>
            Gets or sets the style to use for unselected slices.
            That can be used to set stroke (outline color), fill (background color) and opacity.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.UnselectedSliceStyleProperty">
            <summary>
            Identifies the UnselectedSliceStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.ToolTip">
            <summary>
            Gets or sets the ToolTip to display over the slices.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.ToolTipProperty">
            <summary>
            Identifies the ToolTip dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.SelectedItems">
            <summary>
            Represents the current selected items.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.Legend">
            <summary>
            Gets or sets the Legend to display for the chart.
            <para>
            This is a dependency property.
            </para>
            </summary>  
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.LegendProperty">
            <summary>
            Identifies the Legend dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.LegendItemTemplate">
            <summary>
            Gets or sets the LegendItemTemplate to use for the legend items.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.LegendItemTemplateProperty">
            <summary>
            Identifies the LegendItemTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.LegendItemBadgeTemplate">
            <summary>
            Gets or sets the LegendItemBadgeTemplate to use for the legend items.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.LegendItemBadgeTemplateProperty">
            <summary>
            Identifies the LegendItemBadgeTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.UseOuterLabelsForLegend">
            <summary>
            Gets or sets whether to use the outer labels to identify the legend items.
            <para>
            This is a dependency property.
            </para>
            </summary>  
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.UseOuterLabelsForLegendProperty">
            <summary>
            Identifies the UseOuterLabelsForLegend dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.TextStyle">
            <summary>
            Gets or sets the text style for inner labels
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.OuterLabelTextStyle">
            <summary>
            Gets or sets the text style for outer labels
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.OutlineThickness">
            <summary>
            Gets or sets the thickness of outline around slices.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelChart.OutlineThicknessProperty">
            <summary>
            Identifies the OutlineThickness dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.OnPropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            Called when a property value changes.
            </summary>
            <param name="propertyName">The name of the property that changed.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.HandleBrushChanges(System.String,System.Object,System.Object)">
            <summary>
            Coerce brush changes into the appropriate format for the controller.
            </summary>
            <param name="propertyName">The property that changed.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
            <returns>If the property change was handled.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.HandleItemsSourceChanges(System.String,System.Object,System.Object)">
            <summary>
            Handle changes to the various items source properties.
            </summary>
            <param name="propertyName">The property name that changed.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
            <returns>True if the property change was handled.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.HandleValueMemberPathChange(System.String,System.Object,System.Object)">
            <summary>
            Handles changes to the member paths.
            </summary>
            <param name="propertyName">The name of the property that changed.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.HandleVisibilityChanges(System.String,System.Object,System.Object)">
            <summary>
            Coerce visibility changes into the appropariate format for the controller.
            </summary>
            <param name="propertyName">The property that changed.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.HandleTimespans(System.String,System.Object,System.Object)">
            <summary>
            Coerce timespans into the appropriate format for the controller.
            </summary>
            <param name="propertyName">The property that changed.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
            <returns>True if the property change was handled.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.SliceClickedMessageReceived(Infragistics.Controls.Charts.Messaging.Message)">
            <summary>
            Called when the controller indicates that a slice was clicked.
            </summary>
            <param name="m">The message received.</param>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamFunnelChart.SliceClicked">
            <summary> Raised when a slice is clicked. </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.SelectedItemsChangedMessageReceived(Infragistics.Controls.Charts.Messaging.Message)">
            <summary>
            Called when the controller indicates that the selected items have been updated.
            </summary>
            <param name="m">The message received.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.SelectedItems_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called if the user has updated the selected items.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The parameters of the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.MergeItems(System.Collections.Generic.IList{System.Object},System.Collections.Generic.Dictionary{System.Object,System.Object},System.Collections.Generic.IList{System.Object},System.Collections.Generic.Dictionary{System.Object,System.Object})">
            <summary>
            Merge the selected items lists.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.Infragistics#Controls#Charts#IItemProvider#GetItem(System.Int32)">
            <summary>
            Provides the item for the specified index.
            </summary>
            <param name="index">The index for which to provide the item.</param>
            <returns>The indicated item.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.Infragistics#Controls#Charts#IItemProvider#Count">
            <summary>
            Gets the count of the items bound.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.ProvideContainer(System.Object)">
            <summary>
            Provides container for funnel chart
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.NotifyResized">
            <summary>
            Notifies the controller and view about a size change.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.NotifySetItem(System.Object,System.Int32,System.Object,System.Object)">
            <summary>
            Manually notifies the chart's data source that some items have been changed in the data it is bound to.
            This should not be called if the data that the chart is bound to is already observable.
            </summary>
            <param name="source_">The data source changed.</param>
            <param name="index">The starting index of the changed items.</param>
            <param name="oldItem">The old item at the designated index.</param>
            <param name="newItem">The new item at the designated index.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.NotifyClearItems(System.Object)">
            <summary>
            Manually notifies the chart's data source that the data it has bound to has been cleared and needs to be re-examined.
            This should not be called if the data that the chart is bound to is already observable.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.NotifyInsertItem(System.Object,System.Int32,System.Object)">
            <summary>
            Manually notifies the chart's data source that an item has been inserted in the data it is bound to.
            This should not be called if the data that the chart is bound to is already observable.
            </summary>
            <param name="source_">The data source changed.</param>
            <param name="index">The index of the inserted item.</param>
            <param name="newItem">The new item at the designated index.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.NotifyRemoveItem(System.Object,System.Int32,System.Object)">
            <summary>
            Manually notifies the chart's data source that an item has been removed in the data it is bound to.
            This should not be called if the data that the chart is bound to is already observable.
            </summary>
            <param name="source_">The data source changed.</param>
            <param name="index">The index of the removed item.</param>
            <param name="oldItem">The old item at the designated index.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.SelectedIndexes">
            <summary>
            Gets sets indexes of selected items.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.ToggleSelection(System.Int32)">
            <summary>
            Toggle selection of item at index.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.ExportVisualData">
            <summary>
            Returns the chart visuals expressed as a FunnelChartVisualData object.
            </summary>
            <returns>A FunnelChartVisualData object representing the current chart visuals.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelChart.ExportSerializedVisualData">
            <summary>
            Exports and serializes the chart visuals.
            </summary>
            <returns>
            The serialized chart visuals.
            </returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.PixelScalingRatio">
            <summary>
            Gets or sets the scaling value used to affect the pixel density of the control.
            </summary>
            <remarks>
            A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control
            to appear blurry.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.ActualPixelScalingRatio">
            <summary>
            Gets the resolved pixel scaling ratio.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.OuterLabelTextColor">
            <summary>
            Gets or sets the brush used for the outer labels.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelChart.TextColor">
            <summary>
            Gets or sets the brush used for the inner labels.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.XamPieChart">
            <summary>
            Represents Infragistics XamPieChart control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamPieChart.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Charts.XamPieChart"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.AxisLabelPanelBaseView">
            <summary>
            The view class for AxisLabelPanelBase.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelPanelBaseView.Model">
            <summary>
            Gets or sets the AxisLabelPanelBase instance this view is attached to.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelPanelBaseView.Ticks">
            <summary>
            Gets the visuals representing the ticks.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBaseView.#ctor(Infragistics.Controls.Charts.AxisLabelPanelBase)">
            <summary>
            Constructs an AxisLabelPanelBaseView.
            </summary>
            <param name="model">The model instance this view is attached to.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBaseView.GetLabels">
            <summary>
            Gets the label elements in the panel.
            </summary>
            <returns>A collection of label elements.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBaseView.Measure">
            <summary>
            Measures the lable panel.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelPanelBaseView.Context">
            <summary>
            Gets or sets the rendering context for the view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBaseView.Arrange">
            <summary>
            Arranges the label panel.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBaseView.OnExtentChangedAfterArrange">
            <summary>
            Fired when the extent has changed as a result of an Arrange() call.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBaseView.RenderTextBlock(Infragistics.Portable.Components.UI.Controls.TextBlock)">
            <summary>
            Renders a TextBlock.
            </summary>
            <param name="tb">The TextBlock to render.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBaseView.Render">
            <summary>
            Renders the label panel.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBaseView.GetAxisTitleFont">
            <summary>
            Get the font info for the axis title.
            </summary>
            <returns>The font info.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBaseView.GetAxisTitleColor">
            <summary>
            Gets the axis title brush.
            </summary>
            <returns>The brush.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBaseView.EnsureContextFont">
            <summary>
            Ensures that the rendering context has a font set.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBaseView.RenderTicks">
            <summary>
            Renders the axis tick marks.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBaseView.GetTitleMargin">
            <summary>
            Get the margin applied to the axis title.
            </summary>
            <returns>The margin.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBaseView.GetLabelTopMargin">
            <summary>
            Gets the top margin used for the axis labels.
            </summary>
            <returns>The top margin.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBaseView.GetLabelLeftMargin">
            <summary>
            Gets the left margin used for the axis labels.
            </summary>
            <returns>The left margin.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBaseView.GetLabelRightMargin">
            <summary>
            Gets the right margin used for the axis labels.
            </summary>
            <returns>The right margin.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBaseView.GetLabelBottomMargin">
            <summary>
            Gets the bottom margin used for the axis labels.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.AxisLabelSettings">
            <summary>
            The settings applied to axis labels.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelSettings.#ctor">
            <summary>
            Constructs an AxisLabelSettings instance.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelSettings.TextStyle">
            <summary>
            Gets or sets the text style to use for axis labels.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelSettings.TextColor">
            <summary>
            The color of the {0}.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelSettings.Location">
            <summary>
            Gets or sets the location of the {0}.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelSettings.Visibility">
            <summary>
            Gets or sets the visibility of the {0}.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelSettings.ShowFirstLabel">
            <summary>
            Gets or sets whether the first label is displayed when the zoom level is set to 1.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelSettings.ActualLocation">
            <summary>
            Location where the labels are displayed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelSettings.Axis">
            <summary>
            a reference back to the axis containing these label settings.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelSettings.RegisterAxis(Infragistics.Controls.Charts.Axis)">
            <summary>
            Register an axis to these settings.
            </summary>
            <param name="axis">The axis to register.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelSettings.UnregisterAxis(Infragistics.Controls.Charts.Axis)">
            <summary>
            Unregisters an axis from these settings.
            </summary>
            <param name="axis">The axis to unregister</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelSettings.Angle">
            <summary>
            Gets or sets the angle of the {0}.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelSettings.Extent">
            <summary>
            Distance between the axis and the edge of the control.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelSettings.Margin">
            <summary>
            Sets the margin used by the axis labels.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelSettings.LeftMargin">
            <summary>
            Margin applied to the left of the {0}.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelSettings.RightMargin">
            <summary>
            Margin applied to the right of the {0}.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelSettings.TopMargin">
            <summary>
            Margin applied above the {0}.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelSettings.BottomMargin">
            <summary>
            Margin applied below the {0}.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelSettings.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment of the {0}.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelSettings.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment of the {0}.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.AxisLabelSettings.PropertyChanged">
            <summary>
            Notifies clients that a property value has changed.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.AxisLabelSettings.PropertyUpdated">
            <summary>
            Occurs when a property value has been updated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelSettings.RaisePropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            Raise a property changed event.
            </summary>
            <param name="name">The property name.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelSettings.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overriden in a derived class, gets called whenever a property value is updated
            on the AxisLabels. Gives the axis labels a chance to respond to the various property udpates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisLabelSettings.ExtentPropertyDefault">
            <summary>
            The default value for the Extent property.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.TitleSettings">
            <summary>
             Represents the class for the title settings and behaviors.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TitleSettings.#ctor">
            <summary>
            Constructs a TitleSettings instance.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TitleSettings.Position">
            <summary>
            Gets or sets the title position relative to the axis labels.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TitleSettings.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overriden in a derived class, gets called whenever a property value is updated
            on the Axis Title. Gives the axis title a chance to respond to the various property udpates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisView.AxisLines">
            <summary>
            Gets the visuals representing the Axis line.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisView.MajorLines">
            <summary>
            Gets the visuals representing the major lines.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisView.Strips">
            <summary>
            Gets the visuals representing the strips.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisView.MinorLines">
            <summary>
            Gets the visuals representing the minor lines.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisView.TextBlockCreate">
            <summary>
            Creates a TextBlock object.
            </summary>
            <returns>The created TextBlock.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisView.TextBlockActivate(Infragistics.Portable.Components.UI.Controls.TextBlock)">
            <summary>
            Activates a TextBlock object from the pool.
            </summary>
            <param name="textBlock">The TextBlock to activate.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisView.TextBlockDisactivate(Infragistics.Portable.Components.UI.Controls.TextBlock)">
            <summary>
            Disactivates a TextBlock from the pool.
            </summary>
            <param name="textBlock">The TextBlock to disactivate.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisView.TextBlockDestroy(Infragistics.Portable.Components.UI.Controls.TextBlock)">
            <summary>
            Destroys a TextBlock from the pool.
            </summary>
            <param name="textBlock">The TextBlock to destroy.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisView.AnnotationBackingCreate">
            <summary>
            Creates a TextBlock object.
            </summary>
            <returns>The created Rectangle.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisView.AnnotationBackingActivate(Infragistics.Portable.Graphics.Shapes.Rectangle)">
            <summary>
            Activates a TextBlock object from the pool.
            </summary>
            <param name="rectangle">The TextBlock to activate.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisView.AnnotationBackingDisactivate(Infragistics.Portable.Graphics.Shapes.Rectangle)">
            <summary>
            Deactivates a TextBlock from the pool.
            </summary>
            <param name="rectangle">The TextBlock to deactivate.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisView.AnnotationBackingDestroy(Infragistics.Portable.Graphics.Shapes.Rectangle)">
            <summary>
            Destroys a TextBlock from the pool.
            </summary>
            <param name="rectangle">The TextBlock to destroy.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisView.IsDirty">
            <summary>
            Flag indicating this object needs a visual refresh to account for changes in its settings.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisView.MakeDirty">
            <summary>
            Mark the AxisView as dirty in order to trigger a refresh.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisView.Undirty(System.Boolean)">
            <summary>
            Called when the view must render its content.
            </summary>
            <param name="clearRect">Boolean indicating if the viewport should be cleared before rendering.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisView.Render(System.Boolean)">
            <summary>
            Renders this view.
            </summary>
            <param name="clearRect">Boolean indicating if the viewport should be cleared before rendering.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisView.PreRender">
            <summary>
            Called before a render pass starts.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisView.IsValid">
            <summary>
            Returns true if the view is considered valid and ready to render.
            </summary>
            <returns>True if the view is valid and is ready to render.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChartView.PreRenderOverride">
            <summary>
            Called before a render pass starts.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChartView.SetDefaultBrushes">
            <summary>
            Called when the default brushes need to be set.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDataChartView.RenderOverride">
            <summary>
            Renders the chart visuals.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Marker">
            <summary>
            Class representing a datapoint marker.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Marker.Brush">
            <summary>
            The marker fill brush.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Marker.Outline">
            <summary>
            The marker outline brush.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Marker.RenderOffsetX">
            <summary>
            Horizontal offset to apply when rendering the marker.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Marker.RenderOffsetY">
            <summary>
            Vertical offest to apply when rendering the marker.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerSeriesView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MarkerSeriesView.VisibleMarkers">
            <summary>
            The list of visible markers.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerSeriesView.MarkerCreate">
            <summary>
            Creates a marker object.
            </summary>
            <returns>The created marker.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerSeriesView.DoToAllMarkers(System.Action{Infragistics.Controls.Charts.Marker})">
            <summary>
            Perform an action on all markers
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerSeriesView.MarkerActivate(Infragistics.Controls.Charts.Marker)">
            <summary>
            Activates a marker object from the pool.
            </summary>
            <param name="marker">The marker to activate.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerSeriesView.MarkerDisactivate(Infragistics.Controls.Charts.Marker)">
            <summary>
            Disactivates a marker from the pool.
            </summary>
            <param name="marker">The marker to disactivate.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerSeriesView.MarkerDestroy(Infragistics.Controls.Charts.Marker)">
            <summary>
            Destroys a marker from the pool.
            </summary>
            <param name="marker">The marker to destroy.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerSeriesView.SetupMarkerAppearanceOverride(System.Object,System.Int32)">
            <summary>
            Applies appearance settings to the marker visual.
            </summary>
            <param name="item">The item visual.</param>
            <param name="index">The index of the item in the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerSeriesView.SetupMarkerHitAppearanceOverride(System.Object,System.Int32)">
            <summary>
            Applies appearance settings indicating a hit to the marker visual.
            </summary>
            <param name="item">The item visual.</param>
            <param name="index">The index of the item in the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerSeriesView.RenderMarkersOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the markers for this series view.
            </summary>
            <param name="context">The rendering context.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.SeriesView">
            <summary>
            Class responsible for the rendering and visuals of a series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SeriesView.Model">
            <summary>
            The Series responsible for this View.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.#ctor(Infragistics.Controls.Charts.Series)">
            <summary>
            Initializes a new instance of a SeriesView object.
            </summary>
            <param name="model">The Series responsible for the View.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.SeriesView.ToolTipContext">
            <summary>
            Gets or sets the data context for the tooltip.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.GetEffectiveViewport">
            <summary>
            Gets the effective viewport, adjusted to account for margins and other factors.
            </summary>
            <returns>The effective viewport.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.OnVisualPropertiesChanged">
            <summary>
            Method invoked when a visual property has changed, requiring a visual update.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.Destroy">
            <summary>
            Release any resources held by the SeriesView.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SeriesView.IsDirty">
            <summary>
            Flag indicating this object needs a visual refresh to account for changes in its settings.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SeriesView.Index">
            <summary>
            Gets the index value of this SeriesView.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.MakeDirty">
            <summary>
            Mark the SeriesView as dirty in order to trigger a refresh.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.Undirty(System.Boolean)">
            <summary>
            Called when the view must render its content.
            </summary>
            <param name="clearRect">Boolean indicating if the viewport should be cleared before rendering.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.OnRenderFrame">
            <summary>
            Method invoked by the series when the frame is being rendered.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.GetTransparentBrush">
            <summary>
            Gets a transparent brush.
            </summary>
            <returns>A transparent brush.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.Render(System.Boolean)">
            <summary>
            Renders this view.
            </summary>
            <param name="clearRect">Boolean indicating if the viewport should be cleared before rendering.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.SetupItemAppearance(System.Object,System.Int32,System.Boolean)">
            <summary>
            Applies appearance settings to the item visual.
            </summary>
            <param name="item">The item visual.</param>
            <param name="index">The index of the item in the series.</param>
            <param name="isHitContext">True to use the hit appearance indicating an active interaction.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.SetupMarkerAppearance(System.Object,System.Int32,System.Boolean)">
            <summary>
            Applies appearance settings to the marker visual.
            </summary>
            <param name="item">The item visual.</param>
            <param name="index">The index of the item in the series.</param>
            <param name="isHitContext">True to use the hit appearance indicating an active interaction.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.GetCurrentItem(System.Int32,System.Boolean)">
            <summary>
            Gets the item at the given index.
            </summary>
            <param name="index">The index of the item in the series.</param>
            <param name="isHitContext">True to use the hit appearance indicating an active interaction.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.GetHitItem(System.Int32)">
            <summary>
            Gets the hit item at the given index.
            </summary>
            <param name="index">The index of the item in the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.GetItem(System.Int32)">
            <summary>
            Gets the item at the given index.
            </summary>
            <param name="index">The index of the item in the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.SetupItemAppearanceOverride(System.Object,System.Int32)">
            <summary>
            Applies appearance settings to the item visual.
            </summary>
            <param name="item">The item visual.</param>
            <param name="index">The index of the item in the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.SetupMarkerAppearanceOverride(System.Object,System.Int32)">
            <summary>
            Applies appearance settings to the marker visual.
            </summary>
            <param name="item">The item visual.</param>
            <param name="index">The index of the item in the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.SetupItemHitAppearanceOverride(System.Object,System.Int32)">
            <summary>
            Applies appearance settings indicating a hit to the item visual.
            </summary>
            <param name="item">The item visual.</param>
            <param name="index">The index of the item in the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.SetupMarkerHitAppearanceOverride(System.Object,System.Int32)">
            <summary>
            Applies appearance settings indicating a hit to the marker visual.
            </summary>
            <param name="item">The item visual.</param>
            <param name="index">The index of the item in the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.SetupAppearance(System.Boolean)">
            <summary>
            Applies appearance settings to the series visuals.
            </summary>
            <param name="isHitContext">True to use the hit appearance indicating an active interaction.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.SetupAppearanceOverride">
            <summary>
            Applies appearance settings to the series visuals.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.SetupHitAppearanceOverride">
            <summary>
            Applies hit appearance settings to the series visuals.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.GetHitBrush(System.Int32)">
            <summary>
            Gets the brush to indicate a hit.
            </summary>
            <param name="index">The index of the item in the series.</param>
            <returns>The hit brush for the item at the given index.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.GetHitBrush">
            <summary>
            Gets the brush to indicate a hit.
            </summary>
            <returns>The hit brush for the series.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.RenderMarkersOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the markers for this series view.
            </summary>
            <param name="context">The rendering context.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.OnSeriesDetached">
            <summary>
            Called when the series is detached from its chart.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.OnSeriesAttached">
            <summary>
            Called when the series is attached to a chart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SeriesView.Context">
            <summary>
            The rendering context.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SeriesView.HitContext">
            <summary>
            The hit rendering context.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.OnContextProvided(Infragistics.RenderingContext,Infragistics.RenderingContext)">
            <summary>
            Called when the rendering contexts are provided.
            </summary>
            <param name="context">The rendering context.</param>
            <param name="hitContext">The hit rendering context.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.SeriesView.Viewport">
            <summary>
            Rect corresponding roughly to the layout area. The reference frame for scaled coordinates.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SeriesView.AlternateWindow">
            <summary>
            The alternate view's window rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SeriesView.WindowRect">
            <summary>
            A rectangle representing the portion of the SeriesViewer currently in view.
            </summary>
            <remarks>
            A rectangle at X=0, Y=0 with a Height and Width of 1 implies the entire plotting area is in view.  A Height and Width of .5 would imply that the view is halfway zoomed in.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.SeriesView.IsThumbnailView">
            <summary>
            Boolean indicating if this is a thumbnail view.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SeriesView.CurrentScheduler">
            <summary>
            The canvas render scheduler in context.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.PostRender">
            <summary>
            Called after rendering the view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.PostRenderOverride">
            <summary>
            Called after rendering the view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.GetViewInfo(Infragistics.Portable.Rect@,Infragistics.Portable.Rect@)">
            <summary>
            Gets the view info for the series.
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="windowRect">The window to use.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.SeriesView.IsVisible">
            <summary>
            Indicates if the view is currently visible.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.VisibilityChanged">
            <summary>
            Called when the visibility of the series view has changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.ApplyDropShadowDefaultSettings">
            <summary>
            Applies the default appearance settings for drop shadows in this series view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.PreRender">
            <summary>
            Called before a render pass starts.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.IsValid">
            <summary>
            Returns true if the view is considered valid and ready to render.
            </summary>
            <returns>True if the view is valid and is ready to render.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.SeriesView.DuringInit">
            <summary>
            Checks if initialization is in process.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SeriesView.IsAlternateView">
            <summary>
            Checks if this is an alternate view of the series, such as a thumbnail view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesView.PrepAltSurface(Infragistics.Controls.Charts.RenderSurface)">
            <summary>
            Prepares for rendering to the alternate surface.
            </summary>
            <param name="surface">The alternate surface to render to.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.SeriesView.AlternateViewIdentifier">
            <summary>
            A string identifier of the alternate view corresponding to this SeriesView.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ChartAxisRangeChangedEventArgs">
            <summary>
            Provides data for Axis RangeChanged events. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ChartAxisRangeChangedEventArgs.#ctor(Infragistics.Controls.SeriesViewer,Infragistics.Controls.Charts.Axis,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initialises an AxisRangeChangedEventArgs object.
            </summary>
            <param name="chart">the chart in context.</param>
            <param name="axis">The chart axis in context.</param>
            <param name="oldMinimumValue">The axis minimum value before the range changed.</param>
            <param name="minimumValue">The axis minimum value after the range changed.</param>
            <param name="oldMaximumValue">The axis maximum value before the range changed.</param>
            <param name="maximumValue">The axis minimum value after the range changed.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.ChartAxisRangeChangedEventArgs.Chart">
            <summary>
            Gets the Chart associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ChartAxisRangeChangedEventArgs.Axis">
            <summary>
            Gets the Axis associated with the current event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ChartAxisRangeChangedEventArgs.OldMinimumValue">
            <summary>
            Gets the minimum value before the range changed. The reported minimum is the effective,
            not the set value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ChartAxisRangeChangedEventArgs.MinimumValue">
            <summary>
            Gets the minimum value after the range changed. The reported minimum is the effective,
            not the set value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ChartAxisRangeChangedEventArgs.OldMaximumValue">
            <summary>
            Gets the maximum value before the range changed. The reported maximum is the effective,
            not the set value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ChartAxisRangeChangedEventArgs.MaximumValue">
            <summary>
            Gets the maximum value after the range changed. The reported maximum is the effective,
            not the set value.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DataChartAxisRangeChangedEventHandler">
            <summary>
            Represents the method that will handle Axis RangeChanged events.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.CategoryTooltipLayerPosition">
            <summary>
            Describes available positions on the crossing axis at which the category tooltip can be displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTooltipLayerPosition.Auto">
            <summary>
            A position is selected automatically
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTooltipLayerPosition.OutsideStart">
            <summary>
            Displays at the outside start of the axis.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTooltipLayerPosition.InsideStart">
            <summary>
            Displays at the inside start of the axis.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTooltipLayerPosition.InsideEnd">
            <summary>
            Displays at the inside end of the axis.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTooltipLayerPosition.OutsideEnd">
            <summary>
            Displays at the outside end of the axis.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CategoryToolTipLayerFrame">
            <summary>
            Represents an animation frame for the CategoryTooltipLayer
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryToolTipLayerFrame.TooltipYCoord">
            <summary>
            Gets or sets the y coordinate for the tooltip.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryToolTipLayerFrame.TooltipXCoord">
            <summary>
            Gets or sets the x coordinate for the tooltip.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryToolTipLayerFrame.PointerPositionYCoord">
            <summary>
            Gets or sets the y position of the pointer for the tooltip.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryToolTipLayerFrame.PointerPositionXCoord">
            <summary>
            Gets or sets the x position of the pointer for the tooltip.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryToolTipLayerFrame.TooltipWidth">
            <summary>
            Gets or sets the width of the tooltip.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryToolTipLayerFrame.TooltipHeight">
            <summary>
            Gets or sets the height of the tooltip.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryToolTipLayerFrame.#ctor">
            <summary>
            Constructs a CategoryTooltipLayerFrame.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryToolTipLayerFrame.Interpolate(System.Single,Infragistics.Controls.Charts.Frame,Infragistics.Controls.Charts.Frame)">
            <summary>
            Interpolates between the previous animation frame and the next frame.
            </summary>
            <param name="p">The current interpolation value.</param>
            <param name="min">The minimum frame.</param>
            <param name="max">The maximum frame.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.CategoryToolTipLayerView">
            <summary>
            Represents a view for the CategoryToolTipLayer
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryToolTipLayerView.#ctor(Infragistics.Controls.Charts.CategoryToolTipLayer)">
            <summary>
            Constructs a CategoryToolTipLayerView
            </summary>
            <param name="model">The model for this view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryToolTipLayerView.CategoryToolTipModel">
            <summary>
            The model for this view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryToolTipLayerView.GetContainer">
            <summary>
            Gets the tooltip container.
            </summary>
            <returns>The tooltip container.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryToolTipLayerView.OnInit">
            <summary>
            Called when the view is initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryToolTipLayerView.RelativeToAbsolute(Infragistics.Portable.Point)">
            <summary>
            Returns an absolution position from a series relative position.
            </summary>
            <param name="pt">The series relative position.</param>
            <returns>The absolute position.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryToolTipLayerView.MoveTooltip(System.Object,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Moves the tooltip to the requested position.
            </summary>
            <param name="container">The tooltip container.</param>
            <param name="x">The x position to move the tooltip to.</param>
            <param name="y">The y position to move the tooltip to.</param>
            <param name="pointerPosX">The x position to move the pointer to.</param>
            <param name="pointerPosY">The y position to move the pointer to.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryToolTipLayerView.GetValidAreaSize">
            <summary>
            Gets the full valid area in which the tooltip can be displayed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryToolTipLayerView.HideContainer(System.Object)">
            <summary>
            Hides the requested tooltip.
            </summary>
            <param name="container">The tooltip container to hide.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryToolTipLayerView.ClearTooltipContent">
            <summary>
            Clears the content of the grouped tooltip.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ItemTooltipLayerFrame">
            <summary>
            Represents an animation frame for the CategoryTooltipLayer
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemTooltipLayerFrame.TooltipYCoords">
            <summary>
            Gets or sets the y coordinates for the tooltips.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemTooltipLayerFrame.TooltipXCoords">
            <summary>
            Gets or sets the x coordinates for the tooltips.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemTooltipLayerFrame.ActualTooltipYCoords">
            <summary>
            Gets or sets the actual y coordinates for the tooltips.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemTooltipLayerFrame.ActualTooltipXCoords">
            <summary>
            Gets or sets the actual x coordinates for the tooltips.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemTooltipLayerFrame.TooltipObjects">
            <summary>
            Gets or sets the tooltip objects for the tooltips.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemTooltipLayerFrame.TooltipDataContexts">
            <summary>
            Gets or sets the data contexts for the tooltips.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemTooltipLayerFrame.TooltipContainers">
            <summary>
            Gets or sets the containers for the tooltips.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemTooltipLayerFrame.TooltipWidths">
            <summary>
            Gets or sets the widths for the tooltips.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemTooltipLayerFrame.TooltipHeights">
            <summary>
            Gets or sets the heights for the tooltips.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemTooltipLayerFrame.LeaderBrushes">
            <summary>
            Gets or sets the brushes for the tooltips.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemTooltipLayerFrame.#ctor">
            <summary>
            Constructs an ItemTooltipLayerFrame
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemTooltipLayerFrame.Interpolate(System.Single,Infragistics.Controls.Charts.Frame,Infragistics.Controls.Charts.Frame)">
            <summary>
            Interpolates between the previous animation frame and the next frame.
            </summary>
            <param name="p">The current interpolation value.</param>
            <param name="min">The minimum frame.</param>
            <param name="max">The maximum frame.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ItemToolTipLayerView">
            <summary>
            Represents a view for the ItemToolTipLayer
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemToolTipLayerView.#ctor(Infragistics.Controls.Charts.ItemToolTipLayer)">
            <summary>
            Constructs a ItemToolTipLayerView
            </summary>
            <param name="model">The model for this view.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemToolTipLayerView.ItemTooltipModel">
            <summary>
            The model for this view.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemToolTipLayerView.ContainerPool">
            <summary>
            Gets or sets the pool to use for creating containers.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemToolTipLayerView.OnInit">
            <summary>
            Called when the view is initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemToolTipLayerView.ConfigureTooltip(Infragistics.Controls.Charts.Series,System.Object,System.Object,Infragistics.Controls.Charts.DataContext)">
            <summary>
            Configures the values for a tooltip.
            </summary>
            <param name="series">The series for the tooltip</param>
            <param name="container">The container for the tooltip</param>
            <param name="obj">The UI element for the tooltip.</param>
            <param name="context">The data context for the tooltip.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemToolTipLayerView.GetTooltipSize(System.Object,System.Object,Infragistics.Controls.Charts.DataContext)">
            <summary>
            Gets the size of the provided tooltip container.
            </summary>
            <param name="container">The tooltip container to get the size for.</param>
            <param name="obj">The ui element for the provided container.</param>
            <param name="context">The context for the provided tooltip.</param>
            <returns>The size of the provided tooltip.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemToolTipLayerView.MoveTooltip(System.Object,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Moves a tooltip to the given position.
            </summary>
            <param name="container">The tooltip container to move.</param>
            <param name="x">The x position to move the tooltip to.</param>
            <param name="y">The y position to move the tooltip to.</param>
            <param name="pointerPosX">The x position to move the pointer to.</param>
            <param name="pointerPosY">The y position to move the pointer to.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemToolTipLayerView.HideContainer(System.Object)">
            <summary>
            Hides the provided tooltip.
            </summary>
            <param name="container">The container of the tooltip to hide.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.PointerTooltip">
            <summary>
            Represents a control for displaying tooltip content with a point tail to indicate a precise location being annotated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PointerTooltip.#ctor">
            <summary>
            Constructs a PointerTooltip
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PointerTooltip.Res">
            <summary>
            Gets string resource provider
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PointerTooltip.PointerPosition">
            <summary>
            Gets or sets the offset to the pointer location from the connection point of the tooltip.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltip.PointerPositionProperty">
            <summary>
            Identifies the PointerPosition Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PointerTooltip.PointerInset">
            <summary>
            Gets or sets the offset to the pointer location from the connection point of the tooltip.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltip.PointerInsetProperty">
            <summary>
            Identifies the PointerInset Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PointerTooltip.PointerWidth">
            <summary>
            Gets or sets the offset to the pointer location from the connection point of the tooltip.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltip.PointerWidthProperty">
            <summary>
            Identifies the PointerWidth Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PointerTooltip.PointerVisibility">
            <summary>
            Gets or sets whether to use value interpolation when drawing a line through the best value for the mouse position.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltip.PointerVisibilityProperty">
            <summary>
            Identifies the PointerVisibility Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PointerTooltip.PointerLocation">
            <summary>
            Gets or sets whether to use value interpolation when drawing a line through the best value for the mouse position.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltip.PointerLocationProperty">
            <summary>
            Identifies the PointerLocation Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PointerTooltip.ActualPointerStartPosition">
            <summary>
            Gets or protected internal sets whether to use value interpolation when drawing a line through the best value for the mouse position.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltip.ActualPointerStartPositionProperty">
            <summary>
            Identifies the ActualPointerStartPosition Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PointerTooltip.ActualPointerFirstPosition">
            <summary>
            Gets or protected internal sets whether to use value interpolation when drawing a line through the best value for the mouse position.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltip.ActualPointerFirstPositionProperty">
            <summary>
            Identifies the ActualPointerFirstPosition Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PointerTooltip.ActualPointerSecondPosition">
            <summary>
            Gets or protected internal sets whether to use value interpolation when drawing a line through the best value for the mouse position.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltip.ActualPointerSecondPositionProperty">
            <summary>
            Identifies the ActualPointerSecondPosition Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PointerTooltip.ActualBoxTopLeftPosition">
            <summary>
            Gets or protected internal sets whether to use value interpolation when drawing a line through the best value for the mouse position.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltip.ActualBoxTopLeftPositionProperty">
            <summary>
            Identifies the ActualBoxTopLeftPosition Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PointerTooltip.ActualBoxTopRightPosition">
            <summary>
            Gets or protected internal sets whether to use value interpolation when drawing a line through the best value for the mouse position.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltip.ActualBoxTopRightPositionProperty">
            <summary>
            Identifies the ActualBoxTopRightPosition Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PointerTooltip.ActualBoxBottomLeftPosition">
            <summary>
            Gets or protected internal sets whether to use value interpolation when drawing a line through the best value for the mouse position.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltip.ActualBoxBottomLeftPositionProperty">
            <summary>
            Identifies the ActualBoxBottomLeftPosition Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PointerTooltip.ActualBoxBottomRightPosition">
            <summary>
            Gets or protected internal sets whether to use value interpolation when drawing a line through the best value for the mouse position.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltip.ActualBoxBottomRightPositionProperty">
            <summary>
            Identifies the ActualBoxBottomRightPosition Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PointerTooltip.ActualBoxWidth">
            <summary>
            Gets or protected internal sets whether to use value interpolation when drawing a line through the best value for the mouse .
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltip.ActualBoxWidthProperty">
            <summary>
            Identifies the ActualBoxWidth Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PointerTooltip.ActualBoxHeight">
            <summary>
            Gets or protected internal sets whether to use value interpolation when drawing a line through the best value for the mouse .
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltip.ActualBoxHeightProperty">
            <summary>
            Identifies the ActualBoxHeight Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PointerTooltip.ActualBoxFullHeight">
            <summary>
            Gets or protected internal sets whether to use value interpolation when drawing a line through the best value for the mouse .
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltip.ActualBoxFullHeightProperty">
            <summary>
            Identifies the ActualBoxFullHeight Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PointerTooltip.ActualBoxFullWidth">
            <summary>
            Gets or protected internal sets whether to use value interpolation when drawing a line through the best value for the mouse .
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltip.ActualBoxFullWidthProperty">
            <summary>
            Identifies the ActualBoxFullWidth Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PointerTooltip.PointerPoints">
            <summary>
            Gets or protected internal sets whether to use value interpolation when drawing a line through the best value for the mouse .
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltip.PointerPointsProperty">
            <summary>
            Identifies the PointerPoints Dependency Property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PointerTooltip.PointerOutlinePoints">
            <summary>
            Gets or protected internal sets whether to use value interpolation when drawing a line through the best value for the mouse .
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltip.PointerOutlinePointsProperty">
            <summary>
            Identifies the PointerOutlinePoints Dependency Property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PointerTooltip.RaisePropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            Raises the property changed event.
            </summary>
            <param name="name">The name of the property that has been changed.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="E:Infragistics.Controls.Charts.PointerTooltip.PropertyChanged">
            <summary>
            Event raised when a property value is changed.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.PointerTooltip.PropertyUpdated">
            <summary>
            Event raised when the value of a property is updated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PointerTooltip.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning SeriesViewer. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.PointerTooltip.ContentControl">
            <summary>
            Gets or Sets the content control which houses the inner content of the tooltip.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PointerTooltip.Destroy">
            <summary>
            Release any resources held by the PointerTooltip.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.PointerTooltipPointerLocation">
            <summary>
            Describes available positions to anchor the pointer to the PointerTooltip.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltipPointerLocation.Auto">
            <summary>
            The anchor is decided automatically.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltipPointerLocation.TopLeft">
            <summary>
            The anchor is top left of the content.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltipPointerLocation.TopMiddle">
            <summary>
            The anchor is top left of the content.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltipPointerLocation.TopRight">
            <summary>
            The anchor is top left of the content.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltipPointerLocation.RightTop">
            <summary>
            The anchor is top left of the content.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltipPointerLocation.RightMiddle">
            <summary>
            The anchor is top left of the content.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltipPointerLocation.RightBottom">
            <summary>
            The anchor is top left of the content.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltipPointerLocation.BottomRight">
            <summary>
            The anchor is top left of the content.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltipPointerLocation.BottomMiddle">
            <summary>
            The anchor is top left of the content.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltipPointerLocation.BottomLeft">
            <summary>
            The anchor is top left of the content.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltipPointerLocation.LeftBottom">
            <summary>
            The anchor is top left of the content.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltipPointerLocation.LeftMiddle">
            <summary>
            The anchor is top left of the content.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PointerTooltipPointerLocation.LeftTop">
            <summary>
            The anchor is top left of the content.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.PieLegendTemplates">
            <summary>
            Helper class used for rendering legend badge and item templates for the pie chart.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.AxisFormatLabelHandler">
            <summary>
            The FormatLabel handler for the axis.
            </summary>
            <param name="item">The item to format.</param>
            <returns>A formatted string.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.AxisExtentType">
            <summary>
            Enumeration that determines whether the axis extent measures in pixels or percentage.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisExtentType.Pixel">
            <summary>
            Axis extent measured in pixels
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisExtentType.Percent">
            <summary>
            Axis extent measured as a percentage of the chart's size
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.IAxisAnnotation.FormatLabel">
            <summary>
            Sets or gets a function which takes an object that produces a formatted label for displaying in the chart.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.AxisLabelPanelBase">
            <summary>
            Base class for creating an axis label panel.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.CreateFontInfoMap">
            <summary>
            Creates a FontInfo map.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.UnlockAndRefresh">
            <summary>
            Unlocks the view and triggers a refresh.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.Unlock">
            <summary>
            Unlocks the view.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelPanelBase.TextBlocks">
            <summary>
            Gets or sets the list of label elements.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelPanelBase.LabelBounds">
            <summary>
            Gets or sets the list of label placeholder bounds.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelPanelBase.LabelSettings">
            <summary>
            Gets or sets the list of label placeholder bounds.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelPanelBase.FoundCollisions">
            <summary>
            Gets or sets whether label collisions were detected.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelPanelBase.UseRotation">
            <summary>
            Gets or sets whether label rotation should be used.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelPanelBase.UseStaggering">
            <summary>
            Gets or sets whether label staggering should be used.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelPanelBase.UseWrapping">
            <summary>
            Gets or sets whether label text wrapping should be used.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelPanelBase.LongestTextBlock">
            <summary>
            Gets or sets the longest label control.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelPanelBase.AreLabelsUnevenlySpaced">
            <summary>
              Get or sets whether the labels are placed in unequal intervals
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.DetectCollisions(System.Collections.Generic.List{Infragistics.Portable.Rect},System.Collections.Generic.List{System.Boolean})">
            <summary>
            Determines if there are label collisions.
            </summary>
            <param name="rectangles">List of label bounds</param>
            <param name="isOverlay">List of whether each rectangle is an overlay.</param>
            <returns>True if collisions were detected; otherwise false</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.StaggerLabels(System.Double,System.Collections.Generic.List{Infragistics.Portable.Rect}@,System.Collections.Generic.List{System.Boolean})">
            <summary>
            Stagger the labels.
            </summary>
            <param name="largestHeight">Largest label height</param>
            <param name="rectangles">List of label bounds</param>
            <param name="isOverlay">List of whether each rectangle is an overlay.</param>
            <returns>Number of staggered rows</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.CreateBoundsRectangles">
            <summary>
            Creates the label placeholder bounds.
            </summary>
            <returns>List of label rectangles</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.BindExtent">
            <summary>
            Binds label panel's extent to axis extent.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.ApplyPanelRotation(Infragistics.Portable.Size)">
            <summary>
            Sets up a rotate transform on the label panel.
            </summary>
            <param name="finalSize">Final size of the panel</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.GetEffectiveAngle">
            <summary>
            Returns the rotation angle of the labels.
            </summary>
            <returns>Rotation angle of the labels</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.GetTitleEffectiveAngle">
            <summary>
            Returns the rotation angle of the axis title.
            </summary>
            <returns>Rotation angle of the title</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.ShouldDisplay(System.Int32,Infragistics.Portable.Rect)">
            <summary>
            Determines if the label should be displayed.
            </summary>
            <param name="index">Label index</param>
            <param name="bounds">Label bounds</param>
            <returns>True if the label should be displayed; otherwise false</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.GetDesiredWidth(System.Object)">
            <summary>
            Gets the desired width of the element.
            </summary>
            <param name="element">target element</param>
            <returns>Desired width of the element</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.GetWidthBounds(System.Object)">
            <summary>
            Gets the width bounds for the provided element.
            </summary>
            <param name="element">The element.</param>
            <returns>The width bounds.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.GetHeightBounds(System.Object)">
            <summary>
            Gets the height bounds for the provided element.
            </summary>
            <param name="element">The element.</param>
            <returns>The height bounds.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.GetDesiredHeight(System.Object)">
            <summary>
            Gets the desired height of the element.
            </summary>
            <param name="element">target element</param>
            <returns>Desired height of the element</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.WindowRectChanged(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            This method is called when the chart's window rect has changed. This would typically happen on zooming.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.LabelViewportSizeChanged(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            This method is called when the label viewport has changed its size. This would typically happen when the plot area size has changed.
            </summary>
            <param name="oldRect">Old bounds</param>
            <param name="newRect">New bounds</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.DetermineLabelBounds">
            <summary>
            Calculates label bounds.
            </summary>
            <returns>List of calculated bounds</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.GetTitleWidth">
            <summary>
            Gets the width of the title.
            </summary>
            <returns>The title width.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.GetTitleHeight">
            <summary>
            Gets the height of the title.
            </summary>
            <returns>The title height.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.GetTitleHeightBounds">
            <summary>
            Get height of title bounds after rotation and with vertical margin
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.GetTitleWidthBounds">
            <summary>
            Get width of title bounds after rotation and with horizontal margin
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.GetTitleBounds">
            <summary>
            Gets the rectangular bounds to be occupied by the axis title.
            </summary>
            <returns>The rectangular bounds to be occupied by the axis title.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.ArrangeTitle(Infragistics.Portable.Size)">
            <summary>
            Arranges title based on specified final size
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.ArrangeTicks(Infragistics.Portable.Size)">
            <summary>
            Arranges tickmarks based on specified final size
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.CreateTicks">
            <summary>
            Creates tickmarks.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.GetTickValues">
            <summary>
            Get the values where axis tick marks are located.
            </summary>
            <returns>A list of values.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.VerticalTick(Infragistics.Portable.Graphics.Media.GeometryCollection,System.Double,System.Double,System.Double,Infragistics.Portable.Rect,Infragistics.Controls.Charts.PathRenderingInfo)">
            <summary>
            Generates the visual for a vertical tick.
            </summary>
            <param name="geometry">The geometry into which to generate the visual.</param>
            <param name="x">The x value for the line.</param>
            <param name="y1">The starting y value for the line.</param>
            <param name="y2">The ending y value for the line.</param>
            <param name="viewportRect">The viewport of the axis.</param>
            <param name="renderingInfo">Rendering information for the path.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.HorizontalTick(Infragistics.Portable.Graphics.Media.GeometryCollection,System.Double,System.Double,System.Double,Infragistics.Portable.Rect,Infragistics.Controls.Charts.PathRenderingInfo)">
            <summary>
            Generates the visual for a horizontal tick.
            </summary>
            <param name="geometry">The geometry into which to generate the visual.</param>
            <param name="y">The y value for the line.</param>
            <param name="x1">The x1.</param>
            <param name="x2">The x2.</param>
            <param name="viewportRect">The viewport of the axis.</param>
            <param name="renderingInfo">The rendering info.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.SetLabelRotationTransform(Infragistics.Portable.Components.UI.FrameworkElement,System.Double)">
            <summary>
            Sets up the transform for the label.
            </summary>
            <param name="label">Target label</param>
            <param name="angle">Rotation angle</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.SetTitleRotationTransform(Infragistics.Portable.Components.UI.FrameworkElement)">
            <summary>
            Sets up the transform for the label.
            </summary>
            <param name="label">Target label</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.HandleSetTitleLabelRotationTransform(Infragistics.Portable.Components.UI.FrameworkElement,System.Double)">
            <summary>
            Updates the transform for the title label.
            </summary>
            <param name="label">The title label.</param>
            <param name="effAngle">The angle to rotate it by.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisLabelPanelBase.ExtentProperty">
            <summary>
            Identifies the Extent dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelPanelBase.Extent">
            <summary>
            Gets or sets the Extent property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.GetTitlePosition(Infragistics.Controls.Charts.TitleSettings)">
            <summary>
            Get title position for a given title settings 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelPanelBase.CachedOverlayExtent">
            <summary>
            The maximum extent of all overlays on this axis.
            </summary>
            <remarks>
            For vertical axes, CachedOverlayExtent is the width of the widest label plus margins.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisLabelPanelBase.CachedOverlayRenderExtent">
            <summary>
            The maximum render extent of all overlays on this axis.
            </summary>
            <remarks>
            For vertical axes, CachedOverlayRenderExtent is the width of the widest label.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.MakeDirty">
            <summary>
            Mark the panel as dirty in order to trigger a refresh.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.GetDesiredExtent(Infragistics.Portable.Rect)">
            <summary>
            Gets the desired extent for the panel within the provided rect.
            </summary>
            <param name="gridAreaRect">The rect within to get the desired extent.</param>
            <returns>The desired extent.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.Measure">
            <summary>
            Measures the label panel.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.Arrange">
            <summary>
            Arranges the label panel.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisLabelPanelBase.Render">
            <summary>
            Renders the label panel.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.HorizontalAxisLabelPanelBase">
            <summary>
            Represents the base class for horizontal axis label panels.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAxisLabelPanelBase.BindExtent">
            <summary>
            Sets up the horizontal axis extent.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAxisLabelPanelBase.ShouldRotate">
            <summary>
            Determines whether or not the axis labels should be rotated.
            </summary>
            <returns>True if the labels should be rotated; otherwise false</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAxisLabelPanelBase.ShouldTryStagger">
            <summary>
            Determines if the axis labels should be staggered.
            </summary>
            <returns>True if labels should be staggered; otherwise false</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAxisLabelPanelBase.CreateBoundsRectangles">
            <summary>
            Returns a list of label placeholder rectangles.
            </summary>
            <returns>List of label bounds</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAxisLabelPanelBase.HideOptionalLabels(System.Collections.Generic.List{Infragistics.Portable.Rect},System.Collections.Generic.List{System.Boolean})">
            <summary>
            Hides optional labels
            </summary>
            <param name="rectangles">list of label rectangles</param>
            <param name="isOverlayList">Corresponding list of booleans indicating overlay status.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAxisLabelPanelBase.ShowOptionalLabels">
            <summary>
            Shows optional labels.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAxisLabelPanelBase.SetLabelRotationTransform(Infragistics.Portable.Components.UI.FrameworkElement,System.Double)">
            <summary>
            Sets up a rotate transform object for the labels.
            </summary>
            <param name="label">label to apply the transformation to</param>
            <param name="angle">angle of rotation</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAxisLabelPanelBase.ShouldVerticalAlign">
            <summary>
            Determines if the labels should be vertically aligned.
            </summary>
            <returns>True if the labels should be vertically aligned; other wise false</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAxisLabelPanelBase.ShouldClip">
            <summary>
            Determines is the labels should be clipped.
            </summary>
            <returns>True if the labels should be clipped; otherwise false</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAxisLabelPanelBase.StaggerLabels(System.Double,System.Collections.Generic.List{Infragistics.Portable.Rect}@,System.Collections.Generic.List{System.Boolean})">
            <summary>
            Staggers the axis labels.
            </summary>
            <param name="largestHeight">largest label's height</param>
            <param name="rectangles">list of label bounds</param>
            <param name="isOverlay">List of whether each rectangle is an overlay.</param>
            <returns>number of rows after staggering</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAxisLabelPanelBase.GetTitleBounds">
            <summary>
            Gets the rectangular bounds to be occupied by the axis title.
            </summary>
            <returns>The rectangular bounds to be occupied by the axis title.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAxisLabelPanelBase.GetLabelTopOffset">
            <summary>
            Gets the vertical offset to apply above the top of each label.
            </summary>
            <returns>The vertical offset to apply above the top of each label.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAxisLabelPanelBase.GetLabelBottomOffset">
            <summary>
            Gets the vertical offset to apply below the bottom of each label.
            </summary>
            <returns>The vertical offset to apply below the bottom of each label.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAxisLabelPanelBase.GetLabelSpan">
            <summary>
            Gets the total vertical span of labels and their top and bottom offset distances.
            </summary>
            <returns>The total vertical span of labels and their top and bottom offset distances.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAxisLabelPanelBase.GetLabelRenderSpan">
            <summary>
            Gets the vertical span of labels and their top and bottom offset distances, plus their top and bottom margins.
            </summary>
            <returns>The vertical span of labels and their top and bottom offset distances, plus their top and bottom margins.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalAxisLabelPanelBase.CreateTicks">
            <summary>
            Creates tickmarks.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.HorizontalAxisLabelPanel">
            <summary>
            Represents a panel control, containing horizontal axis labels.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.GetGroupCenterHandler">
            <summary>
            Delegate for locating the center of a group on an axis.
            </summary>
            <param name="index">The index to find the group center for.</param>
            <param name="window">Represents the axis's window rectangle, with values between 0 and 1 indicating the zoom and scroll position.</param>
            <param name="viewport">Represents the axis's viewport.</param>
            <param name="effectiveViewport">Represents the effective viewport.</param>
            <returns>The group center.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.GetUnscaledGroupCenterHandler">
            <summary>
            Delegate for locating the unscaled center of a group on an axis.
            </summary>
            <param name="index">The index to find the group center for.</param>
            <returns>The group center.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.PathRenderingInfo">
            <summary>
            Rendering information for path elements.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PathRenderingInfo.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness for the path.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PathRenderingInfo.Stroke">
            <summary>
            Gets or sets the stroke color for the path.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PathRenderingInfo.Fill">
            <summary>
            Gets or sets the fill color for the path.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PathRenderingInfo.DashArray">
            <summary>
            Gets or sets the dash array for the path.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PathRenderingInfo.AlignToPixels">
            <summary>
            Gets or sets whether the path should align to pixels.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.HorizontalLinearScaler">
            <summary>
            Represents a horizontally oriented linear scaler.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalLinearScaler.GetUnscaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the unscaled axis value from an scaled viewport value.
            </summary>
            <param name="scaledValue">The scaled viewport value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The unscaled axis value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalLinearScaler.GetScaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the scaled viewport value from an unscaled axis value.
            </summary>
            <param name="unscaledValue">The unscaled axis value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The scaled viewport value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalLinearScaler.GetScaledValueList(System.Collections.Generic.IList{System.Double},System.Int32,System.Int32,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Get a list of scaled viewport values from a list of unscaled axis values.
            </summary>
            <param name="unscaledValues">The list of unscaled axis values.</param>
            <param name="startIndex">Index at which to begin in the list.</param>
            <param name="count">Number of items to scale in the list.</param>
            <param name="p">The scaler parameters in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FastHorizontalLinearScaler.GetScaledBucketValueList(System.Collections.Generic.IList{System.Double[]},System.Collections.Generic.IList{System.Int32},System.Int32,System.Int32,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Get a list of scaled viewport values from a list of unscaled axis values in buckets.
            </summary>
            <param name="unscaledValues">The list of unscaled axis values.</param>
            <param name="bucketIndexes">The indexes inside the buckets to scale.</param>
            <param name="p">Scaler parameters</param>
            <param name="startIndex">Index at which to start in the list.</param>
            <param name="count">Number of items to scale in the list.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.HorizontalLogarithmicScaler">
            <summary>
            Represents a horizontally oriented logarithmic scaler.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalLogarithmicScaler.GetUnscaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the unscaled axis value from an scaled viewport value.
            </summary>
            <param name="scaledValue">The scaled viewport value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The unscaled axis value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.HorizontalLogarithmicScaler.GetScaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the scaled viewport value from an unscaled axis value.
            </summary>
            <param name="unscaledValue">The unscaled axis value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The scaled viewport value.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.LinearScaler">
            <summary>
            Represents a linear numeric axis scaler.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearScaler.CalculateRange(Infragistics.Controls.Charts.NumericAxisBase,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Calculates the range of the scaler.
            </summary>
            <param name="target">Target axis</param>
            <param name="minimumValue">Desired minimum value</param>
            <param name="maximumValue">Desired maximum value</param>
            <param name="actualMinimumValue">Actual minimum value</param>
            <param name="actualMaximumValue">Actual maximum value</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.LogarithmicScaler">
            <summary>
            Represents a logarithmic numeric scaler.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LogarithmicScaler.OnPropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            Called when a property value changes.
            </summary>
            <param name="propertyName">The name of the property that changed.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.LogarithmicScaler.CalculateRange(Infragistics.Controls.Charts.NumericAxisBase,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Calculates the axis range based on min and max values.
            </summary>
            <param name="target">Axis, for which the range is calculated</param>
            <param name="minimumValue">Minimum value</param>
            <param name="maximumValue">Maximum value</param>
            <param name="actualMinimumValue">Actual minimum value</param>
            <param name="actualMaximumValue">Actual maximum value</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.NumericScaleMode">
            <summary>
            Describes available scaling behaviors of a numeric axis.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NumericScaleMode.Linear">
            <summary>
            Scale values on a linear number line.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NumericScaleMode.Logarithmic">
            <summary>
            Scale values on a logarithmic number line.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.NumericScaler">
            <summary>
            Represents a numeric axis scaler.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NumericScaler.UnitRect">
            <summary>
            Unit rect (0,0,1,1)
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericScaler.CalculateRange(Infragistics.Controls.Charts.NumericAxisBase,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Calculates the range of the scaler.
            </summary>
            <param name="target">Target axis</param>
            <param name="minimumValue">Desired minimum value</param>
            <param name="maximumValue">Desired maximum value</param>
            <param name="actualMinimumValue">Actual minimum value</param>
            <param name="actualMaximumValue">Actual maximum value</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.NumericScaler.ActualMinimumValuePropertyName">
            <summary>
            String used to determine the name of the ActualMinimumValue dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NumericScaler.ActualMinimumValueProperty">
            <summary>
            Identifies the ActualMinimumValue dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericScaler.ActualMinimumValue">
            <summary>
            Gets or sets the actual minimum value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NumericScaler.ActualMaximumValuePropertyName">
            <summary>
            String used to determine the name of the ActualMaximumValue dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NumericScaler.ActualMaximumValueProperty">
            <summary>
            Identifies the ActualMaximumValue dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericScaler.ActualMaximumValue">
            <summary>
            Gets or sets the actual maximum value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NumericScaler.CachedActualMinimumValue">
            <summary>
            A copy of the ActualMinimumValue property value, cached for performance reasons.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NumericScaler.CachedActualMaximumValue">
            <summary>
            A copy of the ActualMaximumValue property value, cached for performance reasons.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericScaler.OnPropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            Called when a property value changes.
            </summary>
            <param name="propertyName">The name of the property that changed.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericScaler.ActualRange">
            <summary>
            Gets or sets the actual scaler range.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericScaler.GetUnscaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Returns an unscaled value in the viewport.
            </summary>
            <param name="scaledValue">The scaled value.</param>
            <param name="p">Scaler parameters.</param>
            <returns>Unscaled value in the viewport</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericScaler.GetScaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets a value on a numeric scale.
            </summary>
            <param name="unscaledValue">The value to be scaled.</param>
            <param name="p">Scaler parameters.</param>
            <returns>Value on a numeric scale</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericScaler.GetUnscaledValueList(System.Collections.Generic.IList{System.Double},System.Int32,System.Int32,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Returns a list of unscaled values in the viewport.
            </summary>
            <param name="scaledValues">list of scaled values</param>
            <param name="startIndex">Index at which to begin in the list.</param>
            <param name="count">Number of items to scale in the list.</param>
            <param name="p">Scaler parameters.</param>
            <returns>List of unscaled values in the viewport</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericScaler.GetScaledValueList(System.Collections.Generic.IList{System.Double},System.Int32,System.Int32,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Get a list of scaled viewport values from a list of unscaled axis values.
            </summary>
            <param name="unscaledValues">The list of unscaled axis values.</param>
            <param name="startIndex">Index at which to begin in the list.</param>
            <param name="count">Number of items to scale in the list.</param>
            <param name="p">The scaler parameters in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericScaler.GetScaledBucketValueList(System.Collections.Generic.IList{System.Double[]},System.Collections.Generic.IList{System.Int32},System.Int32,System.Int32,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets a list of values on a numeric scale in buckets.
            </summary>
            <param name="unscaledValues">The list of unscaled axis values.</param>
            <param name="bucketIndexes">The indexes inside the buckets to scale.</param>
            <param name="p">Scaler parameters</param>
            <param name="startIndex">Index at which to start in the list.</param>
            <param name="count">Number of items to scale in the list.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.VerticalLinearScaler">
            <summary>
            Represents a vertically oriented linear scaler.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalLinearScaler.GetUnscaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the unscaled axis value from an scaled viewport value.
            </summary>
            <param name="scaledValue">The scaled viewport value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The unscaled axis value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalLinearScaler.GetScaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the scaled viewport value from an unscaled axis value.
            </summary>
            <param name="unscaledValue">The unscaled axis value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The scaled viewport value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalLinearScaler.GetScaledValueList(System.Collections.Generic.IList{System.Double},System.Int32,System.Int32,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Get a list of scaled viewport values from a list of unscaled axis values.
            </summary>
            <param name="unscaledValues">The list of unscaled axis values.</param>
            <param name="startIndex">Index at which to begin in the list.</param>
            <param name="count">Number of items to scale in the list.</param>
            <param name="p">The scaler parameters in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalLinearScaler.GetScaledValue(System.Double,Infragistics.Portable.Rect,Infragistics.Portable.Rect,System.Boolean)">
            <summary>
            Gets a value on a linear scale.
            </summary>
            <param name="unscaledValue">value to be scaled</param>
            <param name="windowRect">chart's window</param>
            <param name="viewportRect">chart's viewport</param>
            <param name="isInverted">is the axis inverted?</param>
            <returns>Value on a linear scale</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalLinearScaler.GetUnscaledValue(System.Double,Infragistics.Portable.Rect,Infragistics.Portable.Rect,System.Boolean)">
            <summary>
            Returns an unscaled value in the viewport.
            </summary>
            <param name="scaledValue">scaled value</param>
            <param name="windowRect">chart's window</param>
            <param name="viewportRect">chart's viewport</param>
            <param name="isInverted">is the axis inverted?</param>
            <returns>Unscaled value in the viewport</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.FastVerticalLinearScaler.GetScaledBucketValueList(System.Collections.Generic.IList{System.Double[]},System.Collections.Generic.IList{System.Int32},System.Int32,System.Int32,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Get a list of scaled viewport values from a list of unscaled axis values.
            </summary>
            <param name="unscaledValues">The list of unscaled axis values.</param>
            <param name="bucketIndexes">The indexes inside the buckets to scale.</param>
            <param name="p">Scaler parameters</param>
            <param name="startIndex">Index at which to start in the list.</param>
            <param name="count">Number of items to scale in the list.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.VerticalLogarithmicScaler">
            <summary>
            Represents a vertically oriented logarithmic scaled.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalLogarithmicScaler.GetUnscaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the unscaled axis value from an scaled viewport value.
            </summary>
            <param name="scaledValue">The scaled viewport value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The unscaled axis value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalLogarithmicScaler.GetScaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the scaled viewport value from an unscaled axis value.
            </summary>
            <param name="unscaledValue">The unscaled axis value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The scaled viewport value.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.LinearTickmarkValues">
            <summary>
            Represents a set of linear tickmarks.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearTickmarkValues.#ctor">
            <summary>
            Initializes a new instance of the tickmarks.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearTickmarkValues.MinTicks">
            <summary>
            Gets or sets the number of minor tickmarks
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearTickmarkValues.Initialize(Infragistics.Controls.Charts.TickmarkValuesInitializationParameters)">
            <summary>
            Initializes a set of new tickmark values.
            </summary>
            <param name="initializationParameters">Initialization parameters</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearTickmarkValues.MajorValuesArray">
            <summary>
            Returns an array with the major tickmark values.
            </summary>
            <returns>Major tickmark values</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.LinearTickmarkValues.MinorValuesArray">
            <summary>
            Returns an array of minor tickmark values.
            </summary>
            <returns>Minor tickmark values</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.LogarithmicTickmarkValues">
            <summary>
            Represents a set of logarithmic tickmarks.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LogarithmicTickmarkValues.Initialize(Infragistics.Controls.Charts.TickmarkValuesInitializationParameters)">
            <summary>
            Initializes a new set of tickmark values.
            </summary>
            <param name="initializationParameters">initialization parameters</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.LogarithmicTickmarkValues.LogarithmBaseProperty">
            <summary>
            Identifies the LogarithBase dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LogarithmicTickmarkValues.LogarithmBase">
            <summary>
            Gets or sets the logarithm base.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LogarithmicTickmarkValues.MajorValueAt(System.Int32)">
            <summary>
            Returns a major value at a specified index.
            </summary>
            <param name="tickIndex">tickmark index</param>
            <returns>Major value at a given index</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.LogarithmicTickmarkValues.MajorValuesArray">
            <summary>
            Returns an array of major values.
            </summary>
            <returns>Major values</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.LogarithmicTickmarkValues.MinorValuesArray">
            <summary>
            Returns an array of minor values.
            </summary>
            <returns>Minor values</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.TickmarkValues">
            <summary>
            Represents a set of methods and properties used to create tickmark values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TickmarkValues.Initialize(Infragistics.Controls.Charts.TickmarkValuesInitializationParameters)">
            <summary>
            Initializes a new set of tickmark values.
            </summary>
            <param name="initializationParameters">initialization parameters</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValues.VisibleMaximum">
            <summary>
            Gets or sets the maximum tickmark value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValues.Interval">
            <summary>
            Gets or sets the tickmark interval.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValues.MinorInterval">
            <summary>
            Gets or sets the minor tickmark interval.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValues.ActualMinorInterval">
            <summary>
            Gets or sets the actual minor tickmark interval.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValues.FirstIndex">
            <summary>
            Gets or sets the first tickmark index.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValues.LastIndex">
            <summary>
            Gets or sets the last tickmark index.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TickmarkValues.MajorValuesArray">
            <summary>
            Returns an array with the major tickmark values.
            </summary>
            <returns>Major tickmark values</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.TickmarkValues.MinorValuesArray">
            <summary>
            Returns an array with the minor tickmark values.
            </summary>
            <returns>Minor tickmark values</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValues.MinorCount">
            <summary>
            Gets or sets the number of minor tickmarks between two consecutive major tickmarks.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.TickmarkValuesInitializationParameters">
            <summary>
            Represents a set of properties used to create axis tickmarks.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValuesInitializationParameters.VisibleMinimum">
            <summary>
            Gets or sets the minimum tickmark value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValuesInitializationParameters.VisibleMaximum">
            <summary>
            Gets or sets the maximum tickmark value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValuesInitializationParameters.ActualMinimum">
            <summary>
            Gets or sets the actual minimum tickmark value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValuesInitializationParameters.ActualMaximum">
            <summary>
            Gets or sets the actual maximum tickmark value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValuesInitializationParameters.Resolution">
            <summary>
            Gets or sets the rendering resolution for the tickmarks.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValuesInitializationParameters.HasUserInterval">
            <summary>
            Specifies if the user has set a custom interval.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValuesInitializationParameters.UserInterval">
            <summary>
            Gets or sets the user-specified tickmark interval.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValuesInitializationParameters.IntervalOverride">
            <summary>
            Allows to override the interval returned by the axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValuesInitializationParameters.MinorCountOverride">
            <summary>
            Allows to override the number of minor lines returned by the axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValuesInitializationParameters.Mode">
            <summary>
            Gets or sets the category mode.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValuesInitializationParameters.Mode2GroupCount">
            <summary>
            Gets or sets the number of series with Mode2 category mode.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValuesInitializationParameters.Viewport">
            <summary>
            Gets or sets the chart's viewport.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValuesInitializationParameters.Window">
            <summary>
            Gets or sets the chart's window.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValuesInitializationParameters.IsInverted">
            <summary>
            Gets or sets whether the tickmarks are inverted.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValuesInitializationParameters.GetScaledValue">
            <summary>
            Gets or sets the function used to calculate the scaled value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValuesInitializationParameters.GetGroupCenter">
            <summary>
            Gets or sets the function used to calculate the group center for the series that use grouping.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValuesInitializationParameters.GetUnscaledGroupCenter">
            <summary>
            Gets or sets the function used to calculate the unscaled group center for the series that use grouping.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValuesInitializationParameters.MinorInterval">
            <summary>
            The interval at which to place minor tickmarks.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TickmarkValuesInitializationParameters.HeuristicResolution">
            <summary>
            Gets or sets the value to use for minimum label height or minimum label width, depending on axis orientation to use in deciding initial intervals.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VerticalAxisLabelPanel">
            <summary>
            Represents a panel control, containing vertical axis labels.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAxisLabelPanel.BindExtent">
            <summary>
            Makes sure the extent is bound to the settings.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAxisLabelPanel.GetTitleEffectiveAngle">
            <summary>
            Returns the rotation angle of the axis title.
            </summary>
            <returns>Rotation angle of the title</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAxisLabelPanel.GetLabelLeftOffset">
            <summary>
            Gets the left offset distance to apply to labels.
            </summary>
            <returns>The left offset distance to apply to labels.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAxisLabelPanel.GetLabelRightOffset">
            <summary>
            Gets the right offset distance to apply to labels.
            </summary>
            <returns>The right offset distance to apply to labels.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAxisLabelPanel.GetLabelSpan">
            <summary>
            Gets the total horizontal width of labels and their left and right offset distances.
            </summary>
            <returns>The total horizontal width of labels and their left and right offset distances.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAxisLabelPanel.GetLabelRenderSpan">
            <summary>
            Gets the rendering width of labels and their left and right offset distances, plus their left and right margins.
            </summary>
            <returns>The rendering width of labels and their left and right offset distances, plus their left and right margins.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAxisLabelPanel.CreateBoundsRectangles">
            <summary>
            Creates the bounds rectangles for the labels in the panel.
            </summary>
            <returns>A list of bounds rectangles.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAxisLabelPanel.SetLabelRotationTransform(Infragistics.Portable.Components.UI.FrameworkElement,System.Double)">
            <summary>
            Sets the appropriate rotation transform on a label.
            </summary>
            <param name="label">The label to set.</param>
            <param name="angle">The angle of rotation</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAxisLabelPanel.ShouldHorizontalAlign">
            <summary>
            Returns true if horizontal alignment should be performed.
            </summary>
            <returns>True if horizontal alignment should be performed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAxisLabelPanel.GetTitleBounds">
            <summary>
            Gets the rectangular bounds to be occupied by the axis title.
            </summary>
            <returns>The rectangular bounds to be occupied by the axis title.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAxisLabelPanel.GetTitlePosition(Infragistics.Controls.Charts.TitleSettings)">
            <summary>
            Gets the position of the axis title.
            </summary>
            <param name="titleSettings">The TitleSettings object representing the axis title's configuration.</param>
            <returns>The position of the axis title.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalAxisLabelPanel.CreateTicks">
            <summary>
            Creates tickmarks.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryFrame.ClearSpeedModifiers">
            <summary>
            Clears the speed modifiers for this category frame.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ITileZoomTileInfo">
            <summary>
            Interface for tiles that are part of a layered, zoomable grid.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ITileZoomTileInfo.ZoomLevel">
            <summary>
            The zoom depth of the tile.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ITileZoomTileInfo.XPosition">
            <summary>
            The x position of the tile.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ITileZoomTileInfo.YPosition">
            <summary>
            The y position of the tile.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ITileZoomTileInfo.ToString">
            <summary>
            Returns a string representation of the tile.
            </summary>
            <returns>A string representation of the tile.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.ITileZoomTile">
            <summary>
            Interface for tiles that are part of a layered, zoomable grid.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ITileZoomTile.Info">
            <summary>
            Information about the tile's x and y position and zoom level.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ITileZoomTile.Touch">
            <summary>
            Marks the tile as recently used.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ITileZoomTile.Content">
            <summary>
            The content displayed by the tile.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ITileZoomTile.XPosition">
            <summary>
            X position of the tile.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ITileZoomTile.Width">
            <summary>
            Width of the tile.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ITileZoomTile.YPosition">
            <summary>
            Y position of th etile.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ITileZoomTile.Height">
            <summary>
            Height of the tile.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ITileZoomTile.ID">
            <summary>
            Unique identifier for the tile.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.TransitionInSpeedType">
            <summary>
            Describes available types of speeds used when transitioning in a series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TransitionInSpeedType.Auto">
            <summary>
            A speed type is automatically selected.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TransitionInSpeedType.Normal">
            <summary>
            All speeds are normal, data points will arrive at the same time.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TransitionInSpeedType.ValueScaled">
            <summary>
            Data points will arrive later if their value is further from the start point.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TransitionInSpeedType.IndexScaled">
            <summary>
            Data points will arrive later if their index is further from the axis origin.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TransitionInSpeedType.Random">
            <summary>
            Data points will arrive at random times.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.HighlightingState">
            <summary>
            Describes available highlighting states
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.HighlightingState.Out">
            <summary>
            Highlight is transitioning out.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.HighlightingState.In">
            <summary>
            Highlight is transitioning in.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.HighlightingState.Static">
            <summary>
            Highlight is active and not transitioning in or out.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.IHighlightingManager">
            <summary>
            Interface for highlighting managers.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.IHighlightingManager.StartHighlight(Infragistics.Controls.Charts.HighlightingInfo)">
            <summary>
            Starts the highlight operation.
            </summary>
            <param name="info">The HighlightingInfo in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.IHighlightingManager.EndHighlight(Infragistics.Controls.Charts.HighlightingInfo)">
            <summary>
            Ends the highlight operation.
            </summary>
            <param name="info">The HighlightingInfo in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.IHighlightingManager.Clear">
            <summary>
            Resets the state of the HighlightingManager.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.IHighlightingManager.GetHighlightingInfo(Infragistics.Controls.Charts.Series,Infragistics.Portable.IFastItemsSource,Infragistics.Controls.Charts.Axis,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets the HighlightingInfo matching the given criteria.
            </summary>
            <param name="owner">The series.</param>
            <param name="itemsSource">The FastItemsSource.</param>
            <param name="indexAxis">The axis.</param>
            <param name="startIndex">The index at which to start the search.</param>
            <param name="endIndex">The index at which to end the search.</param>
            <param name="isMarker">True to search for a marker HighlightingInfo.</param>
            <returns>The HighlightingInfo matching the given criteria.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.IHighlightingManager.Tick(System.Double)">
            <summary>
            Progress the highlighting incrementally.
            </summary>
            <param name="progress">A number between 0 and 1 representing the progress.</param>
            <returns>True if the highlighting is still running; otherwise, False.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.IHighlightingManager.InProgress">
            <summary>
            Boolean indicating whether a highlighting is in progress.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.IHighlightingManager.MaxHighlightingProgress">
            <summary>
            The maximum progress of all active highlightings.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.IHighlightingManager.SumHighlightingProgress">
            <summary>
            The sum of the progress of all active highlightings.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.IHighlightingManager.MaxMarkerHighlightingProgress">
            <summary>
            The maximum progress of all active marker highlightings.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.IHighlightingManager.SumMarkerHighlightingProgress">
            <summary>
            The sum of the progress of all active marker highlightings.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.IHighlightingManager.DirtySeries">
            <summary>
            A list of series which have changed and need to be rendered.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.SeriesHitTestMode">
            <summary>
            Describes available behaviors for performing hit testing in the chart/map.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SeriesHitTestMode.Auto">
            <summary>
            Automatically decide the appropriate hit test mode for the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SeriesHitTestMode.Computational">
            <summary>
            Use a computational based approach to determine whether the series has been hit. This uses loose bounding boxes, in some cases, and can range in time complexity between O(1) and O(log n) to find a hit. This decreases frame render time compared to color encoded.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SeriesHitTestMode.ColorEncoded">
            <summary>
            Use a color encoded off screen buffer for hit testing. Should always be O(1) time for determining a hit series. This increases frame render time and memory usage, however. Consider using this if hit testing time is degrading performance.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.FrameExtended">
            <summary>
            Extended static functions for frames.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FrameExtended.Interpolate(System.Collections.Generic.List{Infragistics.Portable.Graphics.Media.Brush},System.Single,System.Collections.Generic.List{Infragistics.Portable.Graphics.Media.Brush},System.Collections.Generic.List{Infragistics.Portable.Graphics.Media.Brush},Infragistics.Portable.InterpolationMode)">
            <summary>
            Sets a list of brushes to an interpolation between the given lists of brushes.
            </summary>
            <param name="ret">The list of brushes to populate with the interpolated brushes.</param>
            <param name="p">A number between 0 and 1 indicating the transition progress.</param>
            <param name="min">The minimum or starting brushes.</param>
            <param name="max">The maximum or ending brushes.</param>
            <param name="interpolationMode">The color interpolation mode to use.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ChartHitTestMode">
            <summary>
            Describes available behaviors for performing hit testing in the chart/map.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ChartHitTestMode.Auto">
            <summary>
            Automatically decide the appropriate hit test mode for the content.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ChartHitTestMode.Computational">
            <summary>
            Use a computational based approach to determine which series has been hit. This uses loose bounding boxes, in some cases, and can range in time complexity between O(1) and O(log n) to find a hit. This decreases frame render time compared to color encoded.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ChartHitTestMode.ColorEncoded">
            <summary>
            Use a color encoded off screen buffer for hit testing. This can have extremely rare false positives where the wrong series is hit (this is due to our inability to disable anti-aliasing in our color buffer), but should always be O(1) time for determining a hit series. This increases frame render time, however. Consider using this if hit testing time is degrading performance.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ChartHitTestMode.Mixed">
            <summary>
            Let each series decide which hit testing mode to use individually based on their own hit test mode.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ChartHitTestMode.MixedFavoringComputational">
            <summary>
            Let each series decide which hit testing mode to use individually based on their own hit test mode, but evaluate all computational hits before evaluating any color encoding hits.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.HighlightingMode">
            <summary>
            Describes available behaviors for series highlighting depending on distance of mouse on hover operation.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.HighlightingMode.Closest">
            <summary>
            Specifies the highlight starts on closest element of series
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.HighlightingMode.DirectlyOver">
            <summary>
            Specifies the highlight starts when directly over element of series
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.RenderRequestedEventHandler">
            <summary>
            Delegate for RefreshCompleted events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Contextual information associated with the event.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.RenderSurface">
            <summary>
            Represents a target for a render operation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RenderSurface.Surface">
            <summary>
            The surface on which to render.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.AxisTitlePosition">
            <summary>
            Describes available positions for axis title in respect to axis labels
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisTitlePosition.Auto">
            <summary> 
            Displays the axis title in automatically selected position based on orientation and location of the axis:
            <para/> - left title position for vertical axis located on left of the chart, 
            <para/> - right title position for vertical axis located on right of the chart, 
            <para/> - top title position for horizontal axis located on top of the chart,
            <para/> - bottom title position for horizontal axis located on bottom of the chart,
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisTitlePosition.Left">
            <summary> 
            Displays the axis title to the left of labels on vertical axis
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisTitlePosition.Right">
            <summary> 
            Displays the axis title to the right of labels on vertical axis
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisTitlePosition.Top">
            <summary> 
            Displays the axis title on top of labels on horizontal axis
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisTitlePosition.Bottom">
            <summary> 
            Displays the axis title on bottom of labels on horizontal axis
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.GetCategoryItemsHandler">
            <summary>
            Represents delegate for getting the category items based on indices.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.AssigningCategoryStyleEventHandler">
            <summary>
            Represents delegate for the AssigningCategoryStyleEvent
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.AssigningCategoryMarkerStyleEventHandler">
            <summary>
            Represents delegate for the AssigningCategoryMarkerStyleEvent
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ChartContentManager._seriesList">
            <summary>
            This list maintains the order of the series, where the content dictionary does not.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ContentInfo.IsDirty">
            <summary>
            Flag indicating this object needs a visual refresh to account for changes in its settings.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Frame">
            <summary>
            Represents a static frame or animation frame in an animatable visual element.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Frame.Interpolate(System.Single,Infragistics.Controls.Charts.Frame,Infragistics.Controls.Charts.Frame)">
            <summary>
            Sets this frame's state as an interpolation between the given frames.
            </summary>
            <param name="p">A number between 0 and 1 indicating the transition progress.</param>
            <param name="min">The minimum or starting frame.</param>
            <param name="max">The maximum or ending frame.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Frame.Interpolate(System.Collections.Generic.List{Infragistics.Portable.Point},System.Single,System.Collections.Generic.List{Infragistics.Portable.Point},System.Collections.Generic.List{Infragistics.Portable.Point})">
            <summary>
            Sets the positions in a list of points to an interpolation between the given lists of points.
            </summary>
            <param name="ret">The points to position as an interpolation between min and max.</param>
            <param name="p">A number between 0 and 1 indicating the transition progress.</param>
            <param name="min">The minimum or starting points.</param>
            <param name="max">The maximum or ending points.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Frame.InterpolateWithSpeed(System.Collections.Generic.List{Infragistics.Portable.Point},System.Single,System.Collections.Generic.List{Infragistics.Portable.Point},System.Collections.Generic.List{Infragistics.Portable.Point},System.Collections.Generic.List{System.Double})">
            <summary>
            Sets the positions in a list of points to an interpolation between the given lists of points.
            </summary>
            <param name="ret">The points to position as an interpolation between min and max.</param>
            <param name="p">A number between 0 and 1 indicating the transition progress.</param>
            <param name="min">The minimum or starting points.</param>
            <param name="max">The maximum or ending points.</param>
            <param name="speedModifiers">A list of speeds to apply the interpolation at, where 1 is normal speed.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Frame.Interpolate(System.Collections.Generic.List{System.Double},System.Single,System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double})">
            <summary>
            Sets a list of numbers to an interpolation between the given lists of numbers.
            </summary>
            <param name="ret">The list of numbers to populate with the interpolated values.</param>
            <param name="p">A number between 0 and 1 indicating the transition progress.</param>
            <param name="min">The minimum or starting numbers.</param>
            <param name="max">The maximum or ending numbers.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Frame.InterpolateWithSpeed(System.Collections.Generic.List{System.Double},System.Single,System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double})">
            <summary>
            Sets a list of numbers to an interpolation between the given lists of numbers.
            </summary>
            <param name="ret">The list of numbers to populate with the interpolated values.</param>
            <param name="p">A number between 0 and 1 indicating the transition progress.</param>
            <param name="min">The minimum or starting numbers.</param>
            <param name="max">The maximum or ending numbers.</param>
            <param name="speedModifiers">A list of speeds to apply the interpolation at, where 1 is normal speed.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.CollisionAvoidanceType">
            <summary>
            Describes available methods of collision avoidance of series' markers.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CollisionAvoidanceType.None">
            <summary>
            Collision avoidance is disabled.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CollisionAvoidanceType.Omit">
            <summary>
            Items colliding with other items will be hidden from view.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CollisionAvoidanceType.Fade">
            <summary>
            Items colliding with other items will be partially hidden from view by reducing their opacity.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CollisionAvoidanceType.OmitAndShift">
            <summary>
            Items colliding with other items will be either hidden from view or moved to new positions.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CollisionAvoidanceType.FadeAndShift">
            <summary>
            Items colliding with other items will be either partially hidden from view by reducing their opacity, or moved to new positions, or a combination of both.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.NumericMarkerManager">
            <summary>
            Marker manager class used by data series with numeric dimensions X and Y.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericMarkerManager.#ctor(System.Func{System.Object,Infragistics.Controls.Charts.Marker},System.Func{System.Int32,System.Object},System.Action{System.Collections.Generic.IDictionary{System.Object,Infragistics.Controls.Charts.OwnedPoint}},System.Func{Infragistics.Portable.Point[]},System.Func{System.Collections.Generic.IList{System.Int32}})">
            <summary>
            NumericMarkerManager constructor.
            </summary>
            <param name="provideMarkerStrategy">The function used to provide marker objects given a data item.</param>
            <param name="provideItemStrategy">The function used to provide a data item given its index.</param>
            <param name="removeUnusedMarkers">The action used to remove unused markers.</param>
            <param name="getItemLocationsStrategy">The function used to get all marker locations.</param>
            <param name="activeMarkerIndexesStrategy">The function used to return the indexes of all active markers.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericMarkerManager.#ctor(System.Func{System.Object,Infragistics.Controls.Charts.Marker},System.Func{System.Int32,System.Object},System.Action{System.Collections.Generic.IDictionary{System.Object,Infragistics.Controls.Charts.OwnedPoint}},System.Func{Infragistics.Portable.Point[]},System.Func{System.Collections.Generic.IList{System.Int32}},System.Func{Infragistics.Controls.Charts.CollisionAvoidanceType})">
            <summary>
            NumericMarkerManager constructor.
            </summary>
            <param name="provideMarkerStrategy">The function used to provide marker objects given a data item.</param>
            <param name="provideItemStrategy">The function used to provide a data item given its index.</param>
            <param name="removeUnusedMarkers">The action used to remove unused markers.</param>
            <param name="getItemLocationsStrategy">The function used to get all marker locations.</param>
            <param name="activeMarkerIndexesStrategy">The function used to return the indexes of all active markers.</param>
            <param name="getCollisionAvoidanceStrategy">The function used to get the method of collision avoidance to be used.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericMarkerManager.PopulateColumnValues">
            <summary>
            Boolean indicating whether or not the ColumnValues of OwnedPoints should be populated during marker assignment.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericMarkerManager.GetColumnValues">
            <summary>
            A reference to a function providing column values for a given index.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NumericMarkerManager.GetMarkerDesiredSize">
            <summary>
            A function which can be invoked to measure and return the desired size of a marker.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericMarkerManager.WinnowMarkers(System.Collections.Generic.IDictionary{System.Object,Infragistics.Controls.Charts.OwnedPoint},System.Int32,Infragistics.Portable.Rect,Infragistics.Portable.Rect,System.Double)">
            <summary>
            Filter out markers that should not be visible.
            </summary>
            <param name="markers">A dictionary containing the locations of all markers.</param>
            <param name="maximumMarkers">The maximum number of markers which can be displayed.</param>
            <param name="windowRect">A rectangle representing the scroll window.  Rectangle coordinates are based on the range of zero to one.</param>
            <param name="viewportRect">A rectangle representing the viewport, in device coordinates.</param>
            <param name="currentResolution">The current Series Resolution.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.NumericMarkerManager.Render(System.Collections.Generic.IDictionary{System.Object,Infragistics.Controls.Charts.OwnedPoint},System.Boolean)">
            <summary>
            Renders the given markers.
            </summary>
            <param name="markers">A dictionary containing the locations of all markers.</param>
            <param name="lightweight">Whether or not to enable a lower-fidelity rendering mode with better performance.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.MarkerManagerBase">
            <summary>
            Base class for managing markers for a data series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MarkerManagerBase.GetItemLocationsStrategy">
            <summary>
            The function used to get all marker locations.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MarkerManagerBase.ProvideMarkerStrategy">
            <summary>
            The function used to provide marker objects given a data item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MarkerManagerBase.RemoveUnusedMarkers">
            <summary>
            The action used to remove unused markers.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MarkerManagerBase.ProvideItemStrategy">
            <summary>
            The function used to provide a data item given its index.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MarkerManagerBase.ActiveMarkerIndexesStrategy">
            <summary>
            The function used to return the indexes of all active markers.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerManagerBase.#ctor(System.Func{System.Object,Infragistics.Controls.Charts.Marker},System.Func{System.Int32,System.Object},System.Action{System.Collections.Generic.IDictionary{System.Object,Infragistics.Controls.Charts.OwnedPoint}},System.Func{Infragistics.Portable.Point[]},System.Func{System.Collections.Generic.IList{System.Int32}})">
            <summary>
            MarkerManagerBase constructor.
            </summary>
            <param name="provideMarkerStrategy">The function used to provide marker objects given a data item.</param>
            <param name="provideItemStrategy">The function used to provide a data item given its index.</param>
            <param name="removeUnusedMarkers">The action used to remove unused markers.</param>
            <param name="getItemLocationsStrategy">The function used to get all marker locations.</param>
            <param name="activeMarkerIndexesStrategy">The function used to return the indexes of all active markers.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerManagerBase.WinnowMarkers(System.Collections.Generic.IDictionary{System.Object,Infragistics.Controls.Charts.OwnedPoint},System.Int32,Infragistics.Portable.Rect,Infragistics.Portable.Rect,System.Double)">
            <summary>
            Filter out markers that should not be visible.
            </summary>
            <param name="markers">A dictionary containing the locations of all markers.</param>
            <param name="maximumMarkers">The maximum number of markers which can be displayed.</param>
            <param name="windowRect">A rectangle representing the scroll window.  Rectangle coordinates are based on the range of zero to one.</param>
            <param name="viewportRect">A rectangle representing the viewport, in device coordinates.</param>
            <param name="currentResolution">The current Series Resolution.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerManagerBase.Render(System.Collections.Generic.IDictionary{System.Object,Infragistics.Controls.Charts.OwnedPoint},System.Boolean)">
            <summary>
            Renders the given markers.
            </summary>
            <param name="markers">A dictionary containing the locations of all markers.</param>
            <param name="lightweight">Whether or not to enable a lower-fidelity rendering mode with better performance.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerManagerBase.ActiveFirstKeys(System.Collections.Generic.Dictionary{System.Int32,Infragistics.Controls.Charts.MarkerManagerBucket},System.Collections.Generic.List{System.Int32})">
            <summary>
            Creates a list of indices sorted with priority items in front.
            </summary>
            <param name="buckets">The buckets in context.</param>
            <param name="keys">The keys of all buckets in context.</param>
            <returns>The given keys, sorted with priority items first.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerManagerBase.SelectMarkerItems(System.Int32,System.Collections.Generic.Dictionary{System.Int32,Infragistics.Controls.Charts.MarkerManagerBucket},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <summary>
            Selects a given number of marker buckets, and adds them to a given list of items.
            </summary>
            <param name="numToSelect">The count of buckets to select.</param>
            <param name="buckets">All buckets in context.</param>
            <param name="keys">All available keys.</param>
            <param name="markerItems">The list of items to add selected markers to.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerManagerBase.GetVisibleItems(Infragistics.Portable.Rect,Infragistics.Portable.Rect,System.Collections.Generic.IList{Infragistics.Portable.Point},System.Collections.Generic.List{System.Int32})">
            <summary>
            Gets only the visible items and adds them to the given list.
            </summary>
            <param name="windowRect">The WindowRect in context.</param>
            <param name="viewportRect">The Viewport in context.</param>
            <param name="itemLocations">The locations of all items in context.</param>
            <param name="visibleItems">The list to add all visible items to.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerManagerBase.GetBuckets(Infragistics.Portable.Rect,System.Collections.Generic.List{System.Int32},System.Double,System.Collections.Generic.IList{Infragistics.Portable.Point})">
            <summary>
            Groups visible items into relevant buckets, based on the viewport size and resolution.
            </summary>
            <param name="viewportRect">The Viewport in context.</param>
            <param name="visibleItems">A list of the indices of all visible markers.</param>
            <param name="resolution">The Resolution in context.</param>
            <param name="itemLocations">A list of the locations of all markers.</param>
            <returns>A Dictionary containing the buckets.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.MarkerManagerBucket">
            <summary>
            Class representing several markers being consolidated into one.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MarkerManagerBucket.Items">
            <summary>
            A list of the indices of items in this bucket.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MarkerManagerBucket.PriorityItems">
            <summary>
            A list of the indices of priority items in this bucket.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.MarkerManagerBucket.GetItem(System.Boolean@)">
            <summary>
            Gets the next marker index from the bucket.
            </summary>
            <param name="wasPriority">True if the index returned is for a priority marker.</param>
            <returns>The index of the next marker in the bucket.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.MarkerManagerBucket.IsEmpty">
            <summary>
            Boolean indicating whether or not the bucket contains no items.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DefaultFlattener">
            <summary>
            Represents the default flattener class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DefaultFlattener.Flatten(System.Collections.Generic.IList{Infragistics.Portable.Point},System.Double)">
            <summary>
            Flattens a set of points
            </summary>
            <param name="points">Collection of points to flatten</param>
            <param name="resolution">Resolution</param>
            <returns>Collection of flattened points</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.DefaultFlattener.FastFlatten(System.Double[],System.Double[],System.Int32,System.Double)">
            <summary>
            Flattens a set of points
            </summary>
            <param name="x">The array of x values to flatten.</param>
            <param name="y">The array of y values to flatten.</param>
            <param name="count">The number of values being provided.</param>
            <param name="resolution">The resolution to flatten the points to.</param>
            <returns>The list of flattened points.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.DefaultFlattener.GetFlattened(System.Collections.Generic.IList{Infragistics.Portable.Point},System.Double,System.Func{System.Int32,System.Double},System.Func{System.Int32,System.Double})">
            <summary>
            Gets the collection of flattened points.
            </summary>
            <param name="pointsList">List of points</param>
            <param name="resolution">Resolution</param>
            <param name="x">X-function</param>
            <param name="y">Y-function</param>
            <returns>Collection of flattened points</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.DefaultFlattener.GetFastFlattened(System.Double[],System.Double[],System.Int32,System.Double)">
            <summary>
            Get the collection of flattened points.
            </summary>
            <param name="x">The array of x values to flatten.</param>
            <param name="y">The array of y values to flatten.</param>
            <param name="count">The number of values being provided.</param>
            <param name="resolution">The resolution to flatten the points to.</param>
            <returns>The list of flattened points.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.SyncLink">
            <summary>
            SyncLink class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SyncLink.#ctor">
            <summary>
            Initializes a new instance of the SyncLink class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SyncLink.SyncChannel">
            <summary>
            The name of the associated synchronization channel.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SyncLink.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning chart. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.SyncLink.FastItemsSourceFactory">
            <summary>
            Gets or sets the method used to create a new FastItemsSource based on an IEnumerable.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SyncLink.PeekItemsSource(System.Collections.IEnumerable)">
            <summary>
            Returns the fast items source for the given items source.
            </summary>
            <param name="itemsSource">The items source to get the fast items source for.</param>
            <returns>The fast items source, if found.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.SyncLink.DefaultWindowRect">
            <summary>
            The default window rect is applied to chart areas as they're added to the chart.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SyncLink.SynchroniseRect(Infragistics.Controls.SeriesViewer,Infragistics.Controls.SeriesViewer,Infragistics.Portable.Rect)">
            <summary>
            Calculate a rectangle for a chart area by synchronizing according to the
            chart area's window settings.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SyncLink.Charts">
            <summary>
            Gets a collection of chart areas known to the current chart.
            </summary>
            <remarks>
            The chart areas property is maintained intenally and should not be modified by users.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.SyncLink.PreviewNotify(Infragistics.Controls.SeriesViewer,Infragistics.Portable.Rect)">
            <summary>
            Called internally by chart areas to request a window preview.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SyncLink.WindowNotify(Infragistics.Controls.SeriesViewer,Infragistics.Portable.Rect)">
            <summary>
            Called internally by chart areas to request a window.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.SyncLink.PropertyChanged">
            <summary>
            Notifies clients that a property value has changed.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.SyncLink.PropertyUpdated">
            <summary>
            Notifies clients that a property value has changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SyncLink.RaisePropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            Raises the property changed event.
            </summary>
            <param name="name">The name of the property that changed.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.SyncSettings">
            <summary>
            Represents the synchronization settings for a chart including which synchronization channel it is
            part of.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SyncSettings.SyncChannel">
            <summary>
            Gets or sets the channel with which to synchronize.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SyncSettings.SyncChannelProperty">
            <summary>
            Identifies the SyncChannel dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SyncSettings.SynchronizeVertically">
            <summary>
            Gets or sets the bool used to display the window preview shadow.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SyncSettings.SynchronizeVerticallyProperty">
            <summary>
            Identifies the SynchronizeVertically dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SyncSettings.SynchronizeHorizontally">
            <summary>
            Gets or sets the bool used to display the window preview shadow.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SyncSettings.SynchronizeHorizontallyProperty">
            <summary>
            Identifies the SynchronizeHorizontally dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SyncSettings.RaisePropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">The name of the property changed.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="E:Infragistics.Controls.Charts.SyncSettings.PropertyChanged">
            <summary>
            Raised when a value of the property changes.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.SyncSettings.PropertyUpdated">
            <summary>
            Raised when the value of a property is updated.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.SyncSettingsConverter">
            <summary>
            Conveniently converts a string value into some default SyncSettings.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SyncLinkManager.GetLink(System.String)">
            <summary>
            Gets the synchonization link that matches the synchchannel name provided.
            </summary>
            <param name="name">The synchchannel name to search for.</param>
            <returns>The SyncLink found.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SyncLinkManager.ReleaseLink(Infragistics.Controls.Charts.SyncLink)">
            <summary>
            Releases a reference to a SyncLink.
            </summary>
            <param name="link">The SyncLink to release.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.SyncManager">
            <summary>
            SyncManager helps to manage SyncSettings of the SeriesViewer control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SyncManager.SetSyncSettings(Infragistics.Portable.Components.DependencyObject,Infragistics.Controls.Charts.SyncSettings)">
            <summary>
            Sets the SyncSettings for a target chart.
            </summary>
            <param name="target">The target chart to set the sync settings for.</param>
            <param name="syncSettings">The SyncSettings to set for the chart.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SyncManager.GetSyncSettings(Infragistics.Portable.Components.DependencyObject)">
            <summary>
            Gets the SyncSettings for a target chart.
            </summary>
            <param name="target">The chart to get the SyncSettings for.</param>
            <returns>The SyncSettings for the chart.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.AxisLabelsLocation">
            <summary>
            Describes available locations of the axis labels in the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisLabelsLocation.OutsideTop">
            <summary>
            Places the axis labels at the top, outside of the plotting area.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisLabelsLocation.OutsideBottom">
            <summary>
            Places the axis labels at the bottom, outside of the plotting area
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisLabelsLocation.OutsideLeft">
            <summary>
            Places the axis labels to the left, outside of the plotting area.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisLabelsLocation.OutsideRight">
            <summary>
            Places the axis labels to the right, outside of the plotting area.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisLabelsLocation.InsideTop">
            <summary>
            Places the axis labels inside the plotting area above the axis line.
            </summary>
            <remarks>
            CrossingAxis should be set for this setting to take effect.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisLabelsLocation.InsideBottom">
            <summary>
            Places the axis labels inside the plotting area below the axis line.
            </summary>
            <remarks>
            CrossingAxis should be set for this setting to take effect.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisLabelsLocation.InsideLeft">
            <summary>
            Places the axis labels inside the plotting area and to the left of the axis line.
            </summary>
            <remarks>
            CrossingAxis should be set for this setting to take effect.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisLabelsLocation.InsideRight">
            <summary>
            Places the axis labels inside the plotting area and to the right of the axis line.
            </summary>
            <remarks>
            CrossingAxis should be set for this setting to take effect.
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Charts.AxisRange">
            <summary>
            Represents a chart axis or break range.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisRange.#ctor(System.Double,System.Double)">
            <summary>
            Creates and initializes an immutable AxisRange object.
            </summary>
            <param name="minimum">The range minimum value.</param>
            <param name="maximum">The range maximum value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisRange.Minimum">
            <summary>
            Gets the range minimum value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisRange.Maximum">
            <summary>
            Gets the range maximum value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisRange.Equals(Infragistics.Controls.Charts.AxisRange)">
            <summary>
            Returns true if this AxisRange is equal to the other AxisRange.
            </summary>
            <param name="other">The AxisRange to check against.</param>
            <returns>True if the two AxisRange objects are equal.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisRange.Equals(System.Object)">
            <summary>
            Returns true if this AxisRange is equal to the other AxisRange.
            </summary>
            <param name="other">The AxisRange to check against.</param>
            <returns>True if the two AxisRange objects are equal.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisRange.GetHashCode">
            <summary>
            Computes a hash code value.
            </summary>
            <returns>A hash code value.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.AxisOrientation">
            <summary>
            Describes available orientations for an axis.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisOrientation.Horizontal">
            <summary>
            Specifies a horizontal axis.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisOrientation.Vertical">
            <summary>
            Specifies a vertical axis.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisOrientation.Angular">
            <summary>
            Specifies an angular axis used by the polar series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.AxisOrientation.Radial">
            <summary>
            Specifies a radial axis used by radial series.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.BrushSelectionMode">
            <summary>
            Describes available behaviors of selecting a brush from a brush collection.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.BrushSelectionMode.Select">
            <summary>
            alternates between brushes sequentially.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.BrushSelectionMode.Interpolate">
            <summary>
            Uses index-based interpolation.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.GridMode">
            <summary>
            Describes available modes of displaying elements in the chart grid, such as gridlines.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.GridMode.None">
            <summary>
            No chart grid.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.GridMode.BeforeSeries">
            <summary>
            Chart grid should be rendered before or in front of the data series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.GridMode.BehindSeries">
            <summary>
            Chart grid should be rendered behind or in back of the data series.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.SplineType">
            <summary>
            Describes available types of Spline calculations.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SplineType.Natural">
            <summary>
            Calculates the spline using a natural spline calculation formula.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SplineType.Clamped">
            <summary>
            Calculated the spline using a clamped spline calculation formula.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.TimeAxisDisplayType">
            <summary>
            Describes available behaviors for displaying of gridlines, tickmarks, and labels on a time axis.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TimeAxisDisplayType.Continuous">
            <summary>
            Points occur at even intervals, even where data is not present at a given point.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TimeAxisDisplayType.Discrete">
            <summary>
            Points occur when data is present, possibly at uneven intervals.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.WindowResponse">
            <summary>
            Describes available types of UI response to user panning and zooming operations.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.WindowResponse.Deferred">
            <summary>
            Defer the view update until after the user action is complete.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.WindowResponse.Immediate">
            <summary>
            Update the view immediately while the user action is happening.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ErrorBarSettingsBase">
            <summary>
            Represents the base class for error bar settings
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ErrorBarSettingsBase.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ErrorBarSettingsBase.DefaultErrorBarStyleProperty">
            <summary>
            identifies the DefaultErrorBarStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ErrorBarSettingsBase.DefaultErrorBarStyle">
            <summary>
            Gets or sets the DefaultErrorBarStyle property.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.ErrorBarSettingsBase.PropertyChanged">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.ErrorBarSettingsBase.PropertyUpdated">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ErrorBarSettingsBase.RaisePropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            Raises the property changed and updated events.
            </summary>
            <param name="name">The name of the property being changed.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.CategoryErrorBarSettings">
            <summary>
            Represents the class for the category error bar settings
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryErrorBarSettings.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryErrorBarSettings.EnableErrorBars">
            <summary>
            Determines which error bars are enabled - none, the plus ones, the minus ones or both.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryErrorBarSettings.EnableErrorBarsProperty">
            <summary>
            Identifies the EnableErrorBars dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryErrorBarSettings.ErrorBarCapLength">
            <summary>
            Determines the length, in pixels, of each error bar's cap.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryErrorBarSettings.ErrorBarCapLengthProperty">
            <summary>
            Identifies the ErrorBarCapLength dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryErrorBarSettings.Calculator">
            <summary>
            Specifies the calculator for the error bars
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryErrorBarSettings.CalculatorProperty">
            <summary>
            Identifies the Calculator dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryErrorBarSettings.Stroke">
            <summary>
            Determines the stroke of the error bars
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryErrorBarSettings.StrokeProperty">
            <summary>
            Identifies the Stroke dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryErrorBarSettings.StrokeThickness">
            <summary>
            Determines the stroke thickness of the error bars
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryErrorBarSettings.StrokeThicknessProperty">
            <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryErrorBarSettings.ErrorBarStyleProperty">
            <summary>
            Identifies the ErrorBarStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryErrorBarSettings.ErrorBarStyle">
            <summary>
            Gets or sets the ErrorBarStyle property.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ErrorBarsHelper">
            <summary>
            Implements some common methods for all error bars
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.EnableErrorBars">
            <summary>
            Describes available types for enabling error bars  
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.EnableErrorBars.None">
            <summary>
            No error bars are enabled
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.EnableErrorBars.Both">
            <summary>
            Both error bars are enabled
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.EnableErrorBars.Positive">
            <summary>
            Positive error bars are enabled
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.EnableErrorBars.Negative">
            <summary>
            Negative error bars are enabled
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ScatterErrorBarSettings">
            <summary>
            Represents the class for the scatter error bar settings
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterErrorBarSettings.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterErrorBarSettings.EnableErrorBarsHorizontal">
            <summary>
            Determines which horizontal error bars are enabled - none, the plus ones, the minus ones or both.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterErrorBarSettings.EnableErrorBarsHorizontalProperty">
            <summary>
            Identifies the ErrorErrorBarsHorizontal dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterErrorBarSettings.HorizontalCalculatorReference">
            <summary>
            Specifies the reference value for any dependent horizontal calculators.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterErrorBarSettings.HorizontalCalculatorReferenceProperty">
            <summary>
            Identifies the HorizontalCalculatorReference dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterErrorBarSettings.HorizontalCalculator">
            <summary>
            Specifies the calculator for the horizontal error bars.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterErrorBarSettings.HorizontalCalculatorProperty">
            <summary>
            Identifies the HorizontalCalculator dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterErrorBarSettings.HorizontalErrorBarCapLength">
            <summary>
            Determines the length, in pixels, of each horizontal error bar's cap.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterErrorBarSettings.HorizontalErrorBarCapLengthPropertyName">
            <summary>
            String used to declare HorizontalErrorBarCepLength dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterErrorBarSettings.HorizontalErrorBarCapLengthProperty">
            <summary>
            Identifies the HorizontalErrorBarCapLength dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterErrorBarSettings.HorizontalStroke">
            <summary>
            Determines the stroke of the horizontal error bars.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterErrorBarSettings.HorizontalStrokeProperty">
            <summary>
            Identifies the HorizontalStroke dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterErrorBarSettings.HorizontalStrokeThickness">
            <summary>
            Determines the stroke thickness of the horizontal error bars.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterErrorBarSettings.HorizontalStrokeThicknessPropertyName">
            <summary>
            Identifies the HorizontalStrokeThickness dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterErrorBarSettings.HorizontalStrokeThicknessProperty">
            <summary>
            Identifies the HorizontalStrokeThickness dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterErrorBarSettings.HorizontalErrorBarStyleProperty">
            <summary>
            Identifies the HorizontalErrorBarStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterErrorBarSettings.HorizontalErrorBarStyle">
            <summary>
            Gets or sets the HorizontalErrorBarStyle property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterErrorBarSettings.EnableErrorBarsVertical">
            <summary>
            Determines which vertical error bars are enabled - none, the plus ones, the minus ones or both.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterErrorBarSettings.EnableErrorBarsVerticalProperty">
            <summary>
            Identifies the EnableErrorBarsVertical dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterErrorBarSettings.VerticalCalculatorReference">
            <summary>
            Specifies the reference value for any dependent vertical calculators.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterErrorBarSettings.VerticalCalculatorReferenceProperty">
            <summary>
            Identifies the VerticalCalculatorReference dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterErrorBarSettings.VerticalCalculator">
            <summary>
            Specifies the calculator for the vertical error bars.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterErrorBarSettings.VerticalCalculatorProperty">
            <summary>
            Identifies the VerticalCalculator dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterErrorBarSettings.VerticalErrorBarCapLength">
            <summary>
            Determines the length, in pixels, of each vertical error bar's cap.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterErrorBarSettings.VerticalErrorBarCapLengthPropertyName">
            <summary>
            String used to identify the VerticalErrorBarCapLength property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterErrorBarSettings.VerticalErrorBarCapLengthProperty">
            <summary>
            Identifies the VerticalErrorBarCapLength dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterErrorBarSettings.VerticalStroke">
            <summary>
            Determines the stroke of the vertical error bars.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterErrorBarSettings.VerticalStrokeProperty">
            <summary>
            Identifies the VerticalStroke dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterErrorBarSettings.VerticalStrokeThickness">
            <summary>
            Determines the stroke thickness of the vertical error bars.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterErrorBarSettings.VerticalStrokeThicknessProperty">
            <summary>
            Identifies the VerticalStrokeThickness dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ScatterErrorBarSettings.VerticalErrorBarStyleProperty">
            <summary>
            Identifies the VerticalErrorBarStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterErrorBarSettings.VerticalErrorBarStyle">
            <summary>
            Gets or sets the VerticalErrorBarStyle property.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.AxisRangeChangedEventHandler">
            <summary>
            Represents the method that will handle Axis RangeChanged events.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearNumericSnapper.Interval">
            <summary>
            Gets the major line interval.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearNumericSnapper.Precision">
            <summary>
            Gets the number of decimal places required to label major lines.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.LinearNumericSnapper.MinorCount">
            <summary>
            Gets the number of minor lines per major line.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ChartCollection">
            <summary>
            Represents an observable collection of Chart objects.
            </summary>
            <remarks>
            It is not possible to clear the contents of a ChartCollection collection; the Chart
            objects must be removed one at a time.
            <para>
            Changing the name of a Chart will generate a collection changed (Replace) event.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.ChartCollection.#ctor">
            <summary>
            Initializes a default, empty data ChartCollection.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.ChartCollection.CollectionResetting">
            <summary>
            Occurs just before the current chart collection contents are reset
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ChartCollection.ClearItems">
            <summary>
            Clears the contained items of the collection, but provides a preview of the occurrance 
            in the form of the CollectionResetting event.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.IndicatorDisplayType">
            <summary>
            Describes available display types for financial indicators.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.IndicatorDisplayType.Line">
            <summary>
            Display indicator as a line chart.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.IndicatorDisplayType.Area">
            <summary>
            Display indicator as an area chart.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.IndicatorDisplayType.Column">
            <summary>
            Display indicator as a column chart.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.MarkerType">
            <summary>
            Describes available types of marker than can be displayed by default by series with markers.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MarkerType.Unset">
            <summary>
            Marker hasn't been set.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MarkerType.None">
            <summary>
            No markerItems.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MarkerType.Automatic">
            <summary>
            Automatic marker shape.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MarkerType.Circle">
            <summary>
            Circle marker shape.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MarkerType.Triangle">
            <summary>
            Flat-top triangle marker shape.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MarkerType.Pyramid">
            <summary>
            Flat-base triangle marker shape.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MarkerType.Square">
            <summary>
            Square marker shape.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MarkerType.Diamond">
            <summary>
            Diamond marker shape.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MarkerType.Pentagon">
            <summary>
            Pentagon marker shape. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MarkerType.Hexagon">
            <summary>
            Hexagon marker shape. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MarkerType.Tetragram">
            <summary>
            Four-pointed star marker shape.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MarkerType.Pentagram">
            <summary>
            Five-pointed star marker shape.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MarkerType.Hexagram">
            <summary>
            Six-pointed star marker shape.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MarkerType.Hidden">
            <summary>
            Renders transparent circular markers.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.PriceDisplayType">
            <summary>
            Describes available display types of financial price series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PriceDisplayType.Candlestick">
            <summary>
            Displays prices as a Japanese Candlestick.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.PriceDisplayType.OHLC">
            <summary>
            Displays prices as an OHLC bar. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DataChartCursorEventHandler">
            <summary>
            Represents the method that will handle XamDataChart mouse related events.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.OwnedPoint">
            <summary>
            Class representing a Point and its owning item and data values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.OwnedPoint.#ctor">
            <summary>
            Create an instance of the owned point
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.OwnedPoint.Point">
            <summary>
            The Point.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.OwnedPoint.OwnerItem">
            <summary>
            The owning data item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.OwnedPoint.ColumnValues">
            <summary>
            The data values, expressed as a point.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ScatterFrameBase`1">
            <summary>
            Represents the base class for all XamDataChart scatter series
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.TileZoomManager">
            <summary>
            Class for the management of zoom tiles.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomManager.Viewer">
            <summary>
            The SeriesViewer in context.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomManager.Viewport">
            <summary>
            The rectangular bounds of the view.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomManager.Window">
            <summary>
            The current zoom window.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomManager.TileViewport">
            <summary>
            The tile viewport.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomManager.Running">
            <summary>
            Boolean indicating if an operation is in progress.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomManager.MinZoomLevel">
            <summary>
            The minimum zoom level.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomManager.ExistingTiles">
            <summary>
            The list of existing tiles.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomManager.PersistentTiles">
            <summary>
            The list of persistent tiles.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomManager.NewTiles">
            <summary>
            The list of new tiles.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TileZoomManager.TileSize">
            <summary>
            The size of each tile.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TileZoomManager.#ctor(Infragistics.Controls.SeriesViewer,System.Boolean,System.Int32)">
            <summary>
            Creates and returns a new instance of a TileZoomManager.
            </summary>
            <param name="viewer">The SeriesViewer in context.</param>
            <param name="roundDown">Boolean indicating if rounding down should occur in this TileZoomManager's operations.</param>
            <param name="cacheSize">Size of this TileZoomManager's cache.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomManager.ActualViewport">
            <summary>
            The actual bounding rectangle of the view.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomManager.VisibleTiles">
            <summary>
            The list of visible tiles.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomManager.CurrentTiles">
            <summary>
            The list of tiles in the current view.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomManager.TileCache">
            <summary>
            The tile cache.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TileZoomManager.ClearTileCache">
            <summary>
            Clears the tile cache.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TileZoomManager.Start">
            <summary>
            Starts the operation.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TileZoomManager.End">
            <summary>
            Ends the operation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomManager.RoundDown">
            <summary>
            Boolean indicating if rounding down should occur in this TileZoomManager.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.TileZoomInfo">
            <summary>
            Class containing contextual information related to a tile zoom operation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomInfo.ActualRect">
            <summary>
            The actual bounding rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomInfo.ZoomRect">
            <summary>
            The zoom rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomInfo.CurrentZoomLevel">
            <summary>
            The current zoom level.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomInfo.ZoomWidth">
            <summary>
            The zoom width.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomInfo.ZoomHeight">
            <summary>
            The zoom height.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomInfo.ActualWidth">
            <summary>
            The actual width.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomInfo.ActualHeight">
            <summary>
            The actual height.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.TileZoomTileInfo">
            <summary>
            Class containing contextual information about a tile in a zoom operation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomTileInfo.ZoomLevel">
            <summary>
            The zoom level.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomTileInfo.XPosition">
            <summary>
            The horizontal position.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomTileInfo.YPosition">
            <summary>
            The vertical position.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TileZoomTileInfo.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string containing the zoom level, x-position, and y-position.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.TileZoomTileCache">
            <summary>
            Cache for tiles in a TileZoomManager.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TileZoomTileCache.#ctor(System.Int32,Infragistics.Controls.Charts.TileZoomManager)">
            <summary>
            Creates and returns a new instance of a TileZoomTileCache.
            </summary>
            <param name="maxTiles">The maximum number of tiles to cache.</param>
            <param name="owner">The owning TileZoomManager.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.TileZoomTileCache.Clear">
            <summary>
            Clears the cache.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TileZoomTileCache.Touch(Infragistics.Controls.Charts.TileZoomTile)">
            <summary>
            Marks a tile as recently used.
            </summary>
            <param name="tileZoomTile">The tile to mark as recently used.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.TileZoomTileCache.AddTile(Infragistics.Controls.Charts.TileZoomTile)">
            <summary>
            Adds a tile to the cache.
            </summary>
            <param name="tileZoomTile">The tile to add to the cache.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.TileZoomTileCache.GetTile(Infragistics.Controls.Charts.TileZoomTileInfo)">
            <summary>
            Gets a tile from the cache based on the given information.
            </summary>
            <param name="info">Information about the tile to retrieve from the cache.</param>
            <returns>The tile from the cache matching the given information.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.TileZoomTile">
            <summary>
            A tile in a TileZoomManager.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomTile.Info">
            <summary>
            Contextual information about this tile.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomTile.OwningCache">
            <summary>
            The cache containing this tile.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomTile.Node">
            <summary>
            The node representing this tile in the linked list.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TileZoomTile.Touch">
            <summary>
            Marks this tile as recently used.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomTile.Content">
            <summary>
            Tile content.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomTile.XPosition">
            <summary>
            Horizontal position of the tile.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomTile.Width">
            <summary>
            Width of the tile.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomTile.YPosition">
            <summary>
            Vertical position of the tile.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomTile.Height">
            <summary>
            Height of the tile.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TileZoomTile.ID">
            <summary>
            Unique identifier for the tile.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Util.SafeReadOnlyDoubleCollection">
            <summary>
            Creates a wrapper around a collection that asserts that access to the items is readonly
            and that Double.NaN and Double.(Positive/Negative)Infinity values are coerced to safe
            values for calculation and rendering.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SafeReadOnlyDoubleCollection.#ctor(System.Collections.Generic.IList{System.Double})">
            <summary>
            Constructs a new SafeReadOnlyDoubleCollection
            </summary>
            <param name="target">The target collection to wrap.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SafeReadOnlyDoubleCollection.#ctor(System.Collections.Generic.IList{System.Double},System.Double)">
            <summary>
            Constructs a new SafeReadOnlyDoubleCollection
            </summary>
            <param name="target">The target collection to wrap.</param>
            <param name="safeValue">The safe value to fall back on.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SafeReadOnlyDoubleCollection.IndexOf(System.Double)">
            <summary>
            Returns the index of the given item.
            </summary>
            <param name="item">The item to search for.</param>
            <returns>The index of the item.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SafeReadOnlyDoubleCollection.Insert(System.Int32,System.Double)">
            <summary>
            Inserts the given item as the specified index.
            </summary>
            <param name="index">The index at which to insert the item.</param>
            <param name="item">The item to insert.</param>
            <remarks>
            Will fail, as this collection is read-only. 
            Implemented only to satisfy the IList interface.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SafeReadOnlyDoubleCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param name="index">The index from which to remove the item.</param>
            <remarks>
            Will fail, as this collection is read-only. 
            Implemented only to satisfy the IList interface.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.Util.SafeReadOnlyDoubleCollection.Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
            <param name="index">The index at which to get or set the item.</param>
            <returns>The item requested.</returns>
            <remarks>
            The set will fail, as this collection is read-only. 
            Implemented only to satisfy the IList interface.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SafeReadOnlyDoubleCollection.Add(System.Double)">
            <summary>
            Adds a new item to the collection.
            </summary>
            <param name="item">The item to add.</param>
            <remarks>
            Will fail, as this collection is read-only. 
            Implemented only to satisfy the ICollection interface.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SafeReadOnlyDoubleCollection.Clear">
            <summary>
            Clears the items from the collection.
            </summary>
            <remarks>
            Will fail, as this collection is read-only. 
            Implemented only to satisfy the ICollection interface.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SafeReadOnlyDoubleCollection.Contains(System.Double)">
            <summary>
            Determines whether the collection contains the provided item.
            </summary>
            <param name="item">The item to check for.</param>
            <returns>True if the item is found in the collection.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SafeReadOnlyDoubleCollection.CopyTo(System.Double[],System.Int32)">
            <summary>
            Copies the collection to the provided array, starting at the specified index.
            </summary>
            <param name="array">The array to copy to.</param>
            <param name="arrayIndex">The starting index.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.Util.SafeReadOnlyDoubleCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Util.SafeReadOnlyDoubleCollection.IsReadOnly">
            <summary>
            Gets whether the collection is readonly.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SafeReadOnlyDoubleCollection.Remove(System.Double)">
            <summary>
            Removes the provided item from the collection.
            </summary>
            <param name="item">The item to remove from the collection.</param>
            <returns>True if the item was removed from the collection.</returns>
            <remarks>
            Will fail, as this collection is read-only. 
            Implemented only to satisfy the ICollection interface.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SafeReadOnlyDoubleCollection.GetEnumerator">
            <summary>
            Gets an enumerator for the collection.
            </summary>
            <returns>The enumerator instance.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SafeReadOnlyDoubleCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator for the collection.
            </summary>
            <returns>The enumerator instance.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.Util.SafeSortedReadOnlyDoubleCollection">
            <summary>
            Creates a wrapper around a collection that asserts that access to the items is readonly
            and that Double.NaN and Double.(Positive/Negative)Infinity values are coerced to safe
            values for calculation and rendering. In addition, it will emulate that the items are sorted
            based on a sorted index map provided upon creation.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SafeSortedReadOnlyDoubleCollection.#ctor(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Int32})">
            <summary>
            Constructs a new SafeSortedReadOnlyDoubleCollection instance.
            </summary>
            <param name="target">The target collection to wrap.</param>
            <param name="sortedIndices">The unsorted indexes of the target collection if it were sorted.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SafeSortedReadOnlyDoubleCollection.#ctor(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Int32},System.Double)">
            <summary>
            Constructs a new SafeSortedReadOnlyDoubleCollection instance.
            </summary>
            <param name="target">The target collection to wrap.</param>
            <param name="sortedIndices">The unsorted indexes of the target collection if it were sorted.</param>
            <param name="safeValue">The value to use when a safe value must be fallen back on.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SafeSortedReadOnlyDoubleCollection.IndexOf(System.Double)">
            <summary>
            Returns the index of the given item.
            </summary>
            <param name="item">The item to search for.</param>
            <returns>The index of the item.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SafeSortedReadOnlyDoubleCollection.Insert(System.Int32,System.Double)">
            <summary>
            Inserts the given item as the specified index.
            </summary>
            <param name="index">The index at which to insert the item.</param>
            <param name="item">The item to insert.</param>
            <remarks>
            Will fail, as this collection is read-only. 
            Implemented only to satisfy the IList interface.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SafeSortedReadOnlyDoubleCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param name="index">The index from which to remove the item.</param>
            <remarks>
            Will fail, as this collection is read-only. 
            Implemented only to satisfy the IList interface.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.Util.SafeSortedReadOnlyDoubleCollection.Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
            <param name="index">The index at which to get or set the item.</param>
            <returns>The item requested.</returns>
            <remarks>
            The set will fail, as this collection is read-only. 
            Implemented only to satisfy the IList interface.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SafeSortedReadOnlyDoubleCollection.Add(System.Double)">
            <summary>
            Adds a new item to the collection.
            </summary>
            <param name="item">The item to add.</param>
            <remarks>
            Will fail, as this collection is read-only. 
            Implemented only to satisfy the ICollection interface.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SafeSortedReadOnlyDoubleCollection.Clear">
            <summary>
            Clears the items from the collection.
            </summary>
            <remarks>
            Will fail, as this collection is read-only. 
            Implemented only to satisfy the ICollection interface.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SafeSortedReadOnlyDoubleCollection.Contains(System.Double)">
            <summary>
            Determines whether the collection contains the provided item.
            </summary>
            <param name="item">The item to check for.</param>
            <returns>True if the item is found in the collection.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SafeSortedReadOnlyDoubleCollection.CopyTo(System.Double[],System.Int32)">
            <summary>
            Copies the collection to the provided array, starting at the specified index.
            </summary>
            <param name="array">The array to copy to.</param>
            <param name="arrayIndex">The starting index.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.Util.SafeSortedReadOnlyDoubleCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Util.SafeSortedReadOnlyDoubleCollection.IsReadOnly">
            <summary>
            Gets whether the collection is readonly.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SafeSortedReadOnlyDoubleCollection.Remove(System.Double)">
            <summary>
            Removes the provided item from the collection.
            </summary>
            <param name="item">The item to remove from the collection.</param>
            <returns>True if the item was removed from the collection.</returns>
            <remarks>
            Will fail, as this collection is read-only. 
            Implemented only to satisfy the ICollection interface.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SafeSortedReadOnlyDoubleCollection.GetEnumerator">
            <summary>
            Gets an enumerator for the collection.
            </summary>
            <returns>The enumerator instance.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SafeSortedReadOnlyDoubleCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator for the collection.
            </summary>
            <returns>The enumerator instance.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.Util.SortedListView`1">
            <summary>
            Used to get a sorted view of an unsorted list, based on the sorted indices for the list.
            </summary>
            <typeparam name="T">The item type</typeparam>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SortedListView`1.#ctor(System.Collections.Generic.IList{`0},System.Collections.Generic.IList{System.Int32})">
            <summary>
            Constructs an instance of a SortedListView
            </summary>
            <param name="source">The unsorted collection.</param>
            <param name="sortedIndices">The indexes in order if the list were sorted.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SortedListView`1.Add(`0)">
            <summary>
            Adds and item to the collection.
            </summary>
            <param name="value">The item to add.</param>
            <remarks>Not supported because view is read only.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SortedListView`1.Clear">
            <summary>
            Clears the collection.
            </summary>
            <remarks>Not supported because view is read only.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SortedListView`1.Contains(`0)">
            <summary>
            Determines if the collection contains the provided item.
            </summary>
            <param name="value">The item to check for.</param>
            <returns>true, if the list contains the item.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SortedListView`1.IndexOf(`0)">
            <summary>
            Returns the index of the provided value in the collection.
            </summary>
            <param name="value">The value to find.</param>
            <returns>The index of the value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SortedListView`1.Insert(System.Int32,`0)">
            <summary>
            Inserts the item at the specified index.
            </summary>
            <param name="index">The index to insert the item at.</param>
            <param name="value">The item to insert.</param>
            <remarks>Not supported because the view is read only.</remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.Util.SortedListView`1.IsFixedSize">
            <summary>
            Returns if the view has a fixed size. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Util.SortedListView`1.IsReadOnly">
            <summary>
            Returns if the view is read only.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SortedListView`1.Remove(`0)">
            <summary>
            Removes the specified value from the collection.
            </summary>
            <param name="value">The value to remove</param>
            <remarks>Not supported because the view is read only.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SortedListView`1.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param name="index">The index of the item to remove.</param>
            <remarks>Not supported because the view is read only.</remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.Util.SortedListView`1.Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
            <param name="index">The index to get or set from.</param>
            <returns>The item requested</returns>
            <remarks>Only the getter is supported as the view is read only.</remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.Util.SortedListView`1.Count">
            <summary>
            Returns the count of the items in the view.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Util.SortedListView`1.IsSynchronized">
            <summary>
            Returns whether the collection is synchronized.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Util.SortedListView`1.SyncRoot">
            <summary>
            Returns the synchronization root to use to synchronize the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SortedListView`1.GetEnumerator">
            <summary>
            Gets the enumerator for iterating through the collection.
            </summary>
            <returns>The enumerator requested.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SortedListView`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>
            Gets the enumerator for iterating through the collection.
            </summary>
            <returns>The enumerator requested.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.SortedListView`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the collection to an array.
            </summary>
            <param name="array">The array to copy to.</param>
            <param name="arrayIndex">The starting index in the array.</param>
            <remarks>Not supported.</remarks>
        </member>
        <member name="T:Infragistics.Controls.Charts.Util.BezierPoint">
            <summary>
            Represents a point on a segmented bezier curve.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Util.BezierPoint.Point">
            <summary>
            The point on the curve.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Util.BezierPoint.TValue">
            <summary>
            The T value of the point.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Util.BezierPoint.Index">
            <summary>
            The index of the point.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Util.DoubleColumn">
            <summary>
            A column of doubles.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Util.DoubleColumn.Values">
            <summary>
            Sets or gets the values of the double column
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.DoubleColumn.SetValues(System.Object)">
            <summary>
            Sets the values of the double column.
            </summary>
            <param name="values">The values to set.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.Util.StringColumn">
            <summary>
            A column of strings.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Util.StringColumn.Values">
            <summary>
            Gets or sets the values of the string column.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.StringColumn.SetValues(System.Object)">
            <summary>
            Sets the values of the string column.
            </summary>
            <param name="values">The values to set.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.Util.ObjectColumn">
            <summary>
            A column of objects.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Util.ObjectColumn.Values">
            <summary>
            The values of the object column.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.ObjectColumn.SetValues(System.Object)">
            <summary>
            Sets the values of an object column.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Util.IntColumn">
            <summary>
            A column of integers.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.IntColumn.#ctor">
            <summary>
            Instantiates an integers column.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.IntColumn.Populate(System.Int32)">
            <summary>
            Populates the values in the column.
            </summary>
            <param name="count">The number of values to populate.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.Util.IntColumn.Values">
            <summary>
            The values of the column.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.IntColumn.Sort(Infragistics.Controls.Charts.Util.IntColumnComparison)">
            <summary>
            Sorts the column by the given comparison method.
            </summary>
            <param name="comparison">The comparison to use in the sort.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Util.IntColumn.GetEnumerator">
            <summary>
            Gets an enumerator for the values.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Util.IntColumnComparison">
            <summary>
            Compares integers in the column.
            </summary>
            <param name="i1">The first int.</param>
            <param name="i2">The second int.</param>
            <returns>The comparison result.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.Util.ItemsSourceAction">
            <summary>
            Describes available actions that can cause an ItemsSource event. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Util.ItemsSourceAction.Remove">
            <summary>
            One or more rows were removed from the data source.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Util.ItemsSourceAction.Insert">
            <summary>
            One or more rows were added to the data source.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Util.ItemsSourceAction.Replace">
            <summary>
            One or more rows were replaced in the data source.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Util.ItemsSourceAction.Change">
            <summary>
            An item property value changed in the data source.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Util.ItemsSourceAction.Reset">
            <summary>
            The entire data source contents were reset.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DataChartMouseButtonEventHandler">
            <summary>
            Represents the method that will handle XamDataChart mouse button related events.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.DataChartMouseEventHandler">
            <summary>
            Represents the method that will handle XamDataChart mouse related events.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ArcItem">
            <summary>
            Represents data for <see cref="T:Infragistics.Controls.Charts.Arc"/> element in the chart
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ArcItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.ArcItem"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ArcItem.Ring">
            <summary>
            Gets or sets the ring that contains this ArcItem.
            </summary>
            <value>The ring.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.ArcItem.Parent">
            <summary>
            Gets the parent ArcItem.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.ArcItem.ValueMemberPath">
            <summary>
            Gets the property name that contains the values.
            </summary>
            <value>The value member path.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.ArcItem.Index">
            <summary>
            Gets or sets the index of <see cref="T:Infragistics.Controls.Charts.ArcItem"/> in the Ring.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.ArcItem.LevelDepth">
            <summary>
            Gets or sets the level depth.
            </summary>
            <value>The level depth.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.ArcItem.StartAngle">
            <summary>
            Gets or sets the start angle of the <see cref="T:Infragistics.Controls.Charts.Arc"/>.
            </summary>
            <value>The start angle.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.ArcItem.EndAngle">
            <summary>
            Gets or sets the end angle of the <see cref="T:Infragistics.Controls.Charts.Arc"/>.
            </summary>
            <value>The end angle.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.ArcItem.OthersCategoryThreshold">
            <summary>
            Gets or sets the threshold value that determines if slices are grouped into the Others slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ArcItem.OthersCategoryType">
            <summary>
            Gets or sets whether to use numeric or percent-based threshold value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ArcItem.Brushes">
            <summary>
            Gets the brushes of the <see cref="T:Infragistics.Controls.Charts.Arc"/>.
            </summary>
            <value>The brushes.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.ArcItem.SliceItems">
            <summary>
            Gets the <see cref="T:Infragistics.Controls.Charts.SliceItem"/> in this <see cref="T:Infragistics.Controls.Charts.Arc"/>.
            </summary>
            <value>The slice items.</value>
        </member>
        <member name="M:Infragistics.Controls.Charts.ArcItem.PrepareData(System.Double,System.Double)">
            <summary>
            Extracts data from the data source.
            </summary>
            <param name="startAngleParam">The start angle.</param>
            <param name="endAngleParam">The end angle.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.Node">
            
            The Node class holds the object and a pointer to the next
            Node class.
            
        </member>
        <member name="T:Infragistics.Controls.Charts.IgQueue`1">
            
            implementation for a First in First out Queue
            
        </member>
        <member name="P:Infragistics.Controls.Charts.IgQueue`1.empty">
            
            Test to see if the Queue might be empty.
            
        </member>
        <member name="P:Infragistics.Controls.Charts.IgQueue`1.Count">
            
            Number of Items in the Queue.
            
        </member>
        <member name="M:Infragistics.Controls.Charts.IgQueue`1.Enqueue(`0)">
            
            This function will append to the end of the Queue or 
            create The first Node instance.
            
             
        </member>
        <member name="M:Infragistics.Controls.Charts.IgQueue`1.Dequeue(`0@)">
            
            This function will serve from the front of the Queue.  Notice
            no deallocation for the Node Class, This is now handled by the 
            Garbage Collector.
            
        </member>
        <member name="T:Infragistics.Controls.Charts.HoleDimensionsChangedEventHandler">
            <summary>
            Event handler for HoleDimensionsChanged event.
            </summary>
            <param name="sender">Chart control</param>
            <param name="e">Doughnut hole dimensions parameters</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.Ring">
            <summary>
            Represents data for <see cref="P:Infragistics.Controls.Charts.Ring.RingControl"/> element.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Ring.#ctor">
            <summary>
            Creates a new instance of Ring.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Ring.Index">
            <summary>
            Gets the index of ring in the chart.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.Ring.InnerExtend">
            <summary>
            Gets the inner extend of the ring in percentage.
            </summary>
            <value>The inner extend.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.Ring.ControlSize">
            <summary>
            Gets the size of the ring.
            </summary>
            <value>The size of the control.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.Ring.Center">
            <summary>
            Gets the center point of the ring.
            </summary>
            <value>The center.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.Ring.RingControl">
            <summary>
            Gets the reference to <see cref="P:Infragistics.Controls.Charts.Ring.RingControl"/>.
            </summary>
            <value>The ring control.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.Ring.RingSeries">
            <summary>
            Gets reference to ring series.
            </summary>
            <value>The ring series.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.Ring.RingBreadth">
            <summary>
            Gets the ring breadth.
            </summary>
            <value>The ring breadth.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.Ring.ArcItems">
            <summary>
            Gets the arc items.
            </summary>
            <value>The arc items.</value>
        </member>
        <member name="M:Infragistics.Controls.Charts.Ring.RenderArcs">
            <summary>
            Renders the arcs.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Ring.PrepareArcs">
             <summary>
            Prepares data needed to create <see cref="T:Infragistics.Controls.Charts.Arc"/>s.
             </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.RingCollection">
            <summary>
             Represents an observable collection of <see cref="T:Infragistics.Controls.Charts.Ring"/>s objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingCollection.ClearItems">
            <summary>
            Clears the items.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the item.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.RingControl">
            <summary>
            Represents visual control for ring in the chart.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.RingControl"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingControl.RootCanvas">
            <summary>
            Gets the root canvas for the current series object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingControl.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingControl.OnViewCreated(Infragistics.Controls.Charts.RingControlView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="E:Infragistics.Controls.Charts.RingControl.PropertyChanged">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.RingControl.PropertyUpdated">
            <summary>
            Event raised when a property (including "effective" and non-dependency property) value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingControl.RaisePropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            Raises PropertyChanged and/or PropertyUpdated events if any listeners have been registered.
            </summary>
            <param name="propertyName">Name of property whos value changed.</param>
            <param name="oldValue">Property value before change.</param>
            <param name="newValue">Property value after change.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingControl.OnSizeUpdated">
            <summary>
            Called when the control's size has been updated.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.RingSeriesCollection">
            <summary>
            Represents an observable collection of <see cref="T:Infragistics.Controls.Charts.RingSeriesBase"/>s objects.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.SliceItem">
            <summary>
            Represents data of <see cref="P:Infragistics.Controls.Charts.SliceItem.Slice"/> element
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SliceItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.SliceItem"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceItem.StartAngle">
            <summary>
            Gets or sets the start angle.
            </summary>
            <value>The start angle.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceItem.EndAngle">
            <summary>
            Gets or sets the end angle.
            </summary>
            <value>The end angle.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceItem.ArcItem">
            <summary>
            Gets or sets the arc item.
            </summary>
            <value>The arc item.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceItem.Index">
            <summary>
            Gets or sets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceItem.Slice">
            <summary>
            Gets or sets the slice.
            </summary>
            <value>The slice.</value>
        </member>
        <member name="T:Infragistics.Controls.Charts.SliceCollection">
            <summary>
             Represents an observable collection of <see cref="T:Infragistics.Controls.Charts.SliceItem"/>s objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SliceCollection.InsertItem(System.Int32,Infragistics.Controls.Charts.SliceItem)">
            <summary>
            Inserts item into the collection.
            </summary>
            <param name="index">Index of the new value</param>
            <param name="item">Item to be inserted</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SliceCollection.SetItem(System.Int32,Infragistics.Controls.Charts.SliceItem)">
            <summary>
            Replaces an item at a given index with a new item.
            </summary>
            <param name="index">Index of the value to be replaced</param>
            <param name="item">Value to be added</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SliceCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the item from collection.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SliceCollection.Remove(Infragistics.Controls.Charts.SliceItem)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.ObjectModel.Collection`1" />. The value can be null for reference types.</param>
            <returns>
            true if <paramref name="item" /> is successfully removed; otherwise, false.  This method also returns false if <paramref name="item" /> was not found in the original <see cref="T:System.Collections.ObjectModel.Collection`1" />.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SliceCollection.ClearItems">
            <summary>
            Clears the items.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalloutAnnotationWrapper.GetHashCode">
            <summary>
            Computes a hash code value.
            </summary>
            <returns>A hash code value.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CategoryHighlightFrameRect">
            <summary>
            Represents a rectangle for the animation frame.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryHighlightFrameRect.TimeStamp">
            <summary>
            Sets or gets the timestamp of this rectangle. To be used for fading.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryHighlightFrameRect.Top">
            <summary>
            Sets or gets the top of this rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryHighlightFrameRect.Left">
            <summary>
            Sets or gets the left of this rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryHighlightFrameRect.Right">
            <summary>
            Sets or gets the right of this rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryHighlightFrameRect.Bottom">
            <summary>
            Sets or gets the bottom of this rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryHighlightFrameRect.Brush">
            <summary>
            Sets or gets the brush to use for this rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryHighlightFrameRect.Outline">
            <summary>
            Sets or gets the outline to use for this rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryHighlightFrameRect.StrokeThickness">
            <summary>
            Sets of gets the stroke thickness to use for this rectangle.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryHighlightFrameRect.#ctor">
            <summary>
            Creates a rectangle for the category highlight animation frame.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CategoryHighlightLayerFrame">
            <summary>
            An animation frame for the CategoryHighlightLayer
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryHighlightLayerFrame.#ctor">
            <summary>
            Constructs a frame for the CategoryHightlightLayer
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryHighlightLayerFrame.Rects">
            <summary>
            The rectangles to be displayed for this animation frame.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryHighlightLayerFrame.InterpolateRect(Infragistics.Controls.Charts.CategoryHighlightFrameRect,System.Single,Infragistics.Controls.Charts.CategoryHighlightFrameRect,Infragistics.Controls.Charts.CategoryHighlightFrameRect,Infragistics.Controls.Charts.CategoryHighlightLayerFrame,Infragistics.Controls.Charts.CategoryHighlightLayerFrame)">
            <summary>
            Called to interpolate a rectangle for an animation frame.
            </summary>
            <param name="interpolated">The interpolated result rectangle</param>
            <param name="p">The interpolation value.</param>
            <param name="min">The minimum rectangle.</param>
            <param name="max">The maximum rectangle.</param>
            <param name="minFrame">The minimum frame.</param>
            <param name="maxFrame">The maximum frame.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryHighlightLayerFrame.Interpolate(System.Single,Infragistics.Controls.Charts.Frame,Infragistics.Controls.Charts.Frame)">
            <summary>
            Called when the frame must be interpolated.
            </summary>
            <param name="p">The current interpolation value.</param>
            <param name="min">The minimum frame to interpolate from.</param>
            <param name="max">The maximum frame to interpolate to.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalloutContentUpdatingEventHandler">
            <summary>
            Event handler for updating content of callout layer
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalloutLabelUpdatingEventHandler">
            <summary>
            Event handler for updating label of callout layer
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalloutSeriesSelectingEventHandler">
            <summary>
            Event handler for selecting series of callout layer
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalloutCollisionMode">
            <summary>
            An enum representing the available collision modes of callout layers.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutCollisionMode.Auto">
            <summary>
            Automatically decide the collision strategy.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutCollisionMode.SimulatedAnnealing">
            <summary>
            Use a simulated annealing based collision strategy. This is higher quality, but takes longer, and is performed time-sliced in the background until an acceptable quality is reached.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutCollisionMode.Greedy">
            <summary>
            Use a greedy algorithm to avoid collisions. This is cheap and predictable, but of comparatively low quality.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CalloutCollisionMode.GreedyCenterOfMass">
            <summary>
            Use a greedy algorithm with localized center of mass hints to avoid collisions. This is relatively cheap to perform, compared to the simulated annealing approach, but is of comparatively lower quality.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalloutKey.GetHashCode">
            <summary>
            Computes a hash code value.
            </summary>
            <returns>A hash code value.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalloutLayerFrame">
            <summary>
            Represents an animation frame for the CrosshairLayer.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayerFrame.Contents">
            <summary>
            Gets or sets the text colors of the y axis anotations.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayerFrame.Callouts">
            <summary>
            Gets or sets the text colors of the y axis anotations.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayerFrame.Contexts">
            <summary>
            Gets or sets the contexts for the annotations.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayerFrame.CalloutTextColors">
            <summary>
            Gets or sets the text colors of the y axis anotations.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayerFrame.CalloutOutlines">
            <summary>
            Gets or sets the colors of the y axis anotation outlines.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayerFrame.CalloutLeaderBrushes">
            <summary>
            Gets or sets the colors of the y axis anotation leader brushes.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayerFrame.CalloutBackgrounds">
            <summary>
            Gets or sets the colors of the y axis anotation backgrounds.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayerFrame.CalloutStrokeThicknesses">
            <summary>
            Gets or sets the thicknesses of the y axis anotation outlines.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayerFrame.CalloutPaddingsLeft">
            <summary>
            Gets or sets the padding spaces around the text on the y axis annotations.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayerFrame.CalloutPaddingsTop">
            <summary>
            Gets or sets the padding spaces around the text on the y axis annotations.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayerFrame.CalloutPaddingsRight">
            <summary>
            Gets or sets the padding spaces around the text on the y axis annotations.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayerFrame.CalloutPaddingsBottom">
            <summary>
            Gets or sets the padding spaces around the text on the y axis annotations.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayerFrame.TargetXPositions">
            <summary>
            Gets or sets the crossing values with the x axis to use for positioning the annotation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayerFrame.TargetYPositions">
            <summary>
            Gets or sets the crossing values with the y axis to use for positioning the annotation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayerFrame.LabelXPositions">
            <summary>
            Gets or sets the crossing values with the x axis to use for positioning the annotation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayerFrame.LabelYPositions">
            <summary>
            Gets or sets the crossing values with the y axis to use for positioning the annotation.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.FinalValueLayerFrame">
            <summary>
            Represents an animation frame for the CrosshairLayer.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.FinalValueSelectionMode">
            <summary>
            Describes available positions on the crossing axis at which the category tooltip can be displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinalValueSelectionMode.Auto">
            <summary>
            A mode is selected automatically
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinalValueSelectionMode.FinalVisible">
            <summary>
            Displays the last value visible.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinalValueSelectionMode.FinalVisibleInterpolated">
            <summary>
            Displays an interploated last value for when the series leaves view.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FinalValueSelectionMode.Final">
            <summary>
            Displays the last value in the series, whether visible or not.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotationFrame.XAxisAnnotationTextColors">
            <summary>
            Gets or sets the text colors of the x axis anotations.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotationFrame.XAxisAnnotationOutlines">
            <summary>
            Gets or sets the colors of the x axis anotation outlines.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotationFrame.XAxisAnnotationBackgrounds">
            <summary>
            Gets or sets the colors of the x axis anotation backgrounds.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotationFrame.XAxisAnnotationStrokeThicknesses">
            <summary>
            Gets or sets the thicknesses of the x axis anotation outlines.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotationFrame.XAxisAnnotationPaddingsLeft">
            <summary>
            Gets or sets the padding spaces around the text on the x axis annotations.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotationFrame.XAxisAnnotationPaddingsTop">
            <summary>
            Gets or sets the padding spaces around the text on the x axis annotations.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotationFrame.XAxisAnnotationPaddingsRight">
            <summary>
            Gets or sets the padding spaces around the text on the x axis annotations.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotationFrame.XAxisAnnotationPaddingsBottom">
            <summary>
            Gets or sets the padding spaces around the text on the x axis annotations.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotationFrame.YAxisAnnotationTextColors">
            <summary>
            Gets or sets the text colors of the y axis anotations.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotationFrame.YAxisAnnotationOutlines">
            <summary>
            Gets or sets the colors of the y axis anotation outlines.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotationFrame.YAxisAnnotationBackgrounds">
            <summary>
            Gets or sets the colors of the y axis anotation backgrounds.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotationFrame.YAxisAnnotationStrokeThicknesses">
            <summary>
            Gets or sets the thicknesses of the y axis anotation outlines.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotationFrame.YAxisAnnotationPaddingsLeft">
            <summary>
            Gets or sets the padding spaces around the text on the y axis annotations.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotationFrame.YAxisAnnotationPaddingsTop">
            <summary>
            Gets or sets the padding spaces around the text on the y axis annotations.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotationFrame.YAxisAnnotationPaddingsRight">
            <summary>
            Gets or sets the padding spaces around the text on the y axis annotations.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotationFrame.YAxisAnnotationPaddingsBottom">
            <summary>
            Gets or sets the padding spaces around the text on the y axis annotations.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotationFrame.XAxisValues">
            <summary>
            Gets or sets the crossing values with the x axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotationFrame.YAxisValues">
            <summary>
            Gets or sets the crossing values with the y axis
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotationFrame.XAxisValuePositions">
            <summary>
            Gets or sets the crossing values with the x axis to use for positioning the annotation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotationFrame.YAxisValuePositions">
            <summary>
            Gets or sets the crossing values with the y axis to use for positioning the annotation.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotationFrame.XAxes">
            <summary>
            Gets or sets the x axes that are being annotated.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AxisAnnotationFrame.YAxes">
            <summary>
            Gets or sets the y axes that are being annotated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AxisAnnotationFrame.Interpolate(System.Single,Infragistics.Controls.Charts.Frame,Infragistics.Controls.Charts.Frame)">
            <summary>
            Interpolates between two frames into this frame.
            </summary>
            <param name="p">The interpolation value.</param>
            <param name="min">The minimum frame.</param>
            <param name="max">The next frame.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.CrosshairLayerFrame">
            <summary>
            Represents an animation frame for the CrosshairLayer.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayerFrame.LineHeights">
            <summary>
            Gets or sets the heights of the crosshair lines.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayerFrame.LineWidths">
            <summary>
            Gets or sets the widths of the crosshair lines.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayerFrame.HorizontalLineBrushes">
            <summary>
            Gets or sets the colors of the crosshair lines.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CrosshairLayerFrame.VerticalLineBrushes">
            <summary>
            Gets or sets the colors of the crosshair lines.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CrosshairLayerFrame.#ctor">
            <summary>
            Constructs a CrosshairLayerFrame
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CrosshairLayerFrame.Interpolate(System.Single,Infragistics.Controls.Charts.Frame,Infragistics.Controls.Charts.Frame)">
            <summary>
            Interpolates between two frames into this frame.
            </summary>
            <param name="p">The interpolation value.</param>
            <param name="min">The minimum frame.</param>
            <param name="max">The next frame.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ItemHighlightFrameRect">
            <summary>
            Represents a rectangle/marker for the animation frame.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemHighlightFrameRect.TimeStamp">
            <summary>
            Sets or gets the timestamp of this rectangle. To be used for fading.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemHighlightFrameRect.Top">
            <summary>
            Sets or gets the top of this rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemHighlightFrameRect.Left">
            <summary>
            Sets or gets the left of this rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemHighlightFrameRect.Right">
            <summary>
            Sets or gets the right of this rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemHighlightFrameRect.Bottom">
            <summary>
            Sets or gets the bottom of this rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemHighlightFrameRect.Brush">
            <summary>
            Sets or gets the brush to use for this rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemHighlightFrameRect.Outline">
            <summary>
            Sets or gets the outline to use for this rectange.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemHighlightFrameRect.MarkerTemplate">
            <summary>
            Sets or gets the marker template to use, if any.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemHighlightFrameRect.DataItem">
            <summary>
            Sets or gets the data item to use if any.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemHighlightFrameRect.StrokeThickness">
            <summary>
            Sets of gets the stroke thickness to use for this rectangle.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemHighlightFrameRect.#ctor">
            <summary>
            Creates an instance of ItemHighlightFrameRect
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CategoryItemHighlightType">
            <summary>
            Describes available shapes for a category item highlight.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryItemHighlightType.Auto">
            <summary>
            The default depends on the series being highlighted.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryItemHighlightType.Marker">
            <summary>
            The highlight should use a marker shape.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryItemHighlightType.Shape">
            <summary>
            The highlight should use a filled band shape.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CategoryItemHighlightLayerFrame">
            <summary>
            Represents an animation frame for the CategoryItemHighlightLayer
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryItemHighlightLayerFrame.#ctor">
            <summary>
            Constructs a frame for the CategoryHightlightLayer
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryItemHighlightLayerFrame.Rects">
            <summary>
            The rectangles to be displayed for this animation frame.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryItemHighlightLayerFrame.InterpolateRect(Infragistics.Controls.Charts.ItemHighlightFrameRect,System.Single,Infragistics.Controls.Charts.ItemHighlightFrameRect,Infragistics.Controls.Charts.ItemHighlightFrameRect,Infragistics.Controls.Charts.CategoryItemHighlightLayerFrame,Infragistics.Controls.Charts.CategoryItemHighlightLayerFrame)">
            <summary>
            Called to interpolate a rectangle for an animation frame.
            </summary>
            <param name="interpolated">The interpolated result rectangle</param>
            <param name="p">The interpolation value.</param>
            <param name="min">The minimum rectangle.</param>
            <param name="max">The maximum rectangle.</param>
            <param name="minFrame">The minimum frame.</param>
            <param name="maxFrame">The maximum frame.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryItemHighlightLayerFrame.Interpolate(System.Single,Infragistics.Controls.Charts.Frame,Infragistics.Controls.Charts.Frame)">
            <summary>
            Called when the frame must be interpolated.
            </summary>
            <param name="p">The current interpolation value.</param>
            <param name="min">The minimum frame to interpolate from.</param>
            <param name="max">The maximum frame to interpolate to.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalloutLayerView.OnInit">
            <summary>
            Called when the view is initialized.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutLayerView.CalloutPool">
            <summary>
            Gets or sets the pool to use for creating callout visuals.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalloutLayerView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalloutLayerView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutView.TargetPoint">
            <summary>
            Gets or sets the text color of the callout.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutView.CalloutTextColor">
            <summary>
            Gets or sets the text color of the callout.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutView.CalloutOutline">
            <summary>
            Gets or sets the outline of the callout.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutView.CalloutLeaderBrush">
            <summary>
            Gets or sets the outline of the callout.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutView.CalloutBackground">
            <summary>
            Gets or sets the background of the callout.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutView.CalloutStrokeThickness">
            <summary>
            Gets or sets the stroke thickness of the callout.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CalloutView.CalloutPadding">
            <summary>
            Gets or sets the padding spaces around the text in the callout.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CategoryHighlightLayerView">
            <summary>
            Represents a view for the CategoryHightlightLayer
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryHighlightLayerView.#ctor(Infragistics.Controls.Charts.CategoryHighlightLayer)">
            <summary>
            Constructs a CategoryHighlightView
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryHighlightLayerView.HighlightModel">
            <summary>
            The model for this view.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryHighlightLayerView.RectPool">
            <summary>
            Gets or sets the pool to use to obtain rectangles for display.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryHighlightLayerView.OnInit">
            <summary>
            Called when this view is initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryHighlightLayerView.GetLightenedTranslucentBrush(Infragistics.Portable.Graphics.Media.Brush)">
            <summary>
            Gets a lightened and translucent brush from a base brush.
            </summary>
            <param name="brush">The brush to lighten.</param>
            <returns>The lightened and translucent brush.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryHighlightLayerView.PositionRectangle(Infragistics.Portable.Graphics.Shapes.Rectangle,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Called to position the provided rectangle at a particular position and adjust its size.
            </summary>
            <param name="rectVisual">The rectangle visual.</param>
            <param name="left">The left position at which to place the rectangle.</param>
            <param name="top">The top position at which to place the rectangle.</param>
            <param name="width">The width to assign to the rectangle.</param>
            <param name="height">The height to assign to the rectangle.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryHighlightLayerView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryHighlightLayerView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.CategoryItemHighlightLayerView">
            <summary>
            Represents a view for the CategoryItemHightlightLayer
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryItemHighlightLayerView.#ctor(Infragistics.Controls.Charts.CategoryItemHighlightLayer)">
            <summary>
            Constructs a CategoryItemHighlightView
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryItemHighlightLayerView.ItemModel">
            <summary>
            The model for this view.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryItemHighlightLayerView.RectPool">
            <summary>
            Gets or sets the pool to use to obtain rectangles for display.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryItemHighlightLayerView.MarkerPool">
            <summary>
            Gets or sets the pool to use to obtain markers for display.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryItemHighlightLayerView.OnInit">
            <summary>
            Called when this view is initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryItemHighlightLayerView.GetLightenedTranslucentBrush(Infragistics.Portable.Graphics.Media.Brush)">
            <summary>
            Gets a lightened and translucent brush from a base brush.
            </summary>
            <param name="brush">The brush to lighten.</param>
            <returns>The lightened and translucent brush.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryItemHighlightLayerView.SetupMarkerAppearanceOverride(System.Object,System.Int32)">
            <summary>
            Applies appearance settings to the marker visual.
            </summary>
            <param name="item">The item visual.</param>
            <param name="index">The index of the item in the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryItemHighlightLayerView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryItemHighlightLayerView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinalValueLayerView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinalValueLayerView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CrosshairLayerView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CrosshairLayerView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CrosshairLayerView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ConsolidatedItemsPosition">
            <summary>
            Enum used to determine positioning logic for data items which have been consolidated into a single visual element.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConsolidatedItemsPosition.Minimum">
            <summary>
            Consolidated Items should be positioned using their minimum value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConsolidatedItemsPosition.Maximum">
            <summary>
            Consolidated Items should be positioned using their maximum value.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConsolidatedItemsPosition.Median">
            <summary>
             Consolidated Items should be positioned at the midpoint of the range.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConsolidatedItemsPosition.RelativeMinimum">
            <summary>
            Consolidated Items should be positioned using the value nearest to the reference value of the corresponding axis.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConsolidatedItemsPosition.RelativeMaximum">
            <summary>
            Consolidated Items should be positioned using the value farthest from the reference value of the corresponding axis.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CategorySeriesMarkerCollisionAvoidance">
            <summary>
            Describes available methods of collision avoidance of category series' markers.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesMarkerCollisionAvoidance.None">
            <summary>
            Collision avoidance is disabled.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesMarkerCollisionAvoidance.Omit">
            <summary>
            Items colliding with other items will be hidden from view.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ConsolidatedItemHitTestBehavior">
            <summary>
            Determines the item returned in hit-testing when mousing over an object which represents several consolidated items.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConsolidatedItemHitTestBehavior.Basic">
            <summary>
            Returns the item based on the X-location only.  Will return one of the consolidated items.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConsolidatedItemHitTestBehavior.NearestY">
            <summary>
            Returns the item with the nearest Y-location out of all the items with a matching X-location.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryBucketCalculator.FirstBucket">
            <summary>
            Gets or sets the first visible bucket of the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryBucketCalculator.LastBucket">
            <summary>
            Gets or sets the last visible bucket of the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryBucketCalculator.BucketSize">
            <summary>
            Gets or sets the bucket size of the series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategoryBucketCalculator.CalculateBuckets(System.Double)">
            <summary>
            Calculates the bucket values to use based on the desired resolution.
            </summary>
            <param name="resolution">The resolution desired.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DefaultProvidesViewport.GetViewInfo(Infragistics.Portable.Rect@,Infragistics.Portable.Rect@)">
            <summary>
            Gets the view info.
            </summary>
            <param name="viewportRect">The viewport to use.</param>
            <param name="windowRect">The window to use.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DefaultProvidesViewport.GetEffectiveViewport">
            <summary>
            Gets the effective viewport, adjusted to account for margins and other factors.
            </summary>
            <returns>The effective viewport.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CategoryTransitionInMode">
            <summary>
            Describes available transition effects that can applied to initial rendering of a series
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTransitionInMode.Auto">
            <summary>
            Series transitions in an automatically chosen based on type of series and its orientation
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTransitionInMode.FromZero">
            <summary>
            Series transitions in from the reference value of the value axis.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTransitionInMode.SweepFromLeft">
            <summary>
            Series sweeps in from the left
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTransitionInMode.SweepFromRight">
            <summary>
            Series sweeps in from the right
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTransitionInMode.SweepFromTop">
            <summary>
            Series sweeps in from the top.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTransitionInMode.SweepFromBottom">
            <summary>
            Series sweeps in from the bottom.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTransitionInMode.SweepFromCenter">
            <summary>
            Series sweeps in from the center.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTransitionInMode.AccordionFromLeft">
            <summary>
            Series accordions in from the left.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTransitionInMode.AccordionFromRight">
            <summary>
            Series accordions in from the right.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTransitionInMode.AccordionFromTop">
            <summary>
            Series accordions in from the top.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTransitionInMode.AccordionFromBottom">
            <summary>
            Series accordions in from the bottom.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTransitionInMode.Expand">
            <summary>
            Series expands from the value midpoints.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTransitionInMode.SweepFromCategoryAxisMinimum">
            <summary>
            Series sweeps in from the category axis minimum.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTransitionInMode.SweepFromCategoryAxisMaximum">
            <summary>
            Series sweeps in from the category axis maximum.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTransitionInMode.SweepFromValueAxisMinimum">
            <summary>
            Series sweeps in from the value axis minimum.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTransitionInMode.SweepFromValueAxisMaximum">
            <summary>
            Series sweeps in from the value axis maximum.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTransitionInMode.AccordionFromCategoryAxisMinimum">
            <summary>
            Series accordions in from the category axis minimum.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTransitionInMode.AccordionFromCategoryAxisMaximum">
            <summary>
            Series accordions in from the category axis maximum.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTransitionInMode.AccordionFromValueAxisMinimum">
            <summary>
            Series accordions in from the value axis minimum.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryTransitionInMode.AccordionFromValueAxisMaximum">
            <summary>
            Series accordions in from the value axis maximum.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CategorySeriesRenderManager">
            <summary>
            Manages the rendering of category series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.ActualRenderFill">
            <summary>
            The current fill being used for the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.ActualRenderOutline">
            <summary>
            The current outline being used for the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.ActualRenderThickness">
            <summary>
            The current thickness being used for the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.ActualRenderDashArray">
            <summary>
            The current dash array being used for the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.ActualRenderDashCap">
            <summary>
            The current dash cap being used for the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.ActualRenderRadiusX">
            <summary>
            The current radius x being used for the series, if it supports rounded corners.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.ActualRenderRadiusY">
            <summary>
            The current radius x being used for the series, if it supports rounded corners.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.ActualRenderOpacity">
            <summary>
            The current opacity being used for the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.ActualRenderMiterLimit">
            <summary>
            The current miter limit being used for the series, if it supports a path shape.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.ActualRenderStartCap">
            <summary>
            The current start cap being used for the series if it supports a path shape.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.ActualRenderEndCap">
            <summary>
            The current end cap being used for the series if it supports a path shape.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.InitialRenderFill">
            <summary>
            The initial fill being used for the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.InitialRenderOutline">
            <summary>
            The initial outline being used for the seires.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.InitialRenderThickness">
            <summary>
            The initial thickness being used for the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.InitialRenderDashArray">
            <summary>
            The initial dash array being used for the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.InitialRenderDashCap">
            <summary>
            The initial dash cap being used for the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.InitialRenderRadiusX">
            <summary>
            The initial radius x being used for the series, if it supports rounded corners.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.InitialRenderRadiusY">
            <summary>
            The initial radius x being used for the series, if it supports rounded corners.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.InitialRenderOpacity">
            <summary>
            The initial opacity being used for the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.InitialRenderMiterLimit">
            <summary>
            The initial miter limit being used for the series, if it supports a path shape.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.InitialRenderStartCap">
            <summary>
            The initial start cap being used for the series if it supports a path shape.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.InitialRenderEndCap">
            <summary>
            The initial end cap being used for the series if it supports a path shape.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.InitialMarkerRenderFill">
            <summary>
            The initial fill being used for the series markers.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.InitialMarkerRenderOutline">
            <summary>
            The initial outline being used for the series markers.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.InitialMarkerRenderOpacity">
            <summary>
            The initial opacity being used for the series markers.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.ActualNegativeShape">
            <summary>
            The actual negative state.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.ActualNegativeMarkerShape">
            <summary>
            The actual negative state.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.ActualMarkerRenderFill">
            <summary>
            The currnet fill being used for the series markers.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.ActualMarkerRenderOutline">
            <summary>
            The current outline being used for the series markers.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.ActualMarkerRenderOpacity">
            <summary>
            The current opacity being used for the series markers.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategorySeriesRenderManager.CategoryOverrideArgs">
            <summary>
            Overridden settings from the AssigningCategoryStyle event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategorySeriesRenderManager.CategoryMarkerOverrideArgs">
            <summary>
            Overridden settings from the AssigningCategoryMarkerStyle event.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.ActualRenderCategoryAxis">
            <summary>
            The current category axis being used by the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.BucketSize">
            <summary>
            The current bucket size of the series.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategorySeriesRenderManager.FirstBucket">
            <summary>
            The current first bucket of the series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeriesRenderManager.InitCategoryMarkerRenderSettings(Infragistics.Controls.Charts.MarkerSeries,System.Boolean,Infragistics.Controls.Charts.GetCategoryItemsHandler,System.Int32,System.Int32)">
            <summary>
            Initialize the category marker render settings.
            </summary>
            <param name="source">The MarkerSeries to initialize category marker render settings for.</param>
            <param name="shouldOverrideMarkerStyle">True if the MarkerStyle should be overridden.</param>
            <param name="getItems">Delegate for getting data items.</param>
            <param name="size">The bucket size of the series, or the number of data items represented by each marker..</param>
            <param name="first">The index of the first visible bucket.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeriesRenderManager.InitCategoryRenderSettings(Infragistics.Controls.Charts.Series,System.Boolean,Infragistics.Controls.Charts.CategoryAxisBase,Infragistics.Controls.Charts.GetCategoryItemsHandler,System.Int32,System.Int32)">
            <summary>
            Initializes the category render settings.
            </summary>
            <param name="source">The MarkerSeries to initialize category marker render settings for.</param>
            <param name="shouldOverrideCategoryStyle">True if the category style should be overwritten.</param>
            <param name="categoryAxis">The category axis used by the series.</param>
            <param name="getItems">Delegate for getting data items.</param>
            <param name="size">The bucket size of the series, or the number of data items represented by each marker..</param>
            <param name="first">The index of the first visible bucket.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeriesRenderManager.SetCategoryShapeAppearance(Infragistics.Portable.Graphics.Shapes.Shape,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Applies appearance settings to the given shape.
            </summary>
            <param name="shape">The shape to apply appearance settings to.</param>
            <param name="strokeOnly">True if only the outline should be applied, and not the fill color.</param>
            <param name="fillOnly">True if only the fill color should be applied, and not the outline.</param>
            <param name="extended">True if extended appearance settings, such as miter limit, should be applied.</param>
            <param name="useOutline">True if the outline should be used as the main color.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeriesRenderManager.SetCategoryMarkerAppearance(Infragistics.Controls.Charts.Marker,Infragistics.Controls.Charts.DataContext)">
            <summary>
            Applies appearance settings to the given marker.
            </summary>
            <param name="marker">The marker to apply appearance settings to.</param>
            <param name="context">Contextual information about the associated data item.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeriesRenderManager.GetBucketBounds(System.Int32,System.Int32)">
            <summary>
            Gets the indices of the first and last data items in the bucket at the given index.
            </summary>
            <param name="count">The count of items in the data source.</param>
            <param name="bucket">The index of the bucket to get item indices for.</param>
            <returns>The indices of the first and last data items in the bucket at the given index.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeriesRenderManager.ApplyHighlightingStyle(Infragistics.Controls.Charts.HighlightingInfo)">
            <summary>
            Applies highlighted fill and outline colors, relative to the highlighting progress.
            </summary>
            <param name="info">Contextual information about the highlighting, including the progress, if the highlight is animated.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeriesRenderManager.ApplyMarkerHighlightingStyle(Infragistics.Controls.Charts.HighlightingInfo)">
            <summary>
            Applies highlighted fill and outline colors for a marker, relative to the highlighting progress.
            </summary>
            <param name="info">Contextual information about the highlighting, including the progress, if the highlight is animated.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeriesRenderManager.PopulateArgsBounds(Infragistics.Controls.Charts.AssigningCategoryStyleEventArgsBase,System.Boolean,System.Collections.Generic.List{System.Double[]},System.Int32,System.Int32,Infragistics.Controls.Charts.CategoryAxisBase,Infragistics.Controls.Charts.ScalerParams,System.Boolean,System.Boolean)">
            <summary>
            Sets the StartIndex and EndIndex, or StartDate and EndDate, of the given AssigningCategoryStyleEventArgs.
            </summary>
            <param name="args">The AssigningCategoryStyleEventArgs to set the bounds properties of.</param>
            <param name="isSorting">True if the axis sorts data items, as a time axis will.</param>
            <param name="buckets">The series data values.</param>
            <param name="currentIndex">The index of the current item.</param>
            <param name="valueCount">The count of data items.</param>
            <param name="categoryAxis">The category axis in context.</param>
            <param name="axisParams">Scaling parameters for the category axis.</param>
            <param name="isThumbnail">True if this operation is for a thumbnail view.</param>
            <param name="isMarker">True if the given arguments are for marker styling.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeriesRenderManager.PrePerformCategoryStyleOverride(System.Collections.Generic.List{System.Double[]},System.Int32,System.Int32,Infragistics.Controls.Charts.CategoryAxisBase,Infragistics.Controls.Charts.ScalerParams,System.Boolean,System.Boolean)">
            <summary>
            Prepares for a pending category style override.
            </summary>
            <param name="buckets">The series data values.</param>
            <param name="currentIndex">The index of the current item.</param>
            <param name="valueCount">The count of data items.</param>
            <param name="categoryAxis">The category axis in context.</param>
            <param name="axisParams">Scaling parameters for the category axis.</param>
            <param name="isThumbnail">True if this operation is for a thumbnail view.</param>
            <param name="isHighlightingEnabled">True if highlighting is enabled.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeriesRenderManager.PostPerformCategoryStyleOverride(Infragistics.Controls.Charts.HighlightingInfo,System.Boolean,System.Boolean)">
            <summary>
            Apply visual settings after a recently completed category style override.
            </summary>
            <param name="info">Contextual information about a highlight.</param>
            <param name="isThumbnail">True if this operation is for a thumbnail view.</param>
            <param name="isHighlightingEnabled">True if highlighting is enabled.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeriesRenderManager.PrePerformCategoryMarkerStyleOverride(System.Collections.Generic.List{System.Double[]},System.Int32,System.Int32,Infragistics.Controls.Charts.CategoryAxisBase,Infragistics.Controls.Charts.ScalerParams,System.Boolean,System.Boolean)">
            <summary>
            Prepares for a pending category marker style override.
            </summary>
            <param name="buckets">The series data values.</param>
            <param name="currentIndex">The index of the current item.</param>
            <param name="valueCount">The count of data items.</param>
            <param name="categoryAxis">The category axis in context.</param>
            <param name="axisParams">Scaling parameters for the category axis.</param>
            <param name="isThumbnail">True if this operation is for a thumbnail view.</param>
            <param name="isHighlightingEnabled">True if highlighting is enabled.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.CategorySeriesRenderManager.PostPerformCategoryMarkerStyleOverride(Infragistics.Controls.Charts.HighlightingInfo,System.Boolean,System.Boolean)">
            <summary>
            Apply visual settings after a recently completed category marker style override.
            </summary>
            <param name="info">Contextual information about a highlight.</param>
            <param name="isThumbnail">True if this operation is for a thumbnail view.</param>
            <param name="isHighlightingEnabled">True if highlighting is enabled.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.CategoryLineRasterizer.IsSortingAxis">
            <summary>
            True, if the series uses a date time axis; false otherwise.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredCategorySeriesView.RenderMarkersOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the markers for this series view.
            </summary>
            <param name="context">The rendering context.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AreaSeriesView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AreaSeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AreaSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AreaSeriesView.ApplyDropShadowDefaultSettings">
            <summary>
            Applies the default appearance settings for drop shadows in this series view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnSeriesView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnSeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.LineSeriesView.SetupAppearanceOverride">
            <summary>
            Applies appearance settings to the series visuals.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LineSeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.LineSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.LineSeriesView.ApplyDropShadowDefaultSettings">
            <summary>
            Applies the default appearance settings for drop shadows in this series view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PointSeriesView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PointSeriesView.ApplyDropShadowDefaultSettings">
            <summary>
            Applies the default appearance settings for drop shadows in this series view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineAreaSeriesView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineAreaSeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineAreaSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineAreaSeriesView.ApplyDropShadowDefaultSettings">
            <summary>
            Applies the default appearance settings for drop shadows in this series view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineSeriesBaseView.ApplyDropShadowDefaultSettings">
            <summary>
            Applies the default appearance settings for drop shadows in this series view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineSeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.StepAreaSeriesView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StepAreaSeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.StepAreaSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.StepLineSeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.StepLineSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.StepLineSeriesView.ApplyDropShadowDefaultSettings">
            <summary>
            Applies the default appearance settings for drop shadows in this series view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.WaterfallSeriesView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.WaterfallSeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.WaterfallSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.RingControlView">
            <summary>
            Class for rendering the visuals of a RingControl.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingControlView.Model">
            <summary>
            A reference to the RingControl responsible for this view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingControlView.#ctor(Infragistics.Controls.Charts.RingControl)">
            <summary>
            Initializes a new instance of the RingControlView class.
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingControlView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingControlView.PositionArc(Infragistics.Controls.Charts.Arc,System.Double,System.Double)">
            <summary>
            Positions the arc at the given location.
            </summary>
            <param name="arc">The arc to position.</param>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingControlView.UpdateArcSize(Infragistics.Controls.Charts.Arc)">
            <summary>
            Updates the size of the given arc.
            </summary>
            <param name="arc">The arc to update the size for.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingControlView.IsReady">
            <summary>
            Checks if this view is ready for rendering.
            </summary>
            <returns>True if this view is ready for rendering, otherwise False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingControlView.OnArcsResized">
            <summary>
            Flushes changes to all arcs after a resize has occurred.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.RingSeriesBaseView">
            <summary>
            View class for rendering the visual elements of a RingSeriesBase.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RingSeriesBaseView.Model">
            <summary>
            The RingSeriesBase responsible for this view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingSeriesBaseView.#ctor(Infragistics.Controls.Charts.RingSeriesBase)">
            <summary>
            Initializes a new instance of the RingSeriesBaseView class.
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingSeriesBaseView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RingSeriesBaseView.IsReady">
            <summary>
            Checks if this view is ready for rendering.
            </summary>
            <returns>True if this view is ready for rendering, otherwise False.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDoughnutChartView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDoughnutChartView.ExportViewShapes(Infragistics.Portable.Charts.VisualData.DoughnutChartVisualData)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="doughnutChart">The visual data to export into.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.AngleAxisLabelPanel">
            <summary>
            Represents the panel control, containing angle axis labels.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AngleAxisLabelPanel.#ctor">
            <summary>
            Initializes the AngleAxis label panel.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AngleAxisLabelPanel.ClipLabelsToBounds">
            <summary>
            Gets or sets whether labels should be clipped to bounds.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.AngleAxisLabelPanel.GetPoint">
            <summary>
            Gets or sets the function used to calculate point locations.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AngleAxisLabelPanel.ShouldDisplay(System.Int32,Infragistics.Portable.Rect)">
            <summary>
            Determines if the label should be displayed.
            </summary>
            <param name="index">label index</param>
            <param name="bounds">label bounds</param>
            <returns>True if the label should be displayed; otherwise false</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AngleAxisLabelPanel.CreateBoundsRectangles">
            <summary>
            Creates a list of label bounds.
            </summary>
            <returns>List of label rectangles</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.IPolarRadialRenderingParameters.MinLength">
            <summary>
            The minimum extent of any spokes to be drawn.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.IPolarRadialRenderingParameters.MaxLength">
            <summary>
            The maximum extent of any spokes to be drawn.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.IPolarRadialRenderingParameters.Center">
            <summary>
            The center of the polar chart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.IPolarRadialRenderingParameters.CrossingAngleRadians">
            <summary>
            The angle at which the radius axis will cross
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialAxisRenderingParameters.MinLength">
            <summary>
            The minimum extent of any spokes to be drawn.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialAxisRenderingParameters.MaxLength">
            <summary>
            The maximum extent of any spokes to be drawn.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialAxisRenderingParameters.Center">
            <summary>
            The center of the polar chart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialAxisRenderingParameters.CrossingAngleRadians">
            <summary>
            The angle at which the radius axis will cross
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.PolarAxisRenderingParameters">
            <summary>
            Polar axis specific rendering parameters.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarAxisRenderingParameters.MinLength">
            <summary>
            The minimum extent of any spokes to be drawn.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarAxisRenderingParameters.MaxLength">
            <summary>
            The maximum extent of any spokes to be drawn.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarAxisRenderingParameters.Center">
            <summary>
            The center of the polar chart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarAxisRenderingParameters.CrossingAngleRadians">
            <summary>
            The angle at which the radius axis will cross
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.PolarAxisRenderingManager">
            <summary>
            Represents rendering functionality for the polar class of axes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAxisRenderingManager.ConcentricStrip(Infragistics.Portable.Graphics.Media.GeometryCollection,System.Double,System.Double,Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Point,System.Double,System.Double)">
            <summary>
            Draws a concentric strip around the provided center point.
            </summary>
            <param name="geometry">The geometry to add the strip to.</param>
            <param name="radius0">The inner radius of the concentric strip.</param>
            <param name="radius1">The outer radius of the concentric strip.</param>
            <param name="viewportRect">The viewport rectangle.</param>
            <param name="windowRect">The window rectangle bounds.</param>
            <param name="center">The center around which to draw the concentric strip.</param>
            <param name="minAngle">Minimum angle</param>
            <param name="maxAngle">Maximum angle</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAxisRenderingManager.ConcentricLine(Infragistics.Portable.Graphics.Media.GeometryCollection,System.Double,Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Point,System.Double,System.Double)">
            <summary>
            Draws a concentric line (a circle) around the provided center.
            </summary>
            <param name="geometry">The geometry to add a line to.</param>
            <param name="radius">The radius of the concentric circle.</param>
            <param name="viewportRect">The viewport rectangle.</param>
            <param name="windowRect">The window rectangle bounds.</param>
            <param name="center">The center around which to draw the concentric line.</param>
            <param name="startAngle">Start angle</param>
            <param name="endAngle">End angle</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAxisRenderingManager.RadialStrip(Infragistics.Portable.Graphics.Media.GeometryCollection,System.Double,System.Double,Infragistics.Portable.Rect,Infragistics.Portable.Rect,System.Double,System.Double,Infragistics.Portable.Point)">
            <summary>
            Draws a radial strip (a pie slice) around the provided center point.
            </summary>
            <param name="geometry">The geometry to add the strip to.</param>
            <param name="startAngle">The start angle of the strip.</param>
            <param name="endAngle">The end angle of the strip.</param>
            <param name="viewportRect">The viewport rectangle.</param>
            <param name="windowRect">The window rectangle bounds.</param>
            <param name="minLength">The inner extent of the strip.</param>
            <param name="maxLength">The outer extent of the strip.</param>
            <param name="center">The center around which to draw the radial strip.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAxisRenderingManager.RadialLine(Infragistics.Portable.Graphics.Media.GeometryCollection,System.Double,Infragistics.Portable.Rect,Infragistics.Portable.Rect,System.Double,System.Double,Infragistics.Portable.Point)">
            <summary>
            Draws a radial line (spoke) around the center point.
            </summary>
            <param name="geometry">The geometry to add the line to.</param>
            <param name="angle">The angle of the line around the center point.</param>
            <param name="viewportRect">The viewport rectangle.</param>
            <param name="windowRect">The window rectangle bounds.</param>
            <param name="minLength">The minimum length of the line.</param>
            <param name="maxLength">The maximum length of the line.</param>
            <param name="center">The center point around which to draw the line.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAxisRenderingManager.InXBand(Infragistics.Portable.Point,Infragistics.Portable.Rect)">
            <summary>
            Is the provided point within the x range of the bounding box.
            </summary>
            <param name="center">The point to check.</param>
            <param name="bounds">The bounding box.</param>
            <returns>True if it is in the X range.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAxisRenderingManager.InYBand(Infragistics.Portable.Point,Infragistics.Portable.Rect)">
            <summary>
            Is the provided point in the y range of the bounding box.
            </summary>
            <param name="center">The point to check.</param>
            <param name="bounds">The bounding box.</param>
            <returns>True if it is in the Y range.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAxisRenderingManager.ClosestCorner(Infragistics.Portable.Point,Infragistics.Portable.Rect)">
            <summary>
            Determines the distance to the corner on the cartesian axis aligned bounding rectangle that 
            is closest to the provided point.
            </summary>
            <param name="center">The point to determine closeness to.</param>
            <param name="bounds">The cartesian axis aligned rectangle.</param>
            <returns>The distance to the closest corner.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAxisRenderingManager.FurthestCorner(Infragistics.Portable.Point,Infragistics.Portable.Rect)">
            <summary>
            Determines the distance to the corner on the cartesian axis aligned bounding rectangle that 
            is furthest from the provided point.
            </summary>
            <param name="center">The point to determine distance to.</param>
            <param name="bounds">The cartesian axis aligned rectangle.</param>
            <returns>The distance to the furthest corner.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAxisRenderingManager.GetClosestRadiusValue(Infragistics.Portable.Rect)">
            <summary>
            Determines the smallest radius that is visible in the current view into 
            the chart.
            </summary>
            <param name="windowRect">The window rectangle.</param>
            <returns>The radius value.</returns>
            <remarks>
            This makes use of the fact that the view into the chart is aligned on the 
            cartesian axes. 
            
            So, if the center point of the chart is inside the viewable 
            space, the minimum radius is 0. 
            
            If the view into the chart is scrolled above or below the center point, 
            such that the center point is in the X range of the view, then the closest
            radius is just the distance to the top or bottom edge of the window rectangle.
            
            Similarly, if the view into the chart is left of right of the center point,
            such that the center point is in the Y range of the view, then the closest
            radius is just the distance to the left of right edge of the window rectangle.
            
            In the case where the view is deeper into the quadrants of the space, and the
            center point is neither in the X or Y range of the view, then we simply need to 
            determine what the distance is to the closest corner of the rectangle.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAxisRenderingManager.GetFurthestRadiusValue(Infragistics.Portable.Rect)">
            <summary>
            Determines the furthest radius value that is viewable in the current view into
            the chart.
            </summary>
            <param name="windowRect">The window rectangle.</param>
            <returns>The radius value.</returns>
            <remarks>In all cases the furthest distance will just be the distance to the furthest 
            corner of the viewing rectangle in scaled viewport space.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAxisRenderingManager.GetAngleTo(Infragistics.Portable.Point,Infragistics.Portable.Point)">
            <summary>
            Gets the angle value to a specified point from the center point.
            </summary>
            <param name="center">The center point of the chart.</param>
            <param name="toPoint">The point to get the axis angle value to.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAxisRenderingManager.GetMinMaxAngle(Infragistics.Portable.Rect,System.Double@,System.Double@)">
            <summary>
            Gets the min and max angle axis value that are visible in the current 
            view into the chart.
            </summary>
            <param name="windowRect">The window rectangle.</param>
            <param name="minAngle">Returns the minimum angle that is visible.</param>
            <param name="maxAngle">Returns the maximum angle that is visible.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.PolarAxes">
            <summary>
            Performs polar axis logic than needs to refer to the two paired 
            axes in order to function appropriately.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarAxes.RadiusAxis">
            <summary>
            The radius axis to refer to when performing axis calculations.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PolarAxes.AngleAxis">
            <summary>
            The angle axis to refer to when performing axis calculations.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAxes.#ctor(Infragistics.Controls.Charts.NumericRadiusAxis,Infragistics.Controls.Charts.NumericAngleAxis)">
            <summary>
            Constructs a PolarAxes instance.
            </summary>
            <param name="radiusAxis">The radius axis to refer to when performing axis calculations.</param>
            <param name="angleAxis">The angle axis to refer to when performing axis calculations.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAxes.GetXValue(System.Double,System.Double,Infragistics.Portable.Rect,Infragistics.Portable.Rect,System.Func{System.Double,System.Double})">
            <summary>
            Gets the X coordinate in the viewport coordinate system given an angle
            and a radius.
            </summary>
            <param name="angle">The angle for the point.</param>
            <param name="radius">The radius for the point.</param>
            <param name="windowRect">The window rectangle bounds.</param>
            <param name="viewportRect">The viewport rectangle bounds.</param>
            <param name="cosStrategy">A strategy for calculating cosines.</param>
            <returns>The X value of the point in scaled coordinates.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAxes.GetUnscaledValues(System.Double,System.Double,Infragistics.Portable.Rect,Infragistics.Portable.Rect,System.Double@,System.Double@)">
            <summary>
            Gets the axis angle and radius values from a point in viewport coordinates.
            </summary>
            <param name="scaledXValue">The X value of the point in scaled coordinates.</param>
            <param name="scaledYValue">The Y value of the point in scaled coordinates.</param>
            <param name="windowRect">The window rectangle bounds.</param>
            <param name="viewportRect">The viewport rectangle bounds.</param>
            <param name="unscaledAngle">Returns the angle axis value of the point.</param>
            <param name="unscaledRadius">Returns the radius axis value of the point.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAxes.GetYValue(System.Double,System.Double,Infragistics.Portable.Rect,Infragistics.Portable.Rect,System.Func{System.Double,System.Double})">
            <summary>
            Gets the Y coordinate in the viewport coordinate system given an angle
            and a radius.
            </summary>
            <param name="angle">The angle for the point.</param>
            <param name="radius">The radius for the point.</param>
            <param name="windowRect">The window rectangle bounds.</param>
            <param name="viewportRect">The viewport rectangle bounds.</param>
            <param name="sinStrategy">A strategy to calculate sines.</param>
            <returns>The Y value of the point in scaled coordinates.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.RadialAxes">
            <summary>
            Performs radial axis logic than needs to refer to the two paired 
            axes in order to function appropriately.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialAxes.RadiusAxis">
            <summary>
            The radius axis to refer to when performing axis calculations.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialAxes.AngleAxis">
            <summary>
            The angle axis to refer to when performing axis calculations.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAxes.#ctor(Infragistics.Controls.Charts.NumericRadiusAxis,Infragistics.Controls.Charts.CategoryAngleAxis)">
            <summary>
            Constructs a PolarAxes instance.
            </summary>
            <param name="radiusAxis">The radius axis to refer to when performing axis calculations.</param>
            <param name="angleAxis">The angle axis to refer to when performing axis calculations.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAxes.GetXValue(System.Double,System.Double,Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Gets the X coordinate in the viewport coordinate system given an angle
            and a radius.
            </summary>
            <param name="angle">The angle for the point.</param>
            <param name="radius">The radius for the point.</param>
            <param name="windowRect">The window rectangle bounds.</param>
            <param name="viewportRect">The viewport rectangle bounds.</param>
            <returns>The X value of the point in scaled coordinates.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAxes.GetUnscaledValues(System.Double,System.Double,Infragistics.Portable.Rect,Infragistics.Portable.Rect,System.Double@,System.Double@)">
            <summary>
            Gets the axis angle and radius values from a point in viewport coordinates.
            </summary>
            <param name="scaledXValue">The X value of the point in scaled coordinates.</param>
            <param name="scaledYValue">The Y value of the point in scaled coordinates.</param>
            <param name="windowRect">The window rectangle bounds.</param>
            <param name="viewportRect">The viewport rectangle bounds.</param>
            <param name="unscaledAngle">Returns the angle axis value of the point.</param>
            <param name="unscaledRadius">Returns the radius axis value of the point.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAxes.GetYValue(System.Double,System.Double,Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Gets the Y coordinate in the viewport coordinate system given an angle
            and a radius.
            </summary>
            <param name="angle">The angle for the point.</param>
            <param name="radius">The radius for the point.</param>
            <param name="windowRect">The window rectangle bounds.</param>
            <param name="viewportRect">The viewport rectangle bounds.</param>
            <returns>The Y value of the point in scaled coordinates.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.RadialAxisLabelPanel">
            <summary>
            Represents a panel control, containing radial axis labels.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialAxisLabelPanel.RotationCenter">
            <summary>
            Sets or gets the rotation center of the panel.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialAxisLabelPanel.CrossingAngle">
            <summary>
            Sets or gets the crossing angle of the panel.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialAxisLabelPanel.AxisIsNotEmbedded">
            <summary>
            Gets if the axis is external to the plot area.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialAxisLabelPanel.AxisIsEmbedded">
            <summary>
            Gets if the axis is embedded in the plot area.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAxisLabelPanel.ShouldTryStagger">
            <summary>
            Returns if staggering should be attempted.
            </summary>
            <returns>True if staggering should be attempted.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAxisLabelPanel.ShouldVerticalAlign">
            <summary>
            Returns if vertical alignment should be performed.
            </summary>
            <returns>True if vertical alignment should be performed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAxisLabelPanel.ApplyPanelRotation(Infragistics.Portable.Size)">
            <summary>
            Applies the rotation to the panel.
            </summary>
            <param name="finalSize">The final size of the plot area.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAxisLabelPanel.GetEffectiveAngle">
            <summary>
            Gets the effective angle for the panel.
            </summary>
            <returns>The angle.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAxisLabelPanel.ShouldRotate">
            <summary>
            Gets if the panel should rotate.
            </summary>
            <returns>True if the panel should rotate.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAxisLabelPanel.ShouldClip">
            <summary>
            Returns if the panel should clip labels.
            </summary>
            <returns>True if labels should be clipped.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAxisLabelPanel.SetLabelRotationTransform(Infragistics.Portable.Components.UI.FrameworkElement,System.Double)">
            <summary>
            Sets the rotation on a label.
            </summary>
            <param name="label">The label to rotate.</param>
            <param name="angle">The angle to rotate the label.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAxisLabelPanel.MinimumPosition">
            <summary>
            Returns teh minimum label position
            </summary>
            <returns>minimum</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAxisLabelPanel.MaximumPosition">
            <summary>
            Returns the maximum label position.
            </summary>
            <returns>maximum</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAxisLabelPanel.HideOptionalLabels(System.Collections.Generic.List{Infragistics.Portable.Rect},System.Collections.Generic.List{System.Boolean})">
            <summary>
            Hides any optional labels if collisions are occuring.
            </summary>
            <param name="rectangles">The label bounds list.</param>
            <param name="isOverlayList">Corresponding list of booleans indicating overlay status.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAxisLabelPanel.ShouldDisplay(System.Int32,Infragistics.Portable.Rect)">
            <summary>
            Determins if something should be displayed via its index and bounds.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAxisLabelPanel.ShowOptionalLabels">
            <summary>
            Shows any optional labels.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAxisLabelPanel.CreateTicks">
            <summary>
            Creates tickmarks.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.TimeAxisIntervalType">
            <summary>
            Enum representing a unit of time.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TimeAxisIntervalType.Ticks">
            <summary>
            Ticks are ten millionths of seconds.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TimeAxisIntervalType.Milliseconds">
            <summary>
            Milliseconds.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TimeAxisIntervalType.Seconds">
            <summary>
            Seconds.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TimeAxisIntervalType.Minutes">
            <summary>
            Minutes.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TimeAxisIntervalType.Hours">
            <summary>
            Hours.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TimeAxisIntervalType.Days">
            <summary>
            Days.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TimeAxisIntervalType.Weeks">
            <summary>
            Weeks.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TimeAxisIntervalType.Months">
            <summary>
            Months.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TimeAxisIntervalType.Years">
            <summary>
            Years.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VerticalPercentChangeScaler">
            <summary>
            A linear scaler which scales values according to their percent increase or decrease from a reference value. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalPercentChangeScaler.#ctor(Infragistics.Controls.Charts.PercentChangeYAxis)">
            <summary>
            Creates and returns a new instance of a VerticalPercentChangeScaler.
            </summary>
            <param name="axis">The axis hosting the scaler.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalPercentChangeScaler.CalculateRange(Infragistics.Controls.Charts.NumericAxisBase,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Calculates the range of the scaler.
            </summary>
            <param name="target">Target axis</param>
            <param name="minimumValue">Desired minimum value</param>
            <param name="maximumValue">Desired maximum value</param>
            <param name="actualMinimumValue">Actual minimum value</param>
            <param name="actualMaximumValue">Actual maximum value</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalPercentChangeScaler.GetScaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the scaled viewport value from an unscaled axis value.
            </summary>
            <param name="unscaledValue">The unscaled axis value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The scaled viewport value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.VerticalPercentChangeScaler.GetUnscaledValue(System.Double,Infragistics.Controls.Charts.ScalerParams)">
            <summary>
            Gets the unscaled axis value from an scaled viewport value.
            </summary>
            <param name="scaledValue">The scaled viewport value.</param>
            <param name="p">Scaler parameters</param>
            <returns>The unscaled axis value.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.AbsoluteVolumeOscillatorIndicatorStrategy">
            <summary>
            Represents a strategy for calculating an Absolute Volume Oscillator indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.AbsoluteVolumeOscillatorIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.AbsoluteVolumeOscillatorIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.AbsoluteVolumeOscillatorIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.AccumulationDistributionIndicatorStrategy">
            <summary>
            Represents a strategy for calculating an Accumulation/Distribution indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.AccumulationDistributionIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.AccumulationDistributionIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.AccumulationDistributionIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.AccumulationDistributionIndicatorStrategy.ProvideStream(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Provides a stream of calculated indicator values and does not fill
            the IndicatorColumn in the datasource.
            </summary>
            <param name="dataSource">The data required by the contract between these 
            strategies and the financial series.</param>
            <param name="supportingCalculations">The calculation strategies required by the 
            contract between these strategies and the finiancial series.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.AverageDirectionalIndexIndicatorStrategy">
            <summary>
            Represents the strategy for calculating a AverageDirectionalIndexIndicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.AverageDirectionalIndexIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.AverageDirectionalIndexIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.AverageDirectionalIndexIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.AverageTrueRangeIndicatorStrategy">
            <summary>
            Represents a strategy for calculating an Average True Range indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.AverageTrueRangeIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.AverageTrueRangeIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.AverageTrueRangeIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.BollingerBandWidthIndicatorStrategy">
            <summary>
            Represents the strategy for calculating a Bollinger Band Width indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.BollingerBandWidthIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.BollingerBandWidthIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.BollingerBandWidthIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.ChaikinOscillatorIndicatorStrategy">
            <summary>
            Represents the strategy for calculating a Chaikin Oscillator indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.ChaikinOscillatorIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.ChaikinOscillatorIndicatorStrategy.#ctor">
            <summary>
            Constructs a ChaikinOscillatorIndicatorStrategy
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.ChaikinOscillatorIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.ChaikinOscillatorIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.ChaikinVolatilityIndicatorStrategy">
            <summary>
            Represents the strategy for calculating a Chaikin Volatility indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.ChaikinVolatilityIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.ChaikinVolatilityIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.ChaikinVolatilityIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.CommodityChannelIndexIndicatorStrategy">
            <summary>
            Represents the strategy for calculating a Commodity Channel Index indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.CommodityChannelIndexIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.CommodityChannelIndexIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.CommodityChannelIndexIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.DetrendedPriceOscillatorIndicatorStrategy">
            <summary>
            Represents a strategy for calculating a Detrended Price Oscillator indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.DetrendedPriceOscillatorIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.DetrendedPriceOscillatorIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.DetrendedPriceOscillatorIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.EaseOfMovementIndicatorStrategy">
            <summary>
            Represents a strategy for calculating an Ease of Movement indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.EaseOfMovementIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.EaseOfMovementIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.EaseOfMovementIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.FastStochasticOscillatorIndicatorStrategy">
            <summary>
            Represents the strategy for calculating a FastStochasticOscillatorIndicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.FastStochasticOscillatorIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.FastStochasticOscillatorIndicatorStrategy.#ctor">
            <summary>
            Constructs a FastStochasticOscillatorIndicatorStrategy.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.FastStochasticOscillatorIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.FastStochasticOscillatorIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.ForceIndexIndicatorStrategy">
            <summary>
            Represents a strategy for calculating an Force Index indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.ForceIndexIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.ForceIndexIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.ForceIndexIndicatorStrategy.FI(Infragistics.Portable.Charts.FinancialCalculationDataSource)">
            <summary>
            Calculates the force index values for the target series.
            </summary>
            <param name="dataSource">The data to use for the calculation.</param>
            <returns>A list of force index values.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.ForceIndexIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.FullStochasticOscillatorIndicatorStrategy">
            <summary>
            Represents the strategy for calculating a FullStochasticOscillatorIndicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.FullStochasticOscillatorIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.FullStochasticOscillatorIndicatorStrategy.#ctor">
            <summary>
            Constructs a FullStochasticOscillatorIndicatorStrategy
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.FullStochasticOscillatorIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.FullStochasticOscillatorIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.PercentKCalculationStrategy">
            <summary>
            Represents the strategy for calculating a list of %K values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.PercentKCalculationStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.PercentKCalculationStrategy.ProvideStream(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Provides a stream of calculated indicator values and does not fill
            the IndicatorColumn in the datasource.
            </summary>
            <param name="dataSource">The data required by the contract between these 
            strategies and the financial series.</param>
            <param name="supportingCalculations">The calculation strategies required by the 
            contract between these strategies and the finiancial series.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.PercentKCalculationStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.MarketFacilitationIndexIndicatorStrategy">
            <summary>
            Represents the strategy for calculating a Market Facilitation Index indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.MarketFacilitationIndexIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.MarketFacilitationIndexIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.MarketFacilitationIndexIndicatorStrategy.CalculateIndicatorItem(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations,System.Int32)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <param name="currentIndex">The index in the indicator collection to calculate.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.MassIndexIndicatorStrategy">
            <summary>
            Represents the strategy for calculating a Mass Index indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.MassIndexIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.MassIndexIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.MassIndexIndicatorStrategy.HighLowRange(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Returns a list of range values between the high values and the low values.
            </summary>
            <param name="highColumn">The column from which to take the high values.</param>
            <param name="lowColumn">The column from which to take the low values.</param>
            <returns>The list of range values.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.MassIndexIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.MedianPriceIndicatorStrategy">
            <summary>
            Represents a strategy for calculating an Median Price indicator.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.MedianPriceIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.MedianPriceIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.MedianPriceIndicatorStrategy.CalculateIndicatorItem(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations,System.Int32)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <param name="currentIndex">The index in the indicator collection to calculate.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.MoneyFlowIndexIndicatorStrategy">
            <summary>
            Represents the strategy for calculating a Money Flow Index indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.MoneyFlowIndexIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.MoneyFlowIndexIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.MoneyFlowIndexIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.MovingAverageConvergenceDivergenceIndicatorStrategy">
            <summary>
            Represents the strategy for calculating a MovingAverageConvergenceDivergenceIndicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.MovingAverageConvergenceDivergenceIndicator"/>
            </remarks>    
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.MovingAverageConvergenceDivergenceIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.MovingAverageConvergenceDivergenceIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.NegativeVolumeIndexIndicatorStrategy">
            <summary>
            Represents the strategy for calculating a Negative Volume Index indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.NegativeVolumeIndexIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.NegativeVolumeIndexIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.NegativeVolumeIndexIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.OnBalanceVolumeIndicatorStrategy">
            <summary>
            Represents the strategy for calculating an On Balance Volume indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.OnBalanceVolumeIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.OnBalanceVolumeIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.OnBalanceVolumeIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.PercentagePriceOscillatorIndicatorStrategy">
            <summary>
            Represents a strategy for calculating an Percentage Price Oscillator indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.PercentagePriceOscillatorIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.PercentagePriceOscillatorIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.PercentagePriceOscillatorIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.PercentageVolumeOscillatorIndicatorStrategy">
            <summary>
            Represents a strategy for calculating an Absolute Volume Oscillator indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.AbsoluteVolumeOscillatorIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.PercentageVolumeOscillatorIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.PercentageVolumeOscillatorIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.PositiveVolumeIndexIndicatorStrategy">
            <summary>
            Represents the strategy for calculating a Positive Volume Index indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.PositiveVolumeIndexIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.PositiveVolumeIndexIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.PositiveVolumeIndexIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.PriceVolumeTrendIndicatorStrategy">
            <summary>
            Represents the strategy for calculating an Price Volume Trend indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.PriceVolumeTrendIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.PriceVolumeTrendIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.PriceVolumeTrendIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.RateOfChangeAndMomentumIndicatorStrategy">
            <summary>
            Represents the strategy for calculating a Rate of Change and Momentum indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.RateOfChangeAndMomentumIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.RateOfChangeAndMomentumIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.RateOfChangeAndMomentumIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.RelativeStrengthIndexIndicatorStrategy">
            <summary>
            Represents the strategy for calculating a Relative String Index indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.RelativeStrengthIndexIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.RelativeStrengthIndexIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.RelativeStrengthIndexIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.RelativeStrengthIndexIndicatorStrategy.ProvideStream(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Provides a stream of calculated indicator values and does not fill
            the IndicatorColumn in the datasource.
            </summary>
            <param name="dataSource">The data required by the contract between these 
            strategies and the financial series.</param>
            <param name="supportingCalculations">The calculation strategies required by the 
            contract between these strategies and the finiancial series.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.SlowStochasticOscillatorIndicatorStrategy">
            <summary>
            Represents the strategy for calculating a SlowStochasticOscillatorIndicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.SlowStochasticOscillatorIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.SlowStochasticOscillatorIndicatorStrategy.#ctor">
            <summary>
            Constructs a SlowStochasticOscillatorIndicatorStrategy.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.SlowStochasticOscillatorIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.SlowStochasticOscillatorIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.StandardDeviationIndicatorStrategy">
            <summary>
            Represents the strategy for calculating a Standard Deviation indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.StandardDeviationIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.StandardDeviationIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.StandardDeviationIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.StochRSIIndicatorStrategy">
            <summary>
            Represents the strategy for calculating a StochRSI indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.StochRSIIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.StochRSIIndicatorStrategy.#ctor">
            <summary>
            Constructs a StochRSI Indicator strategy.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.StochRSIIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.StochRSIIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.TRIXIndicatorStrategy">
            <summary>
            Represents the strategy for calculating a TRIX indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.TRIXIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.TRIXIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.TRIXIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.TypicalPriceIndicatorStrategy">
            <summary>
            Represents the strategy for calculating a typical price indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.TypicalPriceIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.TypicalPriceIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.TypicalPriceIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.UltimateOscillatorIndicatorCalculationStrategy">
            <summary>
            Represents the strategy for calculating a Ultimate Oscillator indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.UltimateOscillatorIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.UltimateOscillatorIndicatorCalculationStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.UltimateOscillatorIndicatorCalculationStrategy.BuyingPressure(Infragistics.Portable.Charts.FinancialCalculationDataSource)">
            <summary>
            Calculates a sequence representing the buying pressure of the provided data.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <returns>A sequence representing each buying pressure value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.UltimateOscillatorIndicatorCalculationStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.WeightedCloseIndicatorStrategy">
            <summary>
            Represents a strategy for calculating an Weighted Close indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.WeightedCloseIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.WeightedCloseIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.WeightedCloseIndicatorStrategy.CalculateIndicatorItem(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations,System.Int32)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <param name="currentIndex">The index in the indicator collection to calculate.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CalculationStrategies.WilliamsPercentRIndicatorStrategy">
            <summary>
            Represents the strategy for calculating a Williams %R indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.WilliamsPercentRIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.WilliamsPercentRIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CalculationStrategies.WilliamsPercentRIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.CustomIndicatorStrategy">
            <summary>
            Represents the strategy for calculating a custom indicator series.
            </summary>
            <remarks>
            For definition of indicator see: <see cref="T:Infragistics.Controls.Charts.CustomIndicator"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.CustomIndicatorStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.CustomIndicatorStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.IndicatorProxy.SetPeriodOverride(Infragistics.Controls.Charts.Series,System.Int32)">
            <summary>
            Sets the Period property.
            </summary>
            <param name="series">The series to set the Period on.</param>
            <param name="indicatorPeriod">The value for the Period property.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.IndicatorRenderer.RasterizeLine(System.Int32,System.Func{System.Int32,System.Double},System.Func{System.Int32,System.Double},System.Boolean,Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Graphics.Shapes.Path,Infragistics.Portable.Graphics.Shapes.Path,System.Double,System.Double,Infragistics.Portable.Clipper)">
            <summary>
            Renders into a potentially chunky polyline
            </summary>
            <param name="count">Number of points</param>
            <param name="x0">Bottom points x coordinate indexed left to right</param>
            <param name="y0">Bottom points y coordinate indexed left to right</param>
            <param name="colorByGradient">Whether to color by gradient.</param>
            <param name="windowRect">Chart's window</param>
            <param name="viewportRect">Chart's viewport</param>
            <param name="positivePath0">First positive path</param>
            <param name="negativePath0">First negative path</param>
            <param name="bucketSize">Bucket size</param>
            <param name="resolution">Resolution</param>
            <param name="clipper">The Clipper to use when clipping the given points to the target bounds.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.IndicatorRenderer.RasterizeArea(System.Int32,System.Func{System.Int32,System.Double},System.Func{System.Int32,System.Double},System.Boolean,Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Graphics.Shapes.Path,Infragistics.Portable.Graphics.Shapes.Path,Infragistics.Portable.Graphics.Shapes.Path,Infragistics.Portable.Graphics.Shapes.Path,System.Double,System.Double,System.Double,Infragistics.Portable.Clipper)">
            <summary>
            Renders a polygon
            </summary>
            <param name="count">Number of points</param>
            <param name="x0">Bottom points x coordinate indexed left to right</param>
            <param name="y0">Bottom points y coordinate indexed left to right</param>
            <param name="colorByGradient">Whether to color by gradient.</param>
            <param name="windowRect">Chart's window</param>
            <param name="viewportRect">Chart's viewport</param>
            <param name="positivePath0">First positive path</param>
            <param name="positivePath01">Second positive path</param>
            <param name="negativePath0">First negative path</param>
            <param name="negativePath01">Second negative path</param>
            <param name="worldZero">Zero line</param>
            <param name="bucketSize">Bucket size</param>
            <param name="resolution">Resolution</param>
            <param name="clipper">The Clipper to use when clipping the given points to the target bounds.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.IndicatorRenderer.RasterizeColumns(System.Int32,System.Func{System.Int32,System.Double},System.Func{System.Int32,System.Double},System.Boolean,Infragistics.Portable.Rect,System.Double,Infragistics.Portable.Pool{Infragistics.Portable.Graphics.Media.LineGeometry},Infragistics.Portable.Graphics.Shapes.Path,Infragistics.Portable.Graphics.Shapes.Path)">
            <summary>
            Generated the visuals for a set of columns based on the data.
            </summary>
            <param name="count">Number of points</param>
            <param name="x0">Bottom points x coordinate indexed left to right</param>
            <param name="y0">Bottom points y coordinate indexed left to right</param>
            <param name="colorByGradient">Whether to color by gradient</param>
            <param name="viewportRect">The viewport rectangle.</param>
            <param name="worldZero">Zero line</param>
            <param name="Columns">Column pool</param>
            <param name="positiveColumns">Positive columns path</param>
            <param name="negativeColumns">Negative columns path</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ItemwiseIndicatorCalculationStrategy">
            <summary>
            Represents a decoupled strategy for calculating a financial indicator from data
            provided by a financial series. Will be called seperately for each item.
            </summary>
            <remarks>
            The data which the strategy will use for its calculation is
            a simplified subset of the data that the series makes available and is defined by 
            the contract <see cref="T:Infragistics.Portable.Charts.FinancialCalculationDataSource"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemwiseIndicatorCalculationStrategy.CalculateIndicatorItem(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations,System.Int32)">
            <summary>
            Performs the calculation associated with this calculation strategy for one item.
            </summary>
            <param name="dataSource">The data required by the contract between these 
            strategies and the financial series.</param>
            <param name="supportingCalculations">The calculation strategies required by the 
            contract between these strategies and the finiancial series.</param>
            <param name="currentIndex">The index in the indicator collection to calculate.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemwiseIndicatorCalculationStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            The calculation strategy is required to express which columns its values are based on
            so that the series knows when to ask for recalculation.
            </summary>
            <param name="dataSource">The data source we will be calculating for.</param>
            <param name="supportingCalculations">The supporting calculations to be used
            in the calculation.</param>
            <returns>The list of column names that this calculation is based on.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.ItemwiseStrategyCalculationStrategy">
            <summary>
            Indicator calculation strategy that handles applying an itemwise strategy
            to the indicator values that are requested to be calculated.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ItemwiseStrategyCalculationStrategy.ItemwiseStrategy">
            <summary>
            The strategy that will be applied itemwize across the calculation.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemwiseStrategyCalculationStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Exposes which columns this strategy uses in its calculation so that the
            consumers will know when they should ask the strategy to recalculate.
            </summary>
            <param name="dataSource">The data source to be used in the calculation</param>
            <param name="supportingCalculations">The other calculations that this indicator may depend on.</param>
            <returns>The list of column names that this strategy depends on.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ItemwiseStrategyCalculationStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation for the indicator.
            </summary>
            <param name="dataSource">The data provided to perform the calculation.</param>
            <param name="supportingCalculations">The supporting calculation strategies provided to perform the calculation.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.IndicatorCalculationStrategy">
            <summary>
            Represents a decoupled strategy for calculating a financial indicator from data
            provided by a financial series. 
            </summary>
            <remarks>
            The data which the strategy will use for its calculation is
            a simplified subset of the data that the series makes available and is defined by 
            the contract <see cref="T:Infragistics.Portable.Charts.FinancialCalculationDataSource"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.IndicatorCalculationStrategy.CalculateIndicator(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Performs the calculation associated with this calculation strategy.
            </summary>
            <param name="dataSource">The data required by the contract between these 
            strategies and the financial series.</param>
            <param name="supportingCalculations">The calculation strategies required by the 
            contract between these strategies and the financial series.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.IndicatorCalculationStrategy.BasedOn(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            The calculation strategy is required to express which columns its values are based on
            so that the series knows when to ask for recalculation.
            </summary>
            <param name="dataSource">The data source we will be calculating for.</param>
            <param name="supportingCalculations">The supporting calculations to be used
            in the calculation.</param>
            <returns>The list of column names that this calculation is based on.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.StreamingIndicatorCalculationStrategy">
            <summary>
            Implementers of IStreamingIndicatorCalculationStrategy must be able to provide
            an enumeration of calculated values rather that filling the IndicatorColumn directly.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StreamingIndicatorCalculationStrategy.ProvideStream(Infragistics.Portable.Charts.FinancialCalculationDataSource,Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations)">
            <summary>
            Provides a stream of calculated indicator values and does not fill
            the IndicatorColumn in the data source.
            </summary>
            <param name="dataSource">The data required by the contract between these 
            strategies and the financial series.</param>
            <param name="supportingCalculations">The calculation strategies required by the 
            contract between these strategies and the financial series.</param>
            <returns>True if the calculation could be completed.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.BollingerBandsOverlayView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BollingerBandsOverlayView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.BollingerBandsOverlayView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicatorView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicatorView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicatorView.RenderMarkersOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the markers for this series view.
            </summary>
            <param name="context">The rendering context.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialIndicatorView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PriceChannelOverlayView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PriceChannelOverlayView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PriceChannelOverlayView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.FinancialEventHandler">
            <summary>
            For handling financial calculation events.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The parameters of the event.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialBucketCalculator.FirstBucket">
            <summary>
            Gets or sets the first visible bucket of the series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialBucketCalculator.LastBucket">
            <summary>
            Gets or sets the last visible bucket of the series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FinancialBucketCalculator.BucketSize">
            <summary>
            Gets or sets the bucket size of the series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeriesView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeriesView.SetupAppearanceOverride">
            <summary>
            Applies appearance settings to the series visuals.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeriesView.RenderMarkersOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the markers for this series view.
            </summary>
            <param name="context">The rendering context.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialPriceSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeriesView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.FinancialSeriesView.ApplyDropShadowDefaultSettings">
            <summary>
            Applies the default appearance settings for drop shadows in this series view.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.LegendMouseEventHandler">
            <summary>
            Represents the method that will handle legend mouse related events.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.LegendMouseButtonEventHandler">
            <summary>
            Represents the method that will handle legend mouse button related events.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScaleLegendView.LegendScaleElement">
            <summary>
            Gets the shape that represents the legend scale.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScaleLegendView.MinText">
            <summary>
            Gets the TextBlock that shows the minimum scale value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScaleLegendView.MaxText">
            <summary>
            Gets the TextBlock that shows the maximum scale value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScaleLegendView.MakeDirty">
            <summary>
            Mark the ScaleLegendView as dirty in order to trigger a refresh.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.LabelsPosition">
            <summary>
            Describes available positions of labels.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LabelsPosition.None">
            <summary>
            No labels will be displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LabelsPosition.Center">
            <summary>
            Labels will be displayed in the center.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LabelsPosition.InsideEnd">
            <summary>
            Labels will be displayed inside and by the edge of the container.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LabelsPosition.OutsideEnd">
            <summary>
            Labels will be displayed outside the container.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LabelsPosition.BestFit">
            <summary>
            Labels will automatically decide their location.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.LeaderLineType">
            <summary>
            Describes available types of a callout line for the labels.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LeaderLineType.Straight">
            <summary>
            A straight line is drawn between the slice and its label.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LeaderLineType.Arc">
            <summary>
            A curved line is drawn between the slice and its label. The line follows makes a natural turn from the slice to the label.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LeaderLineType.Spline">
            <summary>
            A curved line is drawn between the slice and its label. The line starts radially from the slice and then turns to the label.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.OthersCategoryType">
            <summary>
            Describes available behaviors for calculating and grouping slices into the Others slice.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.OthersCategoryType.Number">
            <summary>
            Data value is compared directly to the value of OthersCategoryThreshold.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.OthersCategoryType.Percent">
            <summary>
            Data value is compared to OthersCategoryThreshold as a percentage of the total.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.SliceSelectionMode">
            <summary>
            Describes available modes for selecting slices.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SliceSelectionMode.Manual">
            <summary>
            Slices can be programmatically selected but cannot be selected through the UI.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SliceSelectionMode.Single">
            <summary>
            Single slice can be selected through the UI.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SliceSelectionMode.Multiple">
            <summary>
            Multiple slices can be selected through the UI.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.LabelClickEventHandler">
            <summary>
            Event handler for LabelClick event.
            </summary>
            <param name="sender">Chart control</param>
            <param name="e">Label parameters</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.SelectedItemChangedEventHandler">
            <summary>
            Represents the method that will handle the SelectedItemChanged event.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.SelectedItemChangingEventHandler">
            <summary>
            Represents the method that will handle the SelectedItemChanging event.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.SelectedItemsChangedEventHandler">
            <summary>
            Represents the method that will handle the SelectedItemChanging event.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.SelectedItemsChangingEventHandler">
            <summary>
            Represents the method that will handle the SelectedItemsChanging event.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.SliceClickEventHandler">
            <summary>
            Event handler for SliceClick event.
            </summary>
            <param name="sender">Chart control</param>
            <param name="e">Slice parameters</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.PieChartFormatLabelEventHandler">
            <summary>
            Represents delegate for PieChartFormatLabel.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.IndexCollection">
            <summary>
            Represents a collection of distinct integers.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.IndexCollection.InsertItem(System.Int32,System.Int32)">
            <summary>
            Inserts an integer into the collection.
            </summary>
            <param name="index">Index of the new value</param>
            <param name="item">Item to be inserted</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.IndexCollection.SetItem(System.Int32,System.Int32)">
            <summary>
            Replaces an item at a given index with a new item.
            </summary>
            <param name="index">Index of the value to be replaced</param>
            <param name="item">Value to be added</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.PieChartSliceSelector">
            <summary>
            Helper class for selecting pie slices.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartSliceSelector.IsSliceDataSelected(Infragistics.Controls.Charts.Slice)">
            <summary>
            Determines if the slice data is selected
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartSliceSelector.IsSliceDataInSelectedItems(Infragistics.Controls.Charts.Slice)">
            <summary>
            Determines if the slice data is present inside the pie chart SelectedItems collection
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartSliceSelector.GetSliceItemForSingleSelect(Infragistics.Controls.Charts.Slice)">
            <summary>
            This method returns the slice data item to be selected.  If the data item is already selected
            then it will return null for deselection.
            </summary>
            <param name="slice">The pie slice to select.</param>
            <returns>The data item to be selected.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartSliceSelector.MultiSelectItem(System.Object,System.Boolean)">
            <summary>
            Adds the supplied item to the SelectedItems collection if it is not already there.  Removes the
            item if it is already there.
            </summary>
            <param name="item">The item to add / remove.</param>
            <param name="forceRemove">Force remove the item.</param>
            <returns>Whether the item addition or removal was canceled.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartSliceSelector.MultiSelectItem(System.Object)">
            <summary>
            Adds the supplied item to the SelectedItems collection if it is not already there.  Removes the
            item if it is already there.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartSliceSelector.RemoveFromSelectedItems(System.Object)">
            <summary>
            Helper method to make handling the SelectedItemsChanging event easier to fire. 
            </summary>
            <param name="item">The item to remove.</param>
            <returns>Whether the removal was canceled or not.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartSliceSelector.AddToSelectedItems(System.Object)">
            <summary>
            Helper method to make handling the SelectedItemsChanging event easier to fire.
            </summary>
            <param name="item">The item to add.</param>
            <returns>Whether the addition was canceled or not.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartSliceSelector.SingleSelectSlice(Infragistics.Controls.Charts.Slice)">
            <summary>
            Select a slice using single select logic.  This will deselect the slice if it is already selected.
            </summary>
            <param name="slice">The slice to select.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartSliceSelector.MultiSelectSlice(Infragistics.Controls.Charts.Slice)">
            <summary>
            Select a slice using multi-select logic.  This will deselect the slice if it was already selected.
            </summary>
            <param name="slice">The slice to select.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartSliceSelector.SetSliceSelectionState(Infragistics.Controls.Charts.Slice)">
            <summary>
            Selects the Slice and stops it from triggering the owner's SelectSlice() method.  The XamPieChart will handle keeping
            the SelectedSlices in sync with the actual slice selection.
            </summary>
            <param name="slice">The slice to select</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.Slice">
            <summary>
            Represents a content control that holds a single chart slice.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Slice.#ctor">
            <summary>
            Creates an instance of the Slice.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Slice.StartAngleProperty">
            <summary>
            Identifies the StartAngle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Slice.StartAngle">
            <summary>
            Gets the shape's start angle.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Slice.EndAngleProperty">
            <summary>
            Identifies the EndAngle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Slice.EndAngle">
            <summary>
            Gets the shape's end angle.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Slice.InnerExtentStartProperty">
            <summary>
            Identifies the InnerExtentStart dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Slice.InnerExtentStart">
            <summary>
            Gets the shape's start inner extent.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Slice.InnerExtentEndProperty">
            <summary>
            Identifies the InnerExtentEnd dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Slice.InnerExtentEnd">
            <summary>
            Gets the shape's end inner extent.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Slice.IsSelectedProperty">
            <summary>
            Identifies the IsSelected dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Slice.IsSelected">
            <summary>
            Gets or sets whether the slice is selected.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Slice.IsExplodedProperty">
            <summary>
            Identifies the IsExploded dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Slice.IsExploded">
            <summary>
            Gets or sets whether the slice is exploded.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Slice.IsOtherSliceProperty">
            <summary>
            Identifies the IsOtherSlice dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Slice.IsOthersSlice">
            <summary>
            Gets whether the slice represents the Others slice.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Slice.OriginProperty">
            <summary>
            Identifies the Origin dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Slice.Origin">
            <summary>
            Gets the origin of the slice.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Slice.ExplodedOriginProperty">
            <summary>
            Identifies the ExplodedOrigin dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Slice.ExplodedOrigin">
            <summary>
            Gets the origin of the exploded slice.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Slice.RadiusProperty">
            <summary>
            Identifies the Radius dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Slice.Radius">
            <summary>
            Gets the slice's radius.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Slice.ExplodedRadiusProperty">
            <summary>
            Identifies the ExplodedRadius dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Slice.ExplodedRadius">
            <summary>
            Gets the radius of the exploded slice.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Slice.IndexProperty">
            <summary>
            Identifies the Index dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Slice.Index">
            <summary>
            Gets the index of the slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Slice.Foreground">
            <summary>
            The color for the label within this slice.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Slice.ForegroundProperty">
            <summary>
            Dependency property definition for the <see cref="P:Infragistics.Controls.Charts.Slice.Foreground"/> counterpart. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Slice.StrokeThicknessProperty">
            <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Slice.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness of the slice.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Slice.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Slice.GetSliceBounds">
            <summary>
            Gets the square bounds of the slice with the origin at the center.
            </summary>
            <remarks>This rect is different from SlicePath.Data.Bounds</remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.Slice.GetSliceOrigin">
            <summary>
            Gets the origin of the slice.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Slice.CreateShape">
            <summary>
            Returns a silverlight shape that represents the current arc.
            </summary>
            <returns>Silverlight shape that represents the current arc.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Slice.ContainsPoint(Infragistics.Portable.Point)">
            <summary>
            Returns whether the slice contains the specified point.
            </summary>
            <param name="p">The point to check.</param>
            <returns>True if the slice contains the point.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Slice.ExportVisualData">
            <summary>
            Returns a set of visual properties that represent the current slice.
            </summary>
            <returns>A set of visual properties of the current slice.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.Slice.Background">
            <summary>
            Background brush of the slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Slice.BorderBrush">
            <summary>
            Border brush of the slice.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBaseView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBaseView.MakeDirty">
            <summary>
            Mark the PieChartBaseView as dirty in order to trigger a refresh.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.PieChartBaseView.ToolTipContext">
            <summary>
            Gets or sets the data context for the tooltip.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBaseView.IsValid">
            <summary>
            Returns true if the view is considered valid and ready to render.
            </summary>
            <returns>True if the view is valid and is ready to render.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PieChartBaseView.PreRender">
            <summary>
            Called before a render pass starts.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.PieChartStyleInfo">
            <summary>
            Stores styling info about the pie chart.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SliceView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAreaSeriesView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAreaSeriesView.SetupAppearanceOverride">
            <summary>
            Applies appearance settings to the series visuals.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAreaSeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAreaSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarAreaSeriesView.ApplyDropShadowDefaultSettings">
            <summary>
            Applies the default appearance settings for drop shadows in this series view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBaseView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBaseView.RemoveUnusedMarkers(System.Collections.Generic.IDictionary{System.Object,Infragistics.Controls.Charts.OwnedPoint})">
            <summary>
            Removes the unused markers from the Series.
            </summary>
            <param name="list">The list of used markers which should not be removed.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBaseView.GetMarkerLocations">
            <summary>
            Gets the locations of all markers.
            </summary>
            <returns>An array of points which are the locations of all makers.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarBaseView.RenderMarkersOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the markers for this series view.
            </summary>
            <param name="context">The rendering context.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarLineSeriesBaseView.ApplyDropShadowDefaultSettings">
            <summary>
            Applies the default appearance settings for drop shadows in this series view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarLineSeriesView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarLineSeriesView.SetupAppearanceOverride">
            <summary>
            Applies appearance settings to the series visuals.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarLineSeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarLineSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarScatterSeriesView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarScatterSeriesView.ApplyDropShadowDefaultSettings">
            <summary>
            Applies the default appearance settings for drop shadows in this series view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarSplineAreaSeriesView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarSplineAreaSeriesView.SetupAppearanceOverride">
            <summary>
            Applies appearance settings to the series visuals.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarSplineAreaSeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarSplineAreaSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarSplineAreaSeriesView.ApplyDropShadowDefaultSettings">
            <summary>
            Applies the default appearance settings for drop shadows in this series view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarSplineSeriesView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarSplineSeriesView.SetupAppearanceOverride">
            <summary>
            Applies appearance settings to the series visuals.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarSplineSeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarSplineSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolarSplineSeriesView.ApplyDropShadowDefaultSettings">
            <summary>
            Applies the default appearance settings for drop shadows in this series view.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialBucketCalculator.FirstBucket">
            <summary>
            The first visible bucket of values.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialBucketCalculator.LastBucket">
            <summary>
            The last visible bucket of values.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialBucketCalculator.BucketSize">
            <summary>
            The size of the visible buckets of values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialBucketCalculator.CalculateBuckets(System.Double)">
            <summary>
            Caculates which buckets are visible and their size.
            </summary>
            <param name="resolution">The current resolution of the chart.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AnchoredRadialSeriesView.RenderMarkersOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the markers for this series view.
            </summary>
            <param name="context">The rendering context.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAreaSeriesView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAreaSeriesView.SetupAppearanceOverride">
            <summary>
            Applies appearance settings to the series visuals.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAreaSeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialAreaSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialColumnSeriesView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialColumnSeriesView.SetupItemAppearanceOverride(System.Object,System.Int32)">
            <summary>
            Applies appearance settings to the item visual.
            </summary>
            <param name="item">The item visual.</param>
            <param name="index">The index of the item in the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialColumnSeriesView.SetupItemHitAppearanceOverride(System.Object,System.Int32)">
            <summary>
            Applies appearance settings indicating a hit to the item visual.
            </summary>
            <param name="item">The item visual.</param>
            <param name="index">The index of the item in the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialColumnSeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialColumnSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialLineSeriesView.SetupAppearanceOverride">
            <summary>
            Applies appearance settings to the series visuals.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialLineSeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialLineSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialLineSeriesView.ApplyDropShadowDefaultSettings">
            <summary>
            Applies the default appearance settings for drop shadows in this series view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialPieSeriesView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialPieSeriesView.SetupItemAppearanceOverride(System.Object,System.Int32)">
            <summary>
            Applies appearance settings to the item visual.
            </summary>
            <param name="item">The item visual.</param>
            <param name="index">The index of the item in the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialPieSeriesView.SetupItemHitAppearanceOverride(System.Object,System.Int32)">
            <summary>
            Applies appearance settings indicating a hit to the item visual.
            </summary>
            <param name="item">The item visual.</param>
            <param name="index">The index of the item in the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialPieSeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialPieSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeAreaSeriesView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeAreaSeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeAreaSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeColumnSeriesView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeColumnSeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeColumnSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.BubbleMarkerManager">
            <summary>
            This class is responsible for creating and managing the markers of a bubble series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.BubbleMarkerManager.RadiusColumn">
            <summary>
            Gets or sets which column from the datasource is used to map radius values.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.BubbleMarkerManager.ActualRadiusColumn">
            <summary>
            Gets or sets the list of scaled radius values.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.BubbleMarkerManager.ActualMarkers">
            <summary>
            Gets or sets the list of displayed markers.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BubbleMarkerManager.#ctor(System.Func{System.Object,Infragistics.Controls.Charts.Marker},System.Func{System.Int32,System.Object},System.Action{System.Collections.Generic.IDictionary{System.Object,Infragistics.Controls.Charts.OwnedPoint}},System.Func{Infragistics.Portable.Point[]},System.Func{System.Collections.Generic.IList{System.Int32}})">
            <summary>
            creates a new instance of the BubbleMarkerManager.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BubbleMarkerManager.WinnowMarkers(System.Collections.Generic.IDictionary{System.Object,Infragistics.Controls.Charts.OwnedPoint},System.Int32,Infragistics.Portable.Rect,Infragistics.Portable.Rect,System.Double)">
            <summary>
            Filter out markers that should not be visible.
            </summary>
            <param name="markers">A dictionary containing the locations of all markers.</param>
            <param name="maximumMarkers">The maximum number of markers which can be displayed.</param>
            <param name="windowRect">A rectangle representing the scroll window.  Rectangle coordinates are based on the range of zero to one.</param>
            <param name="viewportRect">A rectangle representing the viewport, in device coordinates.</param>
            <param name="currentResolution">The current Series Resolution.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.BubbleMarkerManager.Render(System.Collections.Generic.IDictionary{System.Object,Infragistics.Controls.Charts.OwnedPoint},System.Boolean)">
            <summary>
            Renders the given markers.
            </summary>
            <param name="markers">A dictionary containing the locations of all markers.</param>
            <param name="lightweight">Whether or not to enable a lower-fidelity rendering mode with better performance.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.BubbleSeriesView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BubbleSeriesView.CreateMarkerSizes">
            <summary>
            Populates the list of actual marker radii based on the scaling algorithm.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BubbleSeriesView.SetMarkerColors">
            <summary>
            Sets a color on each bubble based on the existing color axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBaseView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBaseView.RemoveUnusedMarkers(System.Collections.Generic.IDictionary{System.Object,Infragistics.Controls.Charts.OwnedPoint})">
            <summary>
            Removes the unused markers from the Series.
            </summary>
            <param name="list">The list of used markers which should not be removed.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBaseView.GetMarkerLocations">
            <summary>
            Gets the locations of all markers.
            </summary>
            <returns>An array of points which are the locations of all makers.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBaseView.GetActiveIndexes">
            <summary>
            Gets the indexes of the active items.
            </summary>
            <returns>An list of integers which are the indexes of the active items.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterBaseView.RenderMarkersOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the markers for this series view.
            </summary>
            <param name="context">The rendering context.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterLineSeriesView.SetupAppearanceOverride">
            <summary>
            Applies appearance settings to the series visuals.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterLineSeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterLineSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterLineSeriesView.ApplyDropShadowDefaultSettings">
            <summary>
            Applies the default appearance settings for drop shadows in this series view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterSeriesView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterSeriesView.ApplyDropShadowDefaultSettings">
            <summary>
            Applies the default appearance settings for drop shadows in this series view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterSplineSeriesView.SetupAppearanceOverride">
            <summary>
            Applies appearance settings to the series visuals.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterSplineSeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterSplineSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterSplineSeriesView.ApplyDropShadowDefaultSettings">
            <summary>
            Applies the default appearance settings for drop shadows in this series view.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.StackedSeriesCreatedEventHandler">
            <summary>
            Event handler for the SeriesCreated event.
            </summary>
            <param name="sender">event sender</param>
            <param name="e">event parameters</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedBarBucketCalculator.CalculateBuckets(System.Double)">
            <summary>
            Calculates the bucket values to use based on the desired resolution.
            </summary>
            <param name="resolution">The resolution desired.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.StackedSeriesCollection">
            <summary>
            Represents a collection of StackedFragmentSeries used by XamDataChart stacked series.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesCollection.#ctor">
            <summary>
            Initializes a default, empty StackedSeriesCollection.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.StackedSeriesCollection.CollectionResetting">
            <summary>
            CollectionResetting is raised before the collection reset occurs.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesCollection.ClearItems">
            <summary>
            Clears the contained items of the collection, but provides a preview of the occurrance 
            in the form of the CollectionResetting event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AreaFragmentView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AreaFragmentView.SetupAppearanceOverride">
            <summary>
            Applies appearance settings to the series visuals.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AreaFragmentView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AreaFragmentView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragmentView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragmentView.SetupItemHitAppearanceOverride(System.Object,System.Int32)">
            <summary>
            Applies appearance settings indicating a hit to the item visual.
            </summary>
            <param name="item">The item visual.</param>
            <param name="index">The index of the item in the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragmentView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColumnFragmentView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.LineFragmentView.SetupAppearanceOverride">
            <summary>
            Applies appearance settings to the series visuals.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LineFragmentView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.LineFragmentView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineAreaFragmentView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineAreaFragmentView.SetupAppearanceOverride">
            <summary>
            Applies appearance settings to the series visuals.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineAreaFragmentView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineAreaFragmentView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineFragmentView.SetupAppearanceOverride">
            <summary>
            Applies appearance settings to the series visuals.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineFragmentView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SplineFragmentView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.StackedSeriesManager">
            <summary>
            This class manages the creation of various visual series fragments.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesManager.CreateSeries(Infragistics.Controls.Charts.StackedFragmentSeries)">
            <summary>
            Creates a series fragment based on the parent series type.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesView.PlotArea">
            <summary>
            Gets the plotting canvas.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.StackedSeriesView.SeriesPanel">
            <summary>
            Gets the grid contraining the child series
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesView.OnContextProvided(Infragistics.RenderingContext,Infragistics.RenderingContext)">
            <summary>
            Called when the rendering contexts are provided.
            </summary>
            <param name="context">The rendering context.</param>
            <param name="hitContext">The hit rendering context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.StackedSeriesView.ApplyDropShadowDefaultSettings">
            <summary>
            Applies the default appearance settings for drop shadows in this series view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarBucketCalculator.CalculateBuckets(System.Double)">
            <summary>
            Calculates the bucket values to use based on the desired resolution.
            </summary>
            <param name="resolution">The resolution desired.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarSeriesView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarSeriesView.SetupItemHitAppearanceOverride(System.Object,System.Int32)">
            <summary>
            Applies appearance settings indicating a hit to the item visual.
            </summary>
            <param name="item">The item visual.</param>
            <param name="index">The index of the item in the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarSeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.BarSeriesView.ApplyDropShadowDefaultSettings">
            <summary>
            Applies the default appearance settings for drop shadows in this series view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterContourSeriesView.SetupItemAppearanceOverride(System.Object,System.Int32)">
            <summary>
            Applies appearance settings to the item visual.
            </summary>
            <param name="item">The item visual.</param>
            <param name="index">The index of the item in the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterContourSeriesView.SetupItemHitAppearanceOverride(System.Object,System.Int32)">
            <summary>
            Applies appearance settings indicating a hit to the item visual.
            </summary>
            <param name="item">The item visual.</param>
            <param name="index">The index of the item in the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterContourSeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterContourSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ScatterPolylineSeriesView">
            <summary>
            View class for ScatterPolylineSeries.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolylineSeriesView.#ctor(Infragistics.Controls.Charts.ScatterPolylineSeries)">
            <summary>
            ScatterPolylineSeriesView constructor.
            </summary>
            <param name="model">The ScatterPolylineSeries in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolylineSeriesView.GetShapeGeometry(System.Int32,System.Collections.Generic.List{Infragistics.Portable.PointCollection})">
            <summary>
            Gets the PathGeometry for the given list of points.
            </summary>
            <param name="i">The shape index.</param>
            <param name="points">The list of points to convert to a PathGeometry.</param>
            <returns>The PathGeometry to render for the given list of points.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolylineSeriesView.ApplyStyling(Infragistics.Portable.Components.UI.FrameworkElement,System.Object)">
            <summary>
            Applies visual styling to the given FrameworkElement based on the given data item.
            </summary>
            <param name="shape">The FrameworkElement in context.</param>
            <param name="item">The data item in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolylineSeriesView.ApplyData(Infragistics.Portable.Components.UI.FrameworkElement,Infragistics.Portable.Graphics.Media.PathGeometry)">
            <summary>
            Applies the given Path data to the given FrameworkElement.
            </summary>
            <param name="element">The FrameworkElement to display the path data in.</param>
            <param name="data">The Path data to be displayed.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolylineSeriesView.SetupItemAppearanceOverride(System.Object,System.Int32)">
            <summary>
            Applies appearance settings to the item visual.
            </summary>
            <param name="item">The item visual.</param>
            <param name="index">The index of the item in the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolylineSeriesView.SetupItemHitAppearanceOverride(System.Object,System.Int32)">
            <summary>
            Applies appearance settings indicating a hit to the item visual.
            </summary>
            <param name="item">The item visual.</param>
            <param name="index">The index of the item in the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolylineSeriesView.ShouldRenderShape(Infragistics.Portable.Rect)">
            <summary>
            Tests to see if a shape with the given bounds should be rendered.
            </summary>
            <param name="bounds">The bounds of the shape under observation.</param>
            <returns>True if the shape should be rendered, otherwise false.</returns>
            <remarks>The value of the ShapeFilterResolution property will determine the result when this method is called.</remarks>
        </member>
        <member name="T:Infragistics.Controls.Charts.ScatterAreaSeriesView">
            <summary>
            Visuals for a ScatterAreaSeries.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterAreaSeriesView.ItemIndexes">
            <summary>
            The indexes of the items corresponding to each pixel in the image.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeriesView.#ctor(Infragistics.Controls.Charts.ScatterAreaSeries)">
            <summary>
            Creates and returns a new instance of a ScatterAreaSeriesView.
            </summary>
            <param name="model">The Series responsible for this View.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeriesView.AttachImage(System.Object)">
            <summary>
            Attaches an image to the UI.
            </summary>
            <param name="rootImage">The image to attach.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeriesView.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterAreaSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ScatterPolygonSeriesView">
            <summary>
            Visuals for a ScatterPolygonSeries.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeriesView.#ctor(Infragistics.Controls.Charts.ScatterPolygonSeries)">
            <summary>
            Creates and returns a new instance of a ScatterPolygonSeriesView.
            </summary>
            <param name="model">The ScatterPolygonSeries responsible for this view.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeriesView.RemoveUnusedMarkers(System.Collections.Generic.IDictionary{System.Object,Infragistics.Controls.Charts.OwnedPoint})">
            <summary>
            Removes the unused markers from the Series.
            </summary>
            <param name="list">The list of used markers which should not be removed.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeriesView.GetMarkerLocations">
            <summary>
            Gets the locations of all markers.
            </summary>
            <returns>An array of points which are the locations of all makers.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeriesView.GetActiveIndexes">
            <summary>
            Gets the indexes of the active items.
            </summary>
            <returns>An array of integers which are the indexes of the active items.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeriesView.GetShapeGeometry(System.Int32,System.Collections.Generic.List{Infragistics.Portable.PointCollection})">
            <summary>
            Gets the PathGeometry for the given list of points.
            </summary>
            <param name="i">The shape index.</param>
            <param name="points">The list of points to convert to a PathGeometry.</param>
            <returns>The PathGeometry to render for the given list of points.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeriesView.ApplyStyling(Infragistics.Portable.Components.UI.FrameworkElement,System.Object)">
            <summary>
            Applies visual styling to the given FrameworkElement based on the given data item.
            </summary>
            <param name="shape">The FrameworkElement in context.</param>
            <param name="item">The data item in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeriesView.ApplyData(Infragistics.Portable.Components.UI.FrameworkElement,Infragistics.Portable.Graphics.Media.PathGeometry)">
            <summary>
            Applies the given Path data to the given FrameworkElement.
            </summary>
            <param name="element">The FrameworkElement to display the path data in.</param>
            <param name="data">The Path data to be displayed.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeriesView.MarkerCreate">
            <summary>
            Creates a marker object.
            </summary>
            <returns>The created marker.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.ScatterPolygonSeriesView.VisibleMarkers">
            <summary>
            The list of the visible markers.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeriesView.MarkerDestroy(Infragistics.Controls.Charts.Marker)">
            <summary>
            Destroys a marker from the pool.
            </summary>
            <param name="marker">The marker to destroy.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeriesView.MarkerActivate(Infragistics.Controls.Charts.Marker)">
            <summary>
            Activates a marker object from the pool.
            </summary>
            <param name="marker">The marker to activate.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeriesView.MarkerDisactivate(Infragistics.Controls.Charts.Marker)">
            <summary>
            Deactivates a marker from the pool.
            </summary>
            <param name="marker">The marker to deactivate.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeriesView.SetupMarkerAppearanceOverride(System.Object,System.Int32)">
            <summary>
            Applies appearance settings to the marker visual.
            </summary>
            <param name="item">The item visual.</param>
            <param name="index">The index of the item in the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeriesView.SetupMarkerHitAppearanceOverride(System.Object,System.Int32)">
            <summary>
            Applies appearance settings indicating a hit to the marker visual.
            </summary>
            <param name="item">The item visual.</param>
            <param name="index">The index of the item in the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeriesView.RenderMarkersOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the markers for this series view.
            </summary>
            <param name="context">The rendering context.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeriesView.GetHitMarker(Infragistics.Portable.Point)">
            <summary>
            Gets the marker matching the given position.
            </summary>
            <param name="point">The point to test for a marker.</param>
            <returns>The marker at the specified point.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ScatterPolygonSeriesView.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="visualData">The visual data to export into.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ShapeSeriesViewBase">
            <summary>
            Base class for views of ShapeSeries.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesViewBase.#ctor(Infragistics.Controls.Charts.ShapeSeriesBase)">
            <summary>
            ShapeSeriesViewBase constructor.
            </summary>
            <param name="model">The ShapeSeriesBase in context.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesViewBase.MarkerPositions">
            <summary>
            A dictionary of the marker positions by item index.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesViewBase.CreateElementsPool">
            <summary>
            Create the pool of FrameworkElements which represent the series visuals.
            </summary>
            <returns>A pool of FrameworkElements with Create, Activate, Disactivate, and Destroy delegates defined.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesViewBase.ShouldRenderShape(Infragistics.Portable.Rect)">
            <summary>
            Tests to see if a shape with the given bounds should be rendered.
            </summary>
            <param name="bounds">The bounds of the shape under observation.</param>
            <returns>True if the shape should be rendered, otherwise false.</returns>
            <remarks>The value of the ShapeFilterResolution property will determine the result when this method is called.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesViewBase.ToPointCollections(System.Collections.Generic.List{Infragistics.Controls.Charts.FlattenedShape})">
            <summary>
            Converts a List of FlattenedShapes to a List of PointCollections.
            </summary>
            <param name="points">The List of FlattenedShapes to convert.</param>
            <returns>A List of PointCollections constructed from the given List of FlattenedShapes.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesViewBase.ShapeModel">
            <summary>
            The Series responsible for this View.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesViewBase.GetShapeElement(System.Int32,System.Object)">
            <summary>
            Gets the visual element at the given index.
            </summary>
            <param name="i">The index of the element to return.</param>
            <param name="item">The item in context.  This will be applied to the element's DataContext.</param>
            <returns>The visual element at the given index.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesViewBase.ApplyData(Infragistics.Portable.Components.UI.FrameworkElement,Infragistics.Portable.Graphics.Media.PathGeometry)">
            <summary>
            Applies the given Path data to the given FrameworkElement.
            </summary>
            <param name="element">The FrameworkElement to display the path data in.</param>
            <param name="data">The Path data to be displayed.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesViewBase.ApplyStyling(Infragistics.Portable.Components.UI.FrameworkElement,System.Object)">
            <summary>
            Applies visual styling to the given FrameworkElement based on the given data item.
            </summary>
            <param name="shape">The FrameworkElement in context.</param>
            <param name="item">The data item in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesViewBase.ClearValues(Infragistics.Portable.Components.UI.FrameworkElement)">
            <summary>
            Clears all item-specific bindings and settings for a FrameworkElement, so that it can be recycled and used for another item.
            </summary>
            <param name="element">The FrameworkElement to clear.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesViewBase.GetShapeGeometry(System.Int32,System.Collections.Generic.List{Infragistics.Portable.PointCollection})">
            <summary>
            Gets the PathGeometry for the given list of points.
            </summary>
            <param name="i">The shape index.</param>
            <param name="points">The list of points to convert to a PathGeometry.</param>
            <returns>The PathGeometry to render for the given list of points.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesViewBase.VisibleElements">
            <summary>
            The list of visible elements.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ShapeSeriesViewBase.Elements">
            <summary>
            The FrameworkElements which are the ShapeSeries visuals.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesViewBase.SetupItemAppearanceOverride(System.Object,System.Int32)">
            <summary>
            Applies appearance settings to the item visual.
            </summary>
            <param name="item">The item visual.</param>
            <param name="index">The index of the item in the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesViewBase.SetupItemHitAppearanceOverride(System.Object,System.Int32)">
            <summary>
            Applies appearance settings indicating a hit to the item visual.
            </summary>
            <param name="item">The item visual.</param>
            <param name="index">The index of the item in the series.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesViewBase.RenderOverride(Infragistics.RenderingContext,System.Boolean)">
            <summary>
            Renders the series to the RenderingContext.
            </summary>
            <param name="context">The RenderingContext to render to.</param>
            <param name="isHitContext">True if this render is for interactivity.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ShapeSeriesViewBase.ExportViewShapes(System.Object)">
            <summary>
            Exports the shape information managed by this view.
            </summary>
            <param name="svd">The visual data to export into.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ColorScaleInterpolationMode">
            <summary>
            Describes available modes of interpolation on a color scale.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ColorScaleInterpolationMode.Select">
            <summary>
            Select one of the colors in the palette.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ColorScaleInterpolationMode.InterpolateRGB">
            <summary>
            Interpolate between colors in the palette using RGB interpolation.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ColorScaleInterpolationMode.InterpolateHSV">
            <summary>
            Interpolate between colors in the palette using HSV interpolation.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CustomContourValueResolverEventHandler">
            <summary>
            Represents the method that will handle the events of the CustomContourValueResolver. 
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.PolylineBuilder">
            <summary>
            Utility class for piecewise construction of indexed polylines.
            </summary>
            <remarks>
            This class represents polyline point as integer ids with the assumption that
            two vertices are identical if they have identical ids. The class itself
            has no need for any vertex-specific information such as its coordinates.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolylineBuilder.Clear">
            <summary>
            Clears all polylines from the current object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolylineBuilder.GetPolylines">
            <summary>
            Gets the list of polylines for the current object.
            </summary>
            <remarks>
            There may be zero or more constructed polylines each of length two or more. A polyline
            is represented as a list of integer ids as passed to the AddSegment method. Polylines
            do not contain self-intersections or adjacent coincident point. A polyline may form
            a loop, in which case its first and last point are identical.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.PolylineBuilder.AddSegment(System.Int32,System.Int32)">
            <summary>
            Adds a segment to the current object.
            </summary>
            <param name="begin">Id of the first point in the segment</param>
            <param name="end">Id of the end point in the segment</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ContourBuilder">
            <summary>
            Utility class for piecewise construction of edge-based contours.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ContourBuilder.Clear">
            <summary>
            Clears all polylines and point from the current object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ContourBuilder.X">
            <summary>
            Gets the list of x coordinates for the line in the current object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ContourBuilder.Y">
            <summary>
            Gets the list of y coordinates for the line in the current object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ContourBuilder.Point(System.Int32,System.Double,System.Double,System.Double,System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculates an edge point for the current object and returns its point id.
            </summary>
            <remarks>
            The begin and edge point ids are hashed to produce a unique point id. The current implementation
            of the hash function is reliable for ids of less than 65536.
            </remarks>
            <param name="b">Edge begin point id</param>
            <param name="e">Edge end point id</param>
            <param name="xb">Edge begin point x coordinate.</param>
            <param name="yb">Edge begin point y coordinate.</param>
            <param name="zb">Edge begin point z coordinate.</param>
            <param name="xe">Edge end point x coordinate.</param>
            <param name="ye">Edge end point y coordinate.</param>
            <param name="ze">Edge end point z coordinate.</param>
            <param name="z">Contour v.</param>
            <returns>Unique vertex id.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.FlattenedShape">
            <summary>
            Represents a flattened shape
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FlattenedShape.Shape">
            <summary>
            Gets or sets points of the shape
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FlattenedShape.Bounds">
            <summary>
            Gets or sets actual bounds of the shape
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FlattenedShape.FullBounds">
            <summary>
            Gets or sets full bounds of the shape
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.HighlightingManager">
            <summary>
            Class for managing highlighting operations.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HighlightingManager.#ctor">
            <summary>
            HighlightingManager constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HighlightingManager.StartHighlight(Infragistics.Controls.Charts.HighlightingInfo)">
            <summary>
            Starts the highlight operation.
            </summary>
            <param name="info">The HighlightingInfo in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.HighlightingManager.EndHighlight(Infragistics.Controls.Charts.HighlightingInfo)">
            <summary>
            Ends the highlight operation.
            </summary>
            <param name="info">The HighlightingInfo in context.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.HighlightingManager.Clear">
            <summary>
            Resets the state of the HighlightingManager.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HighlightingManager.GetHighlightingInfo(Infragistics.Controls.Charts.Series,Infragistics.Portable.IFastItemsSource,Infragistics.Controls.Charts.Axis,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets the HighlightingInfo matching the given criteria.
            </summary>
            <param name="owner">The series.</param>
            <param name="itemsSource">The FastItemsSource.</param>
            <param name="indexAxis">The axis.</param>
            <param name="startIndex">The index at which to start the search.</param>
            <param name="endIndex">The index at which to end the search.</param>
            <param name="isMarker">True to search for a marker HighlightingInfo.</param>
            <returns>The HighlightingInfo matching the given criteria.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.HighlightingManager.DirtySeries">
            <summary>
            A list of series pending update.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.HighlightingManager.Tick(System.Double)">
            <summary>
            Progress the highlighting incrementally.
            </summary>
            <param name="progress">A number between 0 and 1 representing the progress.</param>
            <returns>True if the highlighting is still running; otherwise, False.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.HighlightingManager.InProgress">
            <summary>
            Boolean indicating whether a highlighting is in progress.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.HighlightingManager.MaxHighlightingProgress">
            <summary>
            The maximum progress of all active highlightings.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.HighlightingManager.SumHighlightingProgress">
            <summary>
            The sum of the progress of all active highlightings.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.HighlightingManager.MaxMarkerHighlightingProgress">
            <summary>
            The maximum progress of all active marker highlightings.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.HighlightingManager.SumMarkerHighlightingProgress">
            <summary>
            The sum of the progress of all active marker highlightings.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SeriesViewerInteractionManager.Anchor">
            <summary>
            anchor (mouse down or multi-touch) in grid area coordinates.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesViewerInteractionManager.StartWindowOperation(Infragistics.Controls.SeriesViewer,Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Starts the window operation.
            </summary>
            <param name="target">The target series viewer.</param>
            <param name="pt">The pt.</param>
            <param name="isFinger">if set to <c>true</c> a touch pointer is used.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.SeriesViewerInteractionManager.IsTileZoomRunning">
            <summary>
            Gets if there is a tiled zoom running.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SeriesViewerInteractionManager.MouseOverSeries">
            <summary>
            Gets or sets the series that the pointer is considered to be over.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SeriesViewerInteractionManager.MouseOverContext">
            <summary>
            Gets or sets the data context that the pointer is considered to be over.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SeriesViewerInteractionManager.HasUserSetMobileMode">
            <summary>
            Gets if the user has indicated the current mobile mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesInteractionManager.GetInterpolatedSeriesValue(Infragistics.Controls.Charts.Series,System.Double,System.Collections.Generic.IList{System.Double},System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Gets a data value based on the surrounding data items.
            </summary>
            <param name="target">The series in context.</param>
            <param name="p">The distance from prevItem, expressed as a value between 0 and 1.</param>
            <param name="column">The series data values.</param>
            <param name="prevItem">The index of the previous data item.</param>
            <param name="nextItem">The index of the next data item.</param>
            <param name="unsortedPrevItem">The unsorted index of the previous data item.</param>
            <param name="unsortedNextItem">The unsorted index of the next data item.</param>
            <param name="offset">The distance between the edge of the axis and the first or last data item.</param>
            <param name="isSorting">True if the associated axis is one that sorts its items.</param>
            <returns>A value interpolated at a distance of p between prevItem and nextItem.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SeriesInteractionManager.GetMatchingBuckets(Infragistics.Controls.Charts.Series,Infragistics.Controls.Charts.CategoryAxisBase,System.Collections.Generic.List{System.Double[]},System.Int32,System.Int32,Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Gets the data values present at a given point.
            </summary>
            <param name="target">The series in context.</param>
            <param name="categoryAxis">The axis in context.</param>
            <param name="buckets">The data values for the series.</param>
            <param name="bucketSize">The number of data items represented by each bucket of data values.</param>
            <param name="firstBucket">The index of the first visible bucket of data values on the axis.</param>
            <param name="world">The world coordinates to use.</param>
            <param name="skipUnknowns">If true, unknown values will be skipped.</param>
            <returns>An array of buckets containing data values.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.SeriesInteractionManager.LastHoverItem">
            <summary>
            Keeps track of the most recent item that was hovered over. Used for the mouse leave event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SeriesInteractionManager.IsMouseEnterDeferred">
            <summary>
            Gets or sets a value indicating whether the mouse enter will be deferred or no.
            </summary>
            <value>
            <c>true</c> if this instance defers the mouse enter; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Infragistics.Controls.Charts.SeriesInteractionManager.IsMouseLeaveDeferred">
            <summary>
            Gets or sets a value indicating whether the mouse/pointer enter will be deferred or no.
            </summary>
            <value>
            <c>true</c> if this instance deferes the mouse leave; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Infragistics.Controls.Charts.DataChartVisualDataManager.ExportTitleBounds(Infragistics.Portable.Components.UI.Controls.TextBlock,Infragistics.Controls.SeriesViewer)">
            <summary>
            Exports bounds of a TextBlock with the axis title, relative to the labels panel
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.FunnelDataContext">
            <summary>
            Represents contextual data for the funnel chart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FunnelDataContext.Item">
            <summary>
            The data item that is in context.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.FunnelDataContext.Index">
            <summary>
            The index of the data item that is in context.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.FunnelFrame">
            <summary>
            Represents a visual frame for the funnel chart.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.FunnelSliceDisplay">
            <summary>
            Describes available behaviors for displaying height of the funnel slices.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FunnelSliceDisplay.Uniform">
            <summary>
            The slice heights should be uniform.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.FunnelSliceDisplay.Weighted">
            <summary>
            The slice heights should be weighted by value.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.IItemProvider">
            <summary>
            A source for data items.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.IItemProvider.GetItem(System.Int32)">
            <summary>
            Gets the data item at the specified index from the data item source.
            </summary>
            <param name="index">The index of the item to retrieve.</param>
            <returns>The specified item.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.IItemProvider.Count">
            <summary>
            Gets the number of items in the source.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.IOuterLabelWidthDecider">
            <summary>
            Represents the object that has the responsibility to decide the width required for the labels.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.IOuterLabelWidthDecider.DecideWidth(Infragistics.Controls.Charts.Util.ObjectColumn)">
            <summary>
            Determines the required with to render the specified labels.
            </summary>
            <param name="labelinfos">The labels that need to be rendered.</param>
            <returns>The width required to render the labels.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.OuterLabelAlignment">
            <summary>
            Describes available types of alignment used by the outer labels of the funnel chart.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.OuterLabelAlignment.Left">
            <summary>
            The labels will be displayed to the left of the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.OuterLabelAlignment.Right">
            <summary>
            The labels will be displayed to the right of the chart.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.SliceAppearance">
            <summary>
            Stores information about how a funnel slice should be rendered.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SliceAppearance.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.CanvasTop">
            <summary>
            The distance from the slice to the top of the containing canvas.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.CanvasBottom">
            <summary>
            The distance from the slice to the bottom of the containing canvas.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.Offset">
            <summary>
            Gets or sets the offset to render the slice at.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.UpperLeft">
            <summary>
            Gets or sets the position of the upper left point.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.BezierPoints">
            <summary>
            Gets or sets the left hand side rasterization of the bezier curve.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.RightBezierPoints">
            <summary>
            Gets or sets the right hand side rasterization of the bezier curve.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.Points">
            <summary>
            Gets or sets the aggregated points of the slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.UpperRight">
            <summary>
            Gets or sets the upper right point of the slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.LowerRight">
            <summary>
            Gets or sets the lower right point of the slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.LowerLeft">
            <summary>
            Gets or sets the lower left point of the slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.Style">
            <summary>
            Gets or sets the style of the slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.Fill">
            <summary>
            Gets or sets the fill of the slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.Outline">
            <summary>
            Gets or sets the outline of the slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.InnerLabel">
            <summary>
            Gets or sets the inner label of the slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.InnerLabelPosition">
            <summary>
            Gets or sets the position of the inner label of the slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.HasInnerLabel">
            <summary>
            Gets or sets whether the slice has an inner label.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.Item">
            <summary>
            Gets or sets the item that is associated with the slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.Index">
            <summary>
            Gets or sets the index that is associated with the slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.InnerLabelBounds">
            <summary>
            Gets or sets the bounding rectangle for the slice's inner bounds.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.OuterLabelBounds">
            <summary>
            Gets or sets the bounding rectangle for the slice's outer bounds.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.InnerLabelBrush">
            <summary>
            Gets or sets the inner label brush.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.OuterLabelBrush">
            <summary>
            Gets or sets the outer label brush.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.SliceAppearance._visibility">
            
            /// /// /// 
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.Visibility">
            <summary>
            Gets or sets the slice's visibility.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.IsSelected">
            <summary>
            Gets or sets the sliced state.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.OutlineThickness">
            <summary>
            Gets or sets the stroke thickness of the slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceAppearance.Opacity">
            <summary>
            Gets or sets the slice opacity.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.SliceInfo">
            <summary>
            Represents information about a funnel slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.SliceInfo.OuterLabel">
            <summary>
            Sets or Gets the outer label of a funnel slice
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.SliceSelectionManager">
            <summary>
            Manages the selection of slices.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SliceSelectionManager.ToggleSelection(System.Int32,System.Object)">
            <summary>
            Toggles the selection of a slice at a given index.
            </summary>
            <param name="index">The index of the slice whose selection should be toggled.</param>
            <param name="item">The item at the specified index.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SliceSelectionManager.IsSelected(System.Int32)">
            <summary>
            Determines if the slice at a given index is selected.
            </summary>
            <param name="index">The index to use.</param>
            <returns>Whether the slice at the specified index is selected.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SliceSelectionManager.Any">
            <summary>
            Returns true if any of the slices are selected.
            </summary>
            <returns>True, if any of the slices are selected.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SliceSelectionManager.IsUnselected(System.Int32)">
            <summary>
            Determines if the slice at a given index is unselected.
            </summary>
            <param name="index">The index to use.</param>
            <returns>Whether the slice at the specified index is selected.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SliceSelectionManager.DataUpdated(Infragistics.Controls.Charts.Messaging.DataUpdatedMessage,Infragistics.Controls.Charts.Util.DoubleColumn)">
            <summary>
            Should be called to notify the manager that the data indexing has changed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.XamFunnelController">
            <summary>
            Represents the main logic of the funnel chart. Determines what should be rendered but not the how.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.DoubleAnimator_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Represents an animation tick.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelController.DoubleAnimator">
            <summary>
            Handles the animation concerns of the funnel chart.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.MessageReceived(Infragistics.Controls.Charts.Messaging.Message)">
            <summary>
            Main message entry point.
            </summary>
            <param name="m">The message received.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.SizeValid">
            <summary>
            Determines if the size is valid, to allow for rendering.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.IsValid">
            <summary>
            Determines if the internal state is valid, to allow for rendering.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.RefreshVisuals">
            <summary>
            Refresh the visual components of the chart if necessary.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.Plot(System.Boolean,System.Boolean,System.Boolean,System.Double,System.Double)">
            <summary>
            Plots the current frame, and triggers animation if necessary.
            </summary>
            <param name="plotSlices">Indicates if the slices should be rendered.</param>
            <param name="plotOuterLabels">Indicates if the outer labels should be rendered.</param>
            <param name="plotInnerLabels">Indicates if the inner labels should be rendered.</param>
            <param name="plotAreaWidth">Indicates the available width in which to render.</param>
            <param name="outerLabelWidth">Indicates width in which the outer labels should be rendered.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.PlotFrame(Infragistics.Controls.Charts.FunnelFrame,System.Boolean,System.Boolean,System.Boolean,System.Double,System.Double)">
            <summary>
            Plots the current frame.
            </summary>
            <param name="frame">The frame to update with the current render.</param>
            <param name="plotSlices">Indicates if the slices should be plotted.</param>
            <param name="plotOuterLabels">Indicates if the outer labels should be plotted.</param>
            <param name="plotInnerLabels">Indicates if the inner labels should be plotted.</param>
            <param name="plotAreaWidth">Indicates the width in which to render the slices.</param>
            <param name="outerLabelWidth">Indicates the width in which to render the outer labels.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.AddBezierPoints(Infragistics.Controls.Charts.SliceAppearance,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Determines the bezier points to add for a slice.
            </summary>
            <param name="sliceAppearance">The appearance parameters for the slice.</param>
            <param name="currentTop">The top of the current slice.</param>
            <param name="currentBottom">The bottom of the current slice.</param>
            <param name="plotAreaCenter">The center of the plot area.</param>
            <param name="offsetx">The x offset of the top left of the slice area.</param>
            <param name="offsety">The y offset of the top left of the slice area.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.PointDiffers(Infragistics.Portable.Point,Infragistics.Portable.Point)">
            <summary>
            Determines if two points differ.
            </summary>
            <param name="p1">The first point to compare</param>
            <param name="p2">The second point to compare</param>
            <returns>True if the points differ.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.InitializeBezier(System.Double,System.Double)">
            <summary>
            Initializes the parameters of the bezier curve that defines the edge of the funnel.
            </summary>
            <param name="plotAreaWidth">The width of the slice plot area.</param>
            <param name="plotAreaCenter">The center of the slice plot area.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.GetOuterLabel(System.Int32)">
            <summary>
            Gets the outer label at the specified index
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.GetInnerLabel(System.Int32)">
            <summary>
            Gets the inner label at the specified index.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.GetSliceStyle(System.Int32)">
            <summary>
            Gets the style for the slice at the specified index.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.GetSliceOutline(System.Int32)">
            <summary>
            Gets the outline brush for the slice at the specified index.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.GetSliceFill(System.Int32)">
            <summary>
            Gets the fill brush for the slice at the specified index.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.GetWidthAt(System.Double,System.Double)">
            <summary>
            Gets the width of the funnel at the specified height.
            </summary>
            <param name="plotAreaWidth">The width of the entire slice area.</param>
            <param name="currentTop">The y value to get the width for.</param>
            <returns>The width at the specified height.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.GetSortedIndices">
            <summary>
            Gets the sorted indexes for the slices.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.DisplayFrame(Infragistics.Controls.Charts.FunnelFrame)">
            <summary>
            Sends a frame to be rendered.
            </summary>
            <param name="frame">The frame to be rendered.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.UpdatePanelWidth(System.String,System.Double)">
            <summary>
            Sends that a panel should be resized in the view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.ShouldAnimate">
            <summary>
            Determines if animation should be performed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.SendClearMessage(System.String)">
            <summary>
            Sends that the view should clear the contents of a content area.
            </summary>
            <param name="areaID">The content area to clear the contents of.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.GetOuterLabels">
            <summary>
            Returns the outer labels for the chart.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.DataUpdatedMessageReceived(Infragistics.Controls.Charts.Messaging.Message)">
            <summary>
            The data model has been updated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.PropertyChangedMessageReceived(Infragistics.Controls.Charts.Messaging.Message)">
            <summary>
            Called when a property on the model has changed.
            </summary>
            <param name="m">The message received.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.ViewPropertyChangedMessageReceived(Infragistics.Controls.Charts.Messaging.Message)">
            <summary>
            Called when a property changes in the view, that we need to know about.
            </summary>
            <param name="m">The message received.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.ViewportChangedMessageReceived(Infragistics.Controls.Charts.Messaging.Message)">
            <summary>
            Called when the viewport changed in the view.
            </summary>
            <param name="m">The message received.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.MouseButtonMessageReceived(Infragistics.Controls.Charts.Messaging.Message)">
            <summary>
            Called when a mouse button interaction occurs.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.OnSliceClicked(System.Int32)">
            <summary>
            Called when a slice is clicked.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.MouseMoveMessageReceived(Infragistics.Controls.Charts.Messaging.Message)">
            <summary>
            Called when the mouse moves over the chart.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.MouseLeaveMessageReceived(Infragistics.Controls.Charts.Messaging.Message)">
            <summary>
            Is called when the mouse leaves the controls view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.UpdateToolTip(Infragistics.Portable.Point)">
            <summary>
            Updates the tooltip to have new position and content.
            </summary>
            <param name="position">The new position for the tooltip.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.GetTooltipPosition(Infragistics.Portable.Point,System.Object)">
            <summary>
            Gets the correct position to display the tooltip.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.GetHoveredSliceIndex(Infragistics.Portable.Point)">
            <summary>
            Gets the index of the slice that is currently being hovered.
            </summary>
            <param name="point">The mouse position.</param>
            <returns>The hovered slice index.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.GetPlotAreaWidth">
            <summary>
            Gets the width of the plot area.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.GetSliceByYValue(System.Double)">
            <summary>
            Gets the slice that appears at the given y value.
            </summary>
            <param name="yVal">The y value to get the slice for.</param>
            <returns>The slice at the given y value.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.GetCurrentFunnelFrame">
            <summary>
            Gets the current displayed frame for mouse interaction purposes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelController.UserSelectedItemsChangedMessageReceived(Infragistics.Controls.Charts.Messaging.Message)">
            <summary>
            Called when the user indicates which slices should be selected.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.FunnelSliceClickedEventHandler">
            <summary>
            Event handler for when a funnel slice is clicked.
            </summary>
            <param name="sender">The owner of the slice clicked.</param>
            <param name="args">Information about the clicked slice.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.XamFunnelConnector">
            <summary>
            Connects the model, view, and controller of the funnel chart.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.XamFunnelSlice">
            <summary>
            Represents a slice in the funnel chart.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelSlice.#ctor">
            <summary>
            Initializes a default, empty XamFunnelSlice object. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelSlice.LabelControl">
            <summary>
            The label control associated with the slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelSlice.Owner">
            <summary>
            The owner of the slice.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelSlice.StrokeThickness">
            <summary>
            Gets or sets the thickness to use for the stroke of the slice.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelSlice.StrokeThicknessProperty">
            <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelSlice.Fill">
            <summary>
            Gets or sets the brush to use for the filled portion of the slice.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelSlice.FillProperty">
            <summary>
            Identifies the Fill dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelSlice.Outline">
            <summary>
            Gets or sets the brush to use for the stroke portion of the slice.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelSlice.OutlineProperty">
            <summary>
            Identifies the Outline dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelSlice.ActualFill">
            <summary>
            Gets or sets the effective brush to use for the filled portion of the slice.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelSlice.ActualFillProperty">
            <summary>
            Identifies the ActualFill dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelSlice.ActualOutline">
            <summary>
            Gets or sets the effective brush to use for the stroke portion of the slice.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelSlice.ActualOutlineProperty">
            <summary>
            Identifies the ActualOutline dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamFunnelSlice.LabelVisibility">
            <summary>
            Gets or sets whether the inner label is visible or not. 
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamFunnelSlice.LabelVisibilityProperty">
            <summary>
            Identifies the LabelVisibility dependency property.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.PointList">
            <summary>
            A list of points.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.XamFunnelView">
            <summary>
            Represents the visual portion of a funnel chart.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelView.QueueWork(System.Action)">
            <summary>
            Queues the given action for execution after the currently executing code has finished.
            </summary>
            <param name="work">The action to be queued.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelView.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelView.OnResize">
            <summary>
            Invoked when the component is resized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelView.DecideWidth(Infragistics.Controls.Charts.Util.ObjectColumn)">
            <summary>
            Determines the required with to render the specified labels.
            </summary>
            <param name="labels">The labels that need to be rendered.</param>
            <returns>The width required to render the labels.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamFunnelView.PreRender">
            <summary>
            Called before a render pass starts.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CategoryChartType">
            <summary>
            Describes available types of data visualizations in the Category Chart
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryChartType.Line">
            <summary> Specifies category line series with markers at each data point </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryChartType.Area">
            <summary> Specifies category area series </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryChartType.Column">
            <summary> Specifies category column chart with vertical rectangles at each data point </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryChartType.Point">
            <summary> Specifies category point chart with markers at each data point </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryChartType.StepLine">
            <summary> Specifies category step line chart </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryChartType.StepArea">
            <summary> Specifies category step area chart </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryChartType.Spline">
            <summary> Specifies category spline line series with markers at each data point </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryChartType.SplineArea">
            <summary> Specifies category spline area series </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryChartType.Waterfall">
            <summary> Specifies category waterfall chart </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CategoryChartType.Auto">
            <summary> Specifies automatic selection of chart type based on suggestions from Data Adapter </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ToolTipType">
            <summary>
            An enum representing the available tooltip types to display in the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ToolTipType.Default">
            <summary>
            Display default tooltip for each series in the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ToolTipType.Item">
            <summary>
            Display individual tooltips for all series in the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ToolTipType.Category">
            <summary>
            Display combined tooltip for all series in the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ToolTipType.None">
            <summary>
            Display no tooltips in the chart.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.CrosshairsDisplayMode">
            <summary>
            An enum representing the available display modes of crosshairs lines in the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairsDisplayMode.Default">
            <summary>
            Display default number of crosshair lines in the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairsDisplayMode.None">
            <summary>
            Display no crosshair lines in the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairsDisplayMode.Horizontal">
            <summary>
            Display horizontal line of crosshairs in the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairsDisplayMode.Vertical">
            <summary>
            Display vertical line of crosshairs in the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.CrosshairsDisplayMode.Both">
            <summary>
            Display both horizontal and vertical lines of crosshairs in the chart.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ChartSeriesEventHandler">
            <summary>
            Delegate for chart's SeriesAdded and SeriesRemoved events
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">Contextual information about the event being raised.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.DomainChartSeriesPointerEventHandler">
            <summary>
            Delegate for chart's mouse events
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">Contextual information about the event being raised.</param>
        </member>
        <member name="T:Infragistics.Controls.SeriesViewer">
            <summary>
            Represents a control for viewing series objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.#ctor">
            <summary>
            Instantiates an instance of a SeriesViewer.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.InitializeScalingRatio">
            <summary>
            Sets the initial pixel scaling ratio for the component to its automatic value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.Series">
            <summary>
            Gets the current SeriesViewer object's child Series. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.RemoveDataSource(System.Object)">
            <summary>
            Removes the DataSource setting for the given argument.
            </summary>
            <param name="item">The object to remove the data source from; typically a Series or Axis.</param>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.IsHighlightingInitialized">
            <summary>
            Checks if highlighting has been initialized.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.HighlightingManager">
            <summary> internal </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.HighlightingAnimator">
            <summary> internal </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.UpdateHighlights(System.Double)">
            <summary> internal </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.HideToolTip">
            <summary>
            Hides the active main tooltip, if displayed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.GetBrushByIndex(System.Int32)">
            <summary>
            Gets the appropriate color for a series based on index.
            </summary>
            <param name="index">The index to use.</param>
            <returns>The color to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.GetOutlineByIndex(System.Int32)">
            <summary>
            Gets the appropriate color for an outline based on index.
            </summary>
            <param name="index">The index to use.</param>
            <returns>The color to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.GetMarkerBrushByIndex(System.Int32)">
            <summary>
            Gets the appropriate color for a marker based on index.
            </summary>
            <param name="index">The index to use.</param>
            <returns>The color to use.</returns>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.GetMarkerOutlineByIndex(System.Int32)">
            <summary>
            Gets the appropriate color for a marker outline based on index.
            </summary>
            <param name="index">The index to use.</param>
            <returns>The color to use.</returns>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.ChartContentManager">
            <summary>
            Helps manage the SeriesViewer content.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.CrosshairPoint">
            <summary>
            Gets or sets the cross hair point (in world coordinates)
            </summary>
            <remarks>
            Either or both of the crosshair point's X and Y may be set to double.NaN, in which
            case the relevant crosshair line is hidden.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.Legend">
            <summary>
            Gets or sets which legend to use for all series in this SeriesViewer, unless otherwise specified by the Series.Legend property.
            </summary>
            <remarks>
            This is generally expressed as an element name binding, as the Legend must exist at some other position in the layout.
            This property only indicates which Legend to use and will not alone cause the legend to be visible.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.LegendProperty">
            <summary>
            Identifies the Legend dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.AnimateSeriesWhenAxisRangeChanges">
            <summary>
            Gets or sets whether the series animations should be allowed when a range change has been detected on an axis.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.AnimateSeriesWhenAxisRangeChangesProperty">
            <summary>
            Identifies the AnimateSeriesWhenAxisRangeChanges dependency property.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.SeriesViewer.PropertyChanged">
            <summary>
            Notifies clients that a property value has changed.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.SeriesViewer.PropertyUpdated">
            <summary>
            Occurs when the value of a property is updated.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.RaisePropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            Raises the PropertyUpdated event.
            </summary>
            <param name="name">The name of the property that has been changed.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="E:Infragistics.Controls.SeriesViewer.SeriesCursorMouseMove">
            <summary>
            Occurs when the cursors are moved over a series in this SeriesViewer.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.SeriesViewer.SeriesMouseLeftButtonDown">
            <summary>
            Occurs when the left mouse button is pressed while the mouse pointer is over a Series.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.SeriesViewer.SeriesMouseLeftButtonUp">
            <summary>
            Occurs when the left mouse button is released while the mouse pointer is over a Series.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.SeriesViewer.SeriesMouseRightButtonDown">
            <summary>
            Occurs when the right mouse button is pressed while the mouse pointer is over a Series.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.SeriesViewer.SeriesMouseRightButtonUp">
            <summary>
            Occurs when the right mouse button is released while the mouse pointer is over a Series.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.SeriesViewer.SeriesMouseMove">
            <summary>
            Occurs when the mouse pointer moves while over a Series.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.SeriesViewer.SeriesMouseEnter">
            <summary>
            Occurs when the mouse pointer enters a Series.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.SeriesViewer.SeriesMouseLeave">
            <summary>
            Occurs when the mouse pointer leaves a Series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.ViewportRect">
            <summary>
            Gets the viewport rectangle associated with the SeriesViewer, the physical dimensions of the plot area.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.EffectiveViewport">
            <summary>
            Gets the EffectiveViewport rectangle, representing the effective viewport area after margins have been subtracted.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.ContentViewport">
            <summary>
            Represents the subset area within the viewport into which content should be mapped.
            This is the projection of the current EffectiveViewport into the viewport at current zoom level.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.GetCurrentContentViewport(Infragistics.Portable.Rect,Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Gets the current content viewport.
            </summary>
            <param name="viewportRect">The viewport bounds.</param>
            <param name="effectiveViewportRect">The effective viewport bounds.</param>
            <param name="windowRect">The zoom window.</param>
            <returns>The current content viewport.</returns>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.ComputeEffectiveViewport(Infragistics.Portable.Rect)">
            <summary>
            Method used to calculate the effective viewport bounds.
            </summary>
            <param name="viewportRect">The actual viewport bounds.</param>
            <returns>The effective viewport bounds.</returns>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.GetSafeViewportForInitialZoom">
            <summary>
            Returns the safe viewport bounds for the inital zoom level of the chart (the unit window rectangle).
            If there is an effective viewport set, and this is smaller than the viewport, this will resolve to the effective viewport.
            </summary>
            <returns>Resolved viewport bounds</returns>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.UpdateAxisViewport(Infragistics.Controls.Charts.Axis)">
            <summary>
            Set the given Axis viewport equal to the SeriesViewer viewport.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.WindowRectPropertyName">
            <summary>
            The property name of the WindowRect property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.WindowRectProperty">
            <summary>
            Identifies the WindowRect dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.WindowRect">
            <summary>
            A rectangle representing the portion of the SeriesViewer currently in view.
            </summary>
            <remarks>
            A rectangle at X=0, Y=0 with a Height and Width of 1 implies the entire plotting area is in view.  A Height and Width of .5 would imply that the view is halfway zoomed in.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.UseTiledZoomingPropertyName">
            <summary>
            The property name of the UseTiledZooming property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.UseTiledZoomingProperty">
            <summary>
            Identifies the UseTiledZooming dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.UseTiledZooming">
            <summary>
            Gets or sets whether the series viewer should use cached tiles during zooms rather than the default live content.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.ActualUseTiledZooming">
            <summary>
            Gets if we are currently should be using tiled zoom/pans
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.PreferHigherResolutionTilesPropertyName">
            <summary>
            The property name of the PreferHigherResolutionTiles property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.PreferHigherResolutionTilesProperty">
            <summary>
            Identifies the PreferHigherResolutionTiles dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.PreferHigherResolutionTiles">
            <summary>
            Gets or sets whether the series viewer should prefer selecting higher resolution tiles over lower resolution tiles when performing tile zooming. Setting this to true will lower performance but increase quality.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.DefaultZoomCacheSize">
            <summary>
            The default size of the zoom cache.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.ZoomTileCacheSizePropertyName">
            <summary>
            The property name of the ZoomTileCacheSize property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.ZoomTileCacheSizeProperty">
            <summary>
            Identifies the ZoomTileCacheSize dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.ZoomTileCacheSize">
            <summary>
            Gets or sets the maximum number of zoom tiles that the series viewer should cache while in tiled zooming mode.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.ActualZoomTileCacheSize">
            <summary>
            Gets if we are currently should be using tiled zoom/pans
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.HighlightingTransitionDuration">
            <summary>
            Gets or sets the duration the highlighting/de-highlighting effects.
            <para>This is a dependency property.</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.HighlightingTransitionDurationPropertyName">
            <summary>
            Identifies the HighlightingTransitionDuration dependency property name.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.HighlightingTransitionDurationProperty">
            <summary>
            Identifies the HighlightingTransitionDuration dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.ProcessPlotAreaSizeChanged(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>
            Called so that the viewer can reconcile a plot area size change.
            </summary>
            <param name="oldGridAreaRect">The old size of the plot area.</param>
            <param name="newGridAreaRect">The new size of the plot area.</param>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.IsPagePanningAllowed">
            <summary>
            Gets or sets the whether the series viewer can allow the page to pan if a control pan is not possible in the requested direction.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.IsPagePanningAllowedProperty">
            <summary>
            Identifies the IsPagePanningAllowed dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.ContentHitTestMode">
            <summary>
            Determines the method of hit testing used when mousing over elements in the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.ActualContentHitTestMode">
            <summary>
            Resolved method of hit testing used when the pointer is over elements in the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.IsSurfaceInteractionDisabled">
            <summary>
            Gets or sets whether all surface interactions with the plot area should be disabled.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.IsSurfaceInteractionDisabledProperty">
            <summary>
            Identifies the IsSurfaceInteractionDisabled dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.IsZoomingHorizontallyEnabled">
            <summary>
            Checks if horizontal zoomability is enabled
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.IsZoomingVerticallyEnabled">
            <summary>
            Checks if vertical zoomability is enabled
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.IsZoomingEnabled">
            <summary>
            Checks if zoomability is enabled
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.OnKeyDown(Infragistics.Portable.Input.Key)">
            <summary>
            Called when a key is pressed down.
            </summary>
            <param name="key">The key that has been pressed.</param>
            <returns>True if the event is handled by the series viewer.</returns>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.CrosshairsVisible">
            <summary>
            Gets or sets the visibility of crosshairs.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.IsIsoScaled">
            <summary>
            Gets whether the scaling in both directions is kept equal.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.DragCrosshairActivated">
            <summary>
            Boolean indicating whether the drag crosshair is activated.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.TooltipStyle">
            <summary>
            A style class name to apply to the tooltip.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.OnContactStarted(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Called when a contact has started at a location.
            </summary>
            <param name="pt">The location of the contact.</param>
            <param name="isFinger">if set to <c>true</c> if touch pointer is used.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.StartTiledZoomingIfNecessary">
            <summary>
            Manually starts a tiled zoom if one isn't already running.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.EndTiledZoomingIfRunning">
            <summary>
            Manually ends a tiled zoom if one is running.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.ClearTileZoomCacheDueToVisualsChange">
            <summary>
            Clears the tile zoom cache after visuals have changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.ClearTileZoomCache">
            <summary>
            Clears the tile zoom tile cache so that new tiles will be generated. Only applies if the viewer is using a tile based zoom.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.PrepareAxesForTiledZoom">
            <summary>
            Prepare the axes for a tiled zoom operation about to happen.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.ReleaseAxesFromTiledZoom">
            <summary>
            Release the axes after a tiled zoom operation completes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.RefreshAllContentAfterTiledZoom">
            <summary>
            Re-renders the chart.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.OnContactMoved(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Called when a contact is moved to a new position.
            </summary>
            <param name="pt">The new position of the contact.</param>
            <param name="isFinger">if set to <c>true</c> a pointer is used instead of mouse.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.OnContactCompleted(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Called when a contact is completed.
            </summary>
            <param name="pt">The point of contact.</param>
            <param name="isFinger">if set to <c>true</c> if touch pointer is used.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.CrosshairNotify(Infragistics.Portable.Point)">
            <summary>
            Called to notify of the crosshair point changing.
            </summary>
            <param name="notificationPoint">The new crosshair point.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.WindowNotify(Infragistics.Portable.Rect,System.Boolean)">
            <summary>
            Called to notify of the window rectangle changing.
            </summary>
            <param name="windowRect">The new window rectangle.</param>
            <param name="userInteraction">specifies whether or not window notify if caused by user interaction</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.PreviewNotify(Infragistics.Portable.Rect,System.Boolean)">
            <summary>
            Called to notify of the preview rectangle changing.
            </summary>
            <param name="windowRect">The new preview rectangle.</param>
            <param name="userInteraction">specifies whether or not window notify if caused by user interaction</param>
        </member>
        <member name="E:Infragistics.Controls.SeriesViewer.WindowRectChanged">
            <summary>
            Occurs just after the current SeriesViewer's window rectangle is changed.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.SeriesViewer.SizeChanged">
            <summary>
            Occurs after the size of the series viewer changes.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.IgnoreWindowChanges">
            <summary> internal </summary>
        </member>
        <member name="E:Infragistics.Controls.SeriesViewer.ActualWindowRectChanged">
            <summary>
            Raised when the actual window rectangle of the SeriesViewer changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.ResetZoom">
            <summary>
            Resets the zoom level to default.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.SeriesViewer.GridAreaRectChanged">
            <summary>
            Occurs just after the current SeriesViewer's grid area rectangle is changed.
            </summary>
            <remarks>
            The grid area may change as the result of the SeriesViewer being resized, or
            of an axis being added or changing size, possibly in another SeriesViewer.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.IsMap">
            <summary>
            Indicates if this SeriesViewer is a map.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.WindowResponseProperty">
            <summary>
            Identifies the WindowResponse dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.WindowResponse">
            <summary>
            The response to user panning and zooming: whether to update the view immediately while the user action is happening, or to defer the update to after the user action is complete.  The user action will be an action such as a mouse drag which causes panning and/or zooming to occur.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.WindowRectMinWidthProperty">
            <summary>
            Identifies the WindowRectMinWidth property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.WindowRectMinWidth">
            <summary>
            Sets or gets the minimum width that the window rect is allowed to reach before being clamped.
            Decrease this value if you want to allow for further zooming into the viewer.
            If this value is lowered too much it can cause graphical corruption due to floating point arithmetic inaccuracy.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.SyncChannel">
            <summary>
            Sets or gets the Synchronization channel to use for the SeriesViewer.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.ActualSyncLink">
            <summary>
            Gets or sets the sync manager used to synchronize SeriesViewers.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.OverviewPlusDetailPaneVisibilityProperty">
            <summary>
            Identifies the OverviewPlusDetailPaneVisibility dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.OverviewPlusDetailPaneVisibility">
            <summary>
            The visibility of the OverviewPlusDetailPane.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.CrosshairVisibility">
            <summary>
            Gets or sets the current SeriesViewer's crosshair visibility override.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.CrosshairVisibilityProperty">
            <summary>
            Identifies the CrosshairVisibility dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.PlotAreaBorderBrush">
            <summary>
            Gets or sets the brush used as the border for the current SeriesViewer object's plot area.
            <para>
            This is a dependency property.
            </para>
            <remarks>Null is treated as auto.</remarks>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.PlotAreaBorderBrushProperty">
            <summary>
            Identifies the PlotAreaBorderBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.ActualPlotAreaBorderBrush">
            <summary>
            Gets or sets the actual brush used as the border for the current SeriesViewer object's plot area.
            <para>
            This is a dependency property.
            </para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.ActualPlotAreaBorderBrushProperty">
            <summary>
            Identifies the ActualPlotAreaBorderBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.PlotAreaBackground">
            <summary>
            Gets or sets the brush used as the background for the current SeriesViewer object's plot area.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.PlotAreaBackgroundProperty">
            <summary>
            Identifies the PlotAreaBackground dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.UpdateWindowRect(System.Double,System.Double)">
            <summary>
            Updates window rect with desired width and height
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.GetActualWindowScaleHorizontal">
            <summary>
            Gets actual window scale for horizontal dimension of the control 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.GetActualWindowScaleVertical">
            <summary>
            Gets actual window scale for vertical dimension of the control 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.PropertyUpdatedOverride(System.Object,System.String,System.Object,System.Object)">
            <summary>
            When overridden in a derived class, gets called whenever a property value is updated
            on the series or owning SeriesViewer. Gives the series a chance to respond to the various property updates.
            </summary>
            <param name="sender">The object being updated.</param>
            <param name="propertyName">The name of the property being updated.</param>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.UpdateOverviewPlusDetailPaneVisibility">
            <summary>
            Updates the visibility of the OverviewPlusDetailPane.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.UpdateOverviewPlusDetailPaneControlPanelVisibility">
            <summary> internal </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.DefaultInteraction">
            <summary>
            Gets or sets the DefaultInteraction property.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            The default interaction state defines the SeriesViewer's response to mouse events.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.DefaultInteractionProperty">
            <summary>
            Identifies the DefaultInteractionState dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.RightButtonDefaultInteraction">
            <summary>
            Gets or sets the RightButtonDefaultInteraction property.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            The default interaction state defines the SeriesViewer's response to right button mouse events.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.RightButtonDefaultInteractionProperty">
            <summary>
            Identifies the RightButtonDefaultInteractionState dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.DragModifier">
            <summary>
            Gets or sets the current SeriesViewer's DragModifier property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.DragModifierProperty">
            <summary>
            Identifies the DragModifier dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.PanModifier">
            <summary>
            Gets or sets the current SeriesViewer's PanModifier property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.PanModifierProperty">
            <summary>
            Identifies the PanModifier dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.PreviewRect">
            <summary>
            Gets or sets the preview rectangle.
            </summary>
            <remarks>
            The preview rectangle may be set to Rect.Empty, in which case the visible preview
            strokePath is hidden.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.LastZoomTime">
            <summary>
            Gets the last time the control was zoomed in/out
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.ZoomLongAgo">
            <summary>
            Gets whether or not the control was zoomed a long time ago
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.UpdateAcutalWindowProperties">
            <summary>
            Updates properties such as ActualWindowPositionHorizontal based on the value of the ActualWindowRect property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.WindowPositionHorizontalProperty">
            <summary>
            Identifies the WindowPositionHorizontal dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.WindowPositionHorizontal">
            <summary>
            A number between 0 and 1 determining the position of the horizontal scroll.
            </summary>
            <remarks>
            This property is effectively a shortcut to the X position of the WindowRect property.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.WindowPositionVerticalProperty">
            <summary>
            Identifies the WindowPositionVertical dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.WindowPositionVertical">
            <summary>
            A number between 0 and 1 determining the position of the vertical scroll.
            </summary>
            <remarks>
            This property is effectively a shortcut to the Y position of the WindowRect property.
            </remarks>
        </member>
        <member name="E:Infragistics.Controls.SeriesViewer.RefreshCompleted">
            <summary>
            Raised when the SeriesViewer's processing for an update has completed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.CreateView">
            <summary>
            Called to create the view for the series.
            </summary>
            <returns>The created view.</returns>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.OnViewCreated(Infragistics.Controls.SeriesViewerView)">
            <summary>
            Called when the view for the series is created.
            </summary>
            <param name="view">The created view.</param>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.ZoombarStyle">
            <summary>
            Gets or sets the style used to display the current SeriesViewer object's zoom bars.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.ZoombarStyleProperty">
            <summary>
            Identifies the ZoombarStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.CircleMarkerTemplate">
            <summary>
            Gets or sets the template to use for circle markers on the SeriesViewer.
            </summary>
            <remarks>
            Defines the marker template used for
            series with a marker type of circle.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.CircleMarkerTemplateProperty">
            <summary>
            Identifies the CircleMarkerTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.TriangleMarkerTemplate">
            <summary>
            Gets or sets the template to use for triangle markers on the SeriesViewer.
            </summary>
            <remarks>
            Defines the marker template used for
            series with a marker type of triangle.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.TriangleMarkerTemplateProperty">
            <summary>
            Identifies the TriangleMarkerTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.PyramidMarkerTemplate">
            <summary>
            Gets or sets the template to use for pyramid markers on the SeriesViewer.
            </summary>
            <remarks>
            Defines the marker template used for
            series with a marker type of pyramid.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.PyramidMarkerTemplateProperty">
            <summary>
            Identifies the PyramidMarkerTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.SquareMarkerTemplate">
            <summary>
            Gets or sets the template to use for square markers on the SeriesViewer.
            </summary>
            <remarks>
            Defines the marker template used for
            series with a marker type of square.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.SquareMarkerTemplateProperty">
            <summary>
            Identifies the SquareMarkerTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.DiamondMarkerTemplate">
            <summary>
            Gets or sets the template to use for diamond markers on the SeriesViewer.
            </summary>
            <remarks>
            Defines the marker template used for
            series with a marker type of diamond.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.DiamondMarkerTemplateProperty">
            <summary>
            Identifies the DiamondMarkerTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.PentagonMarkerTemplate">
            <summary>
            Gets or sets the template to use for pentagon markers on the SeriesViewer.
            </summary>
            <remarks>
            Defines the marker template used for
            series with a marker type of pentagon.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.PentagonMarkerTemplateProperty">
            <summary>
            Identifies the PentagonMarkerTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.HexagonMarkerTemplate">
            <summary>
            Gets or sets the template to use for hexagon markers on the SeriesViewer.
            </summary>
            <remarks>
            Defines the marker template used for
            series with a marker type of hexagon.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.HexagonMarkerTemplateProperty">
            <summary>
            Identifies the HexagonMarkerTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.TetragramMarkerTemplate">
            <summary>
            Gets or sets the template to use for tetragram markers on the SeriesViewer.
            </summary>
            <remarks>
            Defines the marker template used for
            series with a marker type of tetragram.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.TetragramMarkerTemplateProperty">
            <summary>
            Identifies the TetragramMarkerTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.PentagramMarkerTemplate">
            <summary>
            Gets or sets the template to use for pentragram markers on the SeriesViewer.
            </summary>
            <remarks>
            Defines the marker template used for
            series with a marker type of pentagram.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.PentagramMarkerTemplateProperty">
            <summary>
            Identifies the PentagramMarkerTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.HexagramMarkerTemplate">
            <summary>
            Gets or sets the template to use for hexagram markers on the SeriesViewer.
            </summary>
            <remarks>
            Defines the marker template used for
            series with a marker type of hexagram.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.HexagramMarkerTemplateProperty">
            <summary>
            Identifies the HexagramMarkerTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.Title">
            <summary>
            Text to display above the plot area.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.TitleHorizontalAlignmentProperty">
            <summary>
            Identifies the TitleHorizontalAlignment dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.TitleHorizontalAlignment">
            <summary>
            Gets or sets the TitleHorizontalAlignment property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.SubtitleHorizontalAlignmentProperty">
            <summary>
            Identifies the SubtitleHorizontalAlignment dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.SubtitleHorizontalAlignment">
            <summary>
            Gets or sets the SubtitleHorizontalAlignment property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.TitleTextStyle">
            <summary>
            Font settings for the title.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.SubtitleTextStyle">
            <summary>
            Font settings for the subtitle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.TitleTextColor">
            <summary>
            Gets or sets the Color used for the Title Text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.SubtitleTextColor">
            <summary>
            Gets or sets the Color used for the Subtitle Text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.TitleTopMargin">
            <summary>
            Margin applied above the title.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.TitleLeftMargin">
            <summary>
            Margin applied to the left of the title.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.TitleRightMargin">
            <summary>
            Margin applied to the right of the title.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.TitleBottomMargin">
            <summary>
            Margin applied below the title.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.SubtitleTopMargin">
            <summary>
            Margin applied above the subtitle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.SubtitleLeftMargin">
            <summary>
            Margin applied to the left of the subtitle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.SubtitleRightMargin">
            <summary>
            Margin applied to the right of the subtitle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.SubtitleBottomMargin">
            <summary>
            Margin applied below the subtitle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.Subtitle">
            <summary>
            Gets or sets the Subtitle property.
            <para>
            This is a dependency property.
            </para>
            </summary>
            <remarks>
            The Title property defines the Subtitle of the chart
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.SubtitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.GetFontInfo">
            <summary>
            Gets the FontInfo object associated with this chart.
            </summary>
            <returns>The FontInfo object associated with this chart.</returns>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.GetFontBrush">
            <summary>
            Gets the brush used for text.
            </summary>
            <returns>The brush used for text.</returns>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.GetAxisLineBrush">
            <summary>
            Gets the brush used to draw axis lines.
            </summary>
            <returns>The brush used to draw axis lines.</returns>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.TooltipTemplate">
            <summary>
            The template to use for displaying tooltip content.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.ProvideContainer(System.Object)">
            <summary>
            Called by the UI framework to provide a UI container for rendering this control.
            </summary>
            <param name="container">The UI container element.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.OnContainerResized(System.Double,System.Double)">
            <summary>
            Invoked by a containing object to pass along the new container dimensions.
            </summary>
            <param name="width">New container width.</param>
            <param name="height">New container height.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.NotifyContainerResized">
            <summary>
            Notification from the containing object that the container has been resized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.GetContainerRect">
            <summary>
            Gets container size.
            </summary>
            <returns>Rectangle with the dimensions of the container.</returns>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.EnsureCorrectSize">
            <summary>
            Ensures that the viewer currently has the appropriate size for its canvases.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.GetContainerOffsets">
            <summary>
            Gets left and top offsets inside of the container.
            </summary>
            <returns>A Point with the left and top coordinates within the container.</returns>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.AttachSeries(Infragistics.Controls.Charts.Series)">
            <summary>
            Attaches the given series to the chart.
            </summary>
            <param name="s">The series to attach to the chart.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.RemoveSeries(Infragistics.Controls.Charts.Series)">
            <summary>
            Removes the given series from the chart.
            </summary>
            <param name="s">The series to remove from the chart.</param>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.MobileMode">
            <summary>
            Indicates whether the user desires the chart to be in mobile mode. Mobile mode affects some of the defaults and behaviors of the chart to optimize them for a touch environment.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.ActualMobileMode">
            <summary>
            Indicates whether the chart is in mobile mode. Mobile mode affects some of the defaults and behaviors of the chart to optimize them for a touch environment.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.SyncSettings">
            <summary>
            Settings to synchronize this SeriesViewer with other SeriesViewers.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.NotifySetItem(System.Object,System.Int32,System.Object,System.Object)">
            <summary>
            Used to manually notify the SeriesViewer that the data source has had an item set. Only necessary if that datasource is not observable.
            </summary>
            <param name="source_">The data source changed.</param>
            <param name="index">The index of the change</param>
            <param name="oldItem">The old item.</param>
            <param name="newItem">The new item.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.NotifyClearItems(System.Object)">
            <summary>
            Used to manually notify the SeriesViewer that the data source has reset or cleared its items.  Invoking this method is only necessary if that datasource is not observable.
            </summary>
            <param name="source_">The data source which was cleared or reset.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.NotifyInsertItem(System.Object,System.Int32,System.Object)">
            <summary>
            Used to manually notify the SeriesViewer that the data source has had an item inserted. Only necessary if that datasource is not observable.
            </summary>
            <param name="source_">The data source changed.</param>
            <param name="index">The index of the new item</param>
            <param name="newItem">The new item.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.NotifyRemoveItem(System.Object,System.Int32,System.Object)">
            <summary>
            Used to manually notify the SeriesViewer that the data source has had an item removed.
            </summary>
            <param name="source_">The data source changed.</param>
            <param name="index">The index of the old item.</param>
            <param name="oldItem">The old item.</param>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer._widgetLevelSource">
            <summary>
            The data source assigned to the widget.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer._specificSources">
            <summary>
            A dictionary of data sources keyed by the id of the chart elements they are assigned to.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.Destroy">
            <summary>
            Release any resources held by the control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.DestroyOverride">
            <summary>
            Release any resources held by the control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.SetWidgetLevelDataSource(System.Object)">
            <summary>
            Assigns the given datasource to the widget.
            </summary>
            <param name="source_">The datasource to assign to the widget.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.RemoveWidgetLevelDataSource">
            <summary>
            Removes any 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.SetSpecificDataSource(System.String,System.Object)">
            <summary>
            Assigns the given datasource to the element matching the given name.
            </summary>
            <param name="targetName">The name identifying the element to receive the datasource assignment.</param>
            <param name="source_">The datasource to assign to the target.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.RemoveSpecificDataSource(System.String,System.Boolean)">
            <summary>
            Removes the datasource from the element matching the given name.
            </summary>
            <param name="targetName">The name identifying the element to remove the datasource from.</param>
            <param name="dontUpdate">True to skip propagation to the constituent elements of the chart.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.SetDataSourceForSeries(Infragistics.Controls.Charts.Series,System.Object)">
            <summary>
            Assigns the given datasource to the given series.
            </summary>
            <param name="target">The series receiving a datasource.</param>
            <param name="source">The datasource to assign to the series.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.UpdateDataSourceFor(System.Object)">
            <summary>
            Propagates datasource updates to a constituent part of the chart, such as a Series or Axis.
            </summary>
            <param name="target">The chart part to propagate datasource updates to.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.UpdateDataSources">
            <summary>
            Propagates datasource updates to the constituent parts of the chart, such as Series.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.TopMargin">
            <summary>
            Sets or gets the top margin to use around the chart content.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.LeftMargin">
            <summary>
            Sets or gets the left margin to use around the chart content.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.RightMargin">
            <summary>
            Sets or gets the right margin to use around the chart content.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.BottomMargin">
            <summary>
            Sets or gets the bottom margin to use around the chart content.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.AutoMarginWidth">
            <summary>
            Sets or gets the automatic width to add when automatically adding margins to the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.AutoMarginHeight">
            <summary>
            Sets or gets the automatic height to add when automatically adding margins to the chart.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.ShouldAddAutoMargins">
            <summary>
            Determines whether this SeriesViewer should automatically add margins.
            </summary>
            <returns>True if the SeriesViewer should automatically add margins; otherwise, False.</returns>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.IsAntiAliasingEnabledDuringInteraction">
            <summary>
            Gets or sets the IsAntiAliasingEnabledDuringInteraction property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.PixelScalingRatio">
            <summary>
            Gets or sets the scaling value used to affect the pixel density of the control.
            </summary>
            <remarks>
            A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control
            to appear blurry.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.InteractionPixelScalingRatio">
            <summary>
            Method of pixel scaling to use during end user interaction with the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.ActualPixelScalingRatioPropertyName">
            <summary>
            Property name for the ActualPixelScalingRatioPropertyName property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.ActualPixelScalingRatio">
            <summary>
            Gets the resolved pixel scaling ratio.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.ActualInteractionPixelScalingRatioPropertyName">
            <summary>
            Property name for the ActualInteractionPixelScalingRatio property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.ActualInteractionPixelScalingRatio">
            <summary>
            Resolved method of pixel scaling to use during end user interaction with the chart.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewer.ActualWindowRectPropertyName">
            <summary>
            The property name of the ActualWindowRect property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.ActualWindowRect">
            <summary>
            Gets the actual value of the window rectangle, which represents the current zoom level.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.CalculateActualWindowRect">
            <summary>
            Called to calculate the actual window rectangle.
            </summary>
            <returns>The value which should be assigned to the ActualWindowRect property, based on a calculation on the WindowRect property.</returns>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.ActualWindowPositionHorizontal">
            <summary>
            A number between 0 and 1 determining the position of the horizontal scroll.
            </summary>
            <remarks>
            This property is effectively a shortcut to the Left of the ActualWindowRect property.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.ActualWindowPositionVertical">
            <summary>
            A number between 0 and 1 determining the position of the vertical scroll.
            </summary>
            <remarks>
            This property is effectively a shortcut to the Top of the ActualWindowRect property.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.Flush">
            <summary>
            Use to force the SeriesViewer to finish any deferred work before printing or evaluating its visual.
            </summary>
            <remarks>
            This should only be called if the visual of the SeriesViewer needs to be synchronously saved or evaluated. 
            Calling this method too often will hinder the performance of the SeriesViewer.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.FlushInternal(System.Boolean,System.Boolean)">
            <summary>
            Use to force the SeriesViewer to finish any deferred work before printing or evaluating its visual.
            </summary>
            <param name="forceLayout">True if re-layout should happen.</param>
            <param name="forceOverlay">True if overlays should be flushed as well.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.UseFixedAspectZoom">
            <summary>
            Boolean method indicating whether or not this SeriesViewer should be zoomed only with a fixed aspect ratio.
            </summary>
            <returns>False.</returns>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.RegisterBackgroundContent(Infragistics.Portable.Components.DependencyObject,System.Action{System.Boolean})">
            <summary>
            Registers the given DependencyObject as background content.
            </summary>
            <param name="content">The DependencyObject to register as background content.</param>
            <param name="refresh">An action to be invoked each time the background content is being refreshed.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.UnRegisterBackgroundContent(Infragistics.Portable.Components.DependencyObject)">
            <summary>
            Unregisters the given DependencyObject as background content.
            </summary>
            <param name="content">The DependencyObject to unregister as background content.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.DeferBackgroundRefresh">
            <summary>
            Calls for a deferred refresh to the SeriesViewer's background.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.IsDefaultCrosshairDisabled">
            <summary>
            Gets or sets if the default crosshair behavior should be disabled.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.IsDefaultTooltipDisabled">
            <summary>
            Gets or sets if the default tooltip behavior should be disabled.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.IsAnnotationLayerPresent">
            <summary>
            Gets or sets whether an annotation layer is considered present in the viewer.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.OnHoverBehaviorOverridesChanged">
            <summary>
            Called when the series viewer should reevaluate the series to determine if the default hover interactions should be disbaled or enabled.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.IsThumbnailRequired">
            <summary>
            Gets if series are required to generate thumbnails for the OverviewPlusDetailPane
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewer.JustZoomed">
            <summary>
            Returns true if a zoom interaction happened a short time ago.
            </summary>
            <returns>True if a zoom interaction happened a short time ago.</returns>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.CachedEffectiveIsSquare">
            <summary>
            True if the chart is of a type that must have equal height and width.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewer.PreviewPathStroke">
            <summary>
            Gets or sets stroke used for the preview rectangle.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.SeriesViewerView">
            <summary>
            Manages the viewer for a SeriesViewer
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.#ctor(Infragistics.Controls.SeriesViewer)">
            <summary>
            Constructs a new SeriesViewerView for a SeriesViewer
            </summary>
            <param name="model">The SeriesViewer to create a view for.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.InitializeScalingRatio">
            <summary>
            Initializes the pixel scaling ratio for the component to its automatic value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.OnInit">
            <summary>
            Called when the view is being initialized.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.OverlayScheduler">
            <summary>
            Gets or sets the scheduler that manages when the overlay visuals are rendered.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.UpdateOverviewPlusDetailRects">
            <summary>
            Updates the initial state of the overview plus detail pane.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.OnSeriesRemoved">
            <summary>
            Called when a series is removed from the viewer.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.AttachedSeries">
            <summary>
            Sets or gets the series that are considered attached to the viewer.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.AttachedAxes">
            <summary>
            Sets or gets the axes that are considered attached to the viewer.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.ShouldMergeOverlayContext">
            <summary>
            Gets or sets whether the overlay rendering context should be collapsed into the main context.
            This impacts performance of elements like the crosshair, but should use less memory on memory contrained devices.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.DragPathRect">
            <summary>
            Gets or sets the rectangle to render for the drag path when performing a drag zoom.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.PreviewPath">
            <summary>
            Sets or gets the path to use for the preview window when performing a deferred zoom.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.VerticalCrosshairLine">
            <summary>
            Sets or gets the line to use for the vertical crosshair visual.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.HorizontalCrosshairLine">
            <summary>
            Sets or gets the line to use for the horizontal crosshair visual.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.AttachAxis(Infragistics.Controls.Charts.Axis)">
            <summary>
            Attaches an axis to the view.
            </summary>
            <param name="axis">The axis to attach.</param>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.ViewManager">
            <summary>
            Sets or gets the ViewManager for the view, which manages the platform specific aspects of the view.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.BackgroundContext">
            <summary>
            Sets or gets the rendering context for the background content.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.OverlayContext">
            <summary>
            Sets or gets the rendering context for the overlay content.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.MainContext">
            <summary>
            Sets or gets the rendering context for the main content.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.HitContext">
            <summary>
            Sets or gets the rendering context for the hit content.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.MSPointerEnabled">
            <summary>
            Sets or gets whether the viewer should react to MS Pointer API events.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.PointerEnabled">
            <summary>
            Sets or gets whether the viewer should react to Pointer API events.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.Container">
            <summary>
            The UI container element.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.OnContactMoved(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Called when a pointer has moved over the chart surface.
            </summary>
            <param name="p">The current location of the pointer.</param>
            <param name="isFinger">Indicates if the pointer is a finger.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.OnContactStarted(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Called when a pointer has been placed on the chart surface.
            </summary>
            <param name="p">The location of the pointer.</param>
            <param name="isFinger">Indicates if the pointer is a finger.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.OnHold(Infragistics.Portable.Point)">
            <summary>
            Called when a hold is performed over the chart surface.
            </summary>
            <param name="p">The location of the hold.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.OnContactCompleted(Infragistics.Portable.Point,System.Boolean)">
            <summary>
            Called when a pointer is lifted from the chart surface.
            </summary>
            <param name="p">The location of the pointer.</param>
            <param name="isFinger">Indicates if the pointer is a finger.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.ProvideBackgroundContext(Infragistics.RenderingContext)">
            <summary>
            Called to provide the background context to the view.
            </summary>
            <param name="context">The backgroun context to use.</param>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.RequiresBackground">
            <summary>
            Gets if the view requires a background context.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.EventProxy">
            <summary>
            Gets or sets the event proxy which will provide the events targetted at the component.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.FontHeight">
            <summary>
            Gets or sets teh height of the current font.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.ContainerWidth">
            <summary>
            Gets or sets the width of the current container.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.ContainerHeight">
            <summary>
            Gets or sets teh height of the current container.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.NotifyContainerResized">
            <summary>
            Called to notify the view when the container has been resized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.GetTitleMargin">
            <summary>
            Gets the margin for the viewer's title.
            </summary>
            <returns>A thickness representing the title margin.</returns>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.GetSubtitleMargin">
            <summary>
            Gets the viewer's subtitle margin.
            </summary>
            <returns>A thickness representing the subtitle margin.</returns>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.ProvideBackgroundViewport(Infragistics.Portable.Rect)">
            <summary>
            Called to provide the viewport for the background.
            </summary>
            <param name="viewport">The viewport to use for the background.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.MakeDirty">
            <summary>
            Called to indicate that the viewer is dirty and needs to be rendered.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.Render">
            <summary>
            Renders the content of the viewer.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.IsValid">
            <summary>
            Returns true if the view is considered valid and ready to render.
            </summary>
            <returns>True if the view is valid and is ready to render.</returns>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.PreRender">
            <summary>
            Called before a render pass starts.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.PreRenderOverride">
            <summary>
            Can be overridden to perform work before a render pass.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewerView._gradientsEnabled">
            <summary>
            Indicates if gradient support is enabled.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.RenderOverride">
            <summary>
            Can be overridden to perform rendering tasks.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.StyleUpdated">
            <summary>
            Called when the ambient styling environment has changed and the component may need to obtain new default styling values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.ShouldInteract(Infragistics.Portable.Point)">
            <summary>
            Determines if a given point causes an interaction.
            </summary>
            <param name="p">The point in context.</param>
            <returns>True if the given point should cause an interaction; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.OnMouseOver(Infragistics.Portable.Point,System.Boolean,System.Boolean)">
            <summary>
            Called when the mouse is over some content.
            </summary>
            <param name="p">The position of the mouse.</param>
            <param name="onMouseMove">True, if this is considered a mouse move.</param>
            <param name="isFinger">True, if the source of the event is a finger.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.OnMouseLeave(Infragistics.Portable.Point)">
            <summary>
            Called when the mouse leaves the viewer.
            </summary>
            <param name="p">The position of the mouse.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.OnMouseDown(Infragistics.Portable.Point)">
            <summary>
            Called when the mouse is pressed over the viewer.
            </summary>
            <param name="p">The position of the mouse.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.OnMouseUp(Infragistics.Portable.Point)">
            <summary>
            Called when the mouse is released over the viewer.
            </summary>
            <param name="p">Teh position of the mouse.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.SetDefaultBrushes">
            <summary>
            Called when the default brushes need to be set.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.CurrentModifiers">
            <summary>
            Gets the current modifier keys that are pressed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.MobileModeChanged(System.Boolean)">
            <summary>
            Called when the mobile mode of the viewer has changed.
            </summary>
            <param name="mobileMode">True if the viewer is now in mobile mode.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.ActualMobileModeChanged(System.Boolean)">
            <summary>
            Called when the resolved mobile mode of the viewer has changed.
            </summary>
            <param name="actualMobileMode">True if the resolved value of the mobile mode is true.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.UpdateOverviewPlusDetailPaneVisibility">
            <summary>
            Called when the visibility of the overview plus detail pane needs to be updated.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.IsDirty">
            <summary>
            Flag indicating this object needs a visual refresh to account for changes in its settings.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.Undirty(System.Boolean)">
            <summary>
            Called when the viewer must render its content.
            </summary>
            <param name="clearRect">Boolean indicating if the viewport should be cleared before rendering.</param>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.Index">
            <summary>
            Indicates the order this content should be schedules in its render scheduler.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.PostRender">
            <summary>
            Called after a render pass has completed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.SeriesViewerView._infoBoxVisible">
            <summary>
            Indicates if the info box is currently visible for the viewer.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.AddToInfoBox(System.Object)">
            <summary>
            Adds some content to the info box.
            </summary>
            <param name="control">The content to add to the info box.</param>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.UseDeltaZoom">
            <summary>
            Indicates that the delta style multi touch zoom should be used.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.ResolveDefaultInteraction(System.Boolean)">
            <summary>
            Resolved the default interaction mode that should be used for an event.
            </summary>
            <param name="isFinger">True if the source of the event is a finger.</param>
            <returns>The interaction state to enter.</returns>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.OnZoomPanInteractionEnding">
            <summary>
            Called when a zoom/pan interaction is ending.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.OnZoomPanInteractionStarting">
            <summary>
            Called when a zoom/pan interaction is starting.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.JustZoomed">
            <summary>
            Returns true if a zoom interaction happened a short time ago.
            </summary>
            <returns>True if a zoom interaction happened a short time ago.</returns>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.PixelScalingRatioChanged">
            <summary>
            Called then the pixel scaling ratio has been changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.DisplayZoomTiles(System.Collections.Generic.Dictionary{System.Object,Infragistics.Controls.Charts.ITileZoomTile},System.Collections.Generic.List{Infragistics.Controls.Charts.ITileZoomTile},System.Double)">
            <summary>
            Displays the zoom tiles when in tiled zooming mode.
            </summary>
            <param name="existing">A map containing the existing tiles.</param>
            <param name="newTiles">The new tiles that need to be displayed.</param>
            <param name="tileSize">The size of the zoom tiles in pixels.</param>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.AcquireTileContent(Infragistics.Portable.Rect,Infragistics.Controls.Charts.ITileZoomTile,System.Int32)">
            <summary>
            Gets some tile content with the provided parameters.
            </summary>
            <param name="window">The window for the requested tile.</param>
            <param name="tile">The tile to fill with content.</param>
            <param name="tileSize">The size of the requested tile in pixels.</param>
            <returns>The requested tile.</returns>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.DestroyAllTileContent">
            <summary>
            Destroys all cached zoom tile content.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.SeriesViewerView.ShouldClearTiles">
            <summary>
            Indicates that the tiles should be cleared when possible.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.HidePlotContent">
            <summary>
            Hides the normal plot area content in favor of displaying zoom tiles.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.ShowPlotContent">
            <summary>
            Shows the normal plot area content after finished displaying zoom tiles.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.OnTileZoomEnding">
            <summary>
            Called when a tiled zoom is ending.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.SeriesViewerView.OnActualHitTestModeChanged">
            <summary>
            Called when the hit test mode of the chart changes.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.PointerTooltipStyle">
            <summary>
            Represents some styling properties for the pointer tooltips.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.PointerTooltipStyle.#ctor">
            <summary>
            Constructs a PointerTooltipStyle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.PointerTooltipStyle.StrokeThickness">
            <summary>
            Gets or sets the border thickness for the pointer tooltip.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.PointerTooltipStyle.CornerRadius">
            <summary>
            Gets or sets the corner radius for the pointer tooltip.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.PointerTooltipStyle.StrokeColor">
            <summary>
            Gets or sets the border color for the pointer tooltip.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.PointerTooltipStyle.FillColor">
            <summary>
            Gets or sets the background color for the pointer tooltip.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.ViewerSurfaceUsage">
            <summary>
            Enumeration of options for the usage of the surface.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.ViewerSurfaceUsage.Normal">
            <summary>
            Normal surface usage.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.ViewerSurfaceUsage.Minimal">
            <summary>
            Minimal surface usage.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.CoercionInfo">
            <summary>
            Contextual information about a member coercion.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.CoercionInfo.MemberPath">
            <summary>
            The coerced member name.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.CoercionInfo.CoercionMethod">
            <summary>
            The coercion method.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.RefreshCompletedEventHandler">
            <summary>
            Delegate for RefreshCompleted events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Contextual information associated with the event.</param>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.ArcVisualData">
            <summary>
            The visual data about an arc in a ring
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.ArcVisualData.Slices">
            <summary>
            Gets or sets the slices for each arc
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.ArcVisualData.LeaderLine">
            <summary>
            Gets or sets the leader line 
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.ArcVisualData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>
            Scales by viewport
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.ArcVisualData.Serialize">
            <summary>
            Serializes the object
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.ArcVisualDataList">
            <summary>
            The visual data about all the arcs in a ring
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.DoughnutChartLabelVisualData">
            <summary>
            The visual data about the labels in all slices
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.DoughnutChartLabelVisualData.LabelValue">
            <summary>
            Gets or sets the label value
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.DoughnutChartLabelVisualData.LabelSize">
            <summary>
            Gets or sets the label size
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.DoughnutChartLabelVisualData.LabelPosition">
            <summary>
            Gets or sets the label position
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.DoughnutChartLabelVisualData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>
            Scales by viewport
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.DoughnutChartLabelVisualData.Serialize">
            <summary>
            Seriealizes by viewport
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.SliceVisualDataList">
            <summary>
            The visual data about all the slices in a single arc
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.SliceVisualData">
            <summary>
            The visual data about a slice
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.SliceVisualData.PieSlice">
            <summary>
            Gets or sets the slice inherited from the pie chart
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.SliceVisualData.Outline">
            <summary>
            Gets or sets the outline color
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.SliceVisualData.LabelVisualData">
            <summary>
            Gets or sets the labels visual data
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.SliceVisualData.BackgroundPath">
            <summary>
            Gets or sets the background of the slice
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.SliceVisualData.Origin">
            <summary>
            Gets or sets the absolute center of the slice itself
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.SliceVisualData.ExplodedOrigin">
            <summary>
            Gets or sets the absolute center of the exploded slice
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.SliceVisualData.IsExploded">
            <summary>
            Gets or sets the IsExploded 
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.SliceVisualData.IsSelected">
            <summary>
            Gets or sets the IsSelected
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.SliceVisualData.Index">
            <summary>
            Gets or sets the index of the slice in the given arc
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.SliceVisualData.Radius">
            <summary>
            Gets or sets the radius - measured from the center to the far most point
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.SliceVisualData.StartAngle">
            <summary>
            Gets or sets the start angle of the slice
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.SliceVisualData.EndAngle">
            <summary>
            Gets or sets the end angle of the slice
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.SliceVisualData.Visibility">
            <summary>
            Gets or sets the visibility of the slice
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.SliceVisualData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>
            Scales by viewport
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.SliceVisualData.Serialize">
            <summary>
            Serieslizes the object
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.RingVisualDataList">
            <summary>
            The visual data about all the rings in a series
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.RingVisualData">
            <summary>
            The visual data about each ring of the series
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.RingVisualData.Arcs">
            <summary>
            Gets or sets the arcs
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.RingVisualData.Serialize">
            <summary>
            Serializes the object
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.RingSeriesVisualDataList">
            <summary>
            The visual data about the series as a list
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.RingSeriesVisualData">
            <summary>
            The visual data about each series of the doughnut chart
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.RingSeriesVisualData.Name">
            <summary>
            Gets or sets the name of the series
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.RingSeriesVisualData.LabelExtent">
            <summary>
            Gets or sets the label extent
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.RingSeriesVisualData.LabelsPosition">
            <summary>
            Gets or sets the labels position
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.RingSeriesVisualData.LeaderLineType">
            <summary>
            Gets or sets the leader line type
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.RingSeriesVisualData.LeaderLineVisibility">
            <summary>
            Gets or sets the leader line visibility
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.RingSeriesVisualData.LeaderLineMargin">
            <summary>
            Gets or sets the leader line margin
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.RingSeriesVisualData.Rings">
            <summary>
            Gets or sets the rings of a single series
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.RingSeriesVisualData.Serialize">
            <summary>
            Serializes the object
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.DoughnutChartVisualData">
            <summary>
            The visual data about the doughnut chart control
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.DoughnutChartVisualData.Series">
            <summary>
            Gets or sets the series of the doughnut chart visual data
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.DoughnutChartVisualData.Height">
            <summary>
            Gets or sets the height
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.DoughnutChartVisualData.Width">
            <summary>
            Gets or sets the width
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.DoughnutChartVisualData.HoleRadius">
            <summary>
            Gets or sets the hole radius
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.DoughnutChartVisualData.DipScalingRatio">
            <summary>
             Gets device independent ratio of control's dimensions 
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.DoughnutChartVisualData.#ctor">
            <summary>
            Constructs a DoughnutChartVisualData
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.DoughnutChartVisualData.ScaleByViewport">
            <summary>
            Scales by viewport
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.DoughnutChartVisualData.Serialize">
            <summary>
            Serializes the visual data.
            </summary>
            <returns>The serialized visual data</returns>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.DoughnutChartVisualData.Viewport">
            <summary>
            Gets or sets the viewport
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.LegendItemVisualData">
            <summary>
            Represents visual information about a legend item.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.LegendItemVisualData.#ctor">
            <summary>
            Initializes a new instance of LegendItemVisualData.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.LegendItemVisualData.Label">
            <summary>
            Gets or sets Label string of the legend item.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.LegendItemVisualData.LabelBounds">
            <summary>
            Gets or sets Label's bounding rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.LegendItemVisualData.Appearance">
            <summary>
            Gets or sets Legend Items' appearance properties.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.LegendItemVisualData.LabelAppearance">
            <summary>
            Gets or sets Appearance of the item's label.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.LegendItemVisualData.Bounds">
            <summary>
            Gets or sets Bounds of the whole item.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.LegendItemVisualData.BadgeBounds">
            <summary>
            Gets or sets Bounds of the item's badge.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.LegendItemVisualData.Serialize">
            <summary>
            Serializes this object to a string
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.LegendVisualDataList">
            <summary>
            Represents a list of legend item visual data.
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.LegendVisualData">
            <summary>
            Represents visual data extracted from a chart for use by external tools and functionality.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.LegendVisualData.#ctor">
            <summary>
            Creates a new instance of LegendVisualData.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.LegendVisualData.Items">
            <summary>
            Collection of items in a legend.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.LegendVisualData.Viewport">
            <summary>
            Gets or sets the Viewport of the legend.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.LegendVisualData.Width">
            <summary>
            Gets or sets the Width of the legend.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.LegendVisualData.Height">
            <summary>
            Gets or sets the Height of the legend.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.LegendVisualData.Serialize">
            <summary>
            Serializes the current object to a string
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.PieChartVisualData">
            <summary>
            Represents visual data extracted from a chart for use by external tools and functionality.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.PieChartVisualData.#ctor">
            <summary>
            Creates a new instance of PieChartVisualData.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieChartVisualData.Slices">
            <summary>
            Collection of slices in a pie chart.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieChartVisualData.OthersSlice">
            <summary>
            Represents the Others slice.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieChartVisualData.Name">
            <summary>
            The name of the pie chart.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieChartVisualData.Viewport">
            <summary>
            Gets or sets the Viewport of the pie chart.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieChartVisualData.Width">
            <summary>
            Gets or sets the Width of the pie chart.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieChartVisualData.Height">
            <summary>
            Gets or sets the Height of the pie chart.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieChartVisualData.Others">
            <summary>
            List of items in the Others slice.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieChartVisualData.RadiusFactor">
            <summary>
            Gets or sets the RadiusFactor
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieChartVisualData.LeaderLineMargin">
            <summary>
            Gets or sets the LeaderLineMargin
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieChartVisualData.IsViewportScaled">
            <summary>
            Gets or sets whether the data been scaled against a viewport for normalization.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieChartVisualData.DipScalingRatio">
            <summary>
             Gets device independent ratio of control's dimensions 
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.PieChartVisualData.ScaleByViewport">
            <summary>
            Normalizes the shape data of the series by its viewport to enable comparison.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.PieChartVisualData.Serialize">
            <summary>
            Serializes the current object to a string
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.PieSliceVisualDataList">
            <summary>
            Represents a list of pie slice visual data.
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.PieSliceVisualData">
            <summary>
            Represents visual information about a pie chart slice.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.PieSliceVisualData.#ctor">
            <summary>
            Initializes a new instance of PieSliceVisualData.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieSliceVisualData.StartAngle">
            <summary>
            Starting angle of the slice, in degrees.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieSliceVisualData.EndAngle">
            <summary>
            End angle of the slice, in degrees.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieSliceVisualData.Origin">
            <summary>
            Point of origin in the pie chart.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieSliceVisualData.ExplodedOrigin">
            <summary>
            Point of origin of an exploded slice.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieSliceVisualData.Radius">
            <summary>
            Slice radius in pixels.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieSliceVisualData.ExplodedRadius">
            <summary>
            Exploded radius factor. Typically between 0 and 1, this value determines how far away the slice is from the origin. 
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieSliceVisualData.InnerExtentStart">
            <summary>
            Start offset of the inner arc. Inner extent creates a 'hole' in the middle of the pie chart.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieSliceVisualData.InnerExtentEnd">
            <summary>
            End offset of the inner arc. Inner extent creates a 'hole' in a middle of the pie chart.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieSliceVisualData.IsSelected">
            <summary>
            Returns true if the slice is selected.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieSliceVisualData.IsExploded">
            <summary>
            Returns true if the slice is exploded.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieSliceVisualData.IsOthersSlice">
            <summary>
            Returns true if the slice represents the 'Others' slice.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieSliceVisualData.Index">
            <summary>
            Index of the slice.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieSliceVisualData.Label">
            <summary>
            Label string of the slice.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieSliceVisualData.LabelAngle">
            <summary>
            Angle of label.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieSliceVisualData.LabelBounds">
            <summary>
            Label's bounding rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieSliceVisualData.Appearance">
            <summary>
            Slices's appearance properties.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieSliceVisualData.LabelAppearance">
            <summary>
            Appearance of the slice's label.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieSliceVisualData.LeaderLineAppearance">
            <summary>
            Appearance of the slice's leader line.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieSliceVisualData.SlicePath">
            <summary>
            Slice's geometry.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PieSliceVisualData.LeaderLinePath">
            <summary>
            Slice's leader line geometry.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.PieSliceVisualData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>
            Normalizes the shape data of the pie slice by its viewport to enable comparison.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.PieSliceVisualData.Serialize">
            <summary>
             Serializes this object to a string
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.ChartVisualData">
            <summary>
            Represents visual data extracted from a chart for use by external tools and functionality.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.ChartVisualData.#ctor">
            <summary>
            Constructs a ChartVisualData
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.ChartVisualData.Axes">
            <summary>
            Gets or sets the visual information about the axes of the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.ChartVisualData.Series">
            <summary>
            Gets or sets the visual information about the series of the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.ChartVisualData.Title">
            <summary>
            Gets or sets the visual information about the title of the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.ChartVisualData.Subtitle">
            <summary>
            Gets or sets the visual information about the subtitle of the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.ChartVisualData.Width">
            <summary>
            Gets or sets the Width of the chart container.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.ChartVisualData.Height">
            <summary>
            Gets or sets the Height of the chart container.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.ChartVisualData.ContentArea">
            <summary>
            Gets or sets the content area including layout of axis, series, title, and subtitle in the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.ChartVisualData.CentralArea">
            <summary>
            Gets or sets the central area including layout of axis, series in the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.ChartVisualData.PlotArea">
            <summary>
            Gets or sets the plot area of series in the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.ChartVisualData.Name">
            <summary>
            Gets or sets the name of the chart.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.ChartVisualData.IsViewportScaled">
            <summary>
            Gets or sets whether the data been scaled against a viewport for normalization.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.ChartVisualData.ScaleByViewport">
            <summary>
            Scales the chart data against a viewport to normalize the data for comparison.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.ChartVisualData.GetBounds">
            <summary>
            Gets bounds of the chart
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.ChartVisualData.Serialize">
            <summary>
             Serializes this object to a string
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.ChartVisualData.GetSerializedSeriesPoints(System.String,System.String,Infragistics.Portable.VisualData.GetPointsSettings)">
            <summary>
             Gets Serialized series of points for specified series name and point settings 
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.ChartVisualData.DipScalingRatio">
            <summary>
             Gets device independent ratio of control's dimensions 
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.ChartTitleVisualDataList">
            <summary>
            Represents list of visual data for chart titles
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.ChartTitleVisualData">
            <summary>
            Represents visual data of chart's title or subtitle
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.ChartTitleVisualData.#ctor">
            <summary>
            Creates an instance of <see cref="T:Infragistics.Portable.Charts.VisualData.ChartTitleVisualData"/>
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.ChartTitleVisualData.Width">
            <summary>
            Gets Width of the chart's title container 
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.ChartTitleVisualData.Height">
            <summary>
            Gets Height of the chart's title container  
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.ChartTitleVisualData.Viewport">
            <summary>
            Gets or sets the viewport of the title.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.ChartTitleVisualData.TextPlotArea">
            <summary>
            Gets or sets the plot area of the title.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.ChartTitleVisualData.Appearance">
            <summary>
            Gets or sets Appearance of the chart's title or its subtitle
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.ChartTitleVisualData.Serialize">
            <summary>
            Serializes the current object to a string
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.SeriesVisualDataList">
            <summary>
            Represents a list of series visual data.
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.SeriesVisualData">
            <summary>
            Represents the extracted visual data of a series.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.SeriesVisualData.#ctor">
            <summary>
            Constructs a SeriesVisualData.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.SeriesVisualData.Name">
            <summary>
            The name of the series.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.SeriesVisualData.Type">
            <summary>
            The type of the series.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.SeriesVisualData.Viewport">
            <summary>
            The viewport of the series.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.SeriesVisualData.Opacity">
            <summary>
            The Opacity of the series.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.SeriesVisualData.Shapes">
            <summary>
            The visual shape data of the series.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.SeriesVisualData.PointerTooltips">
            <summary>
            The pointer tooltip data of the series.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.SeriesVisualData.MarkerShapes">
            <summary>
            The visual marker shape data of the series.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.SeriesVisualData.CalloutShapes">
            <summary>
            The visual callout data of the series.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.SeriesVisualData.Pixels">
            <summary>
            The pixel data of a series, if any.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.SeriesVisualData.PixelWidth">
            <summary>
            The width of the pixel buffer.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.SeriesVisualData.PixelHeight">
            <summary>
            The height of the pixel buffer.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.SeriesVisualData.ScaleByViewport">
            <summary>
            Normalizes the shape data of the series by its viewport to enable comparison.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.SeriesVisualData.Serialize">
            <summary>
             Serializes this object to a string
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.MarkerVisualDataList">
            <summary>
            Represents visual information about series markers.
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.MarkerVisualData">
            <summary>
            Represents visual data about a series marker.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.MarkerVisualData.X">
            <summary>
            Gets or sets the x position of the marker.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.MarkerVisualData.Y">
            <summary>
            Gets or sets the y position of the marker.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.MarkerVisualData.Index">
            <summary>
            Gets or sets the index of the marker data.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.MarkerVisualData.MarkerAppearance">
            <summary>
            Gets or sets the Appearance of the marker.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.MarkerVisualData.MarkerType">
            <summary>
            Gets or sets the shape of the marker.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.MarkerVisualData.ContentTemplate">
            <summary>
            Gets or sets the template applied to the marker.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.MarkerVisualData.IsVisible">
            <summary>
            Gets or sets the visibility of the marker.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.MarkerVisualData.Serialize">
            <summary>
             Serializes this object to a string
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.MarkerVisualData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>
            Normalizes the shape data of the markers by their viewport to enable comparison.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.MarkerVisualData.Bounds">
            <summary>
            Bounding rectangle for all markers.
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.AxisVisualDataList">
            <summary>
            Represents a list of axis visual data.
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.AxisVisualData">
            <summary>
            Represents visual data for an axis.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.AxisVisualData.#ctor">
            <summary>
            Constructs an AxisVisualData.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.AxisVisualData.Name">
            <summary>
            Gets or sets the name of the axis.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.AxisVisualData.Type">
            <summary>
            Gets or sets the type of the axis.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.AxisVisualData.Viewport">
            <summary>
            Gets or sets the viewport of the series.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.AxisVisualData.TickMarksLength">
            <summary>
            Gets or sets the different between the end and start x points
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.AxisVisualData.TickMarks">
            <summary>
            Gets or sets the visual data about the tick marks
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.AxisVisualData.Labels">
            <summary>
            Gets or sets the visual information about the labels of the axis.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.AxisVisualData.AxisLine">
            <summary>
            Gets or sets the visual information about the axis line.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.AxisVisualData.MajorLines">
            <summary>
            Gets or sets the visual information about the major lines of the axis.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.AxisVisualData.MinorLines">
            <summary>
            Gets or sets the visual information about the minor lines of the axis.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.AxisVisualData.Strips">
            <summary>
            Gets or sets the visual information about the minor lines of the axis.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.AxisVisualData.LabelsPlotArea">
            <summary>
            Gets or sets the plot area of the axis labels without axis title. 
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.AxisVisualData.LabelsViewport">
            <summary>
            Gets or sets the viewport of the axis labels with axis title.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.AxisVisualData.Title">
            <summary>
            Gets or sets the visual information about the title of the axis.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.AxisVisualData.AnnotationBackings">
            <summary>
            Gets or sets the visual information for the backings for the label annotations on the axis.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.AxisVisualData.Serialize">
            <summary>
             Serializes this object to a string
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.AxisLabelVisualDataList">
            <summary>
            Provides information about axis label elements.
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.AxisLabelVisualData">
            <summary>
            Provides information about an axis label visual element.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.AxisLabelVisualData.LabelValue">
            <summary>
            The value of the label.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.AxisLabelVisualData.LabelPosition">
            <summary>
            The position of the label along the axis.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.AxisLabelVisualData.Position">
            <summary>
            The top left point of the label panel
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.AxisLabelVisualData.PanelPosition">
            <summary>
            Gets or sets the position of the labels panel
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.AxisLabelVisualData.Appearance">
            <summary>
            The appearance of the label
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.AxisLabelVisualData.Size">
            <summary>
            The Size of the label panel
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.AxisLabelVisualData.#ctor">
            <summary>
            AxisLabelVisualData constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.AxisLabelVisualData.Serialize">
            <summary>
             Serializes this object to a string
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.PointerTooltipVisualDataList">
            <summary>
            Collection class for PointerTooltipVisualData objects.
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.CalloutVisualDataList">
            <summary>
            Represents visual information about series callouts.
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.CalloutVisualData">
            <summary>
            Class holding contextual information for the visual representation of a callout.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.CalloutVisualData.Background">
            <summary>
            The box shape constituting the callout.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.CalloutVisualData.Text">
            <summary>
            The text in the callout.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.CalloutVisualData.Line">
            <summary>
            The leader line for the callout.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.CalloutVisualData.Left">
            <summary>
            The left coordinate of the callout.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.CalloutVisualData.Top">
            <summary>
            The top coordinate of the callout.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.CalloutVisualData.MarginLeft">
            <summary>
            The width of the left side of the callout margin.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.CalloutVisualData.MarginTop">
            <summary>
            The width of the top side of the callout margin.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.CalloutVisualData.Serialize">
            <summary>
            Returns a string representation of the current state of this PointerTooltipVisualData.
            </summary>
            <returns>A string representation of the current state of this PointerTooltipVisualData.</returns>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.CalloutVisualData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>
            Called to scale this data by a viewport for normalization.
            </summary>
            <param name="viewport">The bounds of the viewport in context.</param>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.PointerTooltipVisualData">
            <summary>
            Class holding contextual information for the visual representation of a pointer tooltip.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PointerTooltipVisualData.BoxShape">
            <summary>
            The box shape constituting the pointer tooltip.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PointerTooltipVisualData.PointerFillShape">
            <summary>
            The shape used to fill the pointer.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PointerTooltipVisualData.PointerOutlineShape">
            <summary>
            The shape used to outline the pointer.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PointerTooltipVisualData.OffsetX">
            <summary>
            Horizontal offset of the pointer tooltip in context.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PointerTooltipVisualData.OffsetY">
            <summary>
            Vertical offset of the pointer tooltip in context.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PointerTooltipVisualData.CategoryNames">
            <summary>
            A list of the category names.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.PointerTooltipVisualData.Serialize">
            <summary>
            Returns a string representation of the current state of this PointerTooltipVisualData.
            </summary>
            <returns>A string representation of the current state of this PointerTooltipVisualData.</returns>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.PointerTooltipVisualData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>
            Called to scale this data by a viewport for normalization.
            </summary>
            <param name="viewport">The bounds of the viewport in context.</param>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.PointerTooltipVisualData.Viewport">
            <summary>
            The bounds of the viewport in context.
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.StackedSeriesVisualData">
            <summary>
            Provides information about an Stacked Series visual element.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.StackedSeriesVisualData.#ctor">
            <summary>
            Constructs an StackedSeriesVisualData.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.StackedSeriesVisualData.FragmentSeries">
            <summary>
            Gets or sets the visual information about series fragments.
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.VisualExportHelper">
            <summary>
            Provides method for exporting visual information about UI elements
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.VisualExportHelper.GetRotatedBounds(Infragistics.Portable.Components.UI.Controls.TextBlock)">
            <summary>
            Export rotated bounds of Text Block
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.VisualDataSerializer">
            <summary>
            Provides serialization of generic visual elements.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.VisualDataSerializer.Serialize(Infragistics.Portable.Rect)">
            <summary>
            Serializes current rectangle to a string
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData">
            <summary>
            Represents visual information about a funnel slice.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.#ctor">
            <summary>
            Initializes a new instance of FunnelSliceVisualData.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.IsSelected">
            <summary>
            Gets or sets whether the slice is selected.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.Index">
            <summary>
            Gets or sets the slice index.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.Top">
            <summary>
            Gets or sets the top-most y coordinate for its canvas relative to the chart viewport.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.Bottom">
            <summary>
            Gets or sets the bottom-most y coordinate for its canvas relative to the chart viewport.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.SliceCenterPoint">
            <summary>
            Gets or sets the center point value of the slice
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.UpperRight">
            <summary>
            Gets or sets the upper right corner point value of the slice
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.LowerRight">
            <summary>
            Gets or sets the lower right corner point value of the slice
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.UpperLeft">
            <summary>
            Gets or sets the upper left corner point value of the slice
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.LowerLeft">
            <summary>
            Gets or sets the lower left corner point value of the slice
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.Height">
            <summary>
            Gets or sets the slice height.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.UpperWidth">
            <summary>
            Gets or sets the slice upper width.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.LowerWidth">
            <summary>
            Gets or sets the slice lower width.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.InnerLabel">
            <summary>
            Gets or sets the label that is located within the slice.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.OuterLabel">
            <summary>
            Gets or sets the label that is located outside of the slice.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.SliceBorderBrush">
            <summary>
            Gets or sets the border brush of the slice
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.SliceBorderThickness">
            <summary>
            Gets or sets the border thickness of the slice
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.Appearance">
            <summary>
            Gets or sets the slice's appearance.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.InnerLabelAppearance">
            <summary>
            Gets or sets the appearance of the inner label.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.OuterLabelAppearance">
            <summary>
            Gets or sets the appearance of the outer label.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.SlicePoints">
            <summary>
            Gets or sets the points in the slice geometry.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.InnerLabelPosition">
            <summary>
            Gets or sets the position of the slice's inner label.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.OuterLabelPosition">
            <summary>
            Gets or sets the position of the slice's outer label.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.OuterLabelBounds">
            <summary>
            Gets or sets the rectangle bounds of the outer label.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.InnerLabelBounds">
            <summary>
            Gets or sets the rectangle bounds of the inner label.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.IsVisibile">
            <summary>
            Gets or sets the visibility of the slice.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>
            Scales the visual data relative to the given viewport bounds.
            </summary>
            <param name="viewport">The viewport bounds to scale the visual data relative to.</param>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualData.Serialize">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.FunnelSliceVisualDataList">
            <summary>
            Represents a list of funnel slice visuals.
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.VisualData.FunnelChartVisualData">
            <summary>
            Represents visual data extracted from the funnel chart for use by externals tools and functionality.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.FunnelChartVisualData.#ctor">
            <summary>
            Creates a new instance of FunnelChartVisualData.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelChartVisualData.Slices">
            <summary>
            Gets or sets the visual information about slices.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelChartVisualData.Name">
            <summary>
            Gets or sets Name of funnel chart
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelChartVisualData.Viewport">
            <summary>
            Gets or sets the viewport of the funnel chart.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelChartVisualData.IsInverted">
            <summary>
            Gets or sets the isInverted property of the funnel chart.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelChartVisualData.BackgroundColor">
            <summary>
            Gets or sets the Background color of the funnel chart.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelChartVisualData.ForegroundColor">
            <summary>
            Gets or sets the Foreground color of the funnel chart.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelChartVisualData.Opacity">
            <summary>
            Gets or sets the Opacity of the funnel chart.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelChartVisualData.BorderBrush">
            <summary>
            Gets or sets the Border color of the funnel chart.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelChartVisualData.SelectedItems">
            <summary>
            Gets the funnel chart selected items.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.VisualData.FunnelChartVisualData.DipScalingRatio">
            <summary>
             Gets device independent ratio of control's dimensions 
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.FunnelChartVisualData.ScaleByViewport">
            <summary>
            Scales all slices according to the viewport bounds.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.VisualData.FunnelChartVisualData.Serialize">
            <summary>
            Returns a string representation of this object and its state.
            </summary>
            <returns>A string representation of this object and its state.</returns>
        </member>
        <member name="T:Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations">
            <summary>
            Represents a contract between the financial series and the calculation strategies
            detailing the supporting calculation strategies that the financial series will 
            provide in order for the indicator calculations to be performed.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations.EMA">
            <summary>
            The strategy provided to calculate an exponential moving average for a collection.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations.SMA">
            <summary>
            The strategy provided to calculate a simple moving average for a collection.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations.STDEV">
            <summary>
            The strategy provided to calculate a standard deviation for a collection.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations.MovingSum">
            <summary>
            The strategy provided to calculate a moving sum for a collection.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations.ShortVolumeOscillatorAverage">
            <summary>
            The strategy provided to calculate the short period moving average for volume oscillator indicators.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations.LongVolumeOscillatorAverage">
            <summary>
            The strategy provided to calculate the long period moving average for volume oscillator indicators.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations.ShortPriceOscillatorAverage">
            <summary>
            The strategy provided to calculate the short period moving average for price oscillator indicators.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations.LongPriceOscillatorAverage">
            <summary>
            The strategy provided to calculate the long period moving average for price oscillator indicators.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations.ToEnumerableRange">
            <summary>
            The strategy provided to convert a lamda expression taking the index into the data to convert into
            an enumeration over the input data using a configurable range.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations.ToEnumerable">
            <summary>
            The strategy provided to convert a lamda expression taking the index into the data to convert into
            an enumeration over the input data using a configurable length.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationSupportingCalculations.MakeSafe">
            <summary>
            The strategy provided to make doubles safe for plotting, by default will just make zero if the value
            is invalid.
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.ColumnSupportingCalculation">
            <summary>
            Represents a calculation strategy that takes in a column of values
            and returns a resulting column of values.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.ColumnSupportingCalculation.#ctor(Infragistics.Portable.Charts.SupportingCalculationStrategy)">
            <summary>
            Constructs a ColumnSupportingCalculation
            </summary>
            <param name="strategy">The strategy to use.</param>
        </member>
        <member name="M:Infragistics.Portable.Charts.ColumnSupportingCalculation.#ctor(Infragistics.Portable.Charts.SupportingCalculationStrategy,System.Collections.Generic.IList{System.String})">
            <summary>
            Constructs a ColumnSupportingCalculation
            </summary>
            <param name="strategy">The strategy to use.</param>
            <param name="basedOn">The properties that the calculation is based on.</param>
        </member>
        <member name="T:Infragistics.Portable.Charts.ProvideColumnValuesStrategy">
            <summary>
            A strategy to provide columns for the indicator.
            </summary>
            <param name="dataSource">The datasource to use.</param>
        </member>
        <member name="T:Infragistics.Portable.Charts.DataSourceSupportingCalculation">
            <summary>
            Represents a calculation strategy that uses the calculation data source
            to product a column of values.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.DataSourceSupportingCalculation.#ctor(Infragistics.Portable.Charts.ProvideColumnValuesStrategy)">
            <summary>
            Constructs a DataSourceSupportingCalculation
            </summary>
            <param name="strategy">The strategy to use.</param>
        </member>
        <member name="M:Infragistics.Portable.Charts.DataSourceSupportingCalculation.#ctor(Infragistics.Portable.Charts.ProvideColumnValuesStrategy,System.Collections.Generic.IList{System.String})">
            <summary>
            Constructs a DataSourceSupportingCalculation
            </summary>
            <param name="strategy">The strategy to use.</param>
            <param name="basedOn">The properties that the calculation is based on.</param>
        </member>
        <member name="T:Infragistics.Portable.Charts.CalculatedColumn">
            <summary>
            Represents a column that is calculated based on the values of other columns.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.CalculatedColumn.#ctor(System.Collections.Generic.IEnumerable{System.Double},System.String[])">
            <summary>
            Constructs a new calculated column.
            </summary>
            <param name="valuesProvider">A list that provides the values of the column.</param>
            <param name="basedOn">The columns on which this calculated column is based.</param>
        </member>
        <member name="M:Infragistics.Portable.Charts.CalculatedColumn.#ctor(System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IList{System.String})">
            <summary>
            Constructs a new calculated column instance.
            </summary>
            <param name="valuesProvider">A list that provides the values for the column.</param>
            <param name="basedOn">The columns on which this calculated column is based.</param>
        </member>
        <member name="P:Infragistics.Portable.Charts.CalculatedColumn.BasedOn">
            <summary>
            The columns on which this calculated column is based.
            </summary>
        </member>
        <member name="M:Infragistics.Portable.Charts.CalculatedColumn.GetEnumerator">
            <summary>
            Provides an enumerator for this calculated column.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="M:Infragistics.Portable.Charts.CalculatedColumn.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Provides an enumerator for this calculated column.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="T:Infragistics.Portable.Charts.SupportingCalculation`1">
            <summary>
            Represents a supporting calculation strategy.
            </summary>
            <typeparam name="TCalculationStrategy">The type of delegate that performs the strategy.</typeparam>
        </member>
        <member name="M:Infragistics.Portable.Charts.SupportingCalculation`1.#ctor(`0)">
            <summary>
            Constructs a SupportingCalculation
            </summary>
            <param name="strategy">The strategy to use.</param>
        </member>
        <member name="M:Infragistics.Portable.Charts.SupportingCalculation`1.#ctor(`0,System.Collections.Generic.IList{System.String})">
            <summary>
            Constructs a SupportingCalculation
            </summary>
            <param name="strategy">The strategy to use.</param>
            <param name="basedOn">The properties that the calculation is based on.</param>
        </member>
        <member name="P:Infragistics.Portable.Charts.SupportingCalculation`1.Strategy">
            <summary>
            The strategy for the calculation.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.SupportingCalculation`1.BasedOn">
            <summary>
            The properties the calculation is based on.
            </summary>
        </member>
        <member name="T:Infragistics.Portable.Charts.SupportingCalculationStrategy">
            <summary>
            A strategy for supporting calculations.
            </summary>
            <param name="source">The source of the data.</param>
            <param name="period">The period for the calculation.</param>
            <returns>The calculated data.</returns>
        </member>
        <member name="T:Infragistics.Portable.Charts.FinancialCalculationDataSource">
            <summary>
            Represents the data contract between a financial series and the 
            decoupled calculation responsibilities which implement its mathmatical logic.
            </summary>
            <remarks>
            The FinancialCalculationDataSource contract represents the subset
            of data which needs to be provided in order to test or run a calculation,
            and its intentionally a subset of the information available to the series, 
            in order to make calculation strategies more easily testable and usable in isolation to
            the financial series container.
            </remarks>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationDataSource.OpenColumn">
            <summary>
            A read only collection of the open values for the financial series
            that is requesting an indicator calculation.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationDataSource.CloseColumn">
            <summary>
            A read only collection of the close values for the financial series
            that is requesting an indicator calculation.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationDataSource.HighColumn">
            <summary>
            A read only collection of the high values for the financial series
            that is requesting an indicator calculation
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationDataSource.LowColumn">
            <summary>
            A read only collection of the low values for that financial series
            that is requesting an indicator calculation.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationDataSource.VolumeColumn">
            <summary>
            A read only collection of the volume values for the financial series
            that is requesting an indicator calculation.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationDataSource.IndicatorColumn">
            <summary>
            The output values for the indicator which the strategy calculates.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationDataSource.TypicalColumn">
            <summary>
            An enumerable list of typical prices provided by the series to use
            in calculations.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationDataSource.TrueRange">
            <summary>
            And enumerable list of true range values provided by the series to use
            in calculations.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationDataSource.TrueLow">
            <summary>
            An enumerable list of true low values provided by the series to use
            in calculations.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationDataSource.Period">
            <summary>
            The period to use when calculating, if applicable.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationDataSource.ShortPeriod">
            <summary>
            The short period to use when calculating, if applicable.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationDataSource.LongPeriod">
            <summary>
            The long period to use when calculating, if applicable.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationDataSource.Count">
            <summary>
            The count of the values in the series.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationDataSource.CalculateFrom">
            <summary>
            The starting index from which to calculate
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationDataSource.CalculateCount">
            <summary>
            The number of items from the starting index from which to calculate
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationDataSource.Multiplier">
            <summary>
            If the calculation supports some sort of scaling factor, 
            this value will be used.
            </summary>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationDataSource.MinimumValue">
            <summary>
            If the calculation determines the range of indicator values,
            it will set the minimum and maximux properties.
            </summary>
            <remarks>
            This will contain the previous minimum value when the indicator
            calculation is called again, in case this makes the update of the
            value speedier.
            </remarks>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationDataSource.MaximumValue">
            <summary>
            If the calculation determines the range of indicator values,
            it will set the minimum and maximux properties.
            </summary>
            <remarks>
            This will contain the previous minimum value when the indicator
            calculation is called again, in case this makes the update of the
            value speedier.
            </remarks>
        </member>
        <member name="P:Infragistics.Portable.Charts.FinancialCalculationDataSource.SpecifiesRange">
            <summary>
            The calculation strategy should set this to true if it 
            specifes the minimum and maximum value properties.
            </summary>
        </member>
    </members>
</doc>
